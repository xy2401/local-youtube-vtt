WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.060 --> 00:00:15.230
很高兴在这里谈论一些

00:00:13.530 --> 00:00:17.920
那东西

00:00:15.230 --> 00:00:20.180
即将来临的春天云

00:00:17.920 --> 00:00:23.150
一直没有被谈论过

00:00:20.180 --> 00:00:25.340
在会议的其余部分

00:00:23.150 --> 00:00:26.840
好像我差一点

00:00:25.340 --> 00:00:29.060
有意识的那天

00:00:26.840 --> 00:00:32.360
一直在提起春天的云

00:00:29.060 --> 00:00:34.670
在主题演讲中，但我的名字

00:00:32.360 --> 00:00:36.350
是Spencer Gibb，我致力于

00:00:34.670 --> 00:00:39.980
春天的云

00:00:36.350 --> 00:00:42.860
我专门加入以开始春天

00:00:39.980 --> 00:00:45.620
与戴夫（Dave）父亲在一起， 

00:00:42.860 --> 00:00:49.010
一年多一点，我们宣布

00:00:45.620 --> 00:00:53.930
在达拉斯的春天一春天的云

00:00:49.010 --> 00:00:59.600
去年是关键的是我们

00:00:53.930 --> 00:01:02.870
而且我们一直都很开心

00:00:59.600 --> 00:01:04.369
努力尝试并添加一些

00:01:02.870 --> 00:01:06.050
更多功能，我们希望能够

00:01:04.369 --> 00:01:11.060
谈一些

00:01:06.050 --> 00:01:14.780
再深入一点，我很高兴

00:01:11.060 --> 00:01:18.679
回答我可以回答的任何问题

00:01:14.780 --> 00:01:20.990
所以如果我不回应就大喊

00:01:18.679 --> 00:01:25.030
和所有沃尔特·沃尔特我们将尽力

00:01:20.990 --> 00:01:25.030
您的问题回答的问题

00:01:27.759 --> 00:01:37.660
当我们像以前一样开始春天的云时

00:01:33.470 --> 00:01:41.200
在工作上，我们发现了一些

00:01:37.660 --> 00:01:45.890
概念一些我们抽象的

00:01:41.200 --> 00:01:47.929
我们在开始工作时就创建了

00:01:45.890 --> 00:01:50.410
其中之一是服务注册， 

00:01:47.929 --> 00:01:50.410
发现

00:01:50.440 --> 00:02:00.289
另一个是分布式配置

00:01:53.959 --> 00:02:01.640
在我看来，控制总线

00:02:00.289 --> 00:02:05.629
那些熟悉Spring Boot的人

00:02:01.640 --> 00:02:09.319
执行器到我的控制总线是

00:02:05.629 --> 00:02:12.319
有点像分布式执行器

00:02:09.319 --> 00:02:14.450
而不是按个别音符行事

00:02:12.319 --> 00:02:16.459
一次您可以对多个

00:02:14.450 --> 00:02:19.010
节点，然后是一些集群

00:02:16.459 --> 00:02:20.840
其他一些人的原始人

00:02:19.010 --> 00:02:27.920
曾想过像领导者

00:02:20.840 --> 00:02:29.150
选举和锁定，所以在我们最初的

00:02:27.920 --> 00:02:32.720
发布

00:02:29.150 --> 00:02:35.090
从那以后，我们开始了发行培训

00:02:32.720 --> 00:02:40.489
命名，所以它最初不是

00:02:35.090 --> 00:02:42.950
天使，但我们有点改名了

00:02:40.489 --> 00:02:46.819
在我们的原始版本中

00:02:42.950 --> 00:02:50.510
火车名称是地铁站名称

00:02:46.819 --> 00:02:51.739
伦敦戴夫来自伦敦，所以他你

00:02:50.510 --> 00:02:56.629
在他亲爱的附近挑选了一些东西

00:02:51.739 --> 00:02:59.060
与Netflix Eureka一起工作的心

00:02:56.629 --> 00:03:03.920
为了我们的服务发现和

00:02:59.060 --> 00:03:06.230
注册，让我们看看我们

00:03:03.920 --> 00:03:07.280
约翰有一位Netflix员工

00:03:06.230 --> 00:03:11.420
施耐德，如果你想举手

00:03:07.280 --> 00:03:14.120
所以合作很有趣

00:03:11.420 --> 00:03:17.120
与Netflix合作

00:03:14.120 --> 00:03:19.640
他们没有的分布式配置

00:03:17.120 --> 00:03:21.560
开源他们的配置

00:03:19.640 --> 00:03:25.159
服务器，但我们在

00:03:21.560 --> 00:03:29.450
如果您听过其他演讲，也很相似

00:03:25.159 --> 00:03:33.139
太受git或subversion源支持

00:03:29.450 --> 00:03:37.340
控制我们创建了基于

00:03:33.139 --> 00:03:45.760
 RabbitMQ，我们没有发布

00:03:37.340 --> 00:03:48.919
集群的实现

00:03:45.760 --> 00:03:54.739
前几天星期四是星期四

00:03:48.919 --> 00:03:57.609
我认为是星期二晚上，我张贴了

00:03:54.739 --> 00:03:59.660
到Spring Bio网站的博客文章

00:03:57.609 --> 00:04:02.900
宣布...的第一个里程碑

00:03:59.660 --> 00:04:05.840
布里克斯顿，这是我们的下一个版本

00:04:02.900 --> 00:04:09.500
在我们的发布训练中，有些事情

00:04:05.840 --> 00:04:12.470
被添加到Brixton 

00:04:09.500 --> 00:04:13.940
我会尽力而为，成为演讲的重点

00:04:12.470 --> 00:04:18.320
今天

00:04:13.940 --> 00:04:20.389
除了升级到Netflix Stack 

00:04:18.320 --> 00:04:23.510
 Netflix版本的Spring Cloud 

00:04:20.389 --> 00:04:26.330
我们将从

00:04:23.510 --> 00:04:29.030
熟悉的hashey Corp 

00:04:26.330 --> 00:04:33.560
如果您不熟悉，可以使用控制台

00:04:29.030 --> 00:04:37.280
控制台如何关于流浪汉

00:04:33.560 --> 00:04:39.490
桥本美切尔（Mitchell Hashimoto）和公司

00:04:37.280 --> 00:04:43.780
我们会谈一点

00:04:39.490 --> 00:04:46.509
 Pachi动物园管理员也会讲一点

00:04:43.780 --> 00:04:50.710
关于跟踪和我们的春天云

00:04:46.509 --> 00:04:55.539
侦听一些集群实现和

00:04:50.710 --> 00:04:58.419
关于核心操作系统的sed 

00:04:55.539 --> 00:05:03.580
这不是发布中的

00:04:58.419 --> 00:05:06.880
孵化器项目，所以我们从

00:05:03.580 --> 00:05:12.849
与Eureka一起进行服务发现和

00:05:06.880 --> 00:05:18.880
注册是高度可用的

00:05:12.849 --> 00:05:19.870
建立它来按比例缩放以处理我不

00:05:18.880 --> 00:05:22.060
想说错号码，但是

00:05:19.870 --> 00:05:24.580
数百个（如果不是数千个）实例

00:05:22.060 --> 00:05:31.150
可用于

00:05:24.580 --> 00:05:34.870
 Netflix团队更喜欢

00:05:31.150 --> 00:05:37.419
客户数据，即使是过时的

00:05:34.870 --> 00:05:42.789
所以它的高度是ap和上限

00:05:37.419 --> 00:05:45.340
定理它有一些长的门槛

00:05:42.789 --> 00:05:48.250
注册和缓存刷新，因此

00:05:45.340 --> 00:05:51.969
包括丝带的负载

00:05:48.250 --> 00:05:53.740
平衡客户端，因此有时需要

00:05:51.969 --> 00:05:56.320
一两分钟后，您会看到一个新的

00:05:53.740 --> 00:05:57.849
已添加的实例，它是

00:05:56.320 --> 00:06:01.080
肯定是经过战斗测试的

00:05:57.849 --> 00:06:06.940
是我们选择Netflix的原因之一

00:06:01.080 --> 00:06:10.569
开始，因为他们只是一磅

00:06:06.940 --> 00:06:13.300
它并且它已经处理了许多

00:06:10.569 --> 00:06:17.639
失败，并为Netflix运作良好，因此

00:06:13.300 --> 00:06:20.259
那就是我们开始的地方，但是我当时

00:06:17.639 --> 00:06:21.550
在我加入之前就已经在我的雷达上

00:06:20.259 --> 00:06:25.740
这些其他一些公司

00:06:21.550 --> 00:06:28.180
其中一些其他技术，以及

00:06:25.740 --> 00:06:30.009
当我们启动项目时，即使它

00:06:28.180 --> 00:06:32.319
本来不是我心目中的目标

00:06:30.009 --> 00:06:35.050
想要春天的云表现出来

00:06:32.319 --> 00:06:39.729
例如春季数据项目

00:06:35.050 --> 00:06:41.830
你知道有关系的支持

00:06:39.729 --> 00:06:47.940
数据库和键值存储以及

00:06:41.830 --> 00:06:50.529
专栏商店和网络您

00:06:47.940 --> 00:06:52.719
反正二

00:06:50.529 --> 00:06:54.339
想成为那样，所以我

00:06:52.719 --> 00:06:56.109
开始玩其中一些

00:06:54.339 --> 00:07:00.159
其他技术并关注

00:06:56.109 --> 00:07:04.749
实现的其他实现

00:07:00.159 --> 00:07:06.399
注册和配置如此

00:07:04.749 --> 00:07:10.449
为了我们，我们聊了一点

00:07:06.399 --> 00:07:13.659
关于我们的配置服务器

00:07:10.449 --> 00:07:16.149
无状态，我们使用引导阶段

00:07:13.659 --> 00:07:21.249
春天的云已经引入了

00:07:16.149 --> 00:07:24.869
 Spring Boot应用程序加载配置

00:07:21.249 --> 00:07:28.059
数据从外部来源，然后

00:07:24.869 --> 00:07:31.059
开始进入正常应用

00:07:28.059 --> 00:07:35.319
应用程序的上下文生命周期

00:07:31.059 --> 00:07:37.869
我们将其内置并放入

00:07:35.319 --> 00:07:40.239
引导阶段进入普通项目

00:07:37.869 --> 00:07:48.549
春天的云共享，以便它可能是

00:07:40.239 --> 00:07:52.989
再利用，我们最初在

00:07:48.549 --> 00:07:55.929
在兔子上，所以我们唯一的实现

00:07:52.989 --> 00:07:57.759
在RabbitMQ上工作，那是一个

00:07:55.929 --> 00:08:03.659
我的症结所在是我

00:07:57.759 --> 00:08:06.219
我不喜欢这是特定于

00:08:03.659 --> 00:08:08.379
消息代理实现，我们有一个

00:08:06.219 --> 00:08:10.989
几个端点执行器端点

00:08:08.379 --> 00:08:13.179
我们添加以能够刷新

00:08:10.989 --> 00:08:16.899
一次实例的上下文

00:08:13.179 --> 00:08:27.009
或改变当地的春天

00:08:16.899 --> 00:08:30.039
环境，以便开始谁是那种

00:08:27.009 --> 00:08:33.279
动物园管理员，我想很多人

00:08:30.039 --> 00:08:37.899
有它是Apache的一部分

00:08:33.279 --> 00:08:40.599
基础是一致的分布式

00:08:37.899 --> 00:08:42.729
协调服务器，当您问什么

00:08:40.599 --> 00:08:46.179
动物园管理员，这很难

00:08:42.729 --> 00:08:48.279
缠住你的头，你可以说这是

00:08:46.179 --> 00:08:51.129
这对配置很好很有用

00:08:48.279 --> 00:08:52.689
可以说是服务

00:08:51.129 --> 00:08:55.179
注册好你可以说你

00:08:52.689 --> 00:08:58.179
可以做得很好，你可以做很多

00:08:55.179 --> 00:09:03.610
这些事情是正确的，但最终

00:08:58.179 --> 00:09:05.560
是可以保持状态的东西

00:09:03.610 --> 00:09:09.070
集群方式

00:09:05.560 --> 00:09:11.200
它从Hadoop子项目开始

00:09:09.070 --> 00:09:14.560
所以要尝试帮助

00:09:11.200 --> 00:09:18.280
协调Hadoop集群就可以了

00:09:14.560 --> 00:09:21.580
相较于其他

00:09:18.280 --> 00:09:26.710
我们正在研究约翰的技术

00:09:21.580 --> 00:09:30.760
你知道尤里卡什么时候开始好吗

00:09:26.710 --> 00:09:32.560
所以甚至在尤里卡上花了几年时间

00:09:30.760 --> 00:09:35.470
许多公司将其用于各种

00:09:32.560 --> 00:09:38.040
技术，也是我的原因之一

00:09:35.470 --> 00:09:40.270
想看动物园管理员，因为

00:09:38.040 --> 00:09:41.620
只是因为有很多公司

00:09:40.270 --> 00:09:43.750
已经有动物园管理员作为他们的一部分

00:09:41.620 --> 00:09:45.400
实际上，Netflix不将其用于

00:09:43.750 --> 00:09:47.110
服务发现和注册，但是

00:09:45.400 --> 00:09:49.030
他们将其作为自己的一部分

00:09:47.110 --> 00:09:51.930
实际上它们已经开源了

00:09:49.030 --> 00:09:56.140
他们向阿帕奇捐赠策展人

00:09:51.930 --> 00:09:58.510
优秀客户的基金会

00:09:56.140 --> 00:10:01.860
那个春天的图书馆云动物园管理员

00:09:58.510 --> 00:10:07.330
实际上利用以及

00:10:01.860 --> 00:10:09.640
参展商是动物园管理员的小汽车

00:10:07.330 --> 00:10:11.650
有助于保持生命的过程

00:10:09.640 --> 00:10:16.050
并做其他一些事情

00:10:11.650 --> 00:10:16.050
促进运行Zookeeper集群

00:10:17.160 --> 00:10:26.050
所以zookeeper设定使用

00:10:21.850 --> 00:10:31.800
分层存储

00:10:26.050 --> 00:10:37.240
就像我说的那样使用

00:10:31.800 --> 00:10:39.400
策展人ID有一个问题

00:10:37.240 --> 00:10:44.470
增加对参展商的支持

00:10:39.400 --> 00:10:46.450
允许状态为

00:10:44.470 --> 00:10:48.370
 Zookeeper群集更改允许

00:10:46.450 --> 00:10:51.250
动态更新

00:10:48.370 --> 00:10:53.950
集群，以便更高一点

00:10:51.250 --> 00:10:56.920
可用，所以我们要做的事情之一

00:10:53.950 --> 00:10:59.170
 spring boot 很有趣

00:10:56.920 --> 00:11:02.530
配置是否加载属性

00:10:59.170 --> 00:11:07.300
文件以特定顺序存在

00:11:02.530 --> 00:11:09.490
您可以拥有的配置服务器

00:11:07.300 --> 00:11:13.030
应用戊基或具有哪些特性

00:11:09.490 --> 00:11:16.870
然后由每个应用程序加载

00:11:13.030 --> 00:11:18.220
你可以申请-一些春天

00:11:16.870 --> 00:11:22.690
轮廓像贴花

00:11:18.220 --> 00:11:25.630
 Devore应用程序-产品然后您

00:11:22.690 --> 00:11:27.190
可以具有特定的命名属性

00:11:25.630 --> 00:11:30.150
文件仅用于特定类型的

00:11:27.190 --> 00:11:33.400
应用程序和动物园管理员

00:11:30.150 --> 00:11:35.560
我们模仿该层次结构

00:11:33.400 --> 00:11:38.770
即使没有个人

00:11:35.560 --> 00:11:45.340
文件直接在您存储的动物园管理员中

00:11:38.770 --> 00:11:51.670
单独的属性，所以我们

00:11:45.340 --> 00:11:54.220
也有动物园管理员服务发现

00:11:51.670 --> 00:11:57.750
我已经开始使用了

00:11:54.220 --> 00:12:03.540
策展人的发现食谱

00:11:57.750 --> 00:12:06.070
我们的朋友在波兰寻求融资

00:12:03.540 --> 00:12:08.770
也做了类似的事情，所以他们

00:12:06.070 --> 00:12:10.900
春季捐献了一些作品

00:12:08.770 --> 00:12:12.910
云，他们一直非常感兴趣

00:12:10.900 --> 00:12:18.310
在春天的云里，做了一些

00:12:12.910 --> 00:12:23.230
对春季的重大贡献

00:12:18.310 --> 00:12:24.670
专门在太空中的云动物园管理员

00:12:23.230 --> 00:12:26.410
他们对此发布感到兴奋

00:12:24.670 --> 00:12:28.240
这样他们就可以开始整合并

00:12:26.410 --> 00:12:30.250
迁移到Spring Cloud Zookeeper并

00:12:28.240 --> 00:12:31.630
最终将运行春云

00:12:30.250 --> 00:12:33.880
动物饲养员

00:12:31.630 --> 00:12:37.150
没有公共汽车的环境

00:12:33.880 --> 00:12:40.420
实施可能有

00:12:37.150 --> 00:12:44.650
但是当我问我的同事

00:12:40.420 --> 00:12:46.330
他们强烈建议反对

00:12:44.650 --> 00:12:52.090
乘坐公交实施

00:12:46.330 --> 00:12:55.320
动物园管理员，让我们看看吧，看看是否

00:12:52.090 --> 00:12:55.320
我们实际上可以进行此运行

00:13:00.230 --> 00:13:12.510
关闭那些，以确保我不

00:13:02.490 --> 00:13:17.310
把我的笔记本电脑拿来抓

00:13:12.510 --> 00:13:18.990
没关系，所以我在Mac上

00:13:17.310 --> 00:13:24.050
超级容易让动物园管理员酿造

00:13:18.990 --> 00:13:27.060
如果我记得正确，请安装Zookeeper 

00:13:24.050 --> 00:13:35.959
所以开始了

00:13:27.060 --> 00:13:40.170
所以我可以默认进入

00:13:35.959 --> 00:13:42.779
我们将配置放在配置中

00:13:40.170 --> 00:13:49.800
目录，您可以看到有

00:13:42.779 --> 00:13:53.010
名为的应用程序的目录

00:13:49.800 --> 00:14:02.779
测试zookeeper应用，它有一些

00:13:53.010 --> 00:14:02.779
属性，所以如果我来告诉AJ 

00:14:12.710 --> 00:14:22.640
好的，这是示例

00:14:17.899 --> 00:14:27.920
我已经在

00:14:22.640 --> 00:14:30.890
春季云动物园管理员项目

00:14:27.920 --> 00:14:34.040
你们这很熟悉

00:14:30.890 --> 00:14:36.440
春季启动应用程序相当标准

00:14:34.040 --> 00:14:38.750
所有的春天云都建立在

00:14:36.440 --> 00:14:42.290
 spring boot ，我们非常重视Vantage 

00:14:38.750 --> 00:14:44.779
自动配置和执行器

00:14:42.290 --> 00:14:47.140
一般和配置

00:14:44.779 --> 00:14:51.320
弹簧靴的特性，因此

00:14:47.140 --> 00:14:54.700
我们真的可以利用春天

00:14:51.320 --> 00:14:59.450
靴子，所以这是一个 spring boot 

00:14:54.700 --> 00:15:01.730
应用程序，你可以看到我用

00:14:59.450 --> 00:15:04.970
从我们的下属启用发现客户端

00:15:01.730 --> 00:15:07.670
项目，发生的是

00:15:04.970 --> 00:15:10.459
取决于实施

00:15:07.670 --> 00:15:12.470
在这种情况下的发现客户端Zookeeper 

00:15:10.459 --> 00:15:14.480
它会显示自动注册

00:15:12.470 --> 00:15:19.070
应用程序并进行设置，以便您

00:15:14.480 --> 00:15:21.170
可以发现其他正在运行的服务， 

00:15:19.070 --> 00:15:25.220
我只想看看我们会不会

00:15:21.170 --> 00:15:27.890
说我要去的小地图

00:15:25.220 --> 00:15:29.450
自己启动多个实例

00:15:27.890 --> 00:15:32.570
会一直循环下去

00:15:29.450 --> 00:15:36.350
我自己的客户，所以我们可以看到

00:15:32.570 --> 00:15:37.370
实际上通过功能区进行负载平衡

00:15:36.350 --> 00:15:44.120
所以有趣的事情之一

00:15:37.370 --> 00:15:46.940
那个功能区是一个Netflix项目吗

00:15:44.120 --> 00:15:48.680
客户端负载均衡器

00:15:46.940 --> 00:15:51.980
支持它是云Netflix 

00:15:48.680 --> 00:15:53.800
但是功能区我们有支持

00:15:51.980 --> 00:15:55.940
跨越所有这些不同

00:15:53.800 --> 00:15:58.850
通过插入服务器来实现

00:15:55.940 --> 00:16:01.520
特定于此发现的列表

00:15:58.850 --> 00:16:04.279
客户端，因此此负载均衡器客户端是

00:16:01.520 --> 00:16:09.410
功能区负载平衡器，所以我要走了

00:16:04.279 --> 00:16:12.160
向前，我不是你好，嗯，我要走了

00:16:09.410 --> 00:16:12.160
开始其中的几个

00:16:15.910 --> 00:16:18.960
真快

00:16:25.000 --> 00:16:35.319
我击中了这个终点所以我只是

00:16:28.629 --> 00:16:39.129
返回的服务器

00:16:35.319 --> 00:16:41.259
从负载返回的对象

00:16:39.129 --> 00:16:44.009
平衡器客户端，您可以看到我

00:16:41.259 --> 00:16:46.509
使自己进入端口8081 

00:16:44.009 --> 00:16:48.870
但如果我刷新那只是骑自行车

00:16:46.509 --> 00:16:58.209
通过这样，这两个都被注册

00:16:48.870 --> 00:17:01.420
如果我去那很有趣，好吧，不知道

00:16:58.209 --> 00:17:04.740
为什么那说它失败了，为什么？ 

00:17:01.420 --> 00:17:08.380
所以你可以看到有一些

00:17:04.740 --> 00:17:13.120
在中注册的服务

00:17:08.380 --> 00:17:19.539
 Zookeeper发现客户端，如果我也

00:17:13.120 --> 00:17:22.480
看看环境执行器的端点

00:17:19.539 --> 00:17:27.669
可以看到我加载了一些属性

00:17:22.480 --> 00:17:31.330
从动物园管理员出来

00:17:27.669 --> 00:17:34.659
确保我们决定

00:17:31.330 --> 00:17:37.480
在动物园管理员的层次结构将是

00:17:34.659 --> 00:17:40.960
转换成点表示法

00:17:37.480 --> 00:17:48.450
春天的靴子期望如此，如果我看看

00:17:40.960 --> 00:17:48.450
在CLI的这些属性中

00:17:53.360 --> 00:17:55.390
哦

00:17:59.800 --> 00:18:03.000
我得到这个人

00:18:04.740 --> 00:18:14.309
所以这就是其中的价值

00:18:10.590 --> 00:18:18.120
您可以看到此键是分层的

00:18:14.309 --> 00:18:21.090
关键路径翻译成配置斜杠

00:18:18.120 --> 00:18:24.630
 attesa tsuki /应用信息点说明

00:18:21.090 --> 00:18:27.000
好的，非常简单的翻译

00:18:24.630 --> 00:18:32.730
并允许您单独设置

00:18:27.000 --> 00:18:34.909
那些属性是不错的之一

00:18:32.730 --> 00:18:39.059
关于策展人客户的事情

00:18:34.909 --> 00:18:40.740
类似于Eureka的内置重试

00:18:39.059 --> 00:18:44.100
客户，所以我本来可以开始

00:18:40.740 --> 00:18:45.390
没有动物园管理员，该应用程序会

00:18:44.100 --> 00:18:46.770
快乐地运行它显然不会

00:18:45.390 --> 00:18:48.779
能够连接到另一个

00:18:46.770 --> 00:18:51.120
服务或其他服务连接到它

00:18:48.779 --> 00:18:52.950
但是一旦动物园管理员出现

00:18:51.120 --> 00:18:58.340
本来可以连接的是

00:18:52.950 --> 00:18:58.340
策展人真的很棒

00:18:58.370 --> 00:19:02.279
让我们看看是否还有其他需要

00:19:00.390 --> 00:19:03.960
与动物园管理员一起表演

00:19:02.279 --> 00:19:06.390
我认为这是关于任何问题

00:19:03.960 --> 00:19:16.309
动物园管理员，然后我们继续前进

00:19:06.390 --> 00:19:21.000
接下来，接下来是我说的控制台

00:19:16.309 --> 00:19:26.130
来自Hoshi Corp的vagrant nice的创作者

00:19:21.000 --> 00:19:27.990
关于控制台的事情是

00:19:26.130 --> 00:19:35.760
默认情况下，它支持多数据中心

00:19:27.990 --> 00:19:38.340
您可以运行，所以控制台就是您

00:19:35.760 --> 00:19:41.309
运行控制台服务器集群，并

00:19:38.340 --> 00:19:43.559
他们没有主人或奴隶

00:19:41.309 --> 00:19:46.289
服务器和代理的概念，但是

00:19:43.559 --> 00:19:49.679
服务器群集本身是

00:19:46.289 --> 00:19:52.380
无主使用点对点八卦

00:19:49.679 --> 00:19:55.279
 hash鱼创建的系统

00:19:52.380 --> 00:20:00.750
所谓的冲浪本身就是

00:19:55.279 --> 00:20:04.529
漂亮的控制台更加倾斜

00:20:00.750 --> 00:20:06.630
拥有一致的数据，但是您

00:20:04.529 --> 00:20:11.159
实际可以调整到三个

00:20:06.630 --> 00:20:13.679
告诉控制台的不同方法

00:20:11.159 --> 00:20:17.100
检索数据，我们将深入探讨

00:20:13.679 --> 00:20:18.010
但是代理可以通过他们的方式进行调整

00:20:17.100 --> 00:20:20.020
描述

00:20:18.010 --> 00:20:25.600
使用它作为您的辅助工具

00:20:20.020 --> 00:20:28.780
应用程序，所以真的很好，因为

00:20:25.600 --> 00:20:30.730
所有默认的本地主机8500 

00:20:28.780 --> 00:20:33.520
应该就是你

00:20:30.730 --> 00:20:35.560
连接到您将要运行的任何地方

00:20:33.520 --> 00:20:38.140
每个旁边的代理商

00:20:35.560 --> 00:20:39.970
应用程序的实例，因此

00:20:38.140 --> 00:20:43.810
真的非常好，而且光滑

00:20:39.970 --> 00:20:48.310
我将向您展示的基于Web的小界面

00:20:43.810 --> 00:20:50.860
您将得到一个演示，因此他们有一个

00:20:48.310 --> 00:20:56.950
控制台附带的东西是

00:20:50.860 --> 00:21:02.850
一个关键值存储，他们有一个非常

00:20:56.950 --> 00:21:06.160
很好，所以它需要什么样的动物园管理员

00:21:02.850 --> 00:21:10.300
客户端库连接到它并与

00:21:06.160 --> 00:21:14.200
控制台一切都可以通过

00:21:10.300 --> 00:21:17.290
 REST API非常好非常干净的REST API 

00:21:14.200 --> 00:21:19.450
所以关键值HTTP API是我们

00:21:17.290 --> 00:21:21.700
用于存储外观的属性

00:21:19.450 --> 00:21:25.960
非常类似于动物园管理员，这是一个

00:21:21.700 --> 00:21:29.440
目录和值的层次结构以及

00:21:25.960 --> 00:21:36.280
再一次，我们模仿我的顺序

00:21:29.440 --> 00:21:38.830
向动物园管理员展示了什么

00:21:36.280 --> 00:21:42.340
控制台的不同之处在于该服务

00:21:38.830 --> 00:21:45.610
注册和发现被纳入

00:21:42.340 --> 00:21:48.540
控制台，这不是建立在配方上的

00:21:45.610 --> 00:21:52.630
最重要的是，它是一流的

00:21:48.540 --> 00:21:56.020
市民有专门的API 

00:21:52.630 --> 00:21:59.260
用于服务发现很好非常好

00:21:56.020 --> 00:22:04.360
 HTTP API有趣的是，它

00:21:59.260 --> 00:22:07.030
还运行DNS服务器，因此对于旧版

00:22:04.360 --> 00:22:12.190
您无法更改的应用程序

00:22:07.030 --> 00:22:13.870
如果可以设置，请使用领事不错的HTTP API 

00:22:12.190 --> 00:22:17.410
他们正在运行的机器

00:22:13.870 --> 00:22:21.040
使用控制台作为其DNS服务器并

00:22:17.410 --> 00:22:23.110
能够通过DMS解决服务，因此

00:22:21.040 --> 00:22:27.180
他们曾经考虑过遗产

00:22:23.110 --> 00:22:29.660
使用DNS的能力

00:22:27.180 --> 00:22:34.380
连接到这些其他服务，并

00:22:29.660 --> 00:22:35.970
有一个丰富的健康检查系统

00:22:34.380 --> 00:22:36.600
进入服务注册并

00:22:35.970 --> 00:22:38.910
发现

00:22:36.600 --> 00:22:42.360
几乎所有您能想到的

00:22:38.910 --> 00:22:46.020
您想检查一下就可以做到

00:22:42.360 --> 00:22:48.450
它可以运行任何脚本

00:22:46.020 --> 00:22:50.400
您想要的系统，它将对其进行检查

00:22:48.450 --> 00:22:52.500
如果您查看文档，它是

00:22:50.400 --> 00:22:55.860
您可以做的非常令人惊讶

00:22:52.500 --> 00:22:58.760
默认情况下使用它，因为很多

00:22:55.860 --> 00:23:01.050
这些应用程序我们编写其余部分

00:22:58.760 --> 00:23:03.750
基于http / 2的应用程序具有

00:23:01.050 --> 00:23:05.670
 HTTP健康检查的概念，我们

00:23:03.750 --> 00:23:08.310
自动注册执行器

00:23:05.670 --> 00:23:13.590
运行状况端点作为HTTP运行状况检查

00:23:08.310 --> 00:23:16.280
与控制台，他们也有一个

00:23:13.590 --> 00:23:23.370
内置的事件系统

00:23:16.280 --> 00:23:27.890
允许您发送短暂的

00:23:23.370 --> 00:23:32.490
这些非持久性事件消息

00:23:27.890 --> 00:23:33.960
给您所有实例和我的消息

00:23:32.490 --> 00:23:36.090
建立了总线的实现

00:23:33.960 --> 00:23:39.360
我为之准备的

00:23:36.090 --> 00:23:42.300
演示由于某种原因被破坏，但是

00:23:39.360 --> 00:23:47.100
没关系，因为我们有人去

00:23:42.300 --> 00:23:48.570
春天的云流谈话，所以你可以

00:23:47.100 --> 00:23:52.850
看到这里说我们用弹簧

00:23:48.570 --> 00:23:56.880
昨晚Dave父亲的整合很好

00:23:52.850 --> 00:23:58.980
完成重写总线以使用流

00:23:56.880 --> 00:24:02.220
与消息无关

00:23:58.980 --> 00:24:05.040
经纪人，这太棒了，所以现在我需要

00:24:02.220 --> 00:24:08.570
要做的就是翻译我写的东西

00:24:05.040 --> 00:24:11.490
 Spring和Gration有一个控制台

00:24:08.570 --> 00:24:14.310
春季云流消息代理和

00:24:11.490 --> 00:24:17.610
那我就不能看巴士了

00:24:14.310 --> 00:24:21.330
因为它现在坏了，但是

00:24:17.610 --> 00:24:24.030
但我会让它工作，但是很好

00:24:21.330 --> 00:24:28.820
因为现在如果您可以连接到

00:24:24.030 --> 00:24:28.820
本地主机8500对不起

00:24:31.530 --> 00:24:37.360
您会得到所有这些碎片

00:24:35.320 --> 00:24:43.680
一项系统配置服务

00:24:37.360 --> 00:24:47.980
发现和公共汽车，他们也有一个

00:24:43.680 --> 00:24:49.600
他们开始的不错的ACL系统

00:24:47.980 --> 00:24:51.880
越来越深入地融入

00:24:49.600 --> 00:24:55.990
系统，因此您的配置B可能是

00:24:51.880 --> 00:25:00.790
由ACL服务控制

00:24:55.990 --> 00:25:02.530
注册已经开始，所以您必须

00:25:00.790 --> 00:25:04.840
被授权能够注册

00:25:02.530 --> 00:25:07.420
服务，但他们会

00:25:04.840 --> 00:25:08.770
扩展到您必须

00:25:07.420 --> 00:25:11.200
被授权能够看到

00:25:08.770 --> 00:25:21.160
的注册服务实例

00:25:11.200 --> 00:25:23.310
这个问题即将来临的例子，为什么

00:25:21.160 --> 00:25:33.240
你会使用控制台还是Eureka 

00:25:23.310 --> 00:25:36.820
是一个很好的问题，所以其中之一是

00:25:33.240 --> 00:25:40.920
因为控制台不是基于JVM的，所以它

00:25:36.820 --> 00:25:44.950
如果您的系统是作为代理运行

00:25:40.920 --> 00:25:46.780
多语言这可能是一个选择

00:25:44.950 --> 00:25:50.860
你想因为

00:25:46.780 --> 00:25:55.630
丰富的HTTP API，所以这是一个

00:25:50.860 --> 00:26:00.010
问题对不起，我有点scratch 

00:25:55.630 --> 00:26:04.350
在我的喉咙里，这是我的第三讲

00:26:00.010 --> 00:26:06.430
旧版DNS支持是另一种

00:26:04.350 --> 00:26:13.110
感谢您带领我进入下一张幻灯片

00:26:06.430 --> 00:26:16.750
顺便说一句，我能够

00:26:13.110 --> 00:26:20.080
喜欢能够说我是否

00:26:16.750 --> 00:26:22.870
可以联系我可以访问的本地代理

00:26:20.080 --> 00:26:25.360
系统和代理负责

00:26:22.870 --> 00:26:29.620
用于联系其余的

00:26:25.360 --> 00:26:33.970
集群的行为不同于

00:26:29.620 --> 00:26:38.830
尤里卡对尤里卡为此而建

00:26:33.970 --> 00:26:41.500
高可用性基础架构控制台

00:26:38.830 --> 00:26:44.500
更适合于

00:26:41.500 --> 00:26:49.120
一致性我认为ACL系统在

00:26:44.500 --> 00:26:51.240
理事会是当

00:26:49.120 --> 00:26:53.830
尤里卡（Eureka）建于

00:26:51.240 --> 00:26:55.720
你知道我们里面的围墙花园

00:26:53.830 --> 00:26:59.260
没有人不是

00:26:55.720 --> 00:27:02.020
当我们添加时，您知道多租户

00:26:59.260 --> 00:27:05.190
尤里卡到如果有人看到春天的云

00:27:02.020 --> 00:27:08.530
服务有一天在这个房间里聊

00:27:05.190 --> 00:27:11.140
你知道我们必须在尤里卡上面添加

00:27:08.530 --> 00:27:16.930
为某些客户提供一些安全保障

00:27:11.140 --> 00:27:19.210
谁想要你知道不想别人

00:27:16.930 --> 00:27:22.270
甚至他们的系统也能够看到

00:27:19.210 --> 00:27:25.150
例如注册了什么，但您会

00:27:22.270 --> 00:27:27.040
在将来版本的控制台中

00:27:25.150 --> 00:27:28.990
发生在你不认识你的地方

00:27:27.040 --> 00:27:32.700
甚至没有授权，所以我认为ACL 

00:27:28.990 --> 00:27:44.280
系统也是控制台的简洁功能

00:27:32.700 --> 00:27:44.280
嘿，好吧，让我看看

00:27:58.000 --> 00:28:01.460
是的

00:27:59.240 --> 00:28:04.820
所以约翰指出Netflix 

00:28:01.460 --> 00:28:06.980
创建一个边车，我们实际上是

00:28:04.820 --> 00:28:08.270
说啊，我敢打赌，我们可以做点什么

00:28:06.980 --> 00:28:10.430
那花了我大约半个小时

00:28:08.270 --> 00:28:14.960
还有春天的云Netflix边车

00:28:10.430 --> 00:28:19.370
所以说多语不是唯一的方法

00:28:14.960 --> 00:28:21.080
在控制台上，它更一流

00:28:19.370 --> 00:28:24.650
在控制台中，而不是您需要的小推车

00:28:21.080 --> 00:28:27.920
必须运行Java边车

00:28:24.650 --> 00:28:31.210
对Eureka的多语种支持，但事实是

00:28:27.920 --> 00:28:34.280
那里只是一个不同的焦点

00:28:31.210 --> 00:28:39.470
感谢您指出这一点，所以让我

00:28:34.280 --> 00:28:41.300
运行让我关闭我不想

00:28:39.470 --> 00:28:43.610
最终使我的笔记本电脑超载

00:28:41.300 --> 00:28:52.210
在所有这些系统上运行

00:28:43.610 --> 00:28:58.760
所以我要启动控制台

00:28:52.210 --> 00:29:00.830
然后，我将向您展示UI 

00:28:58.760 --> 00:29:05.000
首先，所以这是整洁的之一

00:29:00.830 --> 00:29:07.970
关于控制台的事情就这样了

00:29:05.000 --> 00:29:14.060
认为自己是服务之一

00:29:07.970 --> 00:29:18.320
已注册，并且具有

00:29:14.060 --> 00:29:21.980
您可以看到可用的群集状态

00:29:18.320 --> 00:29:25.220
到键值存储中

00:29:21.980 --> 00:29:29.650
前段时间我去了

00:29:25.220 --> 00:29:34.670
前面并已经添加了一些属性

00:29:29.650 --> 00:29:38.630
我会告诉你，但超级容易

00:29:34.670 --> 00:29:41.620
进来，你知道改变值， 

00:29:38.630 --> 00:29:45.350
编辑的东西真的很好

00:29:41.620 --> 00:29:47.540
一个不错的小用户界面，关于ACLS 

00:29:45.350 --> 00:29:48.980
我们因为我没转身而被禁用

00:29:47.540 --> 00:29:50.690
他们在，如果有另一个

00:29:48.980 --> 00:29:51.320
知道如何联系的数据中心

00:29:50.690 --> 00:29:55.970
以及

00:29:51.320 --> 00:30:01.090
所以附带的界面真的非常好

00:29:55.970 --> 00:30:03.620
与控制台，所以现在让我向您展示

00:30:01.090 --> 00:30:07.540
这里的代码

00:30:03.620 --> 00:30:07.540
提前停止这些

00:30:24.980 --> 00:30:34.029
所以还是简单的Spring Boot应用程序

00:30:31.309 --> 00:30:37.220
与启用发现客户端和

00:30:34.029 --> 00:30:39.889
该应用程序看起来几乎相同

00:30:37.220 --> 00:30:43.159
我在动物园管理员给你看过的那个

00:30:39.889 --> 00:30:47.139
对，我有负载均衡器客户端

00:30:43.159 --> 00:30:47.139
也在这里注入了发现客户端

00:30:49.510 --> 00:30:54.250
所以让我也运行其中的几个

00:31:10.410 --> 00:31:15.860
我回到地图

00:31:19.660 --> 00:31:26.770
再次，您可以看到它正在使用功能区

00:31:21.880 --> 00:31:29.080
像以前一样循环

00:31:26.770 --> 00:31:33.940
 Zookeeper，但现在如果您进入用户界面

00:31:29.080 --> 00:31:40.720
我不应该关闭你可以看到的

00:31:33.940 --> 00:31:44.800
我现在已经注册了此服务

00:31:40.720 --> 00:31:49.360
测试控制台应用程序，如果我去

00:31:44.800 --> 00:31:55.990
可以看到我有两个实例

00:31:49.360 --> 00:32:03.760
它以HTTP运行状况运行每个

00:31:55.990 --> 00:32:06.250
检查运行它现在非常好

00:32:03.760 --> 00:32:11.110
您还会注意到，如果我回到

00:32:06.250 --> 00:32:15.610
我注册春季的服务

00:32:11.110 --> 00:32:17.980
现在就启动管理

00:32:15.610 --> 00:32:20.170
尤里卡有一个局限性

00:32:17.980 --> 00:32:23.740
只允许您注册一个

00:32:20.170 --> 00:32:25.960
每个JVM服务，但控制台没有

00:32:23.740 --> 00:32:28.260
那个限制和尤里卡两个不会

00:32:25.960 --> 00:32:32.230
都可以，但是您可以注册

00:32:28.260 --> 00:32:34.690
您的应用程序的任何端口

00:32:32.230 --> 00:32:37.540
默认情况下可能在正确收听

00:32:34.690 --> 00:32:41.890
通常只是HTTP端口，但是如果

00:32:37.540 --> 00:32:44.620
有了春天就可以奔跑

00:32:41.890 --> 00:32:47.380
引导管理

00:32:44.620 --> 00:32:49.840
正确的其他端口或者您向上旋转

00:32:47.380 --> 00:32:53.320
另一个你可以自己动手

00:32:49.840 --> 00:32:54.880
内部的，你知道港口，如果你有一些

00:32:53.320 --> 00:32:57.430
您正在做的TCP事情

00:32:54.880 --> 00:33:04.090
您当然可以向进行注册

00:32:57.430 --> 00:33:06.160
控制台也非常好，让我们

00:33:04.090 --> 00:33:13.300
回到这里，我可以告诉你

00:33:06.160 --> 00:33:15.450
环境，所以这是一个不错的演示

00:33:13.300 --> 00:33:20.380
因为您可以看到

00:33:15.450 --> 00:33:24.510
属性正确，因此此测试属性

00:33:20.380 --> 00:33:24.510
适用于所有应用程序

00:33:55.020 --> 00:34:19.980
所以这些好问题是什么

00:34:09.700 --> 00:34:19.980
第一个编辑历史，所以不是这样

00:34:20.399 --> 00:34:26.020
所以要指出的一件事是

00:34:23.020 --> 00:34:29.440
不使用配置服务器的权利

00:34:26.020 --> 00:34:33.429
这些正在使用本地客户端

00:34:29.440 --> 00:34:36.490
连接而不是使用我们的弹簧

00:34:33.429 --> 00:34:38.470
云配置服务器本地

00:34:36.490 --> 00:34:41.770
配置客户端直接转到

00:34:38.470 --> 00:34:46.149
这些服务，所以我们没有git或

00:34:41.770 --> 00:34:47.740
像我这样的版本

00:34:46.149 --> 00:34:51.250
熟悉动物园管理员，我知道

00:34:47.740 --> 00:34:58.060
一个版本，但我不知道它是否保留

00:34:51.250 --> 00:35:00.490
是的，我曾经的历史

00:34:58.060 --> 00:35:02.100
看到有一个工具

00:35:00.490 --> 00:35:04.690
做到这一点，但默认情况下这些

00:35:02.100 --> 00:35:08.109
应用程序没有类似的历史记录

00:35:04.690 --> 00:35:11.410
 git这样做是为什么我们选择get 

00:35:08.109 --> 00:35:15.340
其中一件事情他

00:35:11.410 --> 00:35:17.890
提到加密权密钥

00:35:15.340 --> 00:35:27.040
这样，我们已经建立了设施

00:35:17.890 --> 00:35:31.020
进入配置服务器进行加密，所以我

00:35:27.040 --> 00:35:33.400
有拉取请求，如果我愿意

00:35:31.020 --> 00:35:36.400
有足够的时间我可以告诉你

00:35:33.400 --> 00:35:39.480
但是另一个控制台是另一个hashey核心

00:35:36.400 --> 00:35:43.660
产品称为保险库

00:35:39.480 --> 00:35:49.110
它的工作是存储密钥和秘密

00:35:43.660 --> 00:35:54.430
并考虑它有后端

00:35:49.110 --> 00:35:56.320
 Zookeeper控制台并执行sed操作

00:35:54.430 --> 00:35:57.820
就是我要存放的方向

00:35:56.320 --> 00:36:00.270
秘密，尤其是那些秘密

00:35:57.820 --> 00:36:00.270
其中三个

00:36:10.500 --> 00:36:24.819
嗯，所以我们有一件事情

00:36:16.390 --> 00:36:32.200
你不能离开迈克

00:36:24.819 --> 00:36:34.990
同事我无法放松，所以你可以

00:36:32.200 --> 00:36:36.910
有两件事

00:36:34.990 --> 00:36:41.710
事情是我们增加了刷新

00:36:36.910 --> 00:36:43.780
总线上的执行器端点

00:36:41.710 --> 00:36:47.020
你可以说嘿刷新所有

00:36:43.780 --> 00:36:50.079
实例所有类型为X的服务

00:36:47.020 --> 00:36:51.490
他们会回去刷新他们的

00:36:50.079 --> 00:37:02.260
配置，以便您可以进行

00:36:51.490 --> 00:37:05.890
编辑，然后说嘿去更新

00:37:02.260 --> 00:37:07.869
这将基于

00:37:05.890 --> 00:37:11.530
特定服务器的属性

00:37:07.869 --> 00:37:16.170
对，所以如果他们与您联系，那么

00:37:11.530 --> 00:37:19.420
与动物园管理员和控制台没有

00:37:16.170 --> 00:37:22.150
他们会得到任何被认为是

00:37:19.420 --> 00:37:24.329
对于该系统而言，一致

00:37:22.150 --> 00:37:24.329
说得通

00:37:34.880 --> 00:37:38.839
 II不知道是否可以编辑多个

00:37:37.250 --> 00:37:42.680
在Zookeeper中同时设置属性

00:37:38.839 --> 00:37:44.510
或控制台，所以没有我不我不

00:37:42.680 --> 00:37:46.550
知道您是否真的可以在

00:37:44.510 --> 00:37:52.099
同时你必须做两个

00:37:46.550 --> 00:37:55.119
有意义的单独编辑，但那些

00:37:52.099 --> 00:37:57.440
如果您不能立即反映

00:37:55.119 --> 00:38:00.260
写因为你的客户没有

00:37:57.440 --> 00:38:03.859
那另一件事你

00:38:00.260 --> 00:38:09.740
因此，与控制台和Zookeeper不同

00:38:03.859 --> 00:38:11.900
我认为的配置服务器

00:38:09.740 --> 00:38:14.809
我们添加了此功能的Zookeeper 

00:38:11.900 --> 00:38:33.500
观看存储库和客户端

00:38:14.809 --> 00:38:38.829
可以自动刷新他的

00:38:33.500 --> 00:38:38.829
问题是我已经更新了一个值， 

00:38:45.980 --> 00:38:54.280
取决于，取决于

00:38:48.380 --> 00:38:54.280
您的平台正确，所以无论如何，是的，我

00:38:55.450 --> 00:39:09.349
希望它像泥一样清晰

00:38:57.859 --> 00:39:13.250
是的，我必须调查

00:39:09.349 --> 00:39:14.599
我不知道你能不能换两个

00:39:13.250 --> 00:39:16.820
一次获得价值，并希望其中任何一个

00:39:14.599 --> 00:39:18.320
系统以原子方式我不是我不是

00:39:16.820 --> 00:39:21.970
确定如果可以的话不会

00:39:18.320 --> 00:39:21.970
这样的问题

00:39:32.270 --> 00:39:39.079
尤里卡是动物园管理员和控制台的地方

00:39:36.300 --> 00:39:41.910
趋于一致

00:39:39.079 --> 00:39:47.099
尤里卡倾向于可用性

00:39:41.910 --> 00:39:49.890
因此它将为您提供陈旧的数据

00:39:47.099 --> 00:39:52.920
比在这些地方不一致

00:39:49.890 --> 00:39:54.599
这样做的可能性较小，所以

00:39:52.920 --> 00:39:58.920
那是最大的差异之一

00:39:54.599 --> 00:40:00.660
这些系统之间是一个

00:39:58.920 --> 00:40:03.150
 Netflix建立方式的原因

00:40:00.660 --> 00:40:05.460
他们这样做是因为当它们扩展到数十

00:40:03.150 --> 00:40:07.410
数千台正在运行的计算机

00:40:05.460 --> 00:40:10.079
宁愿有可用数据，即使

00:40:07.410 --> 00:40:14.040
很老，他们也有多个

00:40:10.079 --> 00:40:15.900
几层保护说你过时了

00:40:14.040 --> 00:40:19.940
服务器权甚至不存在

00:40:15.900 --> 00:40:23.609
尤其是在具有功能区的AWS中

00:40:19.940 --> 00:40:29.790
您可以通过

00:40:23.609 --> 00:40:32.190
重试历史悠久的宿雾并进行后备

00:40:29.790 --> 00:40:34.200
如果您再次失败，那么会有多个

00:40:32.190 --> 00:40:41.369
专门处理的层

00:40:34.200 --> 00:40:42.930
带着这么大的问题好吧，我

00:40:41.369 --> 00:40:46.140
无法向您展示巴士，因为

00:40:42.930 --> 00:40:50.490
破灭，但至少它发生在

00:40:46.140 --> 00:40:52.140
演示，没有在舞台上直播

00:40:50.490 --> 00:40:55.589
在我之前有更多关于控制台的问题

00:40:52.140 --> 00:40:57.900
继续说我们如何与时间在一起

00:40:55.589 --> 00:40:59.430
我猜这个会话什么时候结束

00:40:57.900 --> 00:41:02.640
无论我们想要什么，因为这是最后一个

00:40:59.430 --> 00:41:05.390
它应该什么时候开始于

00:41:02.640 --> 00:41:08.190
 2:15好的，谢谢

00:41:05.390 --> 00:41:11.420
还有更多问题，问题很棒

00:41:08.190 --> 00:41:11.420
即使我不知道答案

00:41:20.540 --> 00:41:26.660
所以他的问题是你可以使用配置

00:41:24.650 --> 00:41:29.120
我们已经发布的服务器

00:41:26.660 --> 00:41:31.190
从控制台发现服务

00:41:29.120 --> 00:41:33.290
答案是绝对正确的，所以每个人

00:41:31.190 --> 00:41:36.290
我谈论的这些作品中

00:41:33.290 --> 00:41:38.900
可通过启动器使用，并且您可以

00:41:36.290 --> 00:41:40.880
就像我说的那样，现在就选择

00:41:38.900 --> 00:41:43.280
控制台的优势之一是

00:41:40.880 --> 00:41:46.790
它拥有所有这些东西，但是你可以

00:41:43.280 --> 00:41:49.430
当然可以像我一样混合搭配

00:41:46.790 --> 00:41:52.820
说的配置服务器已经有

00:41:49.430 --> 00:41:55.310
内置加密部分，但就像我说的

00:41:52.820 --> 00:41:57.650
我有一个过失要求

00:41:55.310 --> 00:42:02.300
可以在布里克斯顿之前合并

00:41:57.650 --> 00:42:06.860
鬼GA如此

00:42:02.300 --> 00:42:07.220
还有其他问题，让我们看看

00:42:06.860 --> 00:42:11.380
下一个

00:42:07.220 --> 00:42:16.910
好吧，以前有人听说过兽医CD 

00:42:11.380 --> 00:42:20.560
这是通过核心操作系统，他们使

00:42:16.910 --> 00:42:24.620
专门为

00:42:20.560 --> 00:42:30.950
容器，它们在他们的

00:42:24.620 --> 00:42:34.280
他们的分布他们的分布

00:42:30.950 --> 00:42:35.930
系统再次非常类似于

00:42:34.280 --> 00:42:38.260
咨询动物园管理员

00:42:35.930 --> 00:42:41.150
那是一个分布式键值存储

00:42:38.260 --> 00:42:47.290
它写了，走了一个不错的小

00:42:41.150 --> 00:42:51.680
 CLI它有一个不错的HTTP API， 

00:42:47.290 --> 00:42:55.280
语言绑定，这是一个

00:42:51.680 --> 00:42:59.120
孵化器项目，所以github 

00:42:55.280 --> 00:43:06.920
仓库是Spring Cloud孵化器

00:42:59.120 --> 00:43:10.310
无论如何我们之间都有破折号

00:43:06.920 --> 00:43:12.380
它是由孵化器决定还是

00:43:10.310 --> 00:43:14.390
社区将决定是否

00:43:12.380 --> 00:43:21.650
他们希望我们释放这个

00:43:14.390 --> 00:43:23.540
支持这一点，再次有一种

00:43:21.650 --> 00:43:27.560
在这里重复自己似乎

00:43:23.540 --> 00:43:32.540
 CD上的Spring Cloud配置使用它们的

00:43:27.560 --> 00:43:33.390
 HTTP API再看一次，嘿，看一下

00:43:32.540 --> 00:43:41.670
那

00:43:33.390 --> 00:43:57.750
我明白了，我们要去现场直播

00:43:41.670 --> 00:43:59.430
那是怎么回事

00:43:57.750 --> 00:44:04.410
问题是我在做什么

00:43:59.430 --> 00:44:05.520
幻灯片，这是它的组合

00:44:04.410 --> 00:44:10.350
东西

00:44:05.520 --> 00:44:14.700
 JavaScript的渲染

00:44:10.350 --> 00:44:20.190
我使用开源产品

00:44:14.700 --> 00:44:25.680
我的内容在

00:44:20.190 --> 00:44:28.440
降价很容易写下我的意思

00:44:25.680 --> 00:44:32.010
习惯看着那样使

00:44:28.440 --> 00:44:34.020
靠我自己保存文件

00:44:32.010 --> 00:44:39.240
这将最终出现在我的个人网站上

00:44:34.020 --> 00:44:42.180
根据介绍，但被称为雨果去

00:44:39.240 --> 00:44:44.640
雨果点IO这是一个静态网站生成器

00:44:42.180 --> 00:44:46.740
它将监视您的来源并

00:44:44.640 --> 00:44:50.780
刷新页面时， 

00:44:46.740 --> 00:44:53.550
这样做，谢谢你原谅我

00:44:50.780 --> 00:44:57.240
配置非常类似于控制台

00:44:53.550 --> 00:44:59.010
与sed类似，我们得到了相同的

00:44:57.240 --> 00:45:00.650
加载顺序，以便您可以拥有属性

00:44:59.010 --> 00:45:04.320
适用于每个应用程序

00:45:00.650 --> 00:45:06.660
一些特定于您的应用程序或

00:45:04.320 --> 00:45:11.400
公正或您的特定应用

00:45:06.660 --> 00:45:15.180
配置文件，所以这是其中之一

00:45:11.400 --> 00:45:18.270
仍然是孵化器的原因

00:45:15.180 --> 00:45:20.550
项目被发现很多

00:45:18.270 --> 00:45:24.720
人们使用该CD进行发现，但是

00:45:20.550 --> 00:45:27.540
没有特定的支持

00:45:24.720 --> 00:45:29.520
 sed中的发现可以

00:45:27.540 --> 00:45:32.010
动物园管理员，我能够使用策展人

00:45:29.520 --> 00:45:34.080
食谱，这让我的生活变得非常真实

00:45:32.010 --> 00:45:37.590
容易做到，您知道一些API调用

00:45:34.080 --> 00:45:41.670
我做完了，所以无论我在这里

00:45:37.590 --> 00:45:43.800
想出了这可能并不理想

00:45:41.670 --> 00:45:45.640
这就是它的原因之一

00:45:43.800 --> 00:45:51.130
仍然是一个孵化器项目

00:45:45.640 --> 00:45:54.339
所以我们使用HTTP API并设置一个节点

00:45:51.130 --> 00:45:58.119
有时间生活

00:45:54.339 --> 00:46:02.109
这是可配置的，但是那时

00:45:58.119 --> 00:46:04.420
居住的人过期

00:46:02.109 --> 00:46:06.670
 sed发现您知道实例

00:46:04.420 --> 00:46:08.140
该实例将消失，那又怎样

00:46:06.670 --> 00:46:10.749
我要做的是我设置了一些背景

00:46:08.140 --> 00:46:14.289
线程，我不断地刷新

00:46:10.749 --> 00:46:17.920
该节点设置了appian，以便

00:46:14.289 --> 00:46:22.499
 TTL再次重置自己，这很漂亮

00:46:17.920 --> 00:46:25.450
简单的系统，它的工作原理，但这是

00:46:22.499 --> 00:46:27.430
可能是为什么它的原因之一

00:46:25.450 --> 00:46:30.460
如果您有兴趣，还可以

00:46:27.430 --> 00:46:32.380
想学习，也许你可以做

00:46:30.460 --> 00:46:34.839
比我能做到的更好的东西

00:46:32.380 --> 00:46:38.559
成为没有请求的地方

00:46:34.839 --> 00:46:40.119
以我们喜欢的方式提出要求

00:46:38.559 --> 00:46:43.299
社区，这是原因之一

00:46:40.119 --> 00:46:47.529
实际上就像在

00:46:43.299 --> 00:46:52.839
开源方面，因为我的客户

00:46:47.529 --> 00:46:55.529
你们真的很棒吗，让我们看看

00:46:52.839 --> 00:46:55.529
如果我能做到这一点

00:47:04.200 --> 00:47:09.720
所以我有一些方便的脚本

00:47:07.109 --> 00:47:12.240
 Spring Cloud Console和Etsy D 

00:47:09.720 --> 00:47:17.119
安装后启动

00:47:12.240 --> 00:47:17.119
只是为了为您启动

00:47:18.230 --> 00:47:28.380
我在哪里显示代码很不幸

00:47:26.099 --> 00:47:32.130
这看起来非常类似于

00:47:28.380 --> 00:47:37.799
最后两个示例应用程序

00:47:32.130 --> 00:47:39.530
你有事实，如果我要

00:47:37.799 --> 00:47:42.119
我本来可以写一个真的很棘手

00:47:39.530 --> 00:47:44.910
示例应用程序和二手Maven 

00:47:42.119 --> 00:47:48.869
配置文件带来合适的

00:47:44.910 --> 00:47:52.920
依赖性和样本取出相同

00:47:48.869 --> 00:47:55.049
示例应用程序可以正常工作

00:47:52.920 --> 00:47:57.599
因为

00:47:55.049 --> 00:47:59.579
靴子自动配置对，我是说我

00:47:57.599 --> 00:48:00.960
在这些应用程序中有副本

00:47:59.579 --> 00:48:03.660
每个存储库，但可能是

00:48:00.960 --> 00:48:06.299
一个，我们只是交换去发现

00:48:03.660 --> 00:48:09.900
入门，它只是使用另一个

00:48:06.299 --> 00:48:12.680
一个，就是我很懒

00:48:09.900 --> 00:48:12.680
我只是复制

00:48:20.790 --> 00:48:26.640
所以再次对，我的意思是可能是

00:48:25.080 --> 00:48:30.750
我刚刚打开过的同一应用程序

00:48:26.640 --> 00:48:34.500
三个不同时间的属性

00:48:30.750 --> 00:48:39.690
是不同的权利，所以我们有一个

00:48:34.500 --> 00:48:42.480
一点时间，所以我们

00:48:39.690 --> 00:48:44.820
在属性中设置，我只是

00:48:42.480 --> 00:48:49.950
一直在使用所有默认值，或者您知道

00:48:44.820 --> 00:48:52.970
该层次结构中的哪个路径应该

00:48:49.950 --> 00:48:57.720
配置去哪里

00:48:52.970 --> 00:49:00.030
发现去我应该注册什么

00:48:57.720 --> 00:49:03.000
该服务的IP地址或

00:49:00.030 --> 00:49:05.010
主机名，我应该使用IP地址吗

00:49:03.000 --> 00:49:07.980
或主机名是什么

00:49:05.010 --> 00:49:11.550
 II谈到的生存时间

00:49:07.980 --> 00:49:15.420
我应该经常去更新那个节点

00:49:11.550 --> 00:49:22.440
对，您不希望刷新

00:49:15.420 --> 00:49:24.780
大于生活的时间，所以

00:49:22.440 --> 00:49:27.320
让我们继续，再次开始我

00:49:24.780 --> 00:49:27.320
其中几个

00:49:37.000 --> 00:49:49.339
我可以在这里告诉你这并非没有

00:49:45.079 --> 00:49:54.640
为我完成，所以我有财产

00:49:49.339 --> 00:50:00.560
已经设置好了，我需要找那个家伙

00:49:54.640 --> 00:50:03.349
显示您的价值，所以这个小的CLI是

00:50:00.560 --> 00:50:05.720
能够设置真的很棒

00:50:03.349 --> 00:50:09.800
值获取值，所以我们也可以看到

00:50:05.720 --> 00:50:14.500
什么是那里的默认值

00:50:09.800 --> 00:50:14.500
那个云发现

00:50:23.010 --> 00:50:29.430
所以在这里您可以看到

00:50:26.460 --> 00:50:30.720
如果需要，请注意目录

00:50:29.430 --> 00:50:32.700
称它为

00:50:30.720 --> 00:50:36.750
应用程序，您会看到有两个

00:50:32.700 --> 00:50:39.470
为每个实例设置一个值好，并且

00:50:36.750 --> 00:50:47.310
那就是我要做的全部

00:50:39.470 --> 00:50:50.190
我在那边，让我们看看是否，我只是

00:50:47.310 --> 00:50:51.990
将主机和端口放在那里

00:50:50.190 --> 00:50:53.790
当发现客户端实际

00:50:51.990 --> 00:50:56.880
出去获取那些有价值的东西

00:50:53.790 --> 00:51:00.780
报告回来，所以我只是说汤

00:50:56.880 --> 00:51:02.460
这可能是您知道一些复杂的JSON 

00:51:00.780 --> 00:51:05.100
具有比主机导入更多的对象

00:51:02.460 --> 00:51:07.640
如果我们真的想要正确的话

00:51:05.100 --> 00:51:07.640
现在很简单

00:51:14.940 --> 00:51:22.319
功能区也知道如何获得

00:51:17.819 --> 00:51:24.990
通过他们，我们可以去看看

00:51:22.319 --> 00:51:27.450
环境，在这里我们有相同的

00:51:24.990 --> 00:51:32.460
层次结构，但它来自电视

00:51:27.450 --> 00:51:35.910
好吧，让我们看看会是什么样

00:51:32.460 --> 00:51:37.769
就像我想说我不想我

00:51:35.910 --> 00:51:49.170
我想要与我不同的价值

00:51:37.769 --> 00:51:52.849
财产权，所以我们将其设置为

00:51:49.170 --> 00:52:07.829
对于每个应用程序，我都希望成为

00:51:52.849 --> 00:52:16.710
对于我的应用程序，所以通过这里就可以了

00:52:07.829 --> 00:52:18.539
现在，对不起，我很抱歉

00:52:16.710 --> 00:52:27.799
可以看的很好我不知道是什么

00:52:18.539 --> 00:52:27.799
你们错了82 

00:52:30.219 --> 00:52:34.249
所以刷新是促动器之一

00:52:32.630 --> 00:52:40.880
我之前提到的端点

00:52:34.249 --> 00:52:43.039
春天的云所提供的让我们来看看

00:52:40.880 --> 00:52:47.839
如果成功了，我们应该看到一个新的价值

00:52:43.039 --> 00:52:50.170
在此属性源中，我们拥有它

00:52:47.839 --> 00:52:54.339
对的，所以我没有更新我的属性

00:52:50.170 --> 00:52:54.339
重新启动服务器问题

00:53:32.300 --> 00:53:40.220
可以肯定的是，问题又回到了

00:53:36.380 --> 00:53:44.200
你知道谁提交的论文线索

00:53:40.220 --> 00:53:44.200
谁在正确的时候改变了什么价值

00:54:09.460 --> 00:54:17.579
所以总的来说，我们并没有真正

00:54:14.770 --> 00:54:20.200
有一个解决方案

00:54:17.579 --> 00:54:25.930
在应用程序端，它只是获取值

00:54:20.200 --> 00:54:27.940
从任何合适的来源

00:54:25.930 --> 00:54:32.710
配置服务器你要好一点

00:54:27.940 --> 00:54:36.390
的故事，因为

00:54:32.710 --> 00:54:36.390
支持它的版本控制系统

00:54:45.490 --> 00:55:04.960
是的，但是那很好

00:55:00.160 --> 00:55:06.520
他说的很好是

00:55:04.960 --> 00:55:08.710
与客户的看法相反

00:55:06.520 --> 00:55:19.990
数据的版本

00:55:08.710 --> 00:55:22.180
我有没有这个配置

00:55:19.990 --> 00:55:26.470
所以致动器的一件事

00:55:22.180 --> 00:55:28.480
就是如果您的密钥以密码结尾

00:55:26.470 --> 00:55:30.250
或键或类似的东西开始

00:55:28.480 --> 00:55:37.960
他们已经出来了，所以我们照顾

00:55:30.250 --> 00:55:39.940
确实已经发生了

00:55:37.960 --> 00:55:41.500
刷新时触发攻击

00:55:39.940 --> 00:55:43.599
刷新发生了，所以有一个

00:55:41.500 --> 00:55:46.420
您可能会做某事的潜力

00:55:43.599 --> 00:55:49.560
基于该事件，对，但是

00:55:46.420 --> 00:55:49.560
那实际上是个好主意

00:55:49.830 --> 00:55:55.060
我不得不记录一个问题，然后

00:55:53.020 --> 00:55:57.339
对此进行一般性讨论

00:55:55.060 --> 00:55:59.740
因为那个特别的我们没有

00:55:57.339 --> 00:56:01.540
一般的解决方案

00:55:59.740 --> 00:56:04.830
客户端这些是什么版本的

00:56:01.540 --> 00:56:04.830
我有东西，但是

00:56:21.790 --> 00:56:28.390
因此Netflix有一个称为EDA的工具

00:56:24.820 --> 00:56:30.730
记录一些时间

00:56:28.390 --> 00:56:34.290
事物在环境变化中才知道

00:56:30.730 --> 00:56:36.850
这样，是的，那里可能有一个

00:56:34.290 --> 00:56:53.850
专门做了类似的事情

00:56:36.850 --> 00:56:53.850
对于配置权是

00:56:55.290 --> 00:57:01.720
是的，是的，John提出了要点

00:56:59.380 --> 00:57:04.930
是的，这个东西不应该是

00:57:01.720 --> 00:57:11.200
经常改变而不是改变

00:57:04.930 --> 00:57:14.020
通常在运行时是运算符，所以不错

00:57:11.200 --> 00:57:15.100
要点，没错，您知道其中之一

00:57:14.020 --> 00:57:16.630
原因之一甚至

00:57:15.100 --> 00:57:19.360
配置服务器没有建立安全性

00:57:16.630 --> 00:57:21.310
正确，但是你需要春天

00:57:19.360 --> 00:57:23.680
安全性，您添加所需的任何内容

00:57:21.310 --> 00:57:26.200
到所以你知道你不应该只让

00:57:23.680 --> 00:57:28.530
任何人都这样做，但你是对的，这是一个

00:57:26.200 --> 00:57:31.720
好极了

00:57:28.530 --> 00:57:33.580
所以发现的其他一些版本

00:57:31.720 --> 00:57:39.220
我们创建了，如果有人听说过

00:57:33.580 --> 00:57:42.430
这是我们最简单的呼叫方式

00:57:39.220 --> 00:57:44.170
它是单个租户愚蠢的云

00:57:42.430 --> 00:57:48.270
可以在笔记本电脑上运行的Foundry 

00:57:44.170 --> 00:57:50.620
您可以在AWS中运行它，我们构建了一个

00:57:48.270 --> 00:57:53.530
使用的发现的简单版本

00:57:50.620 --> 00:57:55.660
来自迭戈的受体api 

00:57:53.530 --> 00:57:58.710
云铸造的组成部分，因此

00:57:55.660 --> 00:58:01.480
只读发现客户端权限

00:57:58.710 --> 00:58:04.690
注册发生在平台上

00:58:01.480 --> 00:58:06.070
平台创建时的水平

00:58:04.690 --> 00:58:08.020
服务的新实例

00:58:06.070 --> 00:58:11.350
立即可供其他所有人使用

00:58:08.020 --> 00:58:13.510
服务还可以，我们有一些春天

00:58:11.350 --> 00:58:15.820
云连接器，用于一些简单数据

00:58:13.510 --> 00:58:21.250
服务和消息传递服务以及

00:58:15.820 --> 00:58:24.310
 lattis也有我一个

00:58:21.250 --> 00:58:26.590
没提乔希很久也创造了一个

00:58:24.310 --> 00:58:30.010
版本的Cloud Foundry使用

00:58:26.590 --> 00:58:32.230
 Cloud Foundry API非常类似于

00:58:30.010 --> 00:58:40.480
除了使用Cloud Foundry之外

00:58:32.230 --> 00:58:42.990
 api再次只读，我知道其中之一

00:58:40.480 --> 00:58:47.110
 Google的开发者倡导者希望

00:58:42.990 --> 00:58:49.990
为kubernetes做一个发现客户端

00:58:47.110 --> 00:58:53.830
认为与这些使用类似

00:58:49.990 --> 00:58:56.320
它的API，所以即将出现的新事物之一

00:58:53.830 --> 00:59:01.060
布里克斯顿的春天云

00:58:56.320 --> 00:59:05.740
这些是一些概念

00:59:01.060 --> 00:59:07.560
分布式系统有时会尝试

00:59:05.740 --> 00:59:12.710
并处理我们的

00:59:07.560 --> 00:59:17.120
并非总是易于实施，但

00:59:12.710 --> 00:59:20.490
分布式锁定和领导者选举

00:59:17.120 --> 00:59:25.260
有领导者的实现

00:59:20.490 --> 00:59:27.240
与动物园管理员选举，我有一个

00:59:25.260 --> 00:59:30.900
向控制台拉入请求

00:59:27.240 --> 00:59:33.540
他们在他们的网站上的指南和

00:59:30.900 --> 00:59:35.790
使用Redis进行分布式锁

00:59:33.540 --> 00:59:40.740
也可以和动物园管理员一起做

00:59:35.790 --> 00:59:42.570
和控制台以及这个

00:59:40.740 --> 00:59:49.260
将达到里程碑，并将

00:59:42.570 --> 00:59:52.530
这个项目实际可用

00:59:49.260 --> 00:59:56.100
他们所做的工作

00:59:52.530 --> 01:00:00.260
 XD在

00:59:56.100 --> 01:00:03.750
原始版本中有一个托管的

01:00:00.260 --> 01:00:05.550
容器，所以它开始成为一个

01:00:03.750 --> 01:00:08.610
平台，所以他们需要能够

01:00:05.550 --> 01:00:11.340
说提供高可用性

01:00:08.610 --> 01:00:14.160
谁是主管理员，所以这是

01:00:11.340 --> 01:00:16.800
从这项工作中我相信

01:00:14.160 --> 01:00:21.890
也是其中一些的实现

01:00:16.800 --> 01:00:27.120
榛树中的图案投射出它们还不错

01:00:21.890 --> 01:00:30.420
我不会演示不看那个

01:00:27.120 --> 01:00:31.830
我已经列出了所有很棒的你

01:00:30.420 --> 01:00:33.750
可以做一些类似的事情

01:00:31.830 --> 01:00:40.770
人们使用sed的一件事

01:00:33.750 --> 01:00:42.590
对于锁定，我要证明

01:00:40.770 --> 01:00:47.490
我的幻灯片上没有的其他内容

01:00:42.590 --> 01:00:50.570
那是怎么回事

01:00:47.490 --> 01:00:56.820
昨晚在主题演讲中降级的是

01:00:50.570 --> 01:00:59.360
他们展示了Zipkin UI，所以我们有一个

01:00:56.820 --> 01:00:59.360
新项目

01:01:02.010 --> 01:01:12.560
叫春云探秘懒惰探秘

01:01:13.850 --> 01:01:26.130
这是一个是没有什么

01:01:22.800 --> 01:01:31.260
看到这里真的很令人兴奋，但是

01:01:26.130 --> 01:01:35.360
 Spring Cloud Sleuth是我们的项目

01:01:31.260 --> 01:01:38.040
开始处理分布式跟踪

01:01:35.360 --> 01:01:41.550
再次捐赠了一些原始代码

01:01:38.040 --> 01:01:44.010
从财务上他们有一个简单的

01:01:41.550 --> 01:01:47.450
把一个解决方案，他们称之为

01:01:44.010 --> 01:01:50.940
相关ID刚进入日志

01:01:47.450 --> 01:01:57.330
这样每个日志语句都有一些ID 

01:01:50.940 --> 01:01:59.310
以后在日志存储中或

01:01:57.330 --> 01:02:02.610
您可以使用的其他日志聚合系统

01:01:59.310 --> 01:02:07.710
开始搜索并看到事物，这是

01:02:02.610 --> 01:02:08.700
从那里成长，我们成立了我们

01:02:07.710 --> 01:02:10.820
试图拿出一个不错的

01:02:08.700 --> 01:02:13.710
合并其他系统的抽象

01:02:10.820 --> 01:02:17.070
包括齐普金，所以阿德里安（Adrian） 

01:02:13.710 --> 01:02:21.150
年龄只有

01:02:17.070 --> 01:02:23.580
开始工作已经有多长时间了

01:02:21.150 --> 01:02:26.240
三个星期之类的

01:02:23.580 --> 01:02:29.940
与Spring Cloud开源团队一起

01:02:26.240 --> 01:02:32.370
他曾经在Twitter工作过

01:02:29.940 --> 01:02:34.860
也曾经在Netflix工作，所以他有

01:02:32.370 --> 01:02:38.010
他来的一些很棒的经验

01:02:34.860 --> 01:02:41.490
帮助我们进行这种分布式跟踪

01:02:38.010 --> 01:02:43.590
问题和相关性，他是他的一员

01:02:41.490 --> 01:02:45.600
你知道我叫你之一

01:02:43.590 --> 01:02:51.210
 Opens的创始人是Open Zipkin 

01:02:45.600 --> 01:02:53.940
组织那里的组织者是的

01:02:51.210 --> 01:02:56.330
是的，他不是创始人的项目

01:02:53.940 --> 01:02:59.400
该项目只是开放

01:02:56.330 --> 01:03:01.410
实施Zipkin维护

01:02:59.400 --> 01:03:05.240
所以或者我们当然很高兴拥有

01:03:01.410 --> 01:03:07.860
他有他在我们这里，所以有

01:03:05.240 --> 01:03:12.060
这个项目没什么可看的

01:03:07.860 --> 01:03:13.530
但是发生的是我们开始

01:03:12.060 --> 01:03:17.210
仪器

01:03:13.530 --> 01:03:21.240
在应用程序中的不同位置

01:03:17.210 --> 01:03:24.690
要么启动跟踪，要么生成跟踪ID 

01:03:21.240 --> 01:03:28.950
和范围ID，所以这是很多

01:03:24.690 --> 01:03:31.109
术语基于

01:03:28.950 --> 01:03:33.840
谷歌从谷歌dapper项目

01:03:31.109 --> 01:03:35.730
他们拿出白皮书，所以

01:03:33.840 --> 01:03:42.060
真正易于使用的术语，但

01:03:35.730 --> 01:03:44.880
跨度跟踪是一些特定的

01:03:42.060 --> 01:03:48.510
整个系统的途径

01:03:44.880 --> 01:03:52.400
从原始客户请求到

01:03:48.510 --> 01:03:55.650
与之交谈的任何下游系统

01:03:52.400 --> 01:03:58.619
并且有该迹线的段

01:03:55.650 --> 01:04:01.410
我们称之为跨度

01:03:58.619 --> 01:04:05.580
我们开始测量不同的地方

01:04:01.410 --> 01:04:10.800
在代码中使用钩子

01:04:05.580 --> 01:04:14.700
春天提供或在其他地方

01:04:10.800 --> 01:04:16.890
它们不是钩子，我们可以使用AOP 

01:04:14.700 --> 01:04:19.290
迷上他们所在的地方

01:04:16.890 --> 01:04:21.869
默认情况下不挂机，但我们开始

01:04:19.290 --> 01:04:25.140
将这些ID传播到整个

01:04:21.869 --> 01:04:27.030
系统，以便他们可以喂一些

01:04:25.140 --> 01:04:30.380
下游系统，你可以得到这个

01:04:27.030 --> 01:04:38.570
特定请求的图片

01:04:30.380 --> 01:04:38.570
看起来像所以我们是问题

01:05:05.109 --> 01:05:13.790
说的是的，所以只要有一个

01:05:10.220 --> 01:05:15.290
我们尝试传播的线程变化

01:05:13.790 --> 01:05:17.390
通过

01:05:15.290 --> 01:05:19.430
不同的线程一个特定的问题

01:05:17.390 --> 01:05:21.829
我们拥有与历史的权利

01:05:19.430 --> 01:05:24.470
现在运行的断路器

01:05:21.829 --> 01:05:26.150
线程池中的东西，但是是的

01:05:24.470 --> 01:05:29.800
我们尝试做的是传播那些

01:05:26.150 --> 01:05:32.359
跨越任何边界的价值

01:05:29.800 --> 01:05:34.130
你知道我们遇到的是不是

01:05:32.359 --> 01:05:36.589
当前JVM中的线程

01:05:34.130 --> 01:05:44.380
这是对其他一些HTTP请求

01:05:36.589 --> 01:05:44.380
子系统确定

01:05:52.890 --> 01:06:06.910
是的，让我让我向你展示

01:06:03.690 --> 01:06:07.839
让我开始我的小样本

01:06:06.910 --> 01:06:10.030
应用

01:06:07.839 --> 01:06:17.559
这个比其他的做得更少

01:06:10.030 --> 01:06:23.640
应用程序很好，所以它失败了

01:06:17.559 --> 01:06:23.640
我必须

01:06:27.850 --> 01:06:36.720
是的，所以我正在运行Zipkin 

01:06:33.700 --> 01:06:40.840
 Zipkin的组成部分是

01:06:36.720 --> 01:06:50.500
收集器查询服务和Web UI 

01:06:40.840 --> 01:06:54.400
所以只有一秒钟

01:06:50.500 --> 01:06:56.770
好，我的样本特定于Zipkin，所以

01:06:54.400 --> 01:06:59.280
它期望他们会起来， 

01:06:56.770 --> 01:06:59.280
运行但

01:07:04.140 --> 01:07:11.340
这样你就可以看到这些美丽的彩色

01:07:08.310 --> 01:07:13.200
正确的日志我有这些空的

01:07:11.340 --> 01:07:16.890
值，因为我尚未提出要求

01:07:13.200 --> 01:07:24.620
没错，所以没有什么可追踪的

01:07:16.890 --> 01:07:24.620
但是如果我来打我的示例应用程序

01:07:29.840 --> 01:07:35.220
跟我的一样

01:07:33.030 --> 01:07:37.860
应用程序打了个电话给自己，所以我

01:07:35.220 --> 01:07:41.130
会有一些II可以告诉你

01:07:37.860 --> 01:07:46.650
代码，然后向您展示它们会更容易

01:07:41.130 --> 01:07:49.380
并非如此，当我打斜线时，我得到了一个

01:07:46.650 --> 01:07:52.230
一点随机的时间只是为了我的踪迹

01:07:49.380 --> 01:07:55.410
看起来很有趣，我刚刚打电话给

01:07:52.230 --> 01:07:57.510
我自己，却是

01:07:55.410 --> 01:08:01.800
我自己，我已经在这里实施

01:07:57.510 --> 01:08:06.560
刚返回就返回了值，所以

01:08:01.800 --> 01:08:11.130
只是一个简单的两阶段通话

01:08:06.560 --> 01:08:17.400
回到我的运行日志，您将开始

01:08:11.130 --> 01:08:19.250
查看跟踪ID，以便您看到它们

01:08:17.400 --> 01:08:25.050
都具有相同的跟踪ID 

01:08:19.250 --> 01:08:29.610
即使但跨度ID不同

01:08:25.050 --> 01:08:32.490
每个部分一次，一次正确

01:08:29.610 --> 01:08:35.910
对于原始要求大幅削减

01:08:32.490 --> 01:08:39.690
您实际上可以在这里看到一些

01:08:35.910 --> 01:08:43.740
正确的价值观，所以这个特殊的是

01:08:39.690 --> 01:08:48.480
砍到这个要砍的地方

01:08:43.740 --> 01:08:53.090
 -好的，这样您就可以开始看到这些内容了

01:08:48.480 --> 01:08:53.090
如果我看看我是如何添加的

01:08:58.380 --> 01:09:06.219
所以这利用了新功能

01:09:01.060 --> 01:09:10.949
在Spring Boot 1.3中，您可以

01:09:06.219 --> 01:09:13.659
指定日志模式的属性

01:09:10.949 --> 01:09:15.880
所以可以在配置中

01:09:13.659 --> 01:09:19.529
可以写B，所以可能是

01:09:15.880 --> 01:09:25.449
一切都一样，我们添加

01:09:19.529 --> 01:09:27.790
对SL f4j而言只是一个简单的简单值

01:09:25.449 --> 01:09:30.549
我什至不知道MDC代表什么

01:09:27.790 --> 01:09:32.440
但这就是您将其添加到

01:09:30.549 --> 01:09:35.380
记录上下文，它将显示正确

01:09:32.440 --> 01:09:37.509
所以我们我们那是捐赠的

01:09:35.380 --> 01:09:40.900
为其实施提供资金

01:09:37.509 --> 01:09:53.170
对我们来说好吧，所以那里有

01:09:40.900 --> 01:09:58.270
事件日志在日志中是，但是

01:09:53.170 --> 01:10:04.050
等一下，五美元就够了

01:09:58.270 --> 01:10:09.639
更多你得到一张照片，所以这是

01:10:04.050 --> 01:10:12.250
这些相同的值被运送到Zipkin 

01:10:09.639 --> 01:10:16.630
将它们存储在Redis中，然后

01:10:12.250 --> 01:10:23.170
让我们可以使用这个笨拙的丑陋

01:10:16.630 --> 01:10:26.230
从Zipkin到使用者介面

01:10:23.170 --> 01:10:29.320
刚刚完成的跟踪，以便您可以

01:10:26.230 --> 01:10:32.800
看到我是唯一可以继续使用的应用程序， 

01:10:29.320 --> 01:10:35.440
找到可以看到我测试过的痕迹

01:10:32.800 --> 01:10:38.230
这是几个小时前，但这是

01:10:35.440 --> 01:10:40.960
跟踪我们刚才所做的事情，如此

01:10:38.230 --> 01:10:44.530
您可以看到原始的

01:10:40.960 --> 01:10:47.469
 HTTP斜线的请求在这里， 

01:10:44.530 --> 01:10:51.159
后续请求HTTP 2在其下方

01:10:47.469 --> 01:10:58.750
我们给你，你可以点击进入

01:10:51.159 --> 01:11:00.310
多一点细节，我们是其中之一

01:10:58.750 --> 01:11:03.520
我们开始做的事情是

01:11:00.310 --> 01:11:06.489
尝试，阿德里安正在组织是

01:11:03.520 --> 01:11:08.590
尝试不管在那里执行

01:11:06.489 --> 01:11:09.460
各地的公司都在尝试

01:11:08.590 --> 01:11:11.560
做一些

01:11:09.460 --> 01:11:13.330
我们的事情类型，这将是

01:11:11.560 --> 01:11:16.870
如果有的话真的很棒

01:11:13.330 --> 01:11:21.160
关于什么的社区协议

01:11:16.870 --> 01:11:24.880
这些东西看起来如何，它们如何

01:11:21.160 --> 01:11:27.250
的形状使无论

01:11:24.880 --> 01:11:29.500
您碰巧的实际实现

01:11:27.250 --> 01:11:31.480
正在使用，您可以在其中对它们进行推理

01:11:29.500 --> 01:11:36.250
类似的方式，所以其中之一是

01:11:31.480 --> 01:11:41.520
这些是您在此处看到的属性

01:11:36.250 --> 01:11:43.540
通过HTTP发布我们也有一些

01:11:41.520 --> 01:11:45.489
弹簧集成仪表

01:11:43.540 --> 01:11:47.260
因此，如果您将邮件发送到队列，我们

01:11:45.489 --> 01:11:49.540
可以向您显示一些相关信息

01:11:47.260 --> 01:11:53.410
例如在这些跟踪中的消息

01:11:49.540 --> 01:11:56.350
在这里，我将采样所有

01:11:53.410 --> 01:11:59.800
另一个术语是采样频率

01:11:56.350 --> 01:12:01.690
您想要捕获这些数据， 

01:11:59.800 --> 01:12:03.910
我们说的是100％的时间

01:12:01.690 --> 01:12:05.290
您可以看到的数量

01:12:03.910 --> 01:12:07.330
这两个小电话的信息

01:12:05.290 --> 01:12:09.960
对，可能很多

01:12:07.330 --> 01:12:14.500
大量数据爆炸，因此您想要

01:12:09.960 --> 01:12:17.020
确定一些采样方式

01:12:14.500 --> 01:12:19.660
数据百分比或启用

01:12:17.020 --> 01:12:22.870
特别适合您或您的用户或

01:12:19.660 --> 01:12:24.340
特定的一组用户或何时

01:12:22.870 --> 01:12:26.230
反正有人有问题

01:12:24.340 --> 01:12:28.630
何时有很多策略

01:12:26.230 --> 01:12:29.710
实际捕获这些数据与所有数据

01:12:28.630 --> 01:12:35.790
我们在这些中所做的时间

01:12:29.710 --> 01:12:35.790
样品所以这里首先好

01:12:46.720 --> 01:12:55.660
所以谁在谈论价值

01:12:52.720 --> 01:12:59.860
由Cloud Foundry路由器创建

01:12:55.660 --> 01:13:03.460
不支持的请求ID 

01:12:59.860 --> 01:13:04.690
现在，但我们先生

01:13:03.460 --> 01:13:07.930
坐在你前面

01:13:04.690 --> 01:13:09.850
与我们交谈，我们应该

01:13:07.930 --> 01:13:11.830
对，尤其应该在

01:13:09.850 --> 01:13:14.950
 Cloud Foundry我们应该有一些

01:13:11.830 --> 01:13:16.950
获取这是否是属性的方法

01:13:14.950 --> 01:13:19.480
就像我展示了这些HTTP属性

01:13:16.950 --> 01:13:21.220
所以你可以通过这些搜索

01:13:19.480 --> 01:13:23.920
属性，以便您可以通过

01:13:21.220 --> 01:13:25.870
那是否是实际的跟踪ID 

01:13:23.920 --> 01:13:27.820
还是应该您能够关联

01:13:25.870 --> 01:13:29.980
他们之间，如果不是，但我们应该

01:13:27.820 --> 01:13:32.530
肯定是在谈论它

01:13:29.980 --> 01:13:34.870
跟踪可能应该从

01:13:32.530 --> 01:13:38.010
路由器没有击中应用程序，所以

01:13:34.870 --> 01:13:38.010
那是另一回事

01:13:57.760 --> 01:14:04.309
是的，所以他的问题也许在

01:14:01.849 --> 01:14:06.590
在我的请求中点

01:14:04.309 --> 01:14:08.749
这不是一个单一的路径

01:14:06.590 --> 01:14:12.679
通过系统，有多个

01:14:08.749 --> 01:14:14.959
系统中的路径以及如何执行

01:14:12.679 --> 01:14:16.399
我们考虑到这一点，所以您的

01:14:14.959 --> 01:14:21.380
问题是正确的，他们将有

01:14:16.399 --> 01:14:24.409
相同的跟踪ID但不同的跨度ID 

01:14:21.380 --> 01:14:28.189
这个特定的UI可能无法处理

01:14:24.409 --> 01:14:30.919
情况完美，但我们想得到

01:14:28.189 --> 01:14:32.360
到了无论如何我们

01:14:30.919 --> 01:14:34.280
显示它们将像那样工作

01:14:32.360 --> 01:14:37.429
因为一旦你开始拥有

01:14:34.280 --> 01:14:41.479
不再不再具有消息权

01:14:37.429 --> 01:14:44.510
甚至同步权，我们都有一些

01:14:41.479 --> 01:14:47.269
在春季的演示

01:14:44.510 --> 01:14:50.419
云侦探仓库有一条消息

01:14:47.269 --> 01:14:52.489
样品，您可以在其中看到一些

01:14:50.419 --> 01:14:55.309
行动如此重大的问题，是的，我们

01:14:52.489 --> 01:14:58.510
绝对希望成为一流

01:14:55.309 --> 01:14:58.510
公民追查

01:15:35.909 --> 01:15:42.040
对不起，只是在解释说

01:15:38.349 --> 01:15:45.820
有时，这些粉丝人数众多

01:15:42.040 --> 01:15:49.300
系统可以达到100到200个跨度

01:15:45.820 --> 01:15:51.159
一丝痕迹，还有一些

01:15:49.300 --> 01:15:53.860
使用者介面中的便利设施

01:15:51.159 --> 01:16:25.290
在它的一小部分上，但是的，他们可以

01:15:53.860 --> 01:16:28.780
相当长，是的，所以绝对

01:16:25.290 --> 01:16:31.750
问题是我们能否进行追踪

01:16:28.780 --> 01:16:34.869
被放入日志，即使它是

01:16:31.750 --> 01:16:38.829
没有被运送到一些日志

01:16:34.869 --> 01:16:40.540
收集的地方，认为我们不

01:16:38.829 --> 01:16:42.940
这分钟有支持这项权利

01:16:40.540 --> 01:16:46.150
但这肯定看起来像

01:16:42.940 --> 01:16:49.210
您可能想做的是

01:16:46.150 --> 01:16:53.280
始终记录，但有时发送到

01:16:49.210 --> 01:16:53.280
您的跟踪收集系统

01:18:27.289 --> 01:18:32.119
所以对于那些听不到他的人

01:18:29.360 --> 01:18:34.099
描述它如何有用

01:18:32.119 --> 01:18:36.260
总是有样品但在Twitter 

01:18:34.099 --> 01:18:39.769
他来自哪里，他们节制了

01:18:36.260 --> 01:18:41.599
它以正确的速率而不是一个

01:18:39.769 --> 01:18:44.559
热熔器或类似的百分比

01:18:41.599 --> 01:18:53.289
如果我可以总结并缩小

01:18:44.559 --> 01:18:59.030
我认为还有其他很棒的问题

01:18:53.289 --> 01:19:01.489
当这到达我的网站时

01:18:59.030 --> 01:19:07.519
链接到中间，您将能够

01:19:01.489 --> 01:19:08.869
跟随那些链接到一些

01:19:07.519 --> 01:19:10.449
互联网上的材料

01:19:08.869 --> 01:19:13.489
我发现试图进行比较和对比

01:19:10.449 --> 01:19:18.139
一些发现和配置

01:19:13.489 --> 01:19:20.659
是的

01:19:18.139 --> 01:19:24.099
如果您还有其他问题

01:19:20.659 --> 01:19:24.099
我想我要继续前进

01:19:40.550 --> 01:19:49.970
所以他问是否有问题

01:19:46.310 --> 01:19:52.160
有不同的时钟时间，如果

01:19:49.970 --> 01:19:55.480
希望这是一个已解决的问题

01:19:52.160 --> 01:19:58.850
天花板不会跟随我们

01:19:55.480 --> 01:20:01.610
会说有尝试

01:19:58.850 --> 01:20:06.980
解决我不认为的问题

01:20:01.610 --> 01:20:11.360
完全解决了一件事就是

01:20:06.980 --> 01:20:15.680
每个跨度保持当地时间

01:20:11.360 --> 01:20:18.530
它甚至在经文中也被发送和接收

01:20:15.680 --> 01:20:23.120
日志文件，这样跨度就可以了

01:20:18.530 --> 01:20:26.870
与它们相关的时间戳

01:20:23.120 --> 01:20:28.760
您将能够使他们相对于

01:20:26.870 --> 01:20:32.050
彼此都对，这就是

01:20:28.760 --> 01:20:34.430
我们正在寻找正确的地方，因为

01:20:32.050 --> 01:20:38.270
特别是当你进入

01:20:34.430 --> 01:20:40.250
异步跟踪写一些消息

01:20:38.270 --> 01:20:44.030
开始不适合的

01:20:40.250 --> 01:20:48.980
很好的时机，所以试图来

01:20:44.030 --> 01:20:51.350
制定相对时间策略

01:20:48.980 --> 01:20:52.970
一定要在这个上加盖时间戳

01:20:51.350 --> 01:20:54.500
发生在这一个之前

01:20:52.970 --> 01:20:57.410
我不是真的一个概念

01:20:54.500 --> 01:21:00.080
提到的是父母跨度

01:20:57.410 --> 01:21:03.080
当您创建新跨度时，说您已经

01:21:00.080 --> 01:21:05.990
揭开序幕

01:21:03.080 --> 01:21:09.020
碰巧它说哦，我是我的父母

01:21:05.990 --> 01:21:12.410
这个家伙，所以有一点

01:21:09.020 --> 01:21:15.170
亲戚什么时候发生，即使他们

01:21:12.410 --> 01:21:17.030
时间戳重叠，因为您知道

01:21:15.170 --> 01:21:20.330
他是你的父母，他会

01:21:17.030 --> 01:21:22.190
即使有时间也要跟着你

01:21:20.330 --> 01:21:23.720
邮票不太正确，所以有

01:21:22.190 --> 01:21:28.480
做了一些工作，但这是

01:21:23.720 --> 01:21:28.480
尚未完全解决更多问题

01:21:42.800 --> 01:21:57.890
正确正确是是

01:22:38.510 --> 01:22:42.610
我确定

01:23:11.549 --> 01:23:26.879
是的，是的，所以他说

01:23:20.999 --> 01:23:29.749
您可以通过配置服务器

01:23:26.879 --> 01:23:33.959
默认情况下，您使用配置服务器来查找

01:23:29.749 --> 01:23:36.619
发现Netflix，默认值为

01:23:33.959 --> 01:23:40.939
您使用发现来查找的其他方式

01:23:36.619 --> 01:23:43.109
配置服务器，该功能仅

01:23:40.939 --> 01:23:45.689
专门用于配置服务器是

01:23:43.109 --> 01:23:49.379
目前仅在尤里卡可用

01:23:45.689 --> 01:23:52.909
是的，继续并在中记录问题

01:23:49.379 --> 01:23:52.909
是在控制台中使用的吗

01:23:59.530 --> 01:24:11.500
是的，我是说我喜欢我说我们必须

01:24:04.170 --> 01:24:14.920
我是的是我

01:24:11.500 --> 01:24:17.200
是的，那里有一个

01:24:14.920 --> 01:24:19.390
加上其他不太完全相同的东西

01:24:17.200 --> 01:24:24.490
在那里，祖尔的工作应该可以工作

01:24:19.390 --> 01:24:26.230
跨越所有这些功能区

01:24:24.490 --> 01:24:28.840
是我所缺少的东西

01:24:26.230 --> 01:24:32.130
除此之外，我们还不知道

01:24:28.840 --> 01:24:34.600
带来那个呃涡轮

01:24:32.130 --> 01:24:41.070
不适用于其他发现

01:24:34.600 --> 01:24:41.070
系统还有其他问题

01:24:50.850 --> 01:24:55.780
是的，就是这样，他提到

01:24:53.860 --> 01:25:00.060
勇敢的，这是我们使用的图书馆

01:24:55.780 --> 01:25:00.060
在春季班Luth给Zipkin写信

01:25:20.070 --> 01:25:27.040
不确定勇敢是否不可知

01:25:22.360 --> 01:25:28.690
您正在使用的框架，所以是的

01:25:27.040 --> 01:25:32.500
确实有一些核心库

01:25:28.690 --> 01:25:34.830
迁移到开放的Zipkin，所以我不能

01:25:32.500 --> 01:25:37.830
克里斯维护者叫什么名字

01:25:34.830 --> 01:25:37.830
是的

01:26:15.400 --> 01:26:18.990
是的，那是

01:26:29.330 --> 01:26:31.660
是

01:26:37.090 --> 01:26:42.430
是的，如果你想和我们聊天

01:26:39.820 --> 01:26:48.600
我们正在吸气至尊

01:26:42.430 --> 01:26:48.600
云并打开oking斜杠拉链

01:27:11.189 --> 01:27:15.199
我们还不知道

01:27:49.550 --> 01:27:56.690
是的，并与春天的云彩侦探

01:27:51.920 --> 01:27:58.550
我们的目标是对spring应用进行检测

01:27:56.690 --> 01:28:03.940
有仪器发生吗

01:27:58.550 --> 01:28:08.510
不管你下游

01:28:03.940 --> 01:28:10.520
跟踪解决方案恰好是正确的

01:28:08.510 --> 01:28:13.070
我们有Zipkin我们有日志

01:28:10.520 --> 01:28:15.710
但是我们当然可以玩

01:28:13.070 --> 01:28:19.280
很好，这就是我们想要得到的

01:28:15.710 --> 01:28:21.110
那个权利和阿德里安（Adrian）试图

01:28:19.280 --> 01:28:24.290
从开放中带动社区

01:28:21.110 --> 01:28:27.190
 Zipkin方面，只是一般的追踪

01:28:24.290 --> 01:28:29.090
与社区一起，他们正在

01:28:27.190 --> 01:28:31.550
顶峰，我不知道这叫什么

01:28:29.090 --> 01:28:34.220
在San举办寻人工作坊

01:28:31.550 --> 01:28:36.740
十月的弗朗西斯科

01:28:34.220 --> 01:28:40.420
来自世界各地的人们

01:28:36.740 --> 01:28:44.870
从Twitter到SoundCloud的社区

01:28:40.420 --> 01:28:48.880
其他人当然是关键的，但他们是

01:28:44.870 --> 01:28:48.880
谈论一般的追踪

01:29:02.969 --> 01:29:05.630
对

01:29:21.170 --> 01:29:24.170
对

01:29:33.810 --> 01:29:38.950
是的，就像我们可以来一些

01:29:36.270 --> 01:29:41.290
社区类型标准，无论

01:29:38.950 --> 01:29:43.510
有助于推理的实施

01:29:41.290 --> 01:29:47.890
有关实施过程中的这些事情

01:29:43.510 --> 01:29:49.270
好吧，我要说我已经做了你

01:29:47.890 --> 01:29:51.720
我转身后可以来问我问题

01:29:49.270 --> 01:29:51.720
我的麦克风关闭

01:29:59.710 --> 01:30:01.770
您

