WEBVTT
Kind: captions
Language: zh-Hans

00:00:10.060 --> 00:00:16.060
嗨，谢谢，我很高兴每个人都被编入

00:00:13.670 --> 00:00:18.680
在这里看到我的演讲

00:00:16.060 --> 00:00:21.260
调试和维护spring好

00:00:18.680 --> 00:00:24.440
应用我的名字叫格雷格转任务

00:00:21.260 --> 00:00:26.960
你可以在Twitter上关注我一点

00:00:24.440 --> 00:00:28.369
我的一些信息碰巧

00:00:26.960 --> 00:00:31.880
写一本关于学习 spring boot 的书

00:00:28.369 --> 00:00:33.440
去年下半年出来的，所以一些

00:00:31.880 --> 00:00:34.910
这些内容受我写的东西启发

00:00:33.440 --> 00:00:37.040
在那儿，所以我希望你能找到一些

00:00:34.910 --> 00:00:38.810
对那里感兴趣，如果您想

00:00:37.040 --> 00:00:41.030
听到有关任一代码的更新

00:00:38.810 --> 00:00:42.920
在那后面，但在喂养

00:00:41.030 --> 00:00:45.610
选票或其他您知道的技术资料

00:00:42.920 --> 00:00:45.610
我一定要报名

00:00:46.750 --> 00:00:51.160
我们在这里有一些链接，您可能

00:00:49.570 --> 00:00:52.899
想去看看是否要保留

00:00:51.160 --> 00:00:55.809
一些 Spring 的东西

00:00:52.899 --> 00:00:57.879
出现视频或清晰

00:00:55.809 --> 00:00:59.980
动作和东西或其他论坛

00:00:57.879 --> 00:01:03.729
但是我们今天要谈论的是

00:00:59.980 --> 00:01:05.379
正在调试启动应用，然后

00:01:03.729 --> 00:01:07.810
建立您知道一些有价值的支持

00:01:05.379 --> 00:01:10.030
适用于您的运营团队的工具

00:01:07.810 --> 00:01:13.390
经理为您的经理经理和

00:01:10.030 --> 00:01:15.610
诸如此类的其他事情，最重要的是

00:01:13.390 --> 00:01:19.600
有趣的是延迟Spring 可以做到这一点

00:01:15.610 --> 00:01:21.580
启动，因为我们在这里深入了解

00:01:19.600 --> 00:01:23.050
我这里有大约19张幻灯片，但大多数

00:01:21.580 --> 00:01:25.300
这次网络研讨会实际上是

00:01:23.050 --> 00:01:29.140
实时编码，或者您知道要运行的东西

00:01:25.300 --> 00:01:31.030
我的IDE知道如何使用它，但是我们

00:01:29.140 --> 00:01:33.700
即将开始讨论

00:01:31.030 --> 00:01:34.899
 spring boot 应用程序，你知道如果

00:01:33.700 --> 00:01:36.250
您一直在使用 spring boot 

00:01:34.899 --> 00:01:38.470
过去两年我肯定你会同意

00:01:36.250 --> 00:01:42.880
跟我说这些应用真的很漂亮

00:01:38.470 --> 00:01:44.799
很棒，其中有一些关键方面

00:01:42.880 --> 00:01:48.250
苏格兰威士忌的美丽应用

00:01:44.799 --> 00:01:50.830
把它变得强大起来

00:01:48.250 --> 00:01:52.599
在他们已经自动配置的账单上

00:01:50.830 --> 00:01:56.170
基于类路径的bean 

00:01:52.599 --> 00:01:58.629
设置将打开它的功能

00:01:56.170 --> 00:02:01.119
很容易取得财产和

00:01:58.629 --> 00:02:04.030
外化他们，甚至放在个人资料中

00:02:01.119 --> 00:02:06.369
具体属性，例如测试

00:02:04.030 --> 00:02:09.970
平台或生产或开发

00:02:06.369 --> 00:02:11.140
平台可以弯腰您的应用程序是

00:02:09.970 --> 00:02:14.770
需要

00:02:11.140 --> 00:02:17.260
像可运行的jar文件之类的东西是

00:02:14.770 --> 00:02:19.750
另一件事，然后启动能力

00:02:17.260 --> 00:02:22.300
预选协调库，让您

00:02:19.750 --> 00:02:23.890
知道东西可以一起工作

00:02:22.300 --> 00:02:25.810
像这样的更多东西是一些

00:02:23.890 --> 00:02:29.530
特征和引导是

00:02:25.810 --> 00:02:32.709
羊毛糖实际上是乔什（Josh）早就被捕

00:02:29.530 --> 00:02:34.150
在他张贴在一条消息中

00:02:32.709 --> 00:02:36.129
说用 spring boot 工作的时间

00:02:34.150 --> 00:02:40.269
就像与Spring 配对编程

00:02:36.129 --> 00:02:41.849
开发人员很好，我认为我们都同意

00:02:40.269 --> 00:02:45.159
 spring boot 真的很好

00:02:41.849 --> 00:02:46.150
在以下平台上构建应用程序的平台

00:02:45.159 --> 00:02:49.060
我们都需要做的一件事

00:02:46.150 --> 00:02:51.220
承认是迟早我们

00:02:49.060 --> 00:02:53.590
他们闯入的应用程序有麻烦

00:02:51.220 --> 00:02:55.480
一些时尚或其他，也许什么时候

00:02:53.590 --> 00:02:57.040
您正在尝试开始工作，而您

00:02:55.480 --> 00:02:59.920
也许还不太好

00:02:57.040 --> 00:03:00.490
想得对，否则您遇到了

00:02:59.920 --> 00:03:02.590
问题

00:03:00.490 --> 00:03:04.000
你试图弄清楚是什么

00:03:02.590 --> 00:03:06.040
是我写的代码吗？ 

00:03:04.000 --> 00:03:08.860
引导配置错误

00:03:06.040 --> 00:03:10.780
在这一点上，像自动

00:03:08.860 --> 00:03:12.790
配置的bean突然变成

00:03:10.780 --> 00:03:14.680
害怕，因为我们不知道

00:03:12.790 --> 00:03:16.750
不知道 Spring 做了什么

00:03:14.680 --> 00:03:19.330
我要做的是这意味着启动了吗

00:03:16.750 --> 00:03:23.350
在某些环境下我可以做什么

00:03:19.330 --> 00:03:25.890
您几年前就知道这里的选项

00:03:23.350 --> 00:03:28.180
Spring 框架介绍自动接线

00:03:25.890 --> 00:03:30.390
你知道很多人都害怕

00:03:28.180 --> 00:03:34.060
它，因为它似乎有点神奇

00:03:30.390 --> 00:03:35.800
但是随着时间的流逝，人们开始采用它

00:03:34.060 --> 00:03:37.870
对它的运作方式不感兴趣， 

00:03:35.800 --> 00:03:39.820
错误信息以及

00:03:37.870 --> 00:03:43.420
来自它使它非常有用

00:03:39.820 --> 00:03:46.360
技术，例如，你知道我

00:03:43.420 --> 00:03:48.580
始终使用自动接线

00:03:46.360 --> 00:03:50.800
类似的时尚 spring boot 有一些

00:03:48.580 --> 00:03:54.790
当我们在这个领域帮助您的东西

00:03:50.800 --> 00:03:58.240
谈论自动配置的bean，这样您

00:03:54.790 --> 00:04:00.430
知道你是否遇到了问题

00:03:58.240 --> 00:04:03.400
真的很高兴仰望什么 Spring 

00:04:00.430 --> 00:04:05.530
花花公子做了这种情况，为此

00:04:03.400 --> 00:04:08.080
我们有几个演示应用程序，我们要

00:04:05.530 --> 00:04:09.190
从一个开始，他们俩都

00:04:08.080 --> 00:04:11.590
做同样的事情，但他们将

00:04:09.190 --> 00:04:13.870
让我们看一下不同的地方

00:04:11.590 --> 00:04:17.470
引导给我们帮助我们解决这个问题

00:04:13.870 --> 00:04:19.150
问题，所以在进入演示模式之前

00:04:17.470 --> 00:04:21.640
我想描述一下这是什么

00:04:19.150 --> 00:04:23.590
小玩具应用程序是

00:04:21.640 --> 00:04:26.590
很小的应用程序及其

00:04:23.590 --> 00:04:29.620
模拟现场设备

00:04:26.590 --> 00:04:32.260
从以下位置报告警报状态和管道

00:04:29.620 --> 00:04:33.940
在左侧路由它们

00:04:32.260 --> 00:04:37.120
通过活动实体消息代理

00:04:33.940 --> 00:04:40.390
进入我们的活动处理中心

00:04:37.120 --> 00:04:42.580
在这种情况下，我们只是选择了

00:04:40.390 --> 00:04:45.910
列出了三个主机名

00:04:42.580 --> 00:04:47.620
将生成消息并将其发布

00:04:45.910 --> 00:04:49.090
然后在右侧

00:04:47.620 --> 00:04:51.330
消费者在另一方接收它们

00:04:49.090 --> 00:04:51.330
结束

00:04:53.380 --> 00:04:58.750
让我们进入演示模式，看看

00:04:55.240 --> 00:05:00.400
一些代码，所以我要把它拉出来

00:04:58.750 --> 00:05:03.220
这里的主题演讲，我要切换

00:05:00.400 --> 00:05:05.080
转到我的IDE，然后我要放

00:05:03.220 --> 00:05:08.070
这个东西进入演示模式，所以你

00:05:05.080 --> 00:05:08.070
可以看到

00:05:11.790 --> 00:05:18.540
好，所以我要在这里做些事

00:05:16.590 --> 00:05:20.280
我想在这里覆盖一些东西

00:05:18.540 --> 00:05:21.810
这是我的生成文件，我碰巧是

00:05:20.280 --> 00:05:24.090
使用Gradle，在这种情况下，我们

00:05:21.810 --> 00:05:29.610
使用 spring boot 一二三一二

00:05:24.090 --> 00:05:31.530
现在在Melissa列表中有3个

00:05:29.610 --> 00:05:33.290
依赖关系在顶部不是

00:05:31.530 --> 00:05:38.570
我需要申请的东西

00:05:33.290 --> 00:05:42.240
功能我有一个Spring 启动启动器

00:05:38.570 --> 00:05:44.610
这实际上带来了核心功能

00:05:42.240 --> 00:05:47.490
使用spring JMS，因为我们将

00:05:44.610 --> 00:05:49.500
同时进行发布和消费

00:05:47.490 --> 00:05:51.380
通过Jayma发送的消息，我们将使用

00:05:49.500 --> 00:05:54.800
像JMS这样的东西可以做到这一点

00:05:51.380 --> 00:05:56.910
最重要的是，我们正在使用ActiveMQ 

00:05:54.800 --> 00:05:59.010
现在您注意到所有三个

00:05:56.910 --> 00:06:00.240
这是一个好东西，我不喜欢

00:05:59.010 --> 00:06:01.830
必须提供版本号

00:06:00.240 --> 00:06:05.100
因为Spring Boot Gradle插件

00:06:01.830 --> 00:06:06.810
正在为我做这件事，很高兴知道

00:06:05.100 --> 00:06:08.790
在受支持的此版本中

00:06:06.810 --> 00:06:11.100
它实际上是ActiveMQ版本

00:06:08.790 --> 00:06:13.580
使用嵌入式经纪人模型，所以我不

00:06:11.100 --> 00:06:17.730
甚至不得不单独站起来

00:06:13.580 --> 00:06:20.790
我可以立即运行ActiveMQ实例

00:06:17.730 --> 00:06:24.870
在这里的盒子，但在这里下面有一个

00:06:20.790 --> 00:06:27.000
我现在添加的几个额外的位

00:06:24.870 --> 00:06:28.650
这不是我功能的一部分

00:06:27.000 --> 00:06:32.010
应用程序有时

00:06:28.650 --> 00:06:34.800
称为非功能性材料和

00:06:32.010 --> 00:06:37.860
一个是Spring 启动器

00:06:34.800 --> 00:06:40.320
它确实是为我服务的

00:06:37.860 --> 00:06:43.410
自动配置报告

00:06:40.320 --> 00:06:45.300
告诉我启动的所有规则

00:06:43.410 --> 00:06:47.640
在为我配置bean时

00:06:45.300 --> 00:06:50.040
然后另一件是

00:06:47.640 --> 00:06:56.270
实际上将其投放在我们的网页上

00:06:50.040 --> 00:07:00.740
这里需要Spring MVC Web Starter 

00:06:56.270 --> 00:07:03.420
我需要确保我有

00:07:00.740 --> 00:07:05.750
注释掉这个，因为我们还没准备好

00:07:03.420 --> 00:07:05.750
为此

00:07:08.400 --> 00:07:14.250
所以我要去这里，让我们

00:07:12.240 --> 00:07:16.800
启动这个应用程序，看看

00:07:14.250 --> 00:07:18.830
看看你怎么了，我们是什么

00:07:16.800 --> 00:07:18.830
在做

00:07:19.860 --> 00:07:21.919
您

00:07:22.620 --> 00:07:26.760
好吧，我现在在这里进行

00:07:24.480 --> 00:07:29.240
我要做的是暂停

00:07:26.760 --> 00:07:29.240
输出

00:07:29.710 --> 00:07:33.160
看看发生了什么，然后我们

00:07:31.420 --> 00:07:35.680
要打开一点代码

00:07:33.160 --> 00:07:37.840
只是看看它在做什么

00:07:35.680 --> 00:07:40.390
了解发生了什么，你知道

00:07:37.840 --> 00:07:45.060
我们正在Tomcat上运行此应用程序

00:07:40.390 --> 00:07:48.820
 8080像任何标准的Web应用程序一样

00:07:45.060 --> 00:07:50.530
在这里，我可以看到有一个你

00:07:48.820 --> 00:07:53.200
知道这里的这个小指标告诉我

00:07:50.530 --> 00:07:55.570
我们在VM本地主机上

00:07:53.200 --> 00:07:59.050
这是嵌入式apache的标志

00:07:55.570 --> 00:08:00.580
 activemq经纪人，在这里

00:07:59.050 --> 00:08:04.180
底部开始看到此流量

00:08:00.580 --> 00:08:09.160
出来看看那是哪里

00:08:04.180 --> 00:08:11.650
现在我要提取代码

00:08:09.160 --> 00:08:14.050
在前面的图中，我们在

00:08:11.650 --> 00:08:18.280
左边那边有

00:08:14.050 --> 00:08:20.980
你知道的三个主机名路由器

00:08:18.280 --> 00:08:23.910
这些，您可以在这里看到路由器101 

00:08:20.980 --> 00:08:25.990
复用器205和开关1143 

00:08:23.910 --> 00:08:28.680
本质上，这个小模拟器是

00:08:25.990 --> 00:08:31.510
假装为我带来流量

00:08:28.680 --> 00:08:33.670
它说的是计划的

00:08:31.510 --> 00:08:36.340
每1000个运行一次模拟

00:08:33.670 --> 00:08:38.400
毫秒，它是做什么的

00:08:36.340 --> 00:08:42.280
随机选择这些主机名之一

00:08:38.400 --> 00:08:44.110
在这里，它将随机选择

00:08:42.280 --> 00:08:47.580
警报的严重性

00:08:44.110 --> 00:08:50.230
上下降级或危及

00:08:47.580 --> 00:08:51.850
基本上让您知道组装

00:08:50.230 --> 00:08:53.590
警报事件，然后它要做的是

00:08:51.850 --> 00:08:56.890
在这里，我们有一个完整的JMS，所以它将

00:08:53.590 --> 00:09:00.850
只是把它运过来

00:08:56.890 --> 00:09:03.300
消息队列，所以这是左手

00:09:00.850 --> 00:09:05.740
该架构图的一面

00:09:03.300 --> 00:09:11.680
从产生流量

00:09:05.740 --> 00:09:15.010
现在在另一边我

00:09:11.680 --> 00:09:17.380
首先要有一个消费者

00:09:15.010 --> 00:09:19.540
消费者被设置为

00:09:17.380 --> 00:09:21.780
Spring 组件意味着您知道

00:09:19.540 --> 00:09:25.210
将被自动提取并

00:09:21.780 --> 00:09:27.760
激活，然后在这里我正在使用

00:09:25.210 --> 00:09:33.640
 Spring ，我相信最新的4.1，但它可以

00:09:27.760 --> 00:09:35.890
是JMS侦听器上的4.2新版，所以这是

00:09:33.640 --> 00:09:39.340
每当有消息我只需要说

00:09:35.890 --> 00:09:41.800
出现在这个频道运行事件中

00:09:39.340 --> 00:09:42.970
知道将有效载荷序列化为

00:09:41.800 --> 00:09:46.060
警报事件和

00:09:42.970 --> 00:09:48.160
现在在这种情况下进入这些方法

00:09:46.060 --> 00:09:50.050
只是将消息注销到磁盘，然后

00:09:48.160 --> 00:09:51.579
在我们可以看到的控制台之后

00:09:50.050 --> 00:09:54.009
在口号上

00:09:51.579 --> 00:09:55.509
但是你知道这是现实

00:09:54.009 --> 00:09:58.660
你可能有一个花哨的事件关联

00:09:55.509 --> 00:10:01.329
可以将流量传输到

00:09:58.660 --> 00:10:05.050
客户可以将警报与

00:10:01.329 --> 00:10:07.480
客户资源，您知道开放

00:10:05.050 --> 00:10:09.220
那种密封的票证和

00:10:07.480 --> 00:10:11.370
现在，我们只是在打印它

00:10:09.220 --> 00:10:11.370
出

00:10:17.720 --> 00:10:21.480
所以当它走到这里时，你知道它一直在

00:10:20.220 --> 00:10:25.610
持续在

00:10:21.480 --> 00:10:25.610
背景，那就是很好

00:10:28.230 --> 00:10:30.290
您

00:10:31.260 --> 00:10:36.960
我将要退出

00:10:35.030 --> 00:10:39.020
演示模式并转到我的

00:10:36.960 --> 00:10:39.020
浏览器

00:10:41.080 --> 00:10:48.400
您

00:10:42.760 --> 00:10:50.410
我想给你看一个，这就是我

00:10:48.400 --> 00:10:52.600
前面提到的自动配置

00:10:50.410 --> 00:10:55.420
报告其中之一将要崩溃

00:10:52.600 --> 00:10:57.940
我们在这里，但这就是结束

00:10:55.420 --> 00:11:01.090
 Spring提供的Web端点

00:10:57.940 --> 00:11:03.760
引导执行器的作用是什么

00:11:01.090 --> 00:11:06.190
收集所有要处理的规则

00:11:03.760 --> 00:11:10.030
重新启动这些是这些

00:11:06.190 --> 00:11:11.680
很多的条件bean定义

00:11:10.030 --> 00:11:14.080
他们是由你上课的路上所驱动

00:11:11.680 --> 00:11:16.750
在这里将它们分成两个阵营

00:11:14.080 --> 00:11:20.230
第一个是原来的规则

00:11:16.750 --> 00:11:22.270
是的，您知道规则可以发现事物

00:11:20.230 --> 00:11:25.000
像春季MVC在课堂上通过，所以

00:11:22.270 --> 00:11:26.860
打开一些Spring MVC配置

00:11:25.000 --> 00:11:30.070
这些在正匹配项下

00:11:26.860 --> 00:11:31.780
然后没有匹配的规则

00:11:30.070 --> 00:11:33.190
换句话说，不会踢和

00:11:31.780 --> 00:11:36.790
产生 Bean type 进入负面

00:11:33.190 --> 00:11:40.270
现在匹配，该报告实际上非常

00:11:36.790 --> 00:11:42.640
紧凑的JSON文档，但我还没有

00:11:40.270 --> 00:11:44.890
浏览器中的JSON视图插件

00:11:42.640 --> 00:11:48.310
使它可读，所以如果我全部缩小

00:11:44.890 --> 00:11:52.180
向下但只开放正面

00:11:48.310 --> 00:11:55.810
寻找类似ActiveMQ的东西

00:11:52.180 --> 00:11:58.870
我将鼠标悬停在此处以突出显示

00:11:55.810 --> 00:12:01.480
这是规则集之一

00:11:58.870 --> 00:12:03.250
 ActiveMQ自动配置以及何时

00:12:01.480 --> 00:12:05.800
看着这个，我可以看到它有两个

00:12:03.250 --> 00:12:08.530
条件可以满足此规则

00:12:05.800 --> 00:12:11.410
踢一个是依赖

00:12:08.530 --> 00:12:14.200
在课程路径中查找课程

00:12:11.410 --> 00:12:16.210
这种情况下寻找JMS连接

00:12:14.200 --> 00:12:18.120
工厂界面，也用于

00:12:16.210 --> 00:12:21.310
活跃的MQ连接工厂

00:12:18.120 --> 00:12:23.410
实现类，所以这仅适用

00:12:21.310 --> 00:12:26.800
本质上，如果您有活动和排队

00:12:23.410 --> 00:12:28.810
在您的上课路上，它也有一个

00:12:26.800 --> 00:12:31.300
有说的条件

00:12:28.810 --> 00:12:34.450
以缺少bean连接为条件

00:12:31.300 --> 00:12:36.790
工厂，这意味着仅此规则

00:12:34.450 --> 00:12:39.040
如果您未定义自己的项目，则会加入

00:12:36.790 --> 00:12:41.380
连接工厂，换句话说，如果

00:12:39.040 --> 00:12:43.240
你没有定义一个 spring boot 

00:12:41.380 --> 00:12:47.980
定义工厂可以链接的连接

00:12:43.240 --> 00:12:50.170
活跃的MQ但是，如果你想去

00:12:47.980 --> 00:12:52.540
让您定义自己的连接

00:12:50.170 --> 00:12:54.100
可以的工厂可以声明它

00:12:52.540 --> 00:12:55.960
让Spring Boot做的是

00:12:54.100 --> 00:12:58.450
本质上退缩而不是

00:12:55.960 --> 00:13:01.120
尽快接受，这样您就可以接受

00:12:58.450 --> 00:13:03.640
控制局势，在我

00:13:01.120 --> 00:13:05.140
认为 Spring 的退缩

00:13:03.640 --> 00:13:07.180
恩赐即将开始

00:13:05.140 --> 00:13:09.940
出现和下一代

00:13:07.180 --> 00:13:13.410
框架最新的力量框架

00:13:09.940 --> 00:13:16.140
扩展并响应开发人员的意图

00:13:13.410 --> 00:13:18.640
你知道在这里还有另外一个

00:13:16.140 --> 00:13:20.380
基于activemq的一种叫做activemq 

00:13:18.640 --> 00:13:22.080
连接工厂配置和

00:13:20.380 --> 00:13:27.370
这是要做的更多事情

00:13:22.080 --> 00:13:29.529
我要去的连接工厂

00:13:27.370 --> 00:13:32.589
现在就在这里上面

00:13:29.529 --> 00:13:35.620
这些恰好是更多的东西

00:13:32.589 --> 00:13:37.870
当我们找到一个停顿点的时候

00:13:35.620 --> 00:13:39.700
在这里，屏幕可以在那里赶上

00:13:37.870 --> 00:13:41.620
在这里定居，也与JMS有联系

00:13:39.700 --> 00:13:44.920
你知道活跃在队列中不是唯一的

00:13:41.620 --> 00:13:46.899
 JMS经纪人，所以我们有一套自动

00:13:44.920 --> 00:13:48.570
基于代理和队列的配置

00:13:46.899 --> 00:13:54.490
但是另一个完全致力于

00:13:48.570 --> 00:13:55.300
 Spring JMS设置，您知道这一点

00:13:54.490 --> 00:13:58.089
在这里

00:13:55.300 --> 00:14:01.110
 JMS自动配置磅

00:13:58.089 --> 00:14:04.510
模板，但这是如果没有

00:14:01.110 --> 00:14:10.080
类型为JMS模板的Google春季版

00:14:04.510 --> 00:14:12.640
现在为您创建一个以上

00:14:10.080 --> 00:14:16.209
封闭类，只说得好

00:14:12.640 --> 00:14:19.630
如果我们可以在以下位置检测到JMS模板，则适用

00:14:16.209 --> 00:14:24.070
类路径，以便它可以看到JMS模板

00:14:19.630 --> 00:14:28.270
在类路径上，如果看到

00:14:24.070 --> 00:14:30.580
连接工厂梁定义和

00:14:28.270 --> 00:14:32.620
在这里它将生成一个JMS 

00:14:30.580 --> 00:14:35.100
模板，除非您定义自己的JMS 

00:14:32.620 --> 00:14:35.100
模板

00:14:36.940 --> 00:14:40.990
关于如何解码的一点点

00:14:38.500 --> 00:14:43.810
此自动配置报告是什么

00:14:40.990 --> 00:14:48.640
显示让我回到演示文稿

00:14:43.810 --> 00:14:50.620
 IDE的模式，让我继续上拉

00:14:48.640 --> 00:14:55.480
 Jamis自动配置类

00:14:50.620 --> 00:14:58.090
我们只是在谈论所以在这里我们

00:14:55.480 --> 00:15:00.370
可以真正读到这些相同的东西

00:14:58.090 --> 00:15:03.340
我们去的地方

00:15:00.370 --> 00:15:05.170
所以这说这个配置和

00:15:03.340 --> 00:15:06.970
除非他们能看到JMS，否则不会介入

00:15:05.170 --> 00:15:10.860
在类路径上翻译

00:15:06.970 --> 00:15:10.860
有一个梁式连接工厂

00:15:12.160 --> 00:15:17.860
在这下面是那束光

00:15:15.190 --> 00:15:19.629
在这里说没有JMS 

00:15:17.860 --> 00:15:21.970
你知道这束光缺少Janus 

00:15:19.629 --> 00:15:26.040
模板Ike梁，它将定义一个

00:15:21.970 --> 00:15:27.940
我们，所以你知道这给了我们

00:15:26.040 --> 00:15:29.680
从本质上讲，这是在告诉我们

00:15:27.940 --> 00:15:31.600
这里有选项，我们可以插入自己的

00:15:29.680 --> 00:15:33.310
连接因子，如果我们想要的话

00:15:31.600 --> 00:15:36.220
退出那一部分，我们可以插入我们的

00:15:33.310 --> 00:15:41.649
自己的JMS模板（如果我们希望Google返回） 

00:15:36.220 --> 00:15:43.600
在那部分上，这是一个程度

00:15:41.649 --> 00:15:46.569
进去做事情的粒度，但是

00:15:43.600 --> 00:15:50.800
另一个选择是 spring boot 

00:15:46.569 --> 00:15:52.569
有这个惊人的财产支持，所以

00:15:50.800 --> 00:15:54.459
有时您不想覆盖

00:15:52.569 --> 00:15:58.500
整个光束的定义只是为了改变

00:15:54.459 --> 00:15:58.500
其中一个参数

00:16:00.020 --> 00:16:12.020
现在我要做的是退出

00:16:06.350 --> 00:16:15.649
到目前为止的演示模式

00:16:12.020 --> 00:16:19.490
嵌入式运行此应用程序

00:16:15.649 --> 00:16:20.029
经纪人哦，好的，我已经停止了

00:16:19.490 --> 00:16:24.620
是的，我做到了

00:16:20.029 --> 00:16:29.380
没事没办法，这是错误的

00:16:24.620 --> 00:16:29.380
到另一个

00:16:30.160 --> 00:16:34.230
我要在这里停止这个实例

00:16:34.390 --> 00:16:45.200
所以让我等待，对不起Mia重新启动它

00:16:42.110 --> 00:16:47.960
退出全屏模式，然后开始

00:16:45.200 --> 00:16:49.370
看一下属性设置，所以我们只是

00:16:47.960 --> 00:16:52.130
看了一个自动配置报告

00:16:49.370 --> 00:16:53.779
我们看到了一些踢进我们的东西

00:16:52.130 --> 00:16:55.730
去了，能够真正地抬头

00:16:53.779 --> 00:17:00.200
凭借强大的功能，代码是什么

00:16:55.730 --> 00:17:05.600
开源，现在我们可以实际看一下

00:17:00.200 --> 00:17:07.370
另一个端点配置道具，如果我

00:17:05.600 --> 00:17:10.459
搜索我将要找到的activemq 

00:17:07.370 --> 00:17:13.240
这一个在这里这只是财产

00:17:10.459 --> 00:17:15.490
设置，我们有能力覆盖

00:17:13.240 --> 00:17:17.660
您会注意到前缀是spring 

00:17:15.490 --> 00:17:19.760
 ActiveMQ，然后在下面是一个列表

00:17:17.660 --> 00:17:22.430
具有独立财产，因此我们可以使用

00:17:19.760 --> 00:17:26.089
 Spring 的ActiveMQ，如果您看一下

00:17:22.430 --> 00:17:27.949
内存中的最后一个属性表示正确，但

00:17:26.089 --> 00:17:29.930
告诉我们我们有选择权

00:17:27.949 --> 00:17:31.490
可以覆盖内存中的一个并说

00:17:29.930 --> 00:17:32.870
不，我不想使用我想要的内存

00:17:31.490 --> 00:17:34.670
了解很多经纪人让我

00:17:32.870 --> 00:17:37.490
切换这是一个机会

00:17:34.670 --> 00:17:39.380
如果我们正在运行

00:17:37.490 --> 00:17:41.660
独立经纪人，它在

00:17:39.380 --> 00:17:43.490
不同的URL可能是非标准的URL 

00:17:41.660 --> 00:17:47.900
我们可以插入，我们可以插入

00:17:43.490 --> 00:17:53.150
其他设置以覆盖它，所以在此

00:17:47.900 --> 00:17:57.370
万一我要停止应用程序，我们去我的

00:17:53.150 --> 00:18:01.179
为此，我们回到演示模式

00:17:57.370 --> 00:18:01.179
保持可读性

00:18:05.770 --> 00:18:16.350
在这里打开它，这就是我要做的

00:18:10.330 --> 00:18:22.180
将这个属性更改为false， 

00:18:16.350 --> 00:18:25.590
这一年你需要做的检查

00:18:22.180 --> 00:18:25.590
我正在运行ActiveMQ 

00:18:27.100 --> 00:18:31.899
好的，斯塔诺确保它的情绪低落

00:18:30.250 --> 00:18:33.789
然后重新启动它，所以这里是

00:18:31.899 --> 00:18:37.570
我要在其中运行单独的活动

00:18:33.789 --> 00:18:42.429
 NQ独立服务器，所以现在如果我启动

00:18:37.570 --> 00:18:45.700
这个东西就这样

00:18:42.429 --> 00:18:48.120
之前已经做了，所以这将开始

00:18:45.700 --> 00:18:48.120
东西

00:19:03.750 --> 00:19:10.590
然后点击一长条就可以了

00:19:08.730 --> 00:19:12.240
我们看到一些动作，我们走吧，我们走吧

00:19:10.590 --> 00:19:17.789
返回并查看该属性设置

00:19:12.240 --> 00:19:20.759
我们刚才看到的，我们可以看到

00:19:17.789 --> 00:19:22.679
记忆力下降，这说明了什么

00:19:20.759 --> 00:19:25.440
我们是它不再使用

00:19:22.679 --> 00:19:30.110
记忆设置，如果我回头看

00:19:25.440 --> 00:19:30.110
在此处以演示模式控制台

00:19:31.550 --> 00:19:35.450
如果我暂停让我暂停此输出

00:19:34.130 --> 00:19:37.580
并回到起点

00:19:35.450 --> 00:19:39.500
发射你知道我们可以看到相同的

00:19:37.580 --> 00:19:42.260
 Tomcat在端口上运行的问题

00:19:39.500 --> 00:19:44.900
 8080但如果我朝下看同一区域

00:19:42.260 --> 00:19:47.900
在我消失之前看到的这里

00:19:44.900 --> 00:19:52.400
连接到VM ​​localhost的

00:19:47.900 --> 00:19:55.190
嵌入式内存指示器

00:19:52.400 --> 00:19:57.580
 activemq经纪人，所以相反，我们可以告诉

00:19:55.190 --> 00:20:02.000
它正在与我们的外部经纪人交谈

00:19:57.580 --> 00:20:04.370
而且只有一个属性

00:20:02.000 --> 00:20:09.370
设定变更，我们得以进入

00:20:04.370 --> 00:20:09.370
调整那里的设置，甚至

00:20:09.970 --> 00:20:14.930
它甚至更有价值，因为我们也得到了

00:20:12.500 --> 00:20:17.450
了解其他属性设置

00:20:14.930 --> 00:20:21.890
直到我们知道了，让我离开

00:20:17.450 --> 00:20:23.720
这个然后回去看看这里并指出

00:20:21.890 --> 00:20:25.670
你知道我们还有其他财产

00:20:23.720 --> 00:20:27.680
可以更改经纪人URL的密码

00:20:25.670 --> 00:20:29.330
我们可以配置它，如果我们需要一个

00:20:27.680 --> 00:20:32.060
集合的连接不是

00:20:29.330 --> 00:20:33.830
在生产中经常推荐的案例

00:20:32.060 --> 00:20:36.140
知道是否定义用户参数

00:20:33.830 --> 00:20:39.370
经纪人的安全所有这些都可以

00:20:36.140 --> 00:20:43.010
通过可注射属性配置

00:20:39.370 --> 00:20:45.680
现在可能出现的一个问题是

00:20:43.010 --> 00:20:48.290
我可以去这有什么好处

00:20:45.680 --> 00:20:50.540
有关的参考文件

00:20:48.290 --> 00:20:54.140
 spring boot 在这里，你知道做一些

00:20:50.540 --> 00:20:55.640
寻找找出像好吧

00:20:54.140 --> 00:20:57.110
这就是为什么这告诉我

00:20:55.640 --> 00:20:59.900
我在这里需要知道的一切，为什么

00:20:57.110 --> 00:21:01.880
我需要经历所有这些吗？ 

00:20:59.900 --> 00:21:03.230
搜索您进一步了解的

00:21:01.880 --> 00:21:06.650
我可以找到其他文件

00:21:03.230 --> 00:21:08.570
属性设置就在这里

00:21:06.650 --> 00:21:10.220
风险，那就是你知道

00:21:08.570 --> 00:21:12.890
文件很好，但有时

00:21:10.220 --> 00:21:14.780
文件和敌人的版本

00:21:12.890 --> 00:21:16.340
您正在使用的可能与

00:21:14.780 --> 00:21:18.050
彼此可能已经过时了

00:21:16.340 --> 00:21:20.560
可能看错了文件，并且

00:21:18.050 --> 00:21:23.090
文件永远不能做的一件事

00:21:20.560 --> 00:21:24.800
适应是人们开始

00:21:23.090 --> 00:21:28.540
用编写第三方库

00:21:24.800 --> 00:21:30.890
内置的springle自动配置

00:21:28.540 --> 00:21:33.650
别人的属性设置不是

00:21:30.890 --> 00:21:36.140
会浏览这些文件，但我可以

00:21:33.650 --> 00:21:38.330
向您保证任何自动配置的规则

00:21:36.140 --> 00:21:40.100
将会显示出来，并且所有的配置

00:21:38.330 --> 00:21:42.020
报告和任何财产，无论是

00:21:40.100 --> 00:21:44.090
从 spring boot 或其他人的

00:21:42.020 --> 00:21:46.000
模块肯定会显示在这里

00:21:44.090 --> 00:21:48.080
我想你会知道吗

00:21:46.000 --> 00:21:51.470
鼓励人们实际使用

00:21:48.080 --> 00:21:53.090
进行关键设置的类似方法

00:21:51.470 --> 00:21:55.450
并通过财产外部化

00:21:53.090 --> 00:21:55.450
设定

00:21:56.710 --> 00:22:02.100
这样我们就可以更轻松地进行管理

00:21:59.260 --> 00:22:02.100
应用领域

00:22:07.260 --> 00:22:17.770
好吧，现在又是另一段代码

00:22:12.820 --> 00:22:20.400
我想到目前为止在这里看

00:22:17.770 --> 00:22:22.450
我们已经讨论过自动配置

00:22:20.400 --> 00:22:25.150
报告，然后我们也谈到了

00:22:22.450 --> 00:22:27.850
配置设置还有另一个

00:22:25.150 --> 00:22:31.210
你们当中有些人知道非功能性功能

00:22:27.850 --> 00:22:37.270
食物带来健康

00:22:31.210 --> 00:22:39.520
检查现在 Spring 的恩赐带有

00:22:37.270 --> 00:22:41.860
内置基本上向上/向下检查

00:22:39.520 --> 00:22:44.410
基本上是在应用运行时

00:22:41.860 --> 00:22:47.410
可以大大提高健康水平， 

00:22:44.410 --> 00:22:50.350
消息，您实际上可以编写自定义

00:22:47.410 --> 00:22:52.510
健康检查去询问钥匙

00:22:50.350 --> 00:22:55.390
系统的各个部分，然后返回

00:22:52.510 --> 00:22:58.840
结果返回到Spring Boot Actuator

00:22:55.390 --> 00:23:01.300
它会出现在这个地方

00:22:58.840 --> 00:23:03.910
我想写一张支票做的情况

00:23:01.300 --> 00:23:07.600
确保ActiveMQ代理已启动并且

00:23:03.910 --> 00:23:09.760
运行这样做，我需要声明

00:23:07.600 --> 00:23:12.010
在这种情况下，我要拥有它

00:23:09.760 --> 00:23:16.330
通过Spring 自动接线拾取

00:23:12.010 --> 00:23:18.280
成分银行注释情绪

00:23:16.330 --> 00:23:24.430
Spring 箱执行器健康指示器

00:23:18.280 --> 00:23:26.830
现在可以识别它的界面

00:23:24.430 --> 00:23:29.140
做我的检查，我需要在JMS上进行处理

00:23:26.830 --> 00:23:33.310
连接工厂，所以我在这里使用

00:23:29.140 --> 00:23:36.130
经过良好测试的构造函数注入

00:23:33.310 --> 00:23:38.020
自动接线，这样当

00:23:36.130 --> 00:23:39.940
组件由自动创建

00:23:38.020 --> 00:23:41.890
Spring 依赖注入

00:23:39.940 --> 00:23:44.590
容器，它将给我一份副本

00:23:41.890 --> 00:23:46.540
然后当我实际连接工厂

00:23:44.590 --> 00:23:48.580
来做健康检查

00:23:46.540 --> 00:23:52.780
基本上会尝试执行此呼叫

00:23:48.580 --> 00:23:54.430
工厂创建连接，所以如果不是

00:23:52.780 --> 00:23:57.040
能够建立联系，他们会抛出

00:23:54.430 --> 00:24:00.520
 JMS异常，在这种情况下，我可以

00:23:57.040 --> 00:24:05.320
返回状态并附带一份

00:24:00.520 --> 00:24:07.510
但是，如果此检查有效

00:24:05.320 --> 00:24:09.310
很好，我可以退还

00:24:07.510 --> 00:24:11.920
在这种情况下，我可以选择替代消息

00:24:09.310 --> 00:24:15.220
返回状态更新消息，我可以

00:24:11.920 --> 00:24:16.990
在这种情况下可以详细介绍

00:24:15.220 --> 00:24:18.760
返回状态，您可以添加为

00:24:16.990 --> 00:24:19.740
您想要描述的许多属性

00:24:18.760 --> 00:24:22.090
您的城市

00:24:19.740 --> 00:24:23.890
对于这个，我只有一个文本

00:24:22.090 --> 00:24:27.940
消息，所以经纪人是

00:24:23.890 --> 00:24:31.030
有时成功地达到了这些

00:24:27.940 --> 00:24:33.430
状态消息的人

00:24:31.030 --> 00:24:35.080
 IP地址或

00:24:33.430 --> 00:24:38.190
他们可能会像Kate这样的用户名

00:24:35.080 --> 00:24:42.600
系统在哪个用户下运行

00:24:38.190 --> 00:24:46.030
其中一些数据应被视为

00:24:42.600 --> 00:24:50.140
安全敏感数据，实际上

00:24:46.030 --> 00:24:52.420
你去的时候默认查一下健康

00:24:50.140 --> 00:24:53.880
您所获得的状态是向上还是向下

00:24:52.420 --> 00:24:56.500
消息告诉您是否

00:24:53.880 --> 00:24:58.270
系统启动时，它将所有

00:24:56.500 --> 00:25:01.900
消息，如果一切正常

00:24:58.270 --> 00:25:04.270
给你一揽子声明，但对于

00:25:01.900 --> 00:25:07.810
这个演示我想实际显示所有

00:25:04.270 --> 00:25:11.410
健康状况的所有方面

00:25:07.810 --> 00:25:13.390
一次所以我进去告诉它现在说

00:25:11.410 --> 00:25:17.830
健康数据不敏感设置它

00:25:13.390 --> 00:25:19.570
默认值并向我显示所有内容，所以让我们

00:25:17.830 --> 00:25:20.860
首先在

00:25:19.570 --> 00:25:22.420
浏览器，然后我们去看看

00:25:20.860 --> 00:25:24.750
在一些东西之间

00:25:22.420 --> 00:25:24.750
接口

00:25:29.100 --> 00:25:33.150
所以如果我去这个健康终点

00:25:31.410 --> 00:25:36.480
这是汇总消息吗

00:25:33.150 --> 00:25:39.330
在这里状态，如果那个其他标志

00:25:36.480 --> 00:25:42.690
不在那里，我只想

00:25:39.330 --> 00:25:44.910
除非用户没有，否则获取状态将为up 

00:25:42.690 --> 00:25:47.040
经批准的管理层进行身份验证

00:25:44.910 --> 00:25:49.830
用户ID和密码，您就可以

00:25:47.040 --> 00:25:52.970
获取详细信息

00:25:49.830 --> 00:25:56.760
看来启动还有另一个默认设置

00:25:52.970 --> 00:25:58.500
健康状况指示器在这里称为

00:25:56.760 --> 00:26:00.210
磁盘空间，然后我们看到

00:25:58.500 --> 00:26:02.190
我们刚才看了一下

00:26:00.210 --> 00:26:04.950
在这里，我们可以看到经纪人的身份

00:26:02.190 --> 00:26:07.770
在这种意义上成功达成目标

00:26:04.950 --> 00:26:11.010
你知道我花了不到十行

00:26:07.770 --> 00:26:12.360
代码也许写健康检​​查，所以

00:26:11.010 --> 00:26:14.310
你知道我们什么时候进入

00:26:12.360 --> 00:26:15.480
微服务之类的东西，以及

00:26:14.310 --> 00:26:17.310
您需要开始检查很多

00:26:15.480 --> 00:26:19.170
不同的点点滴滴，以确保

00:26:17.310 --> 00:26:22.820
一切都好起来，这变得非常

00:26:19.170 --> 00:26:22.820
简单的工具可以做到这一点

00:26:25.450 --> 00:26:30.220
现在为止谈论状态检查

00:26:28.750 --> 00:26:31.899
我们一直在做网络检查

00:26:30.220 --> 00:26:33.730
例如，这是终点

00:26:31.899 --> 00:26:35.769
当您的系统真的很方便

00:26:33.730 --> 00:26:38.740
管理员或您的运营团队来

00:26:35.769 --> 00:26:40.240
您，并说我需要ping您的应用程序， 

00:26:38.740 --> 00:26:42.610
告诉是否到了，你知道我需要放一个

00:26:40.240 --> 00:26:43.990
在此面板上的绿色框，然后按ek 

00:26:42.610 --> 00:26:47.110
您的应用程序是否正在运行，您说

00:26:43.990 --> 00:26:50.500
我的应用程序上的所有卷曲/健康状况

00:26:47.110 --> 00:26:52.690
它将告诉您故事，以便他们可以

00:26:50.500 --> 00:26:54.190
这样做，但有时人们使用其他

00:26:52.690 --> 00:26:57.669
其他机制

00:26:54.190 --> 00:26:59.950
一个例子是JMX JMX已经存在

00:26:57.669 --> 00:27:01.929
需很长时间

00:26:59.950 --> 00:27:04.769
我没有看到它被大量使用，但是在那里

00:27:01.929 --> 00:27:08.139
有些商店这样做

00:27:04.769 --> 00:27:12.850
所以Spring Boot Actuator实际上来了

00:27:08.139 --> 00:27:13.840
预先建立并与之交谈的支持让

00:27:12.850 --> 00:27:16.029
我确保我说的正确

00:27:13.840 --> 00:27:19.210
是的，所以我在这里启动了

00:27:16.029 --> 00:27:22.539
是J控制台J控制台是从

00:27:19.210 --> 00:27:24.730
现在有任何作业安装的包装盒

00:27:22.539 --> 00:27:27.370
我要指出的是J控制台

00:27:24.730 --> 00:27:29.260
我没有演示模式，所以

00:27:27.370 --> 00:27:32.110
您可以继续使用自己的意愿

00:27:29.260 --> 00:27:33.970
如果需要，可以在您的末端使用后缩放选项

00:27:32.110 --> 00:27:35.200
尝试放大并查看我在做什么

00:27:33.970 --> 00:27:36.490
我不是，我不会做很多事情

00:27:35.200 --> 00:27:40.149
我这里要指出的是

00:27:36.490 --> 00:27:43.750
如果我进入 Spring 就可以使用

00:27:40.149 --> 00:27:46.539
像这里的启动端点，我可以看到这个

00:27:43.750 --> 00:27:49.179
健康终点，因为您知道

00:27:46.539 --> 00:27:50.799
健康终点我看一下操作

00:27:49.179 --> 00:27:53.830
这里有一个“获取数据”按钮， 

00:27:50.799 --> 00:27:56.980
我想我要在这里扩大范围

00:27:53.830 --> 00:27:59.529
我可以看到与我相同的数据

00:27:56.980 --> 00:28:01.120
您在网页上看到的

00:27:59.529 --> 00:28:08.140
在后台放血页

00:28:01.120 --> 00:28:10.510
两个并排，所以我可以看到

00:28:08.140 --> 00:28:13.630
启动，我可以看到此ActiveMQ消息

00:28:10.510 --> 00:28:18.100
我可以看到浓汤空间，这不是

00:28:13.630 --> 00:28:19.990
必须采用相同的格式，但您

00:28:18.100 --> 00:28:21.940
知道你可以使用某人可以使用

00:28:19.990 --> 00:28:25.480
控制台来偷看还是因为

00:28:21.940 --> 00:28:27.250
通过JMX api的标准化API 

00:28:25.480 --> 00:28:31.960
可以编写Java应用程序直接连接

00:28:27.250 --> 00:28:34.000
到执行器jmx端点，您可以

00:28:31.960 --> 00:28:37.810
消耗这些数据并做任何你想做的

00:28:34.000 --> 00:28:40.690
想要它，让我结束

00:28:37.810 --> 00:28:43.440
指出我们所有的端点

00:28:40.690 --> 00:28:45.460
也在看这里

00:28:43.440 --> 00:28:48.430
我们看了自动配置

00:28:45.460 --> 00:28:51.610
报告，我可以做同样的数据

00:28:48.430 --> 00:28:54.820
操作，并在这里找到我提到的

00:28:51.610 --> 00:28:56.890
关于一份紧凑的报告，就是这样

00:28:54.820 --> 00:28:58.240
它塞入正面比赛

00:28:56.890 --> 00:29:02.080
和否定匹配，因此您必须

00:28:58.240 --> 00:29:06.100
去这里消化所有这些东西

00:29:02.080 --> 00:29:08.230
但是那里的所有材料

00:29:06.100 --> 00:29:11.530
我们在看配置

00:29:08.230 --> 00:29:15.760
属性报告该端的名称

00:29:11.530 --> 00:29:17.110
这样我们仍然可以看到所有内容

00:29:15.760 --> 00:29:19.090
在这里只是在另一个

00:29:17.110 --> 00:29:21.300
格式化这是您的另一种选择

00:29:19.090 --> 00:29:21.300
从中选择

00:29:31.080 --> 00:29:39.960
现在我要做的是

00:29:34.660 --> 00:29:39.960
跳回到此处播放的幻灯片

00:29:40.570 --> 00:29:46.390
所以我们快速回顾一下

00:29:44.800 --> 00:29:47.800
看着 Spring 的情绪促动器和什么

00:29:46.390 --> 00:29:49.750
它使我们开箱即用

00:29:47.800 --> 00:29:52.240
自动配置报告会告诉

00:29:49.750 --> 00:29:55.150
我们哪些规则与哪些规则不匹配

00:29:52.240 --> 00:29:57.000
匹配，我们有健康检查

00:29:55.150 --> 00:30:00.730
我们有机会插入自己的

00:29:57.000 --> 00:30:02.500
检查您知道我认为启动有几个

00:30:00.730 --> 00:30:03.760
像它会ping数据库和东西

00:30:02.500 --> 00:30:06.100
这样，但你知道我们写了

00:30:03.760 --> 00:30:09.790
 activemq经纪人检查一下物业

00:30:06.100 --> 00:30:12.100
设置，我们也有机会

00:30:09.790 --> 00:30:14.470
将自定义应用程序信息放在

00:30:12.100 --> 00:30:16.510
斜线信息我没有拉出来，但

00:30:14.470 --> 00:30:18.760
我们一会儿再做

00:30:16.510 --> 00:30:22.840
您可以点击您喜欢的文字信息

00:30:18.760 --> 00:30:25.000
知道您知道的URL支持网站

00:30:22.840 --> 00:30:26.350
你也可以看一下

00:30:25.000 --> 00:30:29.800
在参考文件中

00:30:26.350 --> 00:30:32.500
生成可以获取的属性数据

00:30:29.800 --> 00:30:34.390
像获取提交ID的版本

00:30:32.500 --> 00:30:37.780
该应用程序与人们一起使用

00:30:34.390 --> 00:30:40.530
可以抬起头，我的帽子坏了，这是一个

00:30:37.780 --> 00:30:40.530
我正在运行的版本

00:30:43.260 --> 00:30:46.560
你知道我是否去这个信息终点

00:30:44.850 --> 00:30:49.500
喜欢它说你知道这里的细节

00:30:46.560 --> 00:30:52.350
关于我的应用程序，您知道一个金块

00:30:49.500 --> 00:30:53.910
标签在这里是一个你知道的提交

00:30:52.350 --> 00:30:55.710
版本号应用程序的版本

00:30:53.910 --> 00:30:57.420
你在跑步，所以我不必

00:30:55.710 --> 00:30:59.730
浪费了三个小时才弄清楚

00:30:57.420 --> 00:31:01.260
您正在运行两个星期的旧版本

00:30:59.730 --> 00:31:11.930
和你看到的问题

00:31:01.260 --> 00:31:14.790
现在打补丁，我们谈论诸如

00:31:11.930 --> 00:31:16.140
调试的东西，你知道做

00:31:14.790 --> 00:31:17.970
能够弄清楚发生了什么事

00:31:16.140 --> 00:31:19.620
自动配置报告能够

00:31:17.970 --> 00:31:22.230
查看属性设置，以便我们可以

00:31:19.620 --> 00:31:24.270
覆盖并编写一些健康检查

00:31:22.230 --> 00:31:26.340
而我们开始切入

00:31:24.270 --> 00:31:29.040
是我们需要支持的功能

00:31:26.340 --> 00:31:32.070
运营团队和 spring boot 自带

00:31:29.040 --> 00:31:36.270
对某些关键的很多支持

00:31:32.070 --> 00:31:38.240
其中包括我们想要的指标

00:31:36.270 --> 00:31:42.720
收集有关发生的情况的数据

00:31:38.240 --> 00:31:44.190
我们要去的不同时尚

00:31:42.720 --> 00:31:48.690
切换到稍有改动的版本

00:31:44.190 --> 00:31:52.760
演示的相同问题，但

00:31:48.690 --> 00:31:56.780
我将停止此实例的运行

00:31:52.760 --> 00:31:56.780
好吧，把它关掉

00:31:57.570 --> 00:32:01.820
出来了，我要结束那个

00:31:59.280 --> 00:32:05.360
一旦我不偶然地走到尽头

00:32:01.820 --> 00:32:08.100
让我回到演示模式

00:32:05.360 --> 00:32:10.550
只显示我的意思让我们

00:32:08.100 --> 00:32:10.550
看她

00:32:11.840 --> 00:32:17.990
好吧，基本上看一样

00:32:14.530 --> 00:32:20.210
消费者使用相同的代码

00:32:17.990 --> 00:32:23.330
该架构图的右侧

00:32:20.210 --> 00:32:27.020
这消耗了团队的信息

00:32:23.330 --> 00:32:29.510
通过DMS，但是我们

00:32:27.020 --> 00:32:32.510
通过构造函数在这里介绍

00:32:29.510 --> 00:32:36.740
注射是Spring Boot Actuator

00:32:32.510 --> 00:32:38.120
柜台服务有一个仓库

00:32:36.740 --> 00:32:42.140
收集诸如

00:32:38.120 --> 00:32:44.210
柜台计价器

00:32:42.140 --> 00:32:47.600
你在增加计数器吗

00:32:44.210 --> 00:32:48.860
可能是一个选择

00:32:47.600 --> 00:32:51.700
增加了更多，但你

00:32:48.860 --> 00:32:54.950
可以增加和减少计数器

00:32:51.700 --> 00:32:57.380
基本上是因为这是自动连线

00:32:54.950 --> 00:32:58.670
我要你知道我不知道

00:32:57.380 --> 00:33:00.530
必须实际创建这个存在

00:32:58.670 --> 00:33:04.040
Spring Boot Actuator继续前进， 

00:33:00.530 --> 00:33:06.140
为我创建它，所以在这里

00:33:04.040 --> 00:33:08.450
与之前使用的代码相同

00:33:06.140 --> 00:33:10.370
你知道处理事件，但是

00:33:08.450 --> 00:33:14.360
现在我要在这里添加几个步骤

00:33:10.370 --> 00:33:16.280
并说增加这个指标

00:33:14.360 --> 00:33:19.460
我正在定义一个指标

00:33:16.280 --> 00:33:20.930
消息总点消耗，因此每

00:33:19.460 --> 00:33:24.460
我收到的消息将导致

00:33:20.930 --> 00:33:28.250
主持人，我也在定义另一个

00:33:24.460 --> 00:33:31.030
反击这只是消息，但它

00:33:28.250 --> 00:33:33.590
指向实际事件的主机名

00:33:31.030 --> 00:33:36.110
以这种方式食用它们将需要

00:33:33.590 --> 00:33:39.890
邮件计数并在它们之间分配

00:33:36.110 --> 00:33:45.520
主机名，并将其制成表格

00:33:39.890 --> 00:33:45.520
我要暂停一下

00:33:46.650 --> 00:33:55.830
出色的懈怠不打扰我们

00:33:49.890 --> 00:33:57.510
好的，所以这就是

00:33:55.830 --> 00:34:00.660
右边，我们要数一下

00:33:57.510 --> 00:34:03.180
现在消耗掉，让我们看看左侧

00:34:00.660 --> 00:34:06.270
这个模拟器的侧面

00:34:03.180 --> 00:34:09.030
您知道我有顶部的交通帮助

00:34:06.270 --> 00:34:10.080
另一个柜台服务对象，我

00:34:09.030 --> 00:34:13.040
知道我将其插入构造函数

00:34:10.080 --> 00:34:13.040
叫这里

00:34:14.820 --> 00:34:19.630
在底部，你知道我们有

00:34:17.620 --> 00:34:21.790
这是我们一直以来的代码

00:34:19.630 --> 00:34:23.770
通过JMS或JMS发送消息

00:34:21.790 --> 00:34:26.350
寺庙，但这里增加了一对

00:34:23.770 --> 00:34:30.460
生产上的增量操作

00:34:26.350 --> 00:34:32.560
一边，所以这里我们有消息总点

00:34:30.460 --> 00:34:36.270
生产，然后我们也做同样的事情

00:34:32.560 --> 00:34:36.270
按主机名划分

00:34:44.310 --> 00:34:56.270
好吧，我在这里设置让我们开火

00:34:47.520 --> 00:34:56.270
这个演示版本开始

00:34:56.300 --> 00:35:00.660
好吧，暂停您知道的输出

00:34:59.849 --> 00:35:02.520
扫视

00:35:00.660 --> 00:35:06.540
在Tomcat上运行的同类事物

00:35:02.520 --> 00:35:10.730
端口8080，您知道流量，我们看到了

00:35:06.540 --> 00:35:10.730
产生相同的模拟流量

00:35:12.730 --> 00:35:20.020
我们要做的是转到

00:35:15.530 --> 00:35:20.020
浏览器并查看指标端点

00:35:23.680 --> 00:35:28.340
所以在这里我们实际上有很多

00:35:26.180 --> 00:35:31.070
指标已由预先定义

00:35:28.340 --> 00:35:33.260
Spring 绿色的执行器，如果我们往下看

00:35:31.070 --> 00:35:36.369
在底部，我们可以看到自定义

00:35:33.260 --> 00:35:38.900
我们刚才在这里谈论的那些

00:35:36.369 --> 00:35:41.000
所以我们可以看到多路传输205 

00:35:38.900 --> 00:35:43.160
消耗并生产了路由器101 

00:35:41.000 --> 00:35:46.970
消耗以产生开关，然后

00:35:43.160 --> 00:35:49.099
您在这里知道的总数我们可以知道

00:35:46.970 --> 00:35:50.000
我们可以坐在那里刷新它，你知道

00:35:49.099 --> 00:35:53.119
还有一些你注意到的东西

00:35:50.000 --> 00:35:56.150
这里也有这个柜台

00:35:53.119 --> 00:35:58.730
就在这里告诉我们何时结束

00:35:56.150 --> 00:35:59.900
点指标，我们得到200个代码

00:35:58.730 --> 00:36:01.940
正在访问我们正在访问的网页

00:35:59.900 --> 00:36:04.460
看着舞台已经装了

00:36:01.940 --> 00:36:05.869
在这种情况下我们谈论了四次

00:36:04.460 --> 00:36:09.560
关于你知道的将其插入一些自定义

00:36:05.869 --> 00:36:13.190
计数器计数器递增和递减

00:36:09.560 --> 00:36:15.050
仪表有什么规格

00:36:13.190 --> 00:36:16.849
具有固定值，每次您

00:36:15.050 --> 00:36:20.090
用新的更新您更新的量规

00:36:16.849 --> 00:36:23.270
值，就像在看一个量表

00:36:20.090 --> 00:36:25.099
在任何时候都在的汽车上

00:36:23.270 --> 00:36:27.890
看一下什么是当前的读数

00:36:25.099 --> 00:36:31.430
那是我以每小时50英里的速度驾驶它

00:36:27.890 --> 00:36:33.020
我以每小时80公里的速度开车吗

00:36:31.430 --> 00:36:36.619
量规总是这样的事情

00:36:33.020 --> 00:36:38.630
更新自身的价值， 

00:36:36.619 --> 00:36:42.980
情况可能不那么感兴趣

00:36:38.630 --> 00:36:45.589
五分钟前是什么，所以你可以

00:36:42.980 --> 00:36:48.910
注入柜台服务和量具

00:36:45.589 --> 00:36:51.380
现在默认情况下会执行此操作的服务

00:36:48.910 --> 00:36:53.750
 Spring 的心情促动器正在写这篇

00:36:51.380 --> 00:36:57.580
内存实例和内部

00:36:53.750 --> 00:36:57.580
内存指标存储库

00:37:10.080 --> 00:37:16.870
所以基本上你知道它写

00:37:14.890 --> 00:37:18.640
在本地，出发非常方便

00:37:16.870 --> 00:37:20.620
但是当您遇到诸如

00:37:18.640 --> 00:37:22.330
部署到生产中并拥有四个

00:37:20.620 --> 00:37:23.680
您将拥有的每个实例

00:37:22.330 --> 00:37:27.190
实例将有自己的

00:37:23.680 --> 00:37:28.210
衡量我们开始的常见情况

00:37:27.190 --> 00:37:30.580
谈论十二个事实或

00:37:28.210 --> 00:37:33.580
您想要的应用程序和生产

00:37:30.580 --> 00:37:38.200
所有四个实例以键入此指标

00:37:33.580 --> 00:37:44.620
数据发送给第三方收集器

00:37:38.200 --> 00:37:48.940
这种情况下Spring 战利品执行器实际上

00:37:44.620 --> 00:37:51.370
有一个Redis指标存储库，因此

00:37:48.940 --> 00:37:54.880
在您的应用程序中可以

00:37:51.370 --> 00:37:59.260
去定义一个Redis度量库光束

00:37:54.880 --> 00:38:01.840
您可以通过个人资料来限定它

00:37:59.260 --> 00:38:03.880
在您进行云部署时

00:38:01.840 --> 00:38:05.440
 Redis指标存储库，而不是位于

00:38:03.880 --> 00:38:07.920
最终记忆一个然后全部

00:38:05.440 --> 00:38:12.210
实例将与此绑定

00:38:07.920 --> 00:38:12.210
您链接到它的Raddatz实例

00:38:16.960 --> 00:38:20.750
 Spring Boot具有度量标准存储库

00:38:19.490 --> 00:38:23.810
自动配置

00:38:20.750 --> 00:38:26.020
根据我们所学到的

00:38:23.810 --> 00:38:28.340
查看自动配置设置

00:38:26.020 --> 00:38:31.640
当我在这里看这个东西时

00:38:28.340 --> 00:38:33.410
那表示这是一个配置

00:38:31.640 --> 00:38:36.800
在这种情况下被定义为一个

00:38:33.410 --> 00:38:39.890
 Bean和公制内存中公制

00:38:36.800 --> 00:38:42.620
存储库，只有在以下情况下才会发生

00:38:39.890 --> 00:38:44.660
没有度量标准存储库，所以如果

00:38:42.620 --> 00:38:47.960
没有人可以找到任何度量标准存储库

00:38:44.660 --> 00:38:50.420
创建这个，所以如果你去创建一个Redis 

00:38:47.960 --> 00:38:53.630
部署到以下度量标准存储库

00:38:50.420 --> 00:38:55.690
云，它将使启动从此退出

00:38:53.630 --> 00:39:01.490
一个并使用另一个

00:38:55.690 --> 00:39:03.080
但还有其他机会

00:39:01.490 --> 00:39:05.120
 Tauri界面并加入

00:39:03.080 --> 00:39:07.850
并将您的资料写入数据库

00:39:05.120 --> 00:39:09.710
 Spring 的数据，或者你可以写出来

00:39:07.850 --> 00:39:12.280
通往某些外部第三方的渠道

00:39:09.710 --> 00:39:12.280
东西

00:39:15.000 --> 00:39:22.119
现在我想进入的最后一件事

00:39:17.410 --> 00:39:24.119
这就是我们所谓的崩溃支持崩溃

00:39:22.119 --> 00:39:26.859
一个有趣的名字崩溃是一个远程

00:39:24.119 --> 00:39:30.220
您可以链接的shell工具

00:39:26.859 --> 00:39:31.960
到您的应用程序，但是可以做到

00:39:30.220 --> 00:39:34.900
带有一些命令和指标

00:39:31.960 --> 00:39:38.619
和功能开箱即用，但 Spring 

00:39:34.900 --> 00:39:41.619
引导执行器增加了对编写驱动器的支持

00:39:38.619 --> 00:39:48.130
在这种情况下，我们将使用自己的命令

00:39:41.619 --> 00:39:51.700
写一些关闭的activemq 

00:39:48.130 --> 00:39:54.099
这个盒子在这里，所以这是整个

00:39:51.700 --> 00:39:57.700
我的我的activemq命令的代码

00:39:54.099 --> 00:39:59.680
要记录我要去的崩溃

00:39:57.700 --> 00:40:01.630
谈论这是做什么的，然后我们将

00:39:59.680 --> 00:40:03.520
实际上去登录崩溃

00:40:01.630 --> 00:40:06.099
附加到我们正在运行的应用程序，并

00:40:03.520 --> 00:40:10.390
看看这段代码看起来像什么

00:40:06.099 --> 00:40:13.180
用groovy编写，所以现在很简洁

00:40:10.390 --> 00:40:15.790
因为这些变成了我们无视的命令

00:40:13.180 --> 00:40:17.700
一些标准的Java格式

00:40:15.790 --> 00:40:20.319
通知类之类的规则全部小写

00:40:17.700 --> 00:40:21.430
那是因为这是主要的提交

00:40:20.319 --> 00:40:22.839
这将被注册为

00:40:21.430 --> 00:40:25.079
主要命令，我不想成为

00:40:22.839 --> 00:40:28.480
在命令行上输入大小写混合

00:40:25.079 --> 00:40:30.460
现在，每个这些功能定义

00:40:28.480 --> 00:40:32.380
你知道我会怎么称呼潜艇吗

00:40:30.460 --> 00:40:37.480
命令，所以我们要定义ping 

00:40:32.380 --> 00:40:40.180
和指标注意到它被标记为

00:40:37.480 --> 00:40:42.160
命令每个都可以访问

00:40:40.180 --> 00:40:45.579
调用上下文，这意味着我们可以

00:40:42.160 --> 00:40:48.400
查找我们需要的任何情况

00:40:45.579 --> 00:40:50.829
我们可以取回Spring bean 

00:40:48.400 --> 00:40:53.500
工厂，那是寻找的门票

00:40:50.829 --> 00:40:55.210
上任何Spring bean ，所以我在这里

00:40:53.500 --> 00:40:56.859
将获取连接工厂

00:40:55.210 --> 00:40:58.900
基本上做同样的检查

00:40:56.859 --> 00:41:00.700
仅在此处显示其他Java代码中

00:40:58.900 --> 00:41:03.280
它在做不同的事情

00:41:00.700 --> 00:41:06.069
创建连接呼叫，而不是

00:41:03.280 --> 00:41:09.040
返回一个健康指标

00:41:06.069 --> 00:41:12.220
返回一个纯字符串代理，但是

00:41:09.040 --> 00:41:16.660
如果抛出异常，则返回经纪人

00:41:12.220 --> 00:41:19.990
这里是我的另一个子命令

00:41:16.660 --> 00:41:21.970
指标，在这种情况下，我要

00:41:19.990 --> 00:41:25.390
取 bean 工厂并捞出

00:41:21.970 --> 00:41:26.740
指标存储库这是什么

00:41:25.390 --> 00:41:30.550
让我掌握一切

00:41:26.740 --> 00:41:32.890
在这种情况下，一次

00:41:30.550 --> 00:41:36.480
使用一些时髦的魔术

00:41:32.890 --> 00:41:39.160
找到所有度量对其进行迭代，然后

00:41:36.480 --> 00:41:42.430
指标均值以计数器开头

00:41:39.160 --> 00:41:45.550
点信息让我们只打印名称

00:41:42.430 --> 00:41:46.990
现在屏幕上的值是

00:41:45.550 --> 00:41:49.420
可能在这里使用常规查找

00:41:46.990 --> 00:41:52.290
如今的操作，我在此问候

00:41:49.420 --> 00:41:54.390
将这两个操作合并在一起，但是

00:41:52.290 --> 00:41:56.710
让我们搜索一下，这是一个不错的选择

00:41:54.390 --> 00:41:59.520
小写的有效方法

00:41:56.710 --> 00:41:59.520
支持命令

00:41:59.759 --> 00:42:02.729
我相信整个事情都在运行

00:42:00.569 --> 00:42:04.559
有人退出演示模式，然后去

00:42:02.729 --> 00:42:06.679
转到我的命令行并登录

00:42:04.559 --> 00:42:09.179
崩溃

00:42:06.679 --> 00:42:15.029
现在崩溃什么崩溃不会让我们

00:42:09.179 --> 00:42:17.579
通过SSH登录，默认为

00:42:15.029 --> 00:42:19.259
在机器上的端口2000上运行，我

00:42:17.579 --> 00:42:26.399
相信只有默认支持

00:42:19.259 --> 00:42:27.869
本地访问，现在我已登录，并且

00:42:26.399 --> 00:42:28.679
看着车祸，我要去

00:42:27.869 --> 00:42:30.419
输入帮助

00:42:28.679 --> 00:42:32.159
列出所有命令是做什么的

00:42:30.419 --> 00:42:34.829
那里有很多

00:42:32.159 --> 00:42:36.179
内置命令，您可以

00:42:34.829 --> 00:42:37.589
探索可能会有整个会议

00:42:36.179 --> 00:42:39.419
本身，但我只是去

00:42:37.589 --> 00:42:41.639
看看你命令我

00:42:39.419 --> 00:42:44.009
定义所以这里给我一个读出

00:42:41.639 --> 00:42:47.929
说得好，你有这个nitrox命令

00:42:44.009 --> 00:42:50.609
和ping命令，这是

00:42:47.929 --> 00:42:53.249
使用说明的文件架

00:42:50.609 --> 00:43:01.169
让我控制信息

00:42:53.249 --> 00:43:02.999
张贴在这里，所以你知道一个

00:43:01.169 --> 00:43:07.499
我能够把两个指标

00:43:02.999 --> 00:43:09.599
数据和健康数据全部集中到一个根

00:43:07.499 --> 00:43:10.789
命令ActiveMQ并获取读数

00:43:09.599 --> 00:43:15.109
这个东西

00:43:10.789 --> 00:43:18.149
老实说，如果我关闭经纪人，我

00:43:15.109 --> 00:43:20.429
可以回到这里做另一个你知道的事

00:43:18.149 --> 00:43:24.599
另一件事，现在它告诉我

00:43:20.429 --> 00:43:27.749
经纪人破产了，这是另一种方式

00:43:24.599 --> 00:43:31.709
为了获得读数，我开始活跃于

00:43:27.749 --> 00:43:33.949
排队备份，您可以检查一下

00:43:31.709 --> 00:43:33.949
备份

00:43:40.530 --> 00:43:45.820
因此，让我们回顾一下这些不起作用的

00:43:44.050 --> 00:43:47.560
我们拥有的功能

00:43:45.820 --> 00:43:49.750
配置报告我们写了一些

00:43:47.560 --> 00:43:52.510
我们申请的自定义健康检查

00:43:49.750 --> 00:43:55.900
信息自定义指标自定义崩溃

00:43:52.510 --> 00:43:58.090
实际上，命令混在一起

00:43:55.900 --> 00:44:01.720
甚至还有更多

00:43:58.090 --> 00:44:03.310
变成无功能的，那是

00:44:01.720 --> 00:44:05.980
好一点，我也许应该停止

00:44:03.310 --> 00:44:07.780
说我实际上没有功能

00:44:05.980 --> 00:44:09.849
向你坦白我从没真正喜欢过

00:44:07.780 --> 00:44:11.140
该表达式无功能，因为它

00:44:09.849 --> 00:44:15.220
听起来好像什么也没做

00:44:11.140 --> 00:44:16.750
对我来说东西很多，所以我更喜欢

00:44:15.220 --> 00:44:17.980
将这些东西称为op 

00:44:16.750 --> 00:44:21.490
支持功能而不是

00:44:17.980 --> 00:44:25.090
非功能性的功能，代码

00:44:21.490 --> 00:44:26.320
你写信来支持你知道你的

00:44:25.090 --> 00:44:28.300
业务功能不是您的

00:44:26.320 --> 00:44:33.220
业务需求，然后这些工具帮助

00:44:28.300 --> 00:44:35.080
支持运维一件事，你知道我们

00:44:33.220 --> 00:44:37.300
谈到像放

00:44:35.080 --> 00:44:39.609
在这个例子中，度量指标是

00:44:37.300 --> 00:44:42.010
非常简单，人为的

00:44:39.609 --> 00:44:44.859
发生两点消息通信

00:44:42.010 --> 00:44:46.960
所以你知道它是手工编码的

00:44:44.859 --> 00:44:48.580
我将使用的生产系统

00:44:46.960 --> 00:44:50.470
像Springs面向方面的东西

00:44:48.580 --> 00:44:53.020
编程支持和可能的写作

00:44:50.470 --> 00:44:54.609
一条忠告你知道的建议

00:44:53.020 --> 00:44:57.849
挖掘我想要的关键点

00:44:54.609 --> 00:45:00.220
收集有关数据的指标

00:44:57.849 --> 00:45:02.770
流过系统，然后您

00:45:00.220 --> 00:45:04.420
知道在生产环境中是否

00:45:02.770 --> 00:45:06.369
你知道我是否扩大到四个

00:45:04.420 --> 00:45:08.109
实例或十亿个实例

00:45:06.369 --> 00:45:10.300
想要将其绑定到速率a 

00:45:08.109 --> 00:45:13.150
 Redis服务并传递所有指标

00:45:10.300 --> 00:45:17.740
那里的解决方案，并能够

00:45:13.150 --> 00:45:20.890
去事实之后去分析它

00:45:17.740 --> 00:45:23.080
靴子和所有的支持

00:45:20.890 --> 00:45:25.030
建立这个非常简单有趣

00:45:23.080 --> 00:45:29.710
没有做很多低级的东西

00:45:25.030 --> 00:45:30.970
水暖，所以要包裹我的东西

00:45:29.710 --> 00:45:32.830
确实想提醒大家

00:45:30.970 --> 00:45:34.869
还有时间报名参加1/2 GX Spring 

00:45:32.830 --> 00:45:37.330
我想成为今年九月

00:45:34.869 --> 00:45:39.790
谈论春季逮捕

00:45:37.330 --> 00:45:41.290
数据需要超媒体和安全性，因此

00:45:39.790 --> 00:45:42.010
我鼓励大家注册成为

00:45:41.290 --> 00:45:45.040
可能

00:45:42.010 --> 00:45:47.140
并以此得出结论

00:45:45.040 --> 00:45:51.520
演示文稿，我们将看看Peters有没有

00:45:47.140 --> 00:45:52.240
对我们的问题肯定是一堆

00:45:51.520 --> 00:45:54.010
的东西进来

00:45:52.240 --> 00:45:55.900
观众很多人，我想我们我

00:45:54.010 --> 00:45:56.920
认为您在整个过程中都解决了这个问题

00:45:55.900 --> 00:45:58.870
演讲过程中，但我只是

00:45:56.920 --> 00:46:01.930
想要确保有几个人

00:45:58.870 --> 00:46:06.460
被您的VM冒号抛弃

00:46:01.930 --> 00:46:08.050
反斜杠反斜杠localhost和我们

00:46:06.460 --> 00:46:11.620
每个人都以为你指的是

00:46:08.050 --> 00:46:16.300
到内部activemq经纪人

00:46:11.620 --> 00:46:20.350
 URL语法是正确的

00:46:16.300 --> 00:46:23.050
那是活跃的nq的记录，但

00:46:20.350 --> 00:46:25.360
他们有经纪人网址，如果

00:46:23.050 --> 00:46:28.300
您使用的是嵌入式格式

00:46:25.360 --> 00:46:32.620
当他们指定嵌入式内部

00:46:28.300 --> 00:46:34.000
经纪人它将是M /// localhost但

00:46:32.620 --> 00:46:35.980
好的，那就是那样

00:46:34.000 --> 00:46:39.550
您正在学习的内存中标志

00:46:35.980 --> 00:46:42.150
是的，您进入并设置我们需要的

00:46:39.550 --> 00:46:45.490
当您触发器内存中标志时

00:46:42.150 --> 00:46:47.140
这就是它将配置的内容

00:46:45.490 --> 00:46:49.300
配置嵌入式代理和

00:46:47.140 --> 00:46:53.590
元代理是它使用的URL 

00:46:49.300 --> 00:46:56.440
以指示什么Springwood 

00:46:53.590 --> 00:46:58.270
如果您将旗帜倒下会怎样

00:46:56.440 --> 00:47:00.580
不要在内存中使用它将尝试

00:46:58.270 --> 00:47:02.230
猜他们应该连接到什么

00:47:00.580 --> 00:47:04.600
它将默认使用其标准端口

00:47:02.230 --> 00:47:06.910
数字，然后去那里寻找

00:47:04.600 --> 00:47:08.950
如果您站起来ActiveMQ而您

00:47:06.910 --> 00:47:11.860
使用非标准端口或已打开

00:47:08.950 --> 00:47:14.590
您不在的另一台机器不在

00:47:11.860 --> 00:47:17.470
本地主机，那么你将不得不图

00:47:14.590 --> 00:47:21.340
经纪人URL属性直接告诉

00:47:17.470 --> 00:47:25.710
它在那个实例得到的地方还可以

00:47:21.340 --> 00:47:32.050
谢谢，所以是的，这是一个问题

00:47:25.710 --> 00:47:36.940
让我们来看看有责任做的事卡罗尔

00:47:32.050 --> 00:47:38.320
卡罗尔问，让我们看看是的

00:47:36.940 --> 00:47:39.940
抱歉，这是她同样的问题

00:47:38.320 --> 00:47:41.190
她在问activemq的事情

00:47:39.940 --> 00:47:43.870
嗯

00:47:41.190 --> 00:47:45.550
克里斯托弗·史密斯（Christopher Smith）问是否可以

00:47:43.870 --> 00:47:48.760
该连接是否关闭

00:47:45.550 --> 00:47:50.500
自动我不确定

00:47:48.760 --> 00:47:54.000
特别是他在谈论

00:47:50.500 --> 00:47:57.790
那一刻大约是10:30 

00:47:54.000 --> 00:47:59.080
大约是10月26日，所以我觉得我们有点

00:47:57.790 --> 00:48:02.110
在那一点上失去了背景

00:47:59.080 --> 00:48:05.230
有点，但是我要负责所有这一切

00:48:02.110 --> 00:48:06.160
说你知道我的机制

00:48:05.230 --> 00:48:08.470
我在用吗

00:48:06.160 --> 00:48:10.720
 ActiveMQ是演示的方法

00:48:08.470 --> 00:48:12.819
我当时的一些配置设置

00:48:10.720 --> 00:48:15.220
终止并重新启动可能会

00:48:12.819 --> 00:48:19.990
并不是分离的最干净方法

00:48:15.220 --> 00:48:21.339
经纪人配置，所以您知道自己

00:48:19.990 --> 00:48:23.500
如果您要停止运行

00:48:21.339 --> 00:48:26.230
开始事情或关闭经纪人

00:48:23.500 --> 00:48:28.329
我在事物中间做的方式

00:48:26.230 --> 00:48:30.670
提出了我们是任何人的想法

00:48:28.329 --> 00:48:33.460
消息丢失在那里消息

00:48:30.670 --> 00:48:34.480
应该不会丢失你怎么办

00:48:33.460 --> 00:48:36.730
对冲

00:48:34.480 --> 00:48:38.500
经纪人让我失望的地方

00:48:36.730 --> 00:48:40.230
停止所有消息，直到经纪人

00:48:38.500 --> 00:48:42.460
备份所有这些都没有

00:48:40.230 --> 00:48:45.480
我正在演示的上下文

00:48:42.460 --> 00:48:48.880
您需要设计一些东西

00:48:45.480 --> 00:48:50.200
但你知道你是同一种

00:48:48.880 --> 00:48:52.390
要使用的东西

00:48:50.200 --> 00:48:54.130
 RabbitMQ，您必须进行评估

00:48:52.390 --> 00:48:55.809
东西或其他任何东西

00:48:54.130 --> 00:48:57.700
在您的应用程序中使用您可以找到

00:48:55.809 --> 00:49:01.059
您无需配置即可找到

00:48:57.700 --> 00:49:03.309
报告那个 Spring 的代码片段

00:49:01.059 --> 00:49:11.910
移动使用来激活自动方式

00:49:03.309 --> 00:49:14.529
给你很棒，好酷，让我们看看马克

00:49:11.910 --> 00:49:16.569
问嘿格雷格，您没有指定

00:49:14.529 --> 00:49:18.010
 Gradle文件中的版本号如何

00:49:16.569 --> 00:49:20.190
你知道图书馆的版本吗

00:49:18.010 --> 00:49:22.450
然后使用，您可以覆盖它吗

00:49:20.190 --> 00:49:24.010
转换可以使用的版本

00:49:22.450 --> 00:49:25.839
自动改变你的身后

00:49:24.010 --> 00:49:28.750
例如，如果新版本的

00:49:25.839 --> 00:49:33.460
库发布了，很棒

00:49:28.750 --> 00:49:36.460
问题um让我看看这里我喜欢

00:49:33.460 --> 00:49:40.299
使其脱离表现形式，因为它

00:49:36.460 --> 00:49:41.650
不会显示这些东西，但是我

00:49:40.299 --> 00:49:43.359
强调我想告诉你

00:49:41.650 --> 00:49:45.279
您在顶部看到的是

00:49:43.359 --> 00:49:47.349
我在哪里指定Spring Boot Gradle 

00:49:45.279 --> 00:49:53.380
插件，这个有一个版本号

00:49:47.349 --> 00:49:56.079
这是1.2.3.4 Spring Boot随附的

00:49:53.380 --> 00:49:58.329
所有这些的预定义版本集

00:49:56.079 --> 00:50:02.140
对于这些特定的依赖关系

00:49:58.329 --> 00:50:03.730
在这里，所以在我的IDE中，我可以向下滚动

00:50:02.140 --> 00:50:06.670
确切地看到哪个版本

00:50:03.730 --> 00:50:08.559
我强调 spring boot 

00:50:06.670 --> 00:50:10.900
初学者，他们都有一二三

00:50:08.559 --> 00:50:13.329
在他们身上释放但在引擎盖下

00:50:10.900 --> 00:50:17.279
我可以像这里使用的那样收集

00:50:13.329 --> 00:50:19.610
 Spring Framework 四一六发布

00:50:17.279 --> 00:50:21.530
你知道，有

00:50:19.610 --> 00:50:24.170
它选择了其他依赖项，但

00:50:21.530 --> 00:50:26.420
你在，你知道这有点

00:50:24.170 --> 00:50:29.360
默认情况，但实际上

00:50:26.420 --> 00:50:31.220
进入并覆盖属性设置或

00:50:29.360 --> 00:50:36.050
抱歉，您覆盖了一个版本号

00:50:31.220 --> 00:50:37.910
知道我是否想改变它我可以做

00:50:36.050 --> 00:50:41.810
那有另一种方法

00:50:37.910 --> 00:50:43.760
如果您碰巧正在使用Maven，那么

00:50:41.810 --> 00:50:47.120
我要单击内置的Gradle 

00:50:43.760 --> 00:50:49.340
文件在那里并更改 spring boot 

00:50:47.120 --> 00:50:53.930
执行器要释放到1.2 

00:50:49.340 --> 00:50:55.960
而不是1.2.3现在我再说一遍

00:50:53.930 --> 00:50:55.960
这里

00:50:57.300 --> 00:51:00.660
现在在这里我可能会稍微

00:50:59.160 --> 00:51:02.160
弄错了我知道如何调整财产

00:51:00.660 --> 00:51:05.360
我怎么知道如何改变财产

00:51:02.160 --> 00:51:07.740
 mazey很容易就能得到数字

00:51:05.360 --> 00:51:10.850
甚至您都可以覆盖它

00:51:07.740 --> 00:51:10.850
通过属性设置

00:51:16.750 --> 00:51:26.890
但我必须去精确地抬头

00:51:19.700 --> 00:51:26.890
如何用Gradle完成

00:51:28.970 --> 00:51:33.620
就像是一个了不起的配置

00:51:31.880 --> 00:51:35.300
基本上有一个属性

00:51:33.620 --> 00:51:37.270
为诸如此类的事物设置

00:51:35.300 --> 00:51:39.410
有一个用于启动的Java版本设置

00:51:37.270 --> 00:51:40.580
你知道这是完全

00:51:39.410 --> 00:51:42.950
与我们正在寻找的应用程序不同

00:51:40.580 --> 00:51:44.330
但是有一个叫做 Spring 的财产

00:51:42.950 --> 00:51:46.790
做股票版本，因为这个程序是

00:51:44.330 --> 00:51:48.800
使用Springs Hey Deels项目以及此处

00:51:46.790 --> 00:51:51.800
我可以插入它来更改版本

00:51:48.800 --> 00:51:54.620
靴子要用，还有一个

00:51:51.800 --> 00:51:57.680
每个键的每个属性

00:51:54.620 --> 00:52:00.140
图书馆，但我对如何

00:51:57.680 --> 00:52:01.520
在Gradle中覆盖该标志，但它

00:52:00.140 --> 00:52:05.720
应该在参考中提到

00:52:01.520 --> 00:52:07.070
文档及其版本号

00:52:05.720 --> 00:52:09.260
不会改变

00:52:07.070 --> 00:52:12.290
因为那是屏幕启动的一部分

00:52:09.260 --> 00:52:17.690
释放那唯一的时间

00:52:12.290 --> 00:52:19.370
一个问题，有些你知道，所以这是

00:52:17.690 --> 00:52:23.300
您可以选择哪个版本号

00:52:19.370 --> 00:52:25.490
在github中查找此版本

00:52:23.300 --> 00:52:27.350
在一二三发布上标记，您可以

00:52:25.490 --> 00:52:29.300
查找确切的版本号

00:52:27.350 --> 00:52:30.680
与他们一起唯一的时间

00:52:29.300 --> 00:52:32.450
要改变的是，如果你碰巧是

00:52:30.680 --> 00:52:36.460
使用快照版本，它们是

00:52:32.450 --> 00:52:36.460
他们可能会摸索版本

00:52:45.210 --> 00:52:54.040
如果我放大按钮在这里放大

00:52:49.180 --> 00:52:55.960
春季看起来有点完美

00:52:54.040 --> 00:52:57.670
心情依赖性pom点XML这是

00:52:55.960 --> 00:53:03.340
所有版本号及其

00:52:57.670 --> 00:53:05.170
我注意到背后的属性覆盖

00:53:03.340 --> 00:53:07.510
你知道这是固定的，所以

00:53:05.170 --> 00:53:08.680
当您进行特定转换时

00:53:07.510 --> 00:53:16.150
数字不会改变

00:53:08.680 --> 00:53:17.650
胡德权利是靴子靴子法案

00:53:16.150 --> 00:53:22.540
材料将使您

00:53:17.650 --> 00:53:24.700
现在具体的事情和

00:53:22.540 --> 00:53:27.700
不会撒娇

00:53:24.700 --> 00:53:29.410
除非有新的启动版本，否则您

00:53:27.700 --> 00:53:34.090
知道也许你在用Spring 

00:53:29.410 --> 00:53:35.590
 I / O平台Maven物料清单

00:53:34.090 --> 00:53:36.700
知道那是另一个迹象

00:53:35.590 --> 00:53:38.050
这是另一个下巴，另一个

00:53:36.700 --> 00:53:41.530
版本号的机会

00:53:38.050 --> 00:53:47.260
可能会有所不同，但是嗯

00:53:41.530 --> 00:53:49.510
是的，是的，很酷，我想我们

00:53:47.260 --> 00:53:52.480
认为我们得到了那个克里斯托弗·史密斯

00:53:49.510 --> 00:53:54.700
问您是否知道警告可能偏离主题

00:53:52.480 --> 00:53:55.600
但是有什么办法让崩溃

00:53:54.700 --> 00:53:57.670
云铸造

00:53:55.600 --> 00:53:59.230
我认为在云铸造应用程序上

00:53:57.670 --> 00:54:00.340
这不是我一个有趣的问题

00:53:59.230 --> 00:54:04.750
知道您是否对此有任何见识

00:54:00.340 --> 00:54:06.220
我知道我不是，但是哦，天哪，我有

00:54:04.750 --> 00:54:08.619
这样的隧道，所以我没有

00:54:06.220 --> 00:54:11.350
并没有因为我意识到

00:54:08.619 --> 00:54:13.510
如果您要将这个应用程序上传到

00:54:11.350 --> 00:54:16.720
 Cloud Foundry它应该正在运行，但是我

00:54:13.510 --> 00:54:21.070
不知道你必须要那个

00:54:16.720 --> 00:54:23.080
端口出口到外面哦，是的

00:54:21.070 --> 00:54:25.030
将无法正常工作，然后在哪里

00:54:23.080 --> 00:54:27.640
实际上会有一个即将发布的版本

00:54:25.030 --> 00:54:30.940
随着Diego版本的发布，我们将

00:54:27.640 --> 00:54:33.730
支持SSH，以便您可以进行端口

00:54:30.940 --> 00:54:39.660
转发，这将使您能够

00:54:33.730 --> 00:54:41.950
使用崩溃是一件好事， 

00:54:39.660 --> 00:54:43.450
尝试SSH时使用SSH 

00:54:41.950 --> 00:54:45.070
一如既往地进入您的生产系统

00:54:43.450 --> 00:54:48.940
你知道仔细检查一下

00:54:45.070 --> 00:54:52.100
您想做的正确解决方案

00:54:48.940 --> 00:54:53.120
是的，你知道我们都需要你

00:54:52.100 --> 00:54:55.190
知道我们有时候都需要

00:54:53.120 --> 00:54:58.910
解决您知道的配置问题

00:54:55.190 --> 00:55:01.340
您知道开发人员与您之间的不匹配

00:54:58.910 --> 00:55:05.600
知道演出和制作，所以有

00:55:01.340 --> 00:55:07.910
那但是是有趣的

00:55:05.600 --> 00:55:09.590
所以克里斯希望那种

00:55:07.910 --> 00:55:12.020
希望能解决的答案

00:55:09.590 --> 00:55:14.030
您的问题还有另外两个

00:55:12.020 --> 00:55:14.770
其实还有很多其他问题

00:55:14.030 --> 00:55:18.860
问题

00:55:14.770 --> 00:55:23.260
因此ROM询问您如何启动和停止

00:55:18.860 --> 00:55:23.260
通过配置启动应用程序

00:55:23.710 --> 00:55:29.770
好吧，实际上有一个

00:55:26.540 --> 00:55:29.770
关机终点

00:55:33.280 --> 00:55:37.800
好吧，我们看到那个摄像头在哪里

00:55:46.960 --> 00:55:53.330
是的，你可以弯腰

00:55:50.240 --> 00:55:54.710
他们正在说反对

00:55:53.330 --> 00:55:56.150
关于我提到的这些终点

00:55:54.710 --> 00:55:58.730
我们看到他们就像看着汽车一样

00:55:56.150 --> 00:56:00.320
配置我们看了配置道具我们

00:55:58.730 --> 00:56:01.820
看了我们看过的健康信息

00:56:00.320 --> 00:56:04.370
指标还有另一个端点

00:56:01.820 --> 00:56:12.430
关闭，您可以向您发送请求

00:56:04.370 --> 00:56:15.530
默认情况下它是禁用的

00:56:12.430 --> 00:56:17.000
可能由于以下几个原因而正确

00:56:15.530 --> 00:56:19.190
知道你不想意外打开

00:56:17.000 --> 00:56:21.650
人们杀死您的应用程序的方式

00:56:19.190 --> 00:56:23.480
但您可以启用它，还有

00:56:21.650 --> 00:56:24.830
所有这些选项都是

00:56:23.480 --> 00:56:26.600
称为管理端点

00:56:24.830 --> 00:56:28.820
具有管理端点的选项

00:56:26.600 --> 00:56:31.370
也受到Spring 安全性的保护

00:56:28.820 --> 00:56:34.160
管理员将使用的用户名密码

00:56:31.370 --> 00:56:35.870
有这样的建议是，如果你是

00:56:34.160 --> 00:56:37.400
要打开这个，你想

00:56:35.870 --> 00:56:39.920
受安全保护，使人们

00:56:37.400 --> 00:56:41.780
不能问，但一旦申请

00:56:39.920 --> 00:56:45.290
关闭然后没有人发送

00:56:41.780 --> 00:56:46.760
要求启动它，这样

00:56:45.290 --> 00:56:48.160
如果你知道你必须开火

00:56:46.760 --> 00:56:50.300
必须自己启动该应用

00:56:48.160 --> 00:56:51.200
你知道在命令行上还是

00:56:50.300 --> 00:56:54.560
你正在使用像云之类的东西

00:56:51.200 --> 00:57:00.320
铸造厂，你已经停下脚步了

00:56:54.560 --> 00:57:01.760
通过哦格雷格从内部按钮我是

00:57:00.320 --> 00:57:03.800
要阻止你一秒钟抱歉

00:57:01.760 --> 00:57:06.740
如果一两个人要

00:57:03.800 --> 00:57:08.750
 Cloud Foundry的简要说明

00:57:06.740 --> 00:57:12.290
对于熟悉Cloud的任何人

00:57:08.750 --> 00:57:14.810
铸造是平台即服务

00:57:12.290 --> 00:57:17.660
我们格雷格现在向您展示的是

00:57:14.810 --> 00:57:20.150
关键Web服务的控制台

00:57:17.660 --> 00:57:22.040
这是Cloud Foundry的一个实例

00:57:20.150 --> 00:57:24.860
我们在Amazon Web Services之上运行

00:57:22.040 --> 00:57:27.680
有点像我们的公共云

00:57:24.860 --> 00:57:29.090
可能会将其与Heroku或

00:57:27.680 --> 00:57:30.860
你知道有类似的东西

00:57:29.090 --> 00:57:34.090
极好的Spring 支持

00:57:30.860 --> 00:57:36.310
 spring boot 支持你知道

00:57:34.090 --> 00:57:38.780
很棒的Java构建包

00:57:36.310 --> 00:57:41.540
经验，这是你知道的

00:57:38.780 --> 00:57:45.110
平台即服务，您作为开发者

00:57:41.540 --> 00:57:46.490
基本上你知道你告诉你告诉

00:57:45.110 --> 00:57:48.140
 cloud sundar您想要多少个实例

00:57:46.490 --> 00:57:49.670
您想要多少内存，它将

00:57:48.140 --> 00:57:52.790
创建一组托管虚拟

00:57:49.670 --> 00:57:54.950
机器或Linux容器

00:57:52.790 --> 00:57:58.430
你知道管理你的申请

00:57:54.950 --> 00:58:00.470
是你的生命周期

00:57:58.430 --> 00:58:03.099
但比那更多

00:58:00.470 --> 00:58:05.810
关键的一天去看看哦

00:58:03.099 --> 00:58:08.240
概述了Cloud Foundry 

00:58:05.810 --> 00:58:11.000
我为那个裂缝感到抱歉

00:58:08.240 --> 00:58:14.599
想水平设置，以便人们

00:58:11.000 --> 00:58:17.420
人们没有迷路，是的，我不知道

00:58:14.599 --> 00:58:19.070
是的，所以你不能去做一个

00:58:17.420 --> 00:58:20.900
 Web请求到未运行的应用程序

00:58:19.070 --> 00:58:22.220
所以在这种情况下，你知道我在这里

00:58:20.900 --> 00:58:23.840
这是我的演示应用程序，它将在

00:58:22.220 --> 00:58:26.359
 Spring 一，它在关键

00:58:23.840 --> 00:58:28.099
 Web服务，您知道我这里有一个

00:58:26.359 --> 00:58:30.500
停止按钮或重启按钮，我

00:58:28.099 --> 00:58:34.700
可以启动它，因为这是我的实例

00:58:30.500 --> 00:58:36.109
在云中，您知道要运行此应用程序，因此

00:58:34.700 --> 00:58:37.880
如果你来找，你会发现

00:58:36.109 --> 00:58:40.099
了解如何发布自己的图片

00:58:37.880 --> 00:58:45.490
您的iPhone拍下猫的照片

00:58:40.099 --> 00:58:50.630
像其他人一样在网络上

00:58:45.490 --> 00:58:52.580
你还有另一个问题哦，是的

00:58:50.630 --> 00:58:54.230
抱歉，抱歉，我只是剪切粘贴

00:58:52.580 --> 00:59:00.080
聊天窗口中的一些答案

00:58:54.230 --> 00:59:01.730
嗯，让我们看看问的那个人

00:59:00.080 --> 00:59:03.770
关于启动和停止引导

00:59:01.730 --> 00:59:06.050
应用程序也在评论该应用程序

00:59:03.770 --> 00:59:08.320
顶级属性有点拨动但

00:59:06.050 --> 00:59:11.869
无论如何

00:59:08.320 --> 00:59:13.910
克里斯托弗·史密斯（Christopher Smith）先前的问题

00:59:11.869 --> 00:59:15.859
关于连接即将关闭

00:59:13.910 --> 00:59:18.859
自动是关于

00:59:15.859 --> 00:59:20.150
他说你的健康指标

00:59:18.859 --> 00:59:21.760
知道嘿检查它是否可以打开一个

00:59:20.150 --> 00:59:24.230
连接，然后向上或向下返回

00:59:21.760 --> 00:59:26.359
他很好奇那联系

00:59:24.230 --> 00:59:28.820
会自动关闭吗

00:59:26.359 --> 00:59:32.420
知道实际上这是一件好事

00:59:28.820 --> 00:59:33.470
问题我实际上会看起来

00:59:32.420 --> 00:59:34.940
在它的语义上，但这是

00:59:33.470 --> 00:59:36.800
其实是什么，然后确定你是

00:59:34.940 --> 00:59:40.750
做适当的资源管理，我

00:59:36.800 --> 00:59:40.750
其实并没有认真看

00:59:41.410 --> 00:59:44.980
好的，所以你

00:59:45.560 --> 00:59:49.840
你知道利益可以说我需要

00:59:54.010 --> 01:00:00.740
阅读但引导您的潜在

00:59:57.650 --> 01:00:03.290
在这里添加一些东西来清理

01:00:00.740 --> 01:00:05.540
连接，所以就是这样

01:00:03.290 --> 01:00:08.270
好吧，所以你必须参加

01:00:05.540 --> 01:00:10.220
以编程方式自己启动

01:00:08.270 --> 01:00:13.130
不会自动清理

01:00:10.220 --> 01:00:14.900
连接没有靴子真的不知道

01:00:13.130 --> 01:00:17.750
您知道这个自定义代码

01:00:14.900 --> 01:00:20.540
确保您关闭了

01:00:17.750 --> 01:00:22.400
从理论上讲，你知道的东西

01:00:20.540 --> 01:00:25.190
只有它只会清理它

01:00:22.400 --> 01:00:27.290
如果它正确地超出了范围，对不对

01:00:25.190 --> 01:00:29.180
作为乡亲哦，这是一个很好的问题是

01:00:27.290 --> 01:00:31.820
你在做适当的资源清理，所以我

01:00:29.180 --> 01:00:33.020
不行，我去检查一下

01:00:31.820 --> 01:00:36.950
一定要正确地做，所以他们有一个

01:00:33.020 --> 01:00:40.100
好的，很好，很好

01:00:36.950 --> 01:00:42.800
让我们看看穆罕默德（Mohammed）问

01:00:40.100 --> 01:00:47.840
 ping和指标选项显示在

01:00:42.800 --> 01:00:51.650
架子或ActiveMQ好吧，我们拉一下

01:00:47.840 --> 01:00:54.110
脚本基本上可以，这是什么

01:00:51.650 --> 01:01:00.110
脚本位于源主目录中

01:00:54.110 --> 01:01:02.030
资源斜线命令，所以第一步是

01:01:00.110 --> 01:01:08.030
在X的演示模式之外，所以我

01:01:02.030 --> 01:01:11.210
可以看到斧头项目视图，所以这是

01:01:08.030 --> 01:01:13.130
需要任何常规的路径

01:01:11.210 --> 01:01:14.750
在命令下方将文件归档

01:01:13.130 --> 01:01:17.600
在这种情况下，我可以包含文件夹

01:01:14.750 --> 01:01:20.630
开槽将被引导扫描为

01:01:17.600 --> 01:01:27.020
与崩溃支持链接的证书

01:01:20.630 --> 01:01:29.120
然后最重要的是

01:01:27.020 --> 01:01:31.490
如果是上课的话，可能会抓住它

01:01:29.120 --> 01:01:34.610
的东西，但它需要看起来像应用程序

01:01:31.490 --> 01:01:36.170
命令注释标记此方法为

01:01:34.610 --> 01:01:37.520
实际上是这样的命令

01:01:36.170 --> 01:01:39.590
知道你可以定义你可能需要其他

01:01:37.520 --> 01:01:43.400
如果有更多的方法也可以在这里

01:01:39.590 --> 01:01:45.230
复杂，但是你可以在这里

01:01:43.400 --> 01:01:47.180
您定义的文字材料是

01:01:45.230 --> 01:01:48.560
这些注释在那里出现

01:01:47.180 --> 01:01:53.270
最后你知道来了一些

01:01:48.560 --> 01:01:56.270
每个命令的内置手册页

01:01:53.270 --> 01:01:58.850
而且有很多关于写的细节

01:01:56.270 --> 01:02:00.130
该代码在参考文件中，但是

01:01:58.850 --> 01:02:02.059
这些是

01:02:00.130 --> 01:02:03.559
从参考文献拼凑而成

01:02:02.059 --> 01:02:06.200
文件是一回事，但能够

01:02:03.559 --> 01:02:09.619
看到一个我认为的实际组装示例

01:02:06.200 --> 01:02:11.660
真的很好，这是代码

01:02:09.619 --> 01:02:13.869
我已经从我的第3章中解脱出来

01:02:11.660 --> 01:02:13.869
书

01:02:15.450 --> 01:02:22.720
很棒，很好

01:02:19.780 --> 01:02:25.750
吉列问嘿有偏好吗

01:02:22.720 --> 01:02:32.080
用于部署为罐子，而不是

01:02:25.750 --> 01:02:35.050
生产战争，如果是这样，为什么你知道

01:02:32.080 --> 01:02:38.440
这是你知道的胖子罐问题

01:02:35.050 --> 01:02:40.869
认为是的，你知道有一个

01:02:38.440 --> 01:02:42.820
对使用乙醚罐的兴趣与日俱增

01:02:40.869 --> 01:02:46.030
在这种情况下基本上是什么

01:02:42.820 --> 01:02:48.190
 spring boot 有自己的装载机

01:02:46.030 --> 01:02:50.740
 Java本身的jar标准本身

01:02:48.190 --> 01:02:52.300
支持喜剧演员的可运行罐子

01:02:50.740 --> 01:02:55.720
一直很奇怪

01:02:52.300 --> 01:02:58.359
所以 Spring 的流明放了一个罐子装载器

01:02:55.720 --> 01:03:00.820
在那里，它把每种趋势作为

01:02:58.359 --> 01:03:01.570
 jar文件本身，我见过其他超级jar 

01:03:00.820 --> 01:03:03.760
解决方案

01:03:01.570 --> 01:03:06.130
解压缩jar文件并放入所有类

01:03:03.760 --> 01:03:10.270
文件在那里，您可能会有

01:03:06.130 --> 01:03:12.310
重叠的东西，否则您可能会有风险

01:03:10.270 --> 01:03:16.780
违反许可证，但陷入困境

01:03:12.310 --> 01:03:19.570
我认为这很方便，但更多

01:03:16.780 --> 01:03:21.460
文件确实是针对一件事的， 

01:03:19.570 --> 01:03:24.490
只有一件事，那就是部署到

01:03:21.460 --> 01:03:27.700
应用服务器的容器或它们

01:03:24.490 --> 01:03:29.170
知道可以将其部署到Tomcat的jar中

01:03:27.700 --> 01:03:31.180
文件确实是可以正常工作的

01:03:29.170 --> 01:03:33.790
当你在靴子上使用它们的任何地方

01:03:31.180 --> 01:03:36.609
那只是一个Java jar，你知道我在那

01:03:33.790 --> 01:03:38.460
罐子，所以我想很多人都有

01:03:36.609 --> 01:03:43.840
当您使用诸如

01:03:38.460 --> 01:03:46.510
 cloud Foundry嗯，这很容易

01:03:43.840 --> 01:03:48.280
你知道你可以把一个罐子推到那里

01:03:46.510 --> 01:03:49.750
你知道你可能看起来像是关于

01:03:48.280 --> 01:03:51.160
同样的事情，但你知道战争力量

01:03:49.750 --> 01:03:54.160
通常倾向于

01:03:51.160 --> 01:03:55.750
与容器相关联，但是

01:03:54.160 --> 01:03:58.210
可以制作可执行的war文件

01:03:55.750 --> 01:03:59.500
但是启动的默认位置是

01:03:58.210 --> 01:04:00.910
您是否使用Spring 胶塞

01:03:59.500 --> 01:04:04.020
它是Maven或Gradle，它将建立

01:04:00.910 --> 01:04:04.020
您是一个可执行的jar文件

01:04:07.880 --> 01:04:14.980
很抱歉，我在那儿陷入了静音

01:04:09.920 --> 01:04:19.250
一秒钟，让我们来看看

01:04:14.980 --> 01:04:21.380
他问的沃特森的问题

01:04:19.250 --> 01:04:22.430
您知道Cloud Foundry如何添加到

01:04:21.380 --> 01:04:24.710
引导，我在中间

01:04:22.430 --> 01:04:27.049
回应我只是在说

01:04:24.710 --> 01:04:29.690
他知道Cloud Foundry提供的他

01:04:27.049 --> 01:04:31.430
一种公共云或私有云

01:04:29.690 --> 01:04:33.920
部署环境部署

01:04:31.430 --> 01:04:37.460
 spring boot 应用的平台um 

01:04:33.920 --> 01:04:42.230
实际上是 Spring 的云

01:04:37.460 --> 01:04:44.210
连接器实际上是启动自动

01:04:42.230 --> 01:04:48.410
可供您使用的配置

01:04:44.210 --> 01:04:51.079
 Heroku和Cloud Foundry服务，因此

01:04:48.410 --> 01:04:52.039
如果您正在编写一个知道的应用程序

01:04:51.079 --> 01:04:53.509
将部署在那些

01:04:52.039 --> 01:04:57.559
平台，您正在寻找实际

01:04:53.509 --> 01:04:59.930
使用通过以下方式浮出水面的服务

01:04:57.559 --> 01:05:02.119
您非常了解的平台

01:04:59.930 --> 01:05:05.000
您知道JDBC连接池吗

01:05:02.119 --> 01:05:06.950
你知道通过容器表面或

01:05:05.000 --> 01:05:07.609
你知道一所老学校

01:05:06.950 --> 01:05:11.750
应用服务器

01:05:07.609 --> 01:05:13.819
你知道那个 Spring 的佛陀

01:05:11.750 --> 01:05:15.410
你知道提供自动配置

01:05:13.819 --> 01:05:19.880
对于那些服务，所以有一个

01:05:15.410 --> 01:05:23.180
有很多的价值，并在启动

01:05:19.880 --> 01:05:24.890
特别是在Cloud Foundry上

01:05:23.180 --> 01:05:27.019
使其更易于使用

01:05:24.890 --> 01:05:29.059
您知道平台提供的服务和

01:05:27.019 --> 01:05:32.329
这样我不认识格雷格

01:05:29.059 --> 01:05:33.740
补充一点，但你知道有

01:05:32.329 --> 01:05:35.269
其他还有一个功能是

01:05:33.740 --> 01:05:38.809
真的很强大，它被称为

01:05:35.269 --> 01:05:42.069
Spring 轮廓，可以把

01:05:38.809 --> 01:05:45.859
应用配置文件注释在

01:05:42.069 --> 01:05:47.990
配置类，您可以拥有

01:05:45.859 --> 01:05:49.819
光束仅在打开时激活

01:05:47.990 --> 01:05:53.390
某些配置文件，您可以打开

01:05:49.819 --> 01:05:55.670
一个应用需要多个配置文件

01:05:53.390 --> 01:05:57.230
如果是春季应用，则按

01:05:55.670 --> 01:05:58.910
它直到一个Cloud Foundry实例

01:05:57.230 --> 01:06:00.740
无论是您的私人副本还是您

01:05:58.910 --> 01:06:04.099
将其推送到我们的公共物理网络

01:06:00.740 --> 01:06:08.240
他们自动将服务放到云端

01:06:04.099 --> 01:06:09.890
在您的应用程序上进行配置，因此很容易

01:06:08.240 --> 01:06:11.420
说好我需要这个东西

01:06:09.890 --> 01:06:14.420
当你去云端的时候，我要

01:06:11.420 --> 01:06:16.609
放在个人资料云上，这是

01:06:14.420 --> 01:06:18.950
比如我说你可以

01:06:16.609 --> 01:06:20.930
使用Redis指标存储库并

01:06:18.950 --> 01:06:21.590
条件伊丽莎的只能创造这个

01:06:20.930 --> 01:06:23.750
合而为一

01:06:21.590 --> 01:06:26.270
去云，然后我只需要

01:06:23.750 --> 01:06:31.550
确保我的部署及其

01:06:26.270 --> 01:06:33.260
绑定到Redis实例，但是

01:06:31.550 --> 01:06:35.870
还有一个指南，如果您

01:06:33.260 --> 01:06:40.100
转到春季生物斜线指南，然后

01:06:35.870 --> 01:06:42.940
搜索晶格是什么晶格

01:06:40.100 --> 01:06:45.740
点阵Cloud Foundry 

01:06:42.940 --> 01:06:48.140
从中删除多租户功能

01:06:45.740 --> 01:06:49.820
你可能会说它很轻巧

01:06:48.140 --> 01:06:52.280
根据要求，但仍然非常

01:06:49.820 --> 01:06:57.260
对我们有强大的作用，这是一种基本的方法

01:06:52.280 --> 01:06:59.690
像这样运行Cloud Foundry的要旨

01:06:57.260 --> 01:07:01.550
您的笔记本电脑，但可以在其他地方运行

01:06:59.690 --> 01:07:03.230
本指南实际上是一个介绍

01:07:01.550 --> 01:07:05.420
使用这些屏幕云工具

01:07:03.230 --> 01:07:09.200
你只是在说那不是很

01:07:05.420 --> 01:07:10.520
渴望在晶格上运行它们，你知道

01:07:09.200 --> 01:07:11.720
一旦你进入云层担心

01:07:10.520 --> 01:07:13.160
你知道有很多讲座

01:07:11.720 --> 01:07:15.320
会有一个 Spring 来聊

01:07:13.160 --> 01:07:18.170
关于Spring 的所有组成部分

01:07:15.320 --> 01:07:21.230
云，让你知道

01:07:18.170 --> 01:07:23.600
微服务和多单元解决方案

01:07:21.230 --> 01:07:25.670
在云端工作以获得

01:07:23.600 --> 01:07:29.170
更好地发现对方要做

01:07:25.670 --> 01:07:32.420
这样的事情很有趣

01:07:29.170 --> 01:07:35.000
有趣的相关问题格伦·林格尔

01:07:32.420 --> 01:07:37.280
问你知道 Spring 佛陀的支持

01:07:35.000 --> 01:07:39.200
与另一个高可用性

01:07:37.280 --> 01:07:42.500
机器运行故障转移，我会

01:07:39.200 --> 01:07:44.510
说你知道你真的不知道我

01:07:42.500 --> 01:07:48.470
表示 spring boot 的设计点是

01:07:44.510 --> 01:07:50.750
成为超轻量级的

01:07:48.470 --> 01:07:54.260
您知道的容器

01:07:50.750 --> 01:07:57.170
正如格雷格所说的微服务

01:07:54.260 --> 01:07:59.240
关于，但你知道的想法是你

01:07:57.170 --> 01:08:00.680
知道我们是否在那方面走得太远

01:07:59.240 --> 01:08:02.360
最终的方向

01:08:00.680 --> 01:08:04.160
最终你要结束你

01:08:02.360 --> 01:08:06.710
知道你是否朝那个方向走得太远

01:08:04.160 --> 01:08:08.030
你最终会知道

01:08:06.710 --> 01:08:09.410
数百只猴子坐在

01:08:08.030 --> 01:08:12.230
键盘，您最终会遇到IBM 

01:08:09.410 --> 01:08:14.960
 WebSphere对，您知道，因为

01:08:12.230 --> 01:08:16.760
你就是你想要的那种

01:08:14.960 --> 01:08:19.730
云时代我想你你有点

01:08:16.760 --> 01:08:21.680
想要将高可用性委托给

01:08:19.730 --> 01:08:24.200
您正在运行的平台

01:08:21.680 --> 01:08:24.830
而不是将其内置到应用程序中

01:08:24.200 --> 01:08:26.870
容器

01:08:24.830 --> 01:08:30.380
我不知道格雷格，您的评论是什么

01:08:26.870 --> 01:08:32.060
但是那些是我的啊AJ 

01:08:30.380 --> 01:08:33.920
东西超出了范围

01:08:32.060 --> 01:08:35.000
启动你知道你可以谈论的事情

01:08:33.920 --> 01:08:37.580
像甲骨文

01:08:35.000 --> 01:08:38.750
群集或PostgreSQL群集或

01:08:37.580 --> 01:08:40.580
您正在谈论的东西

01:08:38.750 --> 01:08:42.620
那就是你要做的

01:08:40.580 --> 01:08:44.509
设置在外面等

01:08:42.620 --> 01:08:46.279
您想要的数据库配置

01:08:44.509 --> 01:08:48.380
知道配置启动应用程序以指向

01:08:46.279 --> 01:08:50.569
该集群的负载均衡器，以及

01:08:48.380 --> 01:08:52.009
所以开机不需要知道任何事情

01:08:50.569 --> 01:08:54.680
关于那个

01:08:52.009 --> 01:08:57.020
其他人有che的要求

01:08:54.680 --> 01:08:59.380
他们需要会话复制的地方

01:08:57.020 --> 01:09:01.759
 Tomcat的多个实例之间

01:08:59.380 --> 01:09:03.620
 Tomcat支持执行某些操作

01:09:01.759 --> 01:09:06.109
这些东西，但就像他们的会议之一

01:09:03.620 --> 01:09:07.910
复制功能使用多播和

01:09:06.109 --> 01:09:09.319
如果您曾经将多播纳入操作

01:09:07.910 --> 01:09:11.109
中心，您将被赶出

01:09:09.319 --> 01:09:13.700
因为没有人喜欢多播

01:09:11.109 --> 01:09:15.950
因为我见过我见过的人

01:09:13.700 --> 01:09:17.509
站立式组播解决方案

01:09:15.950 --> 01:09:19.520
从他们的数据中心取出

01:09:17.509 --> 01:09:20.750
 800个不同的数据中心，因为

01:09:19.520 --> 01:09:24.560
有人不明白他们在做什么

01:09:20.750 --> 01:09:26.180
正在这样做的现代云解决方案

01:09:24.560 --> 01:09:28.370
是您拿着启动应用程序，然后

01:09:26.180 --> 01:09:31.520
将其推到Cloud Foundry，然后旋转

01:09:28.370 --> 01:09:34.160
五个实例和Cloud Foundry 

01:09:31.520 --> 01:09:36.259
是否为您处理负载平衡

01:09:34.160 --> 01:09:37.580
为您提供一个URL，以讨论是否

01:09:36.259 --> 01:09:40.490
他们开箱即用

01:09:37.580 --> 01:09:42.200
注册域名，然后完成所有工作

01:09:40.490 --> 01:09:43.790
云内部的负载平衡

01:09:42.200 --> 01:09:45.830
提供者，所以您不需要去

01:09:43.790 --> 01:09:48.020
摆弄这种东西

01:09:45.830 --> 01:09:49.640
然后你也可以

01:09:48.020 --> 01:09:51.980
也站起来，你知道你可以买进

01:09:49.640 --> 01:09:53.839
数据库服务，您让它处理

01:09:51.980 --> 01:09:55.550
高可用性要求和

01:09:53.839 --> 01:09:57.950
那你就不用处理了

01:09:55.550 --> 01:10:00.260
通过这种方法，您知道，但是如果您

01:09:57.950 --> 01:10:02.750
你知道你是否被困在

01:10:00.260 --> 01:10:04.790
一直在努力的公司

01:10:02.750 --> 01:10:07.400
你知道的那种硬皮的服务器东西

01:10:04.790 --> 01:10:09.680
那你就可以了

01:10:07.400 --> 01:10:12.050
您可以在应用程序上对孩子运行启动

01:10:09.680 --> 01:10:14.660
服务器权利和该应用程序，它会弹出

01:10:12.050 --> 01:10:15.920
并提供一些ha和故障转移

01:10:14.660 --> 01:10:18.920
给你的东西

01:10:15.920 --> 01:10:20.720
在那个水平上，如果你知道那是

01:10:18.920 --> 01:10:21.950
您正在工作的环境中

01:10:20.720 --> 01:10:24.710
知道你可以走出去

01:10:21.950 --> 01:10:26.870
嗯，现在你在谈论你

01:10:24.710 --> 01:10:28.130
可以与+4数据库服务器通话，而无需

01:10:26.870 --> 01:10:30.500
问题，你只是去负载

01:10:28.130 --> 01:10:32.150
平衡器，或者您可以进入并配置

01:10:30.500 --> 01:10:35.840
这个嵌入式的tomcat服务器，如果

01:10:32.150 --> 01:10:37.220
您碰巧正在使用的是我们选择的

01:10:35.840 --> 01:10:38.810
许多默认设置，所以您不必

01:10:37.220 --> 01:10:40.940
必须，但您可以进入并声明

01:10:38.810 --> 01:10:43.160
 Tomcat的所有设置（如果需要） 

01:10:40.940 --> 01:10:44.240
并打开该多播会话

01:10:43.160 --> 01:10:46.100
如果您需要复制

01:10:44.240 --> 01:10:48.480
因为我有书，所以有

01:10:46.100 --> 01:10:53.130
示范如何开启

01:10:48.480 --> 01:10:55.170
 Tomcat上的HTTP并具有HTTP重定向

01:10:53.130 --> 01:10:56.760
您到该容器的ssl端口

01:10:55.170 --> 01:11:03.180
自动，但是那是什么

01:10:56.760 --> 01:11:06.330
最后我要做好吗

01:11:03.180 --> 01:11:09.240
我认为Glenn Lingle提出的问题是

01:11:06.330 --> 01:11:11.610
那么有没有办法改变

01:11:09.240 --> 01:11:16.110
命令就像在特定位置

01:11:11.610 --> 01:11:17.820
我认为文件系统不可用

01:11:16.110 --> 01:11:20.640
他在谈论CLI或

01:11:17.820 --> 01:11:24.360
崩溃我不确定他是否在谈论

01:11:20.640 --> 01:11:26.880
就像你说的这个文件的位置

01:11:24.360 --> 01:11:29.160
我不确定那是肯定的

01:11:26.880 --> 01:11:31.830
这就是问题所在，但是是的

01:11:29.160 --> 01:11:33.210
他只是在澄清我现在已经结束了

01:11:31.830 --> 01:11:37.260
聊天窗口，他说当机

01:11:33.210 --> 01:11:39.780
命令抱歉，所以我认为代码必须

01:11:37.260 --> 01:11:41.850
在这里我不确定我不确定

01:11:39.780 --> 01:11:47.100
那太可写了，但让我看看

01:11:41.850 --> 01:11:48.930
那里很好的地方是

01:11:47.100 --> 01:11:50.910
这是默认位置

01:11:48.930 --> 01:11:52.620
寻找命令的东西，但是你

01:11:50.910 --> 01:11:54.420
可以用模式覆盖它

01:11:52.620 --> 01:11:57.960
通过设置此属性和

01:11:54.420 --> 01:11:59.880
应用程序出属性好吧好吧

01:11:57.960 --> 01:12:01.520
几乎所有引导中的内容

01:11:59.880 --> 01:12:04.500
它有一个设置

01:12:01.520 --> 01:12:06.390
属性是这样的

01:12:04.500 --> 01:12:08.130
覆盖，所以我的意思是你不能

01:12:06.390 --> 01:12:09.990
覆盖应用程序点

01:12:08.130 --> 01:12:14.190
属性位于或名称

01:12:09.990 --> 01:12:15.990
该属性文件的内容是这样，但这

01:12:14.190 --> 01:12:17.880
你知道我认为这确实对你有帮助

01:12:15.990 --> 01:12:19.800
知道可能正在启动的人

01:12:17.880 --> 01:12:22.770
第一次，现在和将来

01:12:19.800 --> 01:12:26.490
哦，我的上帝喜欢发生了什么

01:12:22.770 --> 01:12:27.900
是的，你知道，而他们是

01:12:26.490 --> 01:12:31.410
他们很难理解

01:12:27.900 --> 01:12:33.000
你知道一些魔术，你知道

01:12:31.410 --> 01:12:35.340
这是很多很棒的技术

01:12:33.000 --> 01:12:39.150
能够启动以告诉您它是什么

01:12:35.340 --> 01:12:41.190
我听到对方在做格雷格

01:12:39.150 --> 01:12:45.060
关于Christa文件夹的内容是

01:12:41.190 --> 01:12:47.480
spring tool中的活 bean 图

01:12:45.060 --> 01:12:50.100
套件也是另一种有趣的方式

01:12:47.480 --> 01:12:53.130
弄清楚实际上创建了什么

01:12:50.100 --> 01:12:57.090
在运行时，你知道

01:12:53.130 --> 01:12:58.500
周围的属性是

01:12:57.090 --> 01:13:01.080
您曾经尝试过的一种

01:12:58.500 --> 01:13:02.280
他们不是我没工作过的地方

01:13:01.080 --> 01:13:03.630
那一个，但是

01:13:02.280 --> 01:13:05.190
听起来真的很有趣

01:13:03.630 --> 01:13:07.710
他们在那里付出了很多努力

01:13:05.190 --> 01:13:10.760
最近添加了支持spring工具套件

01:13:07.710 --> 01:13:12.780
如果您使用骆驼作为应用程序点

01:13:10.760 --> 01:13:15.030
您的应用程序出了动物文件

01:13:12.780 --> 01:13:16.980
他们增加了支持，基本上可以帮助您

01:13:15.030 --> 01:13:19.350
您会自动完成属性设置哦

01:13:16.980 --> 01:13:22.440
是的，是的，你知道一些

01:13:19.350 --> 01:13:24.210
我得到了支持，所以

01:13:22.440 --> 01:13:25.650
各种各样的支持，我知道

01:13:24.210 --> 01:13:27.540
借此机会说你

01:13:25.650 --> 01:13:28.560
知道你是否看过并了解所有

01:13:27.540 --> 01:13:31.140
这些自动配置

01:13:28.560 --> 01:13:33.510
事情是他们如何发挥作用的

01:13:31.140 --> 01:13:37.380
你去放一些自动配置

01:13:33.510 --> 01:13:39.330
完全放入您自己的代码中

01:13:37.380 --> 01:13:42.320
因为你知道甚至可以贡献一个

01:13:39.330 --> 01:13:47.100
自动配置回社区哦

01:13:42.320 --> 01:13:50.730
好的，格雷格，非常感谢你，这是

01:13:47.100 --> 01:13:54.720
太好了，我学到了很多东西，甚至

01:13:50.730 --> 01:13:57.780
第二次看这个，所以

01:13:54.720 --> 01:14:01.320
很棒，如果您想加入我们

01:13:57.780 --> 01:14:05.130
我们即将举行的网络研讨会有很多

01:14:01.320 --> 01:14:06.630
如果您愿意的话，还有很多很棒的作品

01:14:05.130 --> 01:14:10.500
看到我要粘贴几个

01:14:06.630 --> 01:14:12.060
这对夫妇比这些链接中的几个

01:14:10.500 --> 01:14:13.620
在聊天窗口顶部，以便您可以

01:14:12.060 --> 01:14:15.180
到他们那里我开始

01:14:13.620 --> 01:14:19.440
介绍与几个链接

01:14:15.180 --> 01:14:23.280
嗯，我刚发布

01:14:19.440 --> 01:14:26.640
他们现在在这里，所以6月23日6月9日， 

01:14:23.280 --> 01:14:28.290
然后在6月30日再来一次，所以请来

01:14:26.640 --> 01:14:30.240
返回并加入我们，我们将成为

01:14:28.290 --> 01:14:31.610
让我们看看我只是想

01:14:30.240 --> 01:14:38.130
将最后一个粘贴到此处，然后开始

01:14:31.610 --> 01:14:39.860
在第九届亚当将从turkcell那里

01:14:38.130 --> 01:14:42.930
将要谈论一个

01:14:39.860 --> 01:14:43.830
全面的春季旋风

01:14:42.930 --> 01:14:45.960
游览

01:14:43.830 --> 01:14:48.390
他们受命重写

01:14:45.960 --> 01:14:52.110
在极短的时间内应用

01:14:48.390 --> 01:14:54.240
框架，并取得了相当成功

01:14:52.110 --> 01:14:56.070
在春季IO中大量使用食物

01:14:54.240 --> 01:14:57.870
平台，所以这将是

01:14:56.070 --> 01:15:01.530
基本上他在谈论他的

01:14:57.870 --> 01:15:06.240
您知道在Turkcell申请的经验

01:15:01.530 --> 01:15:08.340
愤怒中的这些东西你知道而且很棒

01:15:06.240 --> 01:15:09.900
你知道我只是一个很好的案例研究

01:15:08.340 --> 01:15:12.450
认为这真的很有趣

01:15:09.900 --> 01:15:14.460
了解客户如何将这些东西应用到

01:15:12.450 --> 01:15:15.989
 6月23日

01:15:14.460 --> 01:15:17.850
在云上谈论更多

01:15:15.989 --> 01:15:19.350
铸造厂，如果您对此感兴趣

01:15:17.850 --> 01:15:21.630
詹金斯（Jenkins）和连续

01:15:19.350 --> 01:15:24.150
整合持续交付

01:15:21.630 --> 01:15:26.880
即将举行的春季应用会议

01:15:24.150 --> 01:15:29.610
持续集成的工作

01:15:26.880 --> 01:15:32.670
和Cloud Foundry专门用于

01:15:29.610 --> 01:15:34.560
 Jenkins来自cloudBees，然后是六月

01:15:32.670 --> 01:15:37.050
 30th Phil Dustin将从以下位置加入我们

01:15:34.560 --> 01:15:38.370
图标健康和健身这些家伙

01:15:37.050 --> 01:15:42.630
在去年的网络研讨会计划中

01:15:38.370 --> 01:15:44.190
他们交谈的绝对有趣的网络研讨会

01:15:42.630 --> 01:15:47.370
关于他们如何设法创建一个

01:15:44.190 --> 01:15:50.219
 24小时内使用

01:15:47.370 --> 01:15:51.900
 Spring 完全荒谬，当然不是

01:15:50.219 --> 01:15:53.640
即使他们也会

01:15:51.900 --> 01:15:55.890
推荐也不是关键

01:15:53.640 --> 01:15:58.770
推荐，但是你知道的是他们

01:15:55.890 --> 01:16:01.080
真的是真的吗

01:15:58.770 --> 01:16:02.700
有趣的谈话，他们将成为

01:16:01.080 --> 01:16:05.580
来参加我们三十号

01:16:02.700 --> 01:16:08.820
谈论如何下车J STL 

01:16:05.580 --> 01:16:10.739
然后您知道及时使用

01:16:08.820 --> 01:16:12.270
只是Java模板添加Java模板

01:16:10.739 --> 01:16:15.989
他们使用Java模板的经验

01:16:12.270 --> 01:16:17.460
总的来说，嗯，太酷了，我只是

01:16:15.989 --> 01:16:20.910
要说的当然是这个

01:16:17.460 --> 01:16:22.170
被记录下来，所以如果你想

01:16:20.910 --> 01:16:23.969
知道与这个录音分享

01:16:22.170 --> 01:16:27.150
同事将其带到您的下一个

01:16:23.969 --> 01:16:31.260
午餐或午餐，学习

01:16:27.150 --> 01:16:35.460
不管你知道参加什么

01:16:31.260 --> 01:16:38.610
在spring上原子输入/ blog和

01:16:35.460 --> 01:16:42.270
那么当您

01:16:38.610 --> 01:16:45.600
重播已发布到YouTube，您将

01:16:42.270 --> 01:16:48.989
同时获得所有重要信息

01:16:45.600 --> 01:16:50.460
写在博客的春季一

01:16:48.989 --> 01:16:51.780
重播，您知道所有的超赞

01:16:50.460 --> 01:16:55.739
 Spring 博客上出现的东西

01:16:51.780 --> 01:16:57.480
关于网络研讨会重播以及

01:16:55.739 --> 01:17:00.450
我们将有可用的幻灯片

01:16:57.480 --> 01:17:02.280
在两周之内为您服务

01:17:00.450 --> 01:17:05.550
它比它快很多

01:17:02.280 --> 01:17:07.140
坦白地说，所以最后一件事是

01:17:05.550 --> 01:17:09.960
只是您知道您是否想要

01:17:07.140 --> 01:17:12.480
您将手放在春季展位上

01:17:09.960 --> 01:17:15.600
尚未真正启用HTTP下载

01:17:12.480 --> 01:17:16.410
直接是故意的，太可怕了

01:17:15.600 --> 01:17:19.170
经验

01:17:16.410 --> 01:17:20.550
直接下载HTTP 

01:17:19.170 --> 01:17:23.160
强烈建议使用Maven或

01:17:20.550 --> 01:17:24.750
如果您在军事网络上，可以摇篮

01:17:23.160 --> 01:17:27.180
或关闭网络，否则您不会

01:17:24.750 --> 01:17:27.719
有权访问Maven Central或您

01:17:27.180 --> 01:17:29.610
没有自己的

01:17:27.719 --> 01:17:32.550
在您的防火墙本地，您知道我们

01:17:29.610 --> 01:17:34.519
工厂服务器，您可以获得高清电视

01:17:32.550 --> 01:17:40.800
如果您绝对绝望，请下载

01:17:34.519 --> 01:17:43.079
来自repo dot spring dot IO um和您

01:17:40.800 --> 01:17:47.849
知道这不是我们真正做到的超级

01:17:43.079 --> 01:17:50.579
容易，但这是可能的

01:17:47.849 --> 01:17:54.030
无论如何，如果你在

01:17:50.579 --> 01:17:55.800
如果您对此感兴趣的话

01:17:54.030 --> 01:17:59.429
正确，我只想说谢谢那是

01:17:55.800 --> 01:18:01.039
很棒的东西学到了很多东西

01:17:59.429 --> 01:18:03.329
评论，然后我们称之为环绕

01:18:01.039 --> 01:18:06.150
现在那很好，我希望看到

01:18:03.329 --> 01:18:07.800
大家今年 Spring 我也

01:18:06.150 --> 01:18:09.840
是的，格雷格会在 Spring 杀死它

01:18:07.800 --> 01:18:12.510
我们有一个非常了不起的阵容

01:18:09.840 --> 01:18:15.420
请查看网站spring 1/2 GX 

01:18:12.510 --> 01:18:18.329
并立即注册以确保您这样做

01:18:15.420 --> 01:18:20.369
在6月9日之前，这样您就不会错过

01:18:18.329 --> 01:18:21.869
超级早鸟折扣，希望

01:18:20.369 --> 01:18:23.219
我们将在华盛顿特区见到您

01:18:21.869 --> 01:18:26.150
非常感谢大家，有一个

01:18:23.219 --> 01:18:26.150
伟大的一天再见

01:18:32.800 --> 01:18:34.860
您

