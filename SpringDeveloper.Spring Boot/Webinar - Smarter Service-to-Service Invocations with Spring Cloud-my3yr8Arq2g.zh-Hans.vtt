WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.810 --> 00:00:13.800
大家好，谢谢大家

00:00:12.420 --> 00:00:16.560
现在加入我

00:00:13.800 --> 00:00:18.570
宣布我在我的美丽中

00:00:16.560 --> 00:00:21.630
美丽的班加罗尔，那里不是20 

00:00:18.570 --> 00:00:23.310
到30 ish所以嗯，如果您加入我们

00:00:21.630 --> 00:00:27.930
来自亚洲的晚上好，如果您要加入

00:00:23.310 --> 00:00:30.750
来自欧洲的我们很高兴您知道

00:00:27.930 --> 00:00:32.400
下午对你来说，然后

00:00:30.750 --> 00:00:36.360
如果您要从北美加入我们

00:00:32.400 --> 00:00:39.960
无论如何，南美洲的部分地区还是不错的

00:00:36.360 --> 00:00:43.020
早上好，我叫乔希

00:00:39.960 --> 00:00:45.720
我是开放的开发者拥护者

00:00:43.020 --> 00:00:49.830
源泉技术至关重要

00:00:45.720 --> 00:00:52.830
我现在是五本书的作者

00:00:49.830 --> 00:00:57.270
春天当然是在

00:00:52.830 --> 00:00:59.610
建立弹性强大的云规模

00:00:57.270 --> 00:01:01.920
应用程序和微服务

00:00:59.610 --> 00:01:04.830
 spring boot 春季云和云

00:01:01.920 --> 00:01:07.409
铸造厂，我是三个的领导者

00:01:04.830 --> 00:01:09.360
艾迪生·韦斯利的教学视频

00:01:07.409 --> 00:01:11.670
最新的书是在哪本书

00:01:09.360 --> 00:01:14.700
 o'reilly的最新视频是

00:01:11.670 --> 00:01:19.679
艾迪生·韦斯利·皮尔森，他们在

00:01:14.700 --> 00:01:21.649
 Safari在线市场和

00:01:19.679 --> 00:01:23.880
当然最新的一项是对

00:01:21.649 --> 00:01:26.759
使用Spring Boot构建应用程序

00:01:23.880 --> 00:01:30.149
还有春天的云和云

00:01:26.759 --> 00:01:32.640
铸造，所以我也为

00:01:30.149 --> 00:01:33.810
几个开源春季项目没有

00:01:32.640 --> 00:01:35.969
当然，至少其中一些是春天

00:01:33.810 --> 00:01:38.639
靴子和春季革新开放

00:01:35.969 --> 00:01:42.299
 Baden中的源工作流引擎活动

00:01:38.639 --> 00:01:43.799
而且你知道我很感激

00:01:42.299 --> 00:01:46.139
如果您有疑问，请在这里

00:01:43.799 --> 00:01:48.119
这次网络研讨会让您更加困惑

00:01:46.139 --> 00:01:49.679
然后和我在一起，当你进来的时候

00:01:48.119 --> 00:01:53.100
不要犹豫，伸出援助之手

00:01:49.679 --> 00:01:55.799
在Twitter上带有X的星巴克人或

00:01:53.100 --> 00:02:01.289
有我的电子邮件，我一如既往

00:01:55.799 --> 00:02:03.959
服务我在关键部门工作，我们是一个

00:02:01.289 --> 00:02:08.459
山谷中的小小创业公司

00:02:03.959 --> 00:02:11.039
从2013年4月开始，我从事

00:02:08.459 --> 00:02:13.260
春季队这是同一支春季队

00:02:11.039 --> 00:02:18.299
您将知道并加载的

00:02:13.260 --> 00:02:20.879
过去15年的大部分时间，我们

00:02:18.299 --> 00:02:23.250
以及领导层

00:02:20.879 --> 00:02:23.790
 apache tomcat project rabbonim q 

00:02:23.250 --> 00:02:25.680
主要

00:02:23.790 --> 00:02:28.859
有分布式数据结构

00:02:25.680 --> 00:02:31.640
 Redis项目，当然还有最后一个

00:02:28.859 --> 00:02:33.659
当然，尤其是云铸造厂

00:02:31.640 --> 00:02:36.180
开源平台即服务

00:02:33.659 --> 00:02:38.459
该项目致力于建设一个

00:02:36.180 --> 00:02:42.359
用于现代工作负载的现代平台

00:02:38.459 --> 00:02:44.909
我们自问自己该怎么办

00:02:42.359 --> 00:02:46.319
真正赋予现代开发人员权力

00:02:44.909 --> 00:02:49.590
我们能做些什么来帮助他们建立

00:02:46.319 --> 00:02:51.209
在云中运行良好的应用程序

00:02:49.590 --> 00:02:54.930
当然，这是很多

00:02:51.209 --> 00:02:56.189
应用程序今天正在运行，所以

00:02:54.930 --> 00:02:58.049
该任务的一部分当然是为了

00:02:56.189 --> 00:03:01.470
做些入门

00:02:58.049 --> 00:03:04.019
轻松体验春天

00:03:01.470 --> 00:03:06.239
可能例如我们的春天

00:03:04.019 --> 00:03:08.120
我知道这样的指南和新

00:03:06.239 --> 00:03:11.700
网站和 spring boot 本身是一个

00:03:08.120 --> 00:03:15.120
当然是非常非常有力的方式

00:03:11.700 --> 00:03:17.159
生产很快，但另一个

00:03:15.120 --> 00:03:19.169
我们想要解决的是如何做

00:03:17.159 --> 00:03:23.760
我们授权开发人员进行构建

00:03:19.169 --> 00:03:26.040
在云中运行良好的应用程序

00:03:23.760 --> 00:03:30.000
因为这是新的运行时

00:03:26.040 --> 00:03:31.530
成为新目的地的新空间

00:03:30.000 --> 00:03:33.930
新的生产权

00:03:31.530 --> 00:03:36.150
生产和增加

00:03:33.930 --> 00:03:38.389
您知道的应用程序

00:03:36.150 --> 00:03:41.879
春天，我们帮助人们搬走了

00:03:38.389 --> 00:03:45.479
来自大量的application肿应用

00:03:41.879 --> 00:03:47.190
服务器，我们已经帮助他们制作了这些

00:03:45.479 --> 00:03:49.829
应用程序越小越好

00:03:47.190 --> 00:03:51.900
那和那出埃及记

00:03:49.829 --> 00:03:53.129
因为存在而非常非常非常存在

00:03:51.900 --> 00:03:56.310
当然，现在我们看到了应用程序

00:03:53.129 --> 00:03:58.739
作为服务部署在云中

00:03:56.310 --> 00:04:02.790
作为服务示例， 

00:03:58.739 --> 00:04:03.870
服务，我们不是您很了解我

00:04:02.790 --> 00:04:07.349
不要以为我是在告诉你们

00:04:03.870 --> 00:04:10.260
任何新事物根本不是新闻

00:04:07.349 --> 00:04:12.449
对，我们在最后看到的

00:04:10.260 --> 00:04:14.729
大约八年后，我们看到了故事

00:04:12.449 --> 00:04:19.430
网路巨人的故事

00:04:14.729 --> 00:04:22.979
搬到这个新架构这个新

00:04:19.430 --> 00:04:24.509
故事对，所以当然很多

00:04:22.979 --> 00:04:27.240
不同的应用已经从

00:04:24.509 --> 00:04:30.449
我们称之为单片应用程序

00:04:27.240 --> 00:04:31.950
这些都是大型应用

00:04:30.449 --> 00:04:35.099
服务和所有功能

00:04:31.950 --> 00:04:36.900
在大型装配体中共处一处

00:04:35.099 --> 00:04:40.440
大型可部署部队

00:04:36.900 --> 00:04:42.780
你们还记得很久以前吗

00:04:40.440 --> 00:04:47.490
一个遥远的星系

00:04:42.780 --> 00:04:49.350
叫做点e AR神器，是的，我

00:04:47.490 --> 00:04:51.000
要么，但这是一种方法

00:04:49.350 --> 00:04:52.520
在网络上部署所有服务

00:04:51.000 --> 00:04:55.169
单一功能

00:04:52.520 --> 00:04:56.610
可部署单位，我们已经看到

00:04:55.169 --> 00:04:59.160
人们远离建筑

00:04:56.610 --> 00:05:01.470
在过去的15年中很多

00:04:59.160 --> 00:05:03.690
不同的小型单独服务

00:05:01.470 --> 00:05:06.960
因此，Twitter当然从轨道上移了下来

00:05:03.690 --> 00:05:08.419
巨石并移动到的图片是

00:05:06.960 --> 00:05:12.690
在微粒体架构中更少

00:05:08.419 --> 00:05:15.889
 Facebook真的有很多

00:05:12.690 --> 00:05:19.199
当然会因为Twitter而走得更远

00:05:15.889 --> 00:05:21.810
合理疯狂地决定改用

00:05:19.199 --> 00:05:24.419
 JVM，而不是试图改变用途

00:05:21.810 --> 00:05:27.570
成为我需要的平台

00:05:24.419 --> 00:05:28.949
我猜到底在facebook下

00:05:27.570 --> 00:05:31.770
他们热衷于加倍

00:05:28.949 --> 00:05:34.650
错误，所以他们选择了PHP，我们创建了

00:05:31.770 --> 00:05:37.919
以便他们可以建立这个

00:05:34.650 --> 00:05:40.500
运行时这样的平台

00:05:37.919 --> 00:05:41.699
当然看起来像JVM Netflix 

00:05:40.500 --> 00:05:43.560
从巨型独石搬到

00:05:41.699 --> 00:05:48.900
应用到一套微服务

00:05:43.560 --> 00:05:52.050
一个ebaylinkedin亚马逊Google全部

00:05:48.900 --> 00:05:56.039
这些公司要早得多

00:05:52.050 --> 00:05:58.080
比其他人不得不跳

00:05:56.039 --> 00:05:59.789
是的，那并不是说那里

00:05:58.080 --> 00:06:04.530
在这个整体中没有价值

00:05:59.789 --> 00:06:05.820
显然，如果您有一个应用程序

00:06:04.530 --> 00:06:08.639
从今天开始申请

00:06:05.820 --> 00:06:10.260
打算将其分为

00:06:08.639 --> 00:06:12.300
成千上万种不同的小物件

00:06:10.260 --> 00:06:13.530
将要建造的小东西

00:06:12.300 --> 00:06:15.659
可能会工作，并且尽快

00:06:13.530 --> 00:06:17.909
限制使很多人分手

00:06:15.659 --> 00:06:19.320
正在转向这种架构

00:06:17.909 --> 00:06:21.090
对，有很多不同

00:06:19.320 --> 00:06:23.010
我认为其中一些是相当合理的原因

00:06:21.090 --> 00:06:26.070
很明显，所以摩尔定律当然是这样的

00:06:23.010 --> 00:06:28.710
计算能力将

00:06:26.070 --> 00:06:31.680
每18个月有效地增加一倍， 

00:06:28.710 --> 00:06:33.750
两年以来，情况并非如此

00:06:31.680 --> 00:06:36.570
超过十年，但我们仍在思考

00:06:33.750 --> 00:06:38.520
作为一种有趣的趋势线

00:06:36.570 --> 00:06:40.740
正确的，当然是为了建立

00:06:38.520 --> 00:06:42.539
我们今天讨论规模可扩展的应用程序

00:06:40.740 --> 00:06:44.250
关于流程样式并发或

00:06:42.539 --> 00:06:45.930
并发，但尤其是流程

00:06:44.250 --> 00:06:48.270
并发我想运行的想法

00:06:45.930 --> 00:06:50.230
更多的服务不是一个大的

00:06:48.270 --> 00:06:54.130
那上升

00:06:50.230 --> 00:06:57.370
我们已经看到此驱动器从

00:06:54.130 --> 00:07:00.820
移动平台，所以当然这个数字

00:06:57.370 --> 00:07:03.420
是2012年以来的非常老的数字

00:07:00.820 --> 00:07:05.890
我们有150万个新的想法

00:07:03.420 --> 00:07:11.100
每天都有android激活

00:07:05.890 --> 00:07:14.560
当然iPhone不是那么快

00:07:11.100 --> 00:07:17.470
增长也非常快， 

00:07:14.560 --> 00:07:19.360
那里有很多激活

00:07:17.470 --> 00:07:22.000
我们看到了很多新用户， 

00:07:19.360 --> 00:07:25.150
很多新的人连接和使用

00:07:22.000 --> 00:07:28.450
应用程式，并提出要求

00:07:25.150 --> 00:07:30.190
你每天都知道的时间

00:07:28.450 --> 00:07:32.800
该号码将持续一段时间，并且

00:07:30.190 --> 00:07:34.030
即使是一次也可以

00:07:32.800 --> 00:07:39.430
的水平，我们仍然有这个

00:07:34.030 --> 00:07:43.510
移动驱动类疯狂标题泛滥

00:07:39.430 --> 00:07:45.790
用户拥有我们的社交世界权利

00:07:43.510 --> 00:07:47.590
应用程序建立在这个想法上

00:07:45.790 --> 00:07:49.150
社交网络或社交投放的顶部

00:07:47.590 --> 00:07:53.260
服务提供商，例如Facebook 

00:07:49.150 --> 00:07:55.810
和Twitter等，每60秒

00:07:53.260 --> 00:07:58.990
这些服务，顺便说一下

00:07:55.810 --> 00:08:01.030
我认为2012年的图表

00:07:58.990 --> 00:08:02.020
几秒钟，您将看到如此疯狂的数量

00:08:01.030 --> 00:08:04.560
在这些不同平台上的活动

00:08:02.020 --> 00:08:07.750
那活动就是你

00:08:04.560 --> 00:08:10.060
亲爱的开发商可以收获

00:08:07.750 --> 00:08:12.010
可以依靠我们看到的一切

00:08:10.060 --> 00:08:14.800
像Instagram这样的时间

00:08:12.010 --> 00:08:17.310
通常没有赎回价值

00:08:14.800 --> 00:08:20.500
走向世界或整个人类

00:08:17.310 --> 00:08:24.450
完全疯了

00:08:20.500 --> 00:08:24.450
像Facebook这样的东西的背面

00:08:26.160 --> 00:08:30.640
我们还看到诸如

00:08:28.450 --> 00:08:32.080
 Farmville，你知道这是一个游戏

00:08:30.640 --> 00:08:34.330
因为它而流行

00:08:32.080 --> 00:08:36.580
与这些平台的集成可以进行

00:08:34.330 --> 00:08:38.260
快速巨大，如果您是

00:08:36.580 --> 00:08:39.370
构建应用程序，您正在

00:08:38.260 --> 00:08:41.650
建立在这些平台之上

00:08:39.370 --> 00:08:44.620
没有理由您的应用也无法

00:08:41.650 --> 00:08:48.670
快速传播病毒，所有这些都可以说

00:08:44.620 --> 00:08:52.750
规模是每个人的问题吧

00:08:48.670 --> 00:08:54.910
不仅仅是越来越多的大网络

00:08:52.750 --> 00:08:56.110
虽然现在不多了，但是

00:08:54.910 --> 00:08:59.050
当然变得非常非常非常

00:08:56.110 --> 00:09:01.300
政治问题，我们看到了这个

00:08:59.050 --> 00:09:03.170
转移到物联网这个想法

00:09:01.300 --> 00:09:05.660
每个设备都有一个IP 

00:09:03.170 --> 00:09:09.800
为三十亿左右的人

00:09:05.660 --> 00:09:12.230
此刻人类在地球上

00:09:09.800 --> 00:09:16.279
我们说大约有25 

00:09:12.230 --> 00:09:21.709
十亿个设备这是一个数字

00:09:16.279 --> 00:09:24.800
来自思科，这真是太糟糕了

00:09:21.709 --> 00:09:28.010
令人难以置信的权利，这几乎是8台设备

00:09:24.800 --> 00:09:29.959
基本上是针对人类的

00:09:28.010 --> 00:09:33.399
在他们一生中的影响力

00:09:29.959 --> 00:09:36.199
知道，我可以轻松考虑

00:09:33.399 --> 00:09:38.089
我知道的8台设备并不难

00:09:36.199 --> 00:09:41.149
人们现在有拥有IP的汽车

00:09:38.089 --> 00:09:42.649
所以这又是一个越来越多的

00:09:41.149 --> 00:09:44.959
你知道我们正在看到的东西

00:09:42.649 --> 00:09:47.180
这种交通需求，如果您

00:09:44.959 --> 00:09:49.699
您尚未准备好应用程序

00:09:47.180 --> 00:09:51.410
可能会输掉，我们也

00:09:49.699 --> 00:09:53.600
看到为此的组织动力

00:09:51.410 --> 00:09:56.810
正确驾驶康威的法律理念

00:09:53.600 --> 00:09:58.040
系统受限于生产

00:09:56.810 --> 00:09:59.300
外观设计的副本

00:09:58.040 --> 00:10:03.139
这些的沟通结构

00:09:59.300 --> 00:10:06.110
我听说过的组织

00:10:03.139 --> 00:10:08.000
或者作为一个团队说

00:10:06.110 --> 00:10:09.470
具有的公司或组织

00:10:08.000 --> 00:10:11.810
一个福特汉姆队是

00:10:09.470 --> 00:10:14.690
编译器将选择性地构建一个四

00:10:11.810 --> 00:10:17.029
通过编译器，您会想到亚马逊吗

00:10:14.690 --> 00:10:18.829
想想Netflix这些不是一个

00:10:17.029 --> 00:10:21.649
应用这些实际上是几个

00:10:18.829 --> 00:10:23.870
一个Web UI内的不同服务

00:10:21.649 --> 00:10:24.980
是的，如果您考虑这些

00:10:23.870 --> 00:10:27.050
他们都有不同的服务

00:10:24.980 --> 00:10:29.050
不同的增长率不同

00:10:27.050 --> 00:10:32.839
轨迹不同的商业动机

00:10:29.050 --> 00:10:34.399
确实是经常不同的业务

00:10:32.839 --> 00:10:36.490
司机说他们可能有不同

00:10:34.399 --> 00:10:38.449
团队关心的不同人

00:10:36.490 --> 00:10:40.699
他们在那方面的投资

00:10:38.449 --> 00:10:43.339
具有特定服务亚马逊的功能

00:10:40.699 --> 00:10:45.290
这种区别要清楚得多

00:10:43.339 --> 00:10:47.180
去网站，你可以做一个

00:10:45.290 --> 00:10:49.240
搜索栏在那里，您可以单击下拉菜单

00:10:47.180 --> 00:10:53.990
下来，您会看到许多不同的

00:10:49.240 --> 00:10:57.529
市场和那种经历

00:10:53.990 --> 00:10:59.240
他们向人们公开，所以组织

00:10:57.529 --> 00:11:00.680
现在正在越来越分裂

00:10:59.240 --> 00:11:02.649
进入小型垂直行业

00:11:00.680 --> 00:11:05.420
垂直行业越来越有

00:11:02.649 --> 00:11:08.360
业务领导力与

00:11:05.420 --> 00:11:11.209
技术和运营等

00:11:08.360 --> 00:11:12.680
反对你认识技术人员

00:11:11.209 --> 00:11:15.079
然后那里的商人

00:11:12.680 --> 00:11:16.610
他们向技术人员扔了一件外套

00:11:15.079 --> 00:11:16.860
操作的墙，例如

00:11:16.610 --> 00:11:19.050
不

00:11:16.860 --> 00:11:20.310
现在不是那样了

00:11:19.050 --> 00:11:22.170
我们看到许多不同的原因

00:11:20.310 --> 00:11:24.780
对于这种架构的拥抱

00:11:22.170 --> 00:11:26.400
和这种云原生的想法

00:11:24.780 --> 00:11:29.340
应用，当然，当我们交谈时

00:11:26.400 --> 00:11:33.870
关于Netflix著名的描述

00:11:29.340 --> 00:11:36.030
云原生应用程序

00:11:33.870 --> 00:11:38.340
功能分解

00:11:36.030 --> 00:11:39.990
微服务这个可能使用API​​的想法

00:11:38.340 --> 00:11:42.660
因为我自己的服务将

00:11:39.990 --> 00:11:46.530
分解为并发处理

00:11:42.660 --> 00:11:50.520
友好的api，没有续集权

00:11:46.530 --> 00:11:54.210
我的数据可以绘制图表的想法

00:11:50.520 --> 00:11:56.910
并水平缩放

00:11:54.210 --> 00:11:58.860
这是今天更大趋势的一部分

00:11:56.910 --> 00:12:00.630
我们将谈论微服务

00:11:58.860 --> 00:12:03.630
当我们在那里谈论微服务时

00:12:00.630 --> 00:12:06.090
您可能会遵循的一些规则是

00:12:03.630 --> 00:12:08.640
你应该拥抱api的亚马逊

00:12:06.090 --> 00:12:11.340
著名的法令是，他们所有的服务

00:12:08.640 --> 00:12:13.680
应该传达不存在的API 

00:12:11.340 --> 00:12:18.660
服务应与另一服务对话

00:12:13.680 --> 00:12:20.460
数据库状态，因此他们有

00:12:18.660 --> 00:12:26.960
做很多工作以确保

00:12:20.460 --> 00:12:30.360
他们的应用程序可用

00:12:26.960 --> 00:12:32.850
工作，他们的应用程序是

00:12:30.360 --> 00:12:35.540
容易获得，而且价格便宜， 

00:12:32.850 --> 00:12:38.070
无摩擦地支撑这些服务

00:12:35.540 --> 00:12:40.290
另一个重要特征是这个想法

00:12:38.070 --> 00:12:42.650
独立可部署性的想法

00:12:40.290 --> 00:12:46.100
我可以部署服务而无需

00:12:42.650 --> 00:12:49.970
同步或等待另一个团队

00:12:46.100 --> 00:12:52.290
我们尽可能地正确

00:12:49.970 --> 00:12:57.690
当我们谈论独立于

00:12:52.290 --> 00:13:00.060
可部署性，尽管可能有些

00:12:57.690 --> 00:13:05.900
想念被误导的博客作者可能会说我们

00:13:00.060 --> 00:13:10.470
不谈论DLL的问题，所以

00:13:05.900 --> 00:13:13.110
刚把那个放到床上好吧，所以先

00:13:10.470 --> 00:13:15.030
首先要想做的事

00:13:13.110 --> 00:13:17.760
建立应用程序和API的速度很快

00:13:15.030 --> 00:13:20.190
尽可能简单

00:13:17.760 --> 00:13:22.560
如果你有机会看看春天

00:13:20.190 --> 00:13:25.050
启动，那么你知道这已经死了

00:13:22.560 --> 00:13:26.970
这些天来构建API很简单，所以我

00:13:25.050 --> 00:13:29.900
继续构建一个小API 

00:13:26.970 --> 00:13:29.900
在这里我打个招呼

00:13:30.770 --> 00:13:38.670
你好，我会说危险的

00:13:34.740 --> 00:13:45.899
像这样的控制器阅读休息

00:13:38.670 --> 00:13:51.690
控制器好，我会在路径上说

00:13:45.899 --> 00:13:53.160
变量，我要去做什么

00:13:51.690 --> 00:13:55.560
这是我在定义一个非常简单的休息

00:13:53.160 --> 00:14:00.360
 api这是一个服务或回报

00:13:55.560 --> 00:14:02.730
一种无用的信息，但我是

00:14:00.360 --> 00:14:04.080
试图在这里建立的是，如果您

00:14:02.730 --> 00:14:07.020
目标是启动并运行某些东西

00:14:04.080 --> 00:14:09.870
进入，您不必担心

00:14:07.020 --> 00:14:11.820
一切都在于那摩擦是

00:14:09.870 --> 00:14:13.410
很久以来消失不花钱

00:14:11.820 --> 00:14:16.740
这些天来提供服务的一切

00:14:13.410 --> 00:14:19.560
甚至不在JVM上运行，所以这

00:14:16.740 --> 00:14:21.330
实际上是我的愚蠢语言脚本

00:14:19.560 --> 00:14:24.180
也将添加我将使用很棒

00:14:21.330 --> 00:14:25.740
抓住这是一种令人讨厌的语言

00:14:24.180 --> 00:14:30.060
告诉你，这是一个设施

00:14:25.740 --> 00:14:31.770
有点像行家或Gradle 

00:14:30.060 --> 00:14:33.750
依赖解决方案，并带来他们

00:14:31.770 --> 00:14:35.790
进入classpath，所以我可以说我想要

00:14:33.750 --> 00:14:38.160
使用具有

00:14:35.790 --> 00:14:40.410
明确的神器

00:14:38.160 --> 00:14:47.730
可作为Spring Boot启动器解决

00:14:40.410 --> 00:14:54.600
执行器正常，弹簧向V打个招呼

00:14:47.730 --> 00:14:58.550
一旦启动，它将是

00:14:54.600 --> 00:15:01.550
可用的本地主机保留，因此

00:14:58.550 --> 00:15:01.550
高

00:15:01.580 --> 00:15:04.690
我们打招呼

00:15:05.870 --> 00:15:12.320
可怜的老啊，好的，所以我们去那里了

00:15:11.089 --> 00:15:15.650
我的小憩服务开始运作

00:15:12.320 --> 00:15:17.960
就是这样， 

00:15:15.650 --> 00:15:19.940
其实我可以去做这样的指标

00:15:17.960 --> 00:15:22.690
这是通过执行器让我

00:15:19.940 --> 00:15:27.150
在这里切换我的浏览器给你一个

00:15:22.690 --> 00:15:32.440
简单的漂亮打印插件在这里

00:15:27.150 --> 00:15:33.430
指标，我可以找到指标

00:15:32.440 --> 00:15:36.190
有关状态的信息

00:15:33.430 --> 00:15:37.930
我去追踪的应用程序，我可以看到

00:15:36.190 --> 00:15:38.740
请求日志你知道多少

00:15:37.930 --> 00:15:40.750
已将请求发送到

00:15:38.740 --> 00:15:44.350
应用程序有标题等等

00:15:40.750 --> 00:15:46.660
如果我去env，我会得到有关的信息

00:15:44.350 --> 00:15:49.660
系统属性和Java 

00:15:46.660 --> 00:15:52.630
 kayvyun属性，如果我去转储我得到

00:15:49.660 --> 00:15:54.550
堆栈跟踪（如果我要进入豆子） 

00:15:52.630 --> 00:15:56.860
所有javabeans的计数为

00:15:54.550 --> 00:15:59.050
以及我去的依赖

00:15:56.860 --> 00:16:01.870
映射我得到了所有的春季MVC 

00:15:59.050 --> 00:16:04.270
端点已经暴露在春天

00:16:01.870 --> 00:16:06.190
 MVC控制器，依此类推，再次

00:16:04.270 --> 00:16:08.410
非常容易获得您所需要的应用程序

00:16:06.190 --> 00:16:12.370
可以监控您可以进行分析等等

00:16:08.410 --> 00:16:14.410
在生产中，我可以选择运行

00:16:12.370 --> 00:16:20.350
这些作为罐子，所以我可以说很热你知道

00:16:14.410 --> 00:16:22.150
藏身处藏身罐，我去拿个罐子

00:16:20.350 --> 00:16:24.460
时不时地和我刚才一样

00:16:22.150 --> 00:16:29.760
在我可以说双罐子之前

00:16:24.460 --> 00:16:36.250
将启动的jar，我们在这里

00:16:29.760 --> 00:16:38.350
本地主机嗨，我们去，甚至更好

00:16:36.250 --> 00:16:41.320
我可以用

00:16:38.350 --> 00:16:42.400
明智地使用财产对

00:16:41.320 --> 00:16:44.170
如果您知道春季展台的示例

00:16:42.400 --> 00:16:46.180
那么你知道它支持一个属性

00:16:44.170 --> 00:16:49.120
叫服务器那个端口，所以我可以说

00:16:46.180 --> 00:16:51.460
 java我的SD服务器端口等于八

00:16:49.120 --> 00:16:53.610
例如千，负rr 

00:16:51.460 --> 00:16:56.050
等于演示演示或隐藏jar和

00:16:53.610 --> 00:17:00.430
然后启动它，并覆盖

00:16:56.050 --> 00:17:06.459
默认并建立属性，所以我们

00:17:00.430 --> 00:17:08.230
又是一千对，所以再次

00:17:06.459 --> 00:17:09.400
非常非常自然地建立服务

00:17:08.230 --> 00:17:12.040
如果有人告诉你很快

00:17:09.400 --> 00:17:13.630
否则你可以告诉他们退房

00:17:12.040 --> 00:17:15.760
 spring boot ，所以这不是问题

00:17:13.630 --> 00:17:19.270
对，没有理由你应该有

00:17:15.760 --> 00:17:23.199
今天确实很难建立服务

00:17:19.270 --> 00:17:24.910
大多数人在他们遇到的问题

00:17:23.199 --> 00:17:27.520
尝试使这些服务正常运行

00:17:24.910 --> 00:17:30.070
一起引入了脆弱性

00:17:27.520 --> 00:17:34.120
是摩擦力所在的地方

00:17:30.070 --> 00:17:37.210
因此，我们真的

00:17:34.120 --> 00:17:38.470
想有点春天

00:17:37.210 --> 00:17:40.240
进一步，我们如何在此基础上

00:17:38.470 --> 00:17:43.149
编程模型并解决

00:17:40.240 --> 00:17:45.850
服务弹性的问题空间

00:17:43.149 --> 00:17:47.020
同样，netflix的示例是

00:17:45.850 --> 00:17:49.059
他们有600种不同的

00:17:47.020 --> 00:17:51.220
各自通信的微服务

00:17:49.059 --> 00:17:52.890
你知道每个人都可以交流

00:17:51.220 --> 00:17:55.029
以及任何其他服务，以及

00:17:52.890 --> 00:17:56.380
他们试图保持他们的服务

00:17:55.029 --> 00:17:58.330
以及它们的可用性高达

00:17:56.380 --> 00:18:00.760
可能有六百种不同

00:17:58.330 --> 00:18:05.500
微服务有点天真

00:18:00.760 --> 00:18:08.770
假设他们可以保留您的SLA 

00:18:05.500 --> 00:18:10.840
即使没事也知道

00:18:08.770 --> 00:18:14.559
相反，他们计划的软件是

00:18:10.840 --> 00:18:15.880
对失败具有弹性，而Netflix则没有

00:18:14.559 --> 00:18:18.100
唯一走过这条路的人

00:18:15.880 --> 00:18:21.809
当然，谷歌当然不得不

00:18:18.100 --> 00:18:24.429
 Facebook的开始之路

00:18:21.809 --> 00:18:27.789
当然，他们必须尝试

00:18:24.429 --> 00:18:30.700
并使这项工作以及我拥有的Twitter 

00:18:27.789 --> 00:18:33.760
走这条路线当然淘宝哪个

00:18:30.700 --> 00:18:35.860
是中国的电子商务引擎

00:18:33.760 --> 00:18:37.990
像亚马逊和eBay一样接受淘宝

00:18:35.860 --> 00:18:42.730
比亚马逊和易趣赚更多的钱

00:18:37.990 --> 00:18:45.159
与百度相结合，这是一个

00:18:42.730 --> 00:18:48.940
服务700到800的搜索引擎

00:18:45.159 --> 00:18:50.260
中国有一百万人

00:18:48.940 --> 00:18:51.130
搜索中的第三大牧场

00:18:50.260 --> 00:18:53.140
世界上的引擎，当然

00:18:51.130 --> 00:18:54.460
在黄金时间傍晚的Netflix 

00:18:53.140 --> 00:18:55.870
美国占的小时数

00:18:54.460 --> 00:18:59.289
大约百分之八十

00:18:55.870 --> 00:19:01.120
这些都是互联网流量

00:18:59.289 --> 00:19:03.250
还必须制造的公司

00:19:01.120 --> 00:19:06.039
这次跋涉，他们除了

00:19:03.250 --> 00:19:08.970
春天，总是和你说话

00:19:06.039 --> 00:19:12.100
他们你发现他们必须建立一个

00:19:08.970 --> 00:19:14.950
顶层以解决此属性的

00:19:12.100 --> 00:19:17.020
问题，所以我们很棒

00:19:14.950 --> 00:19:18.669
崇拜者，例如他们拥有的Netflix 

00:19:17.020 --> 00:19:22.000
建立了很多很棒的东西，他们已经

00:19:18.669 --> 00:19:24.070
开源很多，我们会

00:19:22.000 --> 00:19:25.240
当我们建立时以此为灵感

00:19:24.070 --> 00:19:26.649
所谓的春天云

00:19:25.240 --> 00:19:28.990
集成允许这些部分以及

00:19:26.649 --> 00:19:29.950
来自其他技术堆栈的碎片

00:19:28.990 --> 00:19:32.230
我们今天要看的是

00:19:29.950 --> 00:19:33.970
特别是弹簧里面的位

00:19:32.230 --> 00:19:35.230
云再次忽略了很多其他

00:19:33.970 --> 00:19:38.440
 Spring Cloud提供的功能

00:19:35.230 --> 00:19:40.299
围绕安全性和分布式

00:19:38.440 --> 00:19:41.679
配置和消息传递以及所有这些

00:19:40.299 --> 00:19:45.159
我们将专门研究

00:19:41.679 --> 00:19:48.510
可以帮助您构建坚固的钻头

00:19:45.159 --> 00:19:50.310
服务到服务的交互还可以

00:19:48.510 --> 00:19:51.660
我们将在这里看一个项目

00:19:50.310 --> 00:19:54.090
顺便说一句，我们在同一个

00:19:51.660 --> 00:19:56.310
您可以再次在家跟随的页面

00:19:54.090 --> 00:19:59.100
代码在我的github github com上

00:19:56.310 --> 00:20:02.400
色情影片乔什·朗波特/战利品

00:19:59.100 --> 00:20:04.410
连字符微服务好，所以代码是

00:20:02.400 --> 00:20:06.420
我将要存在的全部充实

00:20:04.410 --> 00:20:09.360
形式我在这里是一个但一个

00:20:06.420 --> 00:20:12.600
我要去的骨架

00:20:09.360 --> 00:20:15.540
站起来配置服务

00:20:12.600 --> 00:20:18.210
只是一种代理

00:20:15.540 --> 00:20:21.060
我的意思是配置文件

00:20:18.210 --> 00:20:24.360
大多数文件还可以，而这些yamo文件

00:20:21.060 --> 00:20:25.950
住在我的主目录中

00:20:24.360 --> 00:20:27.600
在名为beautiful的目录下

00:20:25.950 --> 00:20:30.600
微服务配置

00:20:27.600 --> 00:20:32.370
如果您愿意，还可以使用存储库

00:20:30.600 --> 00:20:34.740
在我的github存储库中

00:20:32.370 --> 00:20:36.660
是的，所以您可以克隆那些

00:20:34.740 --> 00:20:39.210
我也不会花太多时间

00:20:36.660 --> 00:20:41.550
查看这些配置文件，但是

00:20:39.210 --> 00:20:44.160
足以说我没有保留

00:20:41.550 --> 00:20:46.800
配置以及模块

00:20:44.160 --> 00:20:49.740
在这里，因为这是个好方法

00:20:46.800 --> 00:20:51.890
 d＆D夫妇一对配置

00:20:49.740 --> 00:20:54.960
从消耗它的应用程序中

00:20:51.890 --> 00:20:57.390
最好在前面介绍

00:20:54.960 --> 00:20:58.950
我在Spring Cloud和上完成的网络研讨会

00:20:57.390 --> 00:21:02.490
当然参考文档是

00:20:58.950 --> 00:21:05.760
首屈一指，有一个博客

00:21:02.490 --> 00:21:08.010
可能会检查我是否会如此谦虚地推荐

00:21:05.760 --> 00:21:09.330
这是我写了几个月的书

00:21:08.010 --> 00:21:13.050
以前称为12事实环绕式

00:21:09.330 --> 00:21:14.700
配置，并开车回家

00:21:13.050 --> 00:21:16.260
指向这里，但关键是我明白了

00:21:14.700 --> 00:21:19.050
在此应用程序中

00:21:16.260 --> 00:21:21.750
服务，我需要站起来

00:21:19.050 --> 00:21:24.240
配置服务器，所以我会这样做

00:21:21.750 --> 00:21:27.330
启用春季食品应用

00:21:24.240 --> 00:21:30.250
我认为它已经是配置服务器

00:21:27.330 --> 00:21:32.670
复古运行

00:21:30.250 --> 00:21:32.670
这不好

00:21:36.880 --> 00:21:39.660
好

00:21:40.039 --> 00:21:43.350
您

00:21:41.860 --> 00:21:45.390
您

00:21:43.350 --> 00:21:48.620
我开始了其中两个，我想

00:21:45.390 --> 00:21:48.620
再次运行

00:21:49.190 --> 00:21:55.370
然后从这里我们可以公平地

00:21:52.580 --> 00:21:57.290
好吧，我要做的第一件事就是

00:21:55.370 --> 00:21:58.910
站起来是什么服务电话簿

00:21:57.290 --> 00:22:01.280
登记我想要我的想法

00:21:58.910 --> 00:22:03.440
您可能知道的任何服务都会增长

00:22:01.280 --> 00:22:07.100
能够发现彼此的数字

00:22:03.440 --> 00:22:09.230
对，为了做到这一点，我想要

00:22:07.100 --> 00:22:11.360
它们不受拓扑变化的影响

00:22:09.230 --> 00:22:14.240
例如在云环境中

00:22:11.360 --> 00:22:16.460
例如Cloud Foundry或Heroku或open 

00:22:14.240 --> 00:22:19.250
转移或实际上只是亚马逊网络

00:22:16.460 --> 00:22:21.850
直接服务是短暂的

00:22:19.250 --> 00:22:26.420
他们来来往往取决于容量

00:22:21.850 --> 00:22:28.100
他们住的地方不是很多

00:22:26.420 --> 00:22:32.180
事实如此重要

00:22:28.100 --> 00:22:33.740
可以使用，以便

00:22:32.180 --> 00:22:35.270
去耦位通常

00:22:33.740 --> 00:22:36.590
通过一个称为

00:22:35.270 --> 00:22:39.590
服务注册表有几个

00:22:36.590 --> 00:22:41.690
 Netflix有不同的选择

00:22:39.590 --> 00:22:44.210
叫做尤里卡（Eureka）的东西

00:22:41.690 --> 00:22:46.400
服务注册表非常非常简单

00:22:44.210 --> 00:22:47.960
在您的应用程序中使用Eureka 

00:22:46.400 --> 00:22:53.990
我们将继续进行并建立一个

00:22:47.960 --> 00:22:55.910
它的实例在这里，你需要得到你的

00:22:53.990 --> 00:22:57.680
一周适当忽略配置

00:22:55.910 --> 00:22:58.940
一点，那你就知道开始了

00:22:57.680 --> 00:23:00.260
另一天，但你得到一个星期

00:22:58.940 --> 00:23:02.860
正确的你需要Spring Cloud Starter 

00:23:00.260 --> 00:23:04.940
您最弱的服务器，然后您需要一个

00:23:02.860 --> 00:23:09.910
你会说public static void main 

00:23:04.940 --> 00:23:14.500
尤里卡应用程序，例如好和

00:23:09.910 --> 00:23:14.500
我会在这里作弊

00:23:15.220 --> 00:23:20.530
看起来根本不需要

00:23:17.140 --> 00:23:22.539
好的，那是我的一周

00:23:20.530 --> 00:23:24.370
应用程序将设置一个站立

00:23:22.539 --> 00:23:25.600
服务注册表再次这是

00:23:24.370 --> 00:23:27.789
重要的是，这是

00:23:25.600 --> 00:23:32.250
我需要一个注释，它将

00:23:27.789 --> 00:23:32.250
站起来基于netflixs的注册表

00:23:32.400 --> 00:23:36.669
你，因为你有其他服务

00:23:34.510 --> 00:23:40.120
 Hachey Corp的控制台等选项

00:23:36.669 --> 00:23:44.590
那些无所事事的公司

00:23:40.120 --> 00:23:46.840
冲浪等等，还有一个动物园

00:23:44.590 --> 00:23:48.460
饲养员佩佩动物园管理员，这是一个非常

00:23:46.840 --> 00:23:51.130
你知道非常多产的法院

00:23:48.460 --> 00:23:54.789
协调注册表也很好

00:23:51.130 --> 00:23:57.280
而且它们都高度可用

00:23:54.789 --> 00:23:58.960
在我们的情况下可用的模式

00:23:57.280 --> 00:24:01.570
站起来一个尤里卡实例

00:23:58.960 --> 00:24:03.580
您会在我们使用它的过程中看到它

00:24:01.570 --> 00:24:06.700
不喜欢它会

00:24:03.580 --> 00:24:10.419
大声鼓励你去

00:24:06.700 --> 00:24:15.789
重新考虑自己的愚蠢方式87 

00:24:10.419 --> 00:24:18.309
 61我们在那里，所以没有服务

00:24:15.789 --> 00:24:20.169
在这里可用，好，我还没有注册

00:24:18.309 --> 00:24:21.730
但我还没有开始任何服务

00:24:20.169 --> 00:24:23.890
这样才有意义

00:24:21.730 --> 00:24:28.510
除此之外，虽然这很漂亮

00:24:23.890 --> 00:24:31.150
基本，您知道湿件和那里的U​​I 

00:24:28.510 --> 00:24:34.510
也是REST API，这表明

00:24:31.150 --> 00:24:36.820
不喜欢我的非高度

00:24:34.510 --> 00:24:38.740
可用配置例外

00:24:36.820 --> 00:24:42.630
你看这里是从耳朵复制品

00:24:38.740 --> 00:24:46.179
可用的东西，这吹大块

00:24:42.630 --> 00:24:48.789
从这个角度来看，这是一个湿器

00:24:46.179 --> 00:24:53.169
数据，但还有一个REST API 

00:24:48.789 --> 00:24:57.120
机器还可以，理论上有一个

00:24:53.169 --> 00:24:59.320
化妆品哦，不，我忘了，但是有一个

00:24:57.120 --> 00:25:01.030
有一个终点可以作为

00:24:59.320 --> 00:25:03.940
好吧，你想处理

00:25:01.030 --> 00:25:05.460
终点也直接看到，但这是

00:25:03.940 --> 00:25:07.000
他们的权利，所以这是一个API， 

00:25:05.460 --> 00:25:09.610
服务将要注册

00:25:07.000 --> 00:25:11.650
自己在里面，他们将只是

00:25:09.610 --> 00:25:14.169
能够通过服务发现彼此

00:25:11.650 --> 00:25:16.150
这里的ID，以便了解我们的那些服务

00:25:14.169 --> 00:25:18.490
第一个将成为书签

00:25:16.150 --> 00:25:20.620
服务这是一项服务， 

00:25:18.490 --> 00:25:23.380
维护书签数据的集合

00:25:20.620 --> 00:25:26.020
对我们来说又不是特别

00:25:23.380 --> 00:25:28.179
迷人，但我只想拥有

00:25:26.020 --> 00:25:28.750
两种不同的API级别

00:25:28.179 --> 00:25:32.350
连接到

00:25:28.750 --> 00:25:34.720
稍后在书签服务上是

00:25:32.350 --> 00:25:36.900
漂亮的样板春天短靴

00:25:34.720 --> 00:25:41.620
应用程序，所以我们说书签

00:25:36.900 --> 00:25:45.690
像这样的应用程序和命令jbm 

00:25:41.620 --> 00:25:48.580
书签Java您在这里看到的是

00:25:45.690 --> 00:25:50.680
相当，你再次知道世界

00:25:48.580 --> 00:25:52.210
对，这是一个公共的静态无效主体，所以

00:25:50.680 --> 00:25:54.580
我有运行的spring应用程序

00:25:52.210 --> 00:25:56.080
这是 spring boot ，我正在使用弹簧

00:25:54.580 --> 00:25:57.940
客户端应用程序注释是

00:25:56.080 --> 00:26:00.490
说我希望这个应用程序是一个

00:25:57.940 --> 00:26:03.100
 spring boot 应用程序，我要去

00:26:00.490 --> 00:26:05.590
使电路断路器

00:26:03.100 --> 00:26:07.810
和发现客户端，这是一个

00:26:05.590 --> 00:26:11.860
我们的服务注册表的客户端API 

00:26:07.810 --> 00:26:13.690
在这种情况下，尤里卡我要去

00:26:11.860 --> 00:26:16.930
命令行在这里运行

00:26:13.690 --> 00:26:18.040
命令行运行程序将启动借口

00:26:16.930 --> 00:26:21.310
我这个命令行运行程序将启动

00:26:18.040 --> 00:26:23.200
起来，他们将为创建书签

00:26:21.310 --> 00:26:25.930
每个用户，所以此收集此代码

00:26:23.200 --> 00:26:27.820
这里将简单地遍历这些

00:26:25.930 --> 00:26:30.550
五个不同的名称，每个名称

00:26:27.820 --> 00:26:33.370
用户ID，它将创建一个书签对象

00:26:30.550 --> 00:26:36.340
给那个用户，所以我有五个

00:26:33.370 --> 00:26:39.480
在我的数据库中将对象添加为书签

00:26:36.340 --> 00:26:43.360
这种情况是基于H2的数据库， 

00:26:39.480 --> 00:26:45.160
我将用来将数据k peda转换为

00:26:43.360 --> 00:26:47.290
节省一切我休息

00:26:45.160 --> 00:26:50.350
控制器出口少，出口到

00:26:47.290 --> 00:26:53.380
用户ID下的书签提供了这样的功能

00:26:50.350 --> 00:26:55.660
书签还可以吗Matt相当普通

00:26:53.380 --> 00:26:59.980
 JP实体的名字没什么特别的

00:26:55.660 --> 00:27:03.190
所以让我们运行它会注册

00:26:59.980 --> 00:27:05.680
本身在经纪人中使用的名称

00:27:03.190 --> 00:27:08.230
在引导程序中已经给出了

00:27:05.680 --> 00:27:12.370
 yamo属性文件，现在这是一个

00:27:08.230 --> 00:27:13.960
春天的云ism这是非常相似的

00:27:12.370 --> 00:27:15.910
 spring boot 的加载倾向

00:27:13.960 --> 00:27:17.770
您每年的应用程序应用程序

00:27:15.910 --> 00:27:19.330
应用是财产春天云

00:27:17.770 --> 00:27:21.280
柳树引导到翡翠佛

00:27:19.330 --> 00:27:22.690
章节属性这是一个文件吗

00:27:21.280 --> 00:27:25.900
在应用程序之前加载

00:27:22.690 --> 00:27:28.780
等价的，那是因为

00:27:25.900 --> 00:27:30.580
例如这些是这些值

00:27:28.780 --> 00:27:34.330
例子春天云配置你我

00:27:30.580 --> 00:27:35.950
弹簧引导加载所需的路径

00:27:34.330 --> 00:27:37.650
其余的属性

00:27:35.950 --> 00:27:39.850
重新配置应用程序

00:27:37.650 --> 00:27:42.070
不想太多，但我们在乎

00:27:39.850 --> 00:27:42.550
大约是这是

00:27:42.070 --> 00:27:46.390
贴花

00:27:42.550 --> 00:27:49.660
如果我们重新访问尤里卡，将会看到

00:27:46.390 --> 00:27:52.090
是的，非常非常不快乐， 

00:27:49.660 --> 00:27:55.780
已注册，因此该应用程序是

00:27:52.090 --> 00:27:57.460
在这里我可以运行另一个书签服务

00:27:55.780 --> 00:27:59.380
书签服务的实例和

00:27:57.460 --> 00:28:01.510
再次我能做到的原因是

00:27:59.380 --> 00:28:04.780
因为我还没有配置服务器

00:28:01.510 --> 00:28:06.340
默认情况下，该端口将

00:28:04.780 --> 00:28:09.820
配置服务器，它正在寻找

00:28:06.340 --> 00:28:11.920
配置和您的配置

00:28:09.820 --> 00:28:16.150
知道书签服务不

00:28:11.920 --> 00:28:18.160
专门为端口指定任何内容

00:28:16.150 --> 00:28:20.410
所以它会掉落，你知道掉落

00:28:18.160 --> 00:28:22.450
到您知道的每个默认值

00:28:20.410 --> 00:28:24.280
男人的属性文件称为应用程序

00:28:22.450 --> 00:28:26.350
弹药，我在那里有财产

00:28:24.280 --> 00:28:27.970
称为服务器报告，其中指出

00:28:26.350 --> 00:28:31.120
有一个端口变量更喜欢

00:28:27.970 --> 00:28:32.950
否则有点嵌套

00:28:31.120 --> 00:28:35.560
有一个服务器端口变量首选

00:28:32.950 --> 00:28:37.330
否则为0和0 

00:28:35.560 --> 00:28:39.460
 spring boot 意味着给我分配一个

00:28:37.330 --> 00:28:42.070
随机一个，这样我就可以摆脱

00:28:39.460 --> 00:28:43.960
我本地机器上的骗子

00:28:42.070 --> 00:28:50.400
我将再次运行它，没有任何

00:28:43.960 --> 00:28:50.400
碰撞的忧虑，以及当我们这样做时

00:28:53.470 --> 00:28:59.230
几分钟或几秒钟就可以了

00:28:57.070 --> 00:29:02.679
时间，我们应该在这里看到这种状态

00:28:59.230 --> 00:29:05.640
从1到1是一个增量

00:29:02.679 --> 00:29:09.850
两个是很自然的

00:29:05.640 --> 00:29:12.039
响应是200，所以您可以看到

00:29:09.850 --> 00:29:15.159
已经与您交谈，我们将使用

00:29:12.039 --> 00:29:18.190
心跳，我们只需要它来反映

00:29:15.159 --> 00:29:19.390
在这里，这些信息很有价值

00:29:18.190 --> 00:29:21.460
因为现在你知道我想要

00:29:19.390 --> 00:29:23.890
获取所有可用的实例

00:29:21.460 --> 00:29:26.020
那个服务时代看到了

00:29:23.890 --> 00:29:27.340
发现客户书签服务我们

00:29:26.020 --> 00:29:28.780
注册应用书签服务

00:29:27.340 --> 00:29:31.590
注册服务注册状态

00:29:28.780 --> 00:29:31.590
 204和

00:29:32.880 --> 00:29:35.810
分开

00:29:36.400 --> 00:29:38.460
您

00:29:41.940 --> 00:29:44.000
您

00:29:44.830 --> 00:29:47.580
我的

00:29:50.669 --> 00:29:55.110
您

00:29:52.470 --> 00:29:56.850
那很有意思

00:29:55.110 --> 00:29:58.559
我从来没有尝试过相同的节点

00:29:56.850 --> 00:30:00.350
我知道它可以在多个节点上运行

00:29:58.559 --> 00:30:03.540
因为肯定从那里开始哦

00:30:00.350 --> 00:30:06.260
好吧，所以我想那是行不通的

00:30:03.540 --> 00:30:08.610
无论如何，但相同的节点

00:30:06.260 --> 00:30:12.480
服务到了，有一个我们

00:30:08.610 --> 00:30:14.940
想谈谈我杀了的好东西

00:30:12.480 --> 00:30:16.260
他们两个在这种情况下，我们在

00:30:14.940 --> 00:30:20.190
然后我们继续下一个

00:30:16.260 --> 00:30:21.990
 DM联系服务

00:30:20.190 --> 00:30:24.090
和联系服务非常像

00:30:21.990 --> 00:30:25.830
书签服务只是一个API 

00:30:24.090 --> 00:30:28.200
将保留所有联系人

00:30:25.830 --> 00:30:31.799
为不同用户提供的信息还可以

00:30:28.200 --> 00:30:33.660
我将在此处恢复此模块

00:30:31.799 --> 00:30:36.390
服务

00:30:33.660 --> 00:30:38.930
我要添加一个上下文上下文

00:30:36.390 --> 00:30:38.930
应用

00:30:39.680 --> 00:30:41.740
您

00:30:41.749 --> 00:30:52.080
好的，很好，还有

00:30:51.479 --> 00:30:55.019
联系

00:30:52.080 --> 00:30:56.250
位置和我以前一样

00:30:55.019 --> 00:30:57.630
有一个命令行运行器，它将开始

00:30:56.250 --> 00:30:59.519
春季开始，良好的应用程序开始

00:30:57.630 --> 00:31:01.529
可以通过这个集合

00:30:59.519 --> 00:31:04.919
用户ID，然后为每个用户

00:31:01.529 --> 00:31:06.299
创建一到三个不同的上下文

00:31:04.919 --> 00:31:09.299
你知道有点像电话簿

00:31:06.299 --> 00:31:11.130
麦克斯韦电话簿为这些

00:31:09.299 --> 00:31:12.419
三个不同的名称，我将保存在

00:31:11.130 --> 00:31:13.590
数据库还好，所以现在唯一的事情

00:31:12.419 --> 00:31:15.480
我将用来关联

00:31:13.590 --> 00:31:17.789
要求更改服务是

00:31:15.480 --> 00:31:22.019
用户ID联系人和书签

00:31:17.789 --> 00:31:24.809
都在用户下方

00:31:22.019 --> 00:31:27.570
如果您正在使用ID查看路线，可以再次使用

00:31:24.809 --> 00:31:29.970
在面向生产的系统中

00:31:27.570 --> 00:31:32.610
您将在

00:31:29.970 --> 00:31:35.130
 URI路径中用于关联的用户ID 

00:31:32.610 --> 00:31:38.399
例如，您可能会使用

00:31:35.130 --> 00:31:41.730
用户上下文，他们可能会使用spring 

00:31:38.399 --> 00:31:43.860
云安全访问令牌的权利

00:31:41.730 --> 00:31:45.840
是春天出现的访问令牌

00:31:43.860 --> 00:31:48.269
Spring Security ，所有灾难都会使人丧命

00:31:45.840 --> 00:31:53.070
既容易站起来生产又

00:31:48.269 --> 00:31:55.250
消耗好吧，让我们开始运行

00:31:53.070 --> 00:31:55.250
这个

00:31:56.399 --> 00:32:01.220
好

00:31:57.560 --> 00:32:05.360
服务回奇妙的联系

00:32:01.220 --> 00:32:09.650
服务应该启动并开始运行

00:32:05.360 --> 00:32:12.680
在这里运行，我们去给

00:32:09.650 --> 00:32:16.280
一秒钟，我们将看到它可用

00:32:12.680 --> 00:32:18.070
联系服务只是联系服务

00:32:16.280 --> 00:32:20.510
就像书签服务暴露的那样

00:32:18.070 --> 00:32:22.970
用户ID下的上下文，因此

00:32:20.510 --> 00:32:25.730
用户ID下的书签服务

00:32:22.970 --> 00:32:28.000
为联系服务用户标识添加书签

00:32:25.730 --> 00:32:30.680
我说的这些联系方式是

00:32:28.000 --> 00:32:32.240
强迫工程师奎因判你

00:32:30.680 --> 00:32:33.620
稍后可能会使用访问令牌，但是

00:32:32.240 --> 00:32:35.360
在其他方面，这些服务

00:32:33.620 --> 00:32:36.770
彼此一无所知吧

00:32:35.360 --> 00:32:39.200
在面向服务中非常常见

00:32:36.770 --> 00:32:41.000
世界，你可能会看所有可编程的

00:32:39.200 --> 00:32:42.320
用来登录的不同服务

00:32:41.000 --> 00:32:46.700
 Facebook，你知道他们实际上并没有

00:32:42.320 --> 00:32:49.280
有自己的ID或

00:32:46.700 --> 00:32:51.080
您作为用户的身份概念

00:32:49.280 --> 00:32:54.920
他们有他们共享的ID 

00:32:51.080 --> 00:32:56.330
与Facebook或扩展

00:32:54.920 --> 00:32:59.930
访问他们共享的令牌

00:32:56.330 --> 00:33:02.630
和ID一样好的Facebook 

00:32:59.930 --> 00:33:03.770
现在，两者中的书签服务

00:33:02.630 --> 00:33:06.050
自动联系服务

00:33:03.770 --> 00:33:09.530
以自己的方式注册自己

00:33:06.050 --> 00:33:10.880
能够做到的是每个一个

00:33:09.530 --> 00:33:13.340
这些模块又非常非常简单

00:33:10.880 --> 00:33:15.980
 spring boot 式服务，这是我的网站

00:33:13.340 --> 00:33:17.620
支持我的配置客户端支持

00:33:15.980 --> 00:33:20.060
我们不是不是那个而是

00:33:17.620 --> 00:33:22.430
 spring boot 支持JPA 

00:33:20.060 --> 00:33:25.580
用于管理指标的执行器位

00:33:22.430 --> 00:33:28.760
端点和尤里卡尤其如此

00:33:25.580 --> 00:33:30.260
 Eureka模块是客户端

00:33:28.760 --> 00:33:32.750
在您一周之前就提供支持

00:33:30.260 --> 00:33:35.390
服务器在这里是Eureka 

00:33:32.750 --> 00:33:38.240
提供spring boot自动配置

00:33:35.390 --> 00:33:40.790
将采用当前的应用程序

00:33:38.240 --> 00:33:42.740
带出姓名联系的地点

00:33:40.790 --> 00:33:45.530
 Eureka服务注册表，然后再次

00:33:42.740 --> 00:33:46.970
它会通过寻找

00:33:45.530 --> 00:33:49.910
配置在配置中

00:33:46.970 --> 00:33:51.290
在这种情况下，我知道你的服务器

00:33:49.910 --> 00:33:52.160
我需要与之交谈的所有节点

00:33:51.290 --> 00:33:54.320
你这一周将需要同样的

00:33:52.160 --> 00:33:55.820
价值，所以我把它放在应用程序中

00:33:54.320 --> 00:33:58.220
黄色，然后我所有的服务共享

00:33:55.820 --> 00:34:00.290
 yamo和他们要去的应用程序

00:33:58.220 --> 00:34:06.350
调用尤里卡客户服务URL 

00:34:00.290 --> 00:34:08.360
默认区域，这是您所知道的

00:34:06.350 --> 00:34:10.320
财产占位符解析

00:34:08.360 --> 00:34:14.430
该机制将用于

00:34:10.320 --> 00:34:16.410
找到我要去的注册表

00:34:14.430 --> 00:34:19.320
尝试通过此环境解决它

00:34:16.410 --> 00:34:22.350
这个环境财产，或者如果我

00:34:19.320 --> 00:34:25.830
俄克拉荷马州没有这个属性

00:34:22.350 --> 00:34:27.870
冒号8760一个好吧，那就是这样

00:34:25.830 --> 00:34:29.280
我保证那个弹簧夹

00:34:27.870 --> 00:34:31.800
每个Spring Cloud微服务都能够

00:34:29.280 --> 00:34:36.420
查找已注册的注册

00:34:31.800 --> 00:34:38.910
一步一步地运行，我会

00:34:36.420 --> 00:34:43.920
也有能力例如

00:34:38.910 --> 00:34:48.510
我的代码注入以及其中的每一个

00:34:43.920 --> 00:34:54.599
服务我实际上可以注入一个空白

00:34:48.510 --> 00:34:57.339
资产实例实例信息

00:34:54.599 --> 00:35:00.749
好吧，例如，我正在使用信标

00:34:57.339 --> 00:35:05.499
这种情况下，我可以使用信息来获取

00:35:00.749 --> 00:35:08.259
元数据，我实际上可以设置值

00:35:05.499 --> 00:35:10.509
在那里，我也可以读取值

00:35:08.259 --> 00:35:11.619
是春天的云去的对象

00:35:10.509 --> 00:35:14.049
为此配置此

00:35:11.619 --> 00:35:16.269
我可以为此特定节点的实例

00:35:14.049 --> 00:35:18.130
实际添加元数据我可以说哦

00:35:16.269 --> 00:35:21.609
你知道饼干或类似的东西

00:35:18.130 --> 00:35:23.259
或者我想说的任何我可以说的

00:35:21.609 --> 00:35:26.079
将元数据添加到注册表中

00:35:23.259 --> 00:35:28.239
然后稍后在右边查询，这是

00:35:26.079 --> 00:35:31.690
实际上是一个非常非常强大的模式

00:35:28.239 --> 00:35:33.219
我可以使用该元数据来

00:35:31.690 --> 00:35:36.309
划分服务集的种类

00:35:33.219 --> 00:35:39.910
特定节点支持的角色或

00:35:36.309 --> 00:35:41.559
现在可以正常播放了

00:35:39.910 --> 00:35:46.239
护照服务或护照服务

00:35:41.559 --> 00:35:50.019
它将是客户的一种

00:35:46.239 --> 00:35:53.769
我们的Spring云的聚集点

00:35:50.019 --> 00:35:58.019
微服务护照服务将

00:35:53.769 --> 00:35:58.019
使用联系人和书签

00:35:58.860 --> 00:36:01.580
好

00:36:01.790 --> 00:36:10.070
这是一个相当简单的BM 

00:36:06.050 --> 00:36:11.900
绝望的Java实际上是公平的

00:36:10.070 --> 00:36:14.000
男人继续在这里，所以我们会走向它

00:36:11.900 --> 00:36:16.360
一件一件地做我想做的事

00:36:14.000 --> 00:36:21.350
我试图证明是如何

00:36:16.360 --> 00:36:23.600
可以使用其他服务，所以我已经

00:36:21.350 --> 00:36:25.310
在春季潮中赶上 spring boot 

00:36:23.600 --> 00:36:27.560
我已经打开了应用程序

00:36:25.310 --> 00:36:29.660
 netflix很不高兴，动物园我们会回来的

00:36:27.560 --> 00:36:31.760
只需一分钟即可

00:36:29.660 --> 00:36:34.040
这样做，如果你知道应该从

00:36:31.760 --> 00:36:35.270
相当熟悉我们要做什么

00:36:34.040 --> 00:36:37.010
要做的是我们将使用该命令

00:36:35.270 --> 00:36:38.840
线赢家记得这是

00:36:37.010 --> 00:36:41.240
我之前显示的界面

00:36:38.840 --> 00:36:42.710
鉴于公共静态空缺，一份工作

00:36:41.240 --> 00:36:44.990
主字符串参数或获取

00:36:42.710 --> 00:36:47.120
传递给run方法做某事

00:36:44.990 --> 00:36:49.070
对的，这个在

00:36:47.120 --> 00:36:51.880
我开始的春季申请不是

00:36:49.070 --> 00:36:53.990
如果初始化bean是一种方法

00:36:51.880 --> 00:36:56.000
经过配置的bean 

00:36:53.990 --> 00:36:58.310
配置命令行，哪里有办法

00:36:56.000 --> 00:37:01.910
申请后做处理

00:36:58.310 --> 00:37:04.450
已经配置了，所以很棒

00:37:01.910 --> 00:37:06.380
放置一些演示代码的地方，所以第一个

00:37:04.450 --> 00:37:09.050
命令行运行程序的实例

00:37:06.380 --> 00:37:10.970
我们将要在这里有一些东西

00:37:09.050 --> 00:37:13.010
使用Spring Cloud Commons 

00:37:10.970 --> 00:37:15.020
发现客户端现在再次发现

00:37:13.010 --> 00:37:16.970
客户端是客户端API 

00:37:15.020 --> 00:37:18.530
所有这些都通用的抽象

00:37:16.970 --> 00:37:21.200
不同的支持服务注册表

00:37:18.530 --> 00:37:22.670
那春天的云知道并且

00:37:21.200 --> 00:37:25.010
允许我们提出有关

00:37:22.670 --> 00:37:26.720
服务注册表，因此在这种情况下，我们

00:37:25.010 --> 00:37:27.890
将得到一个实施和

00:37:26.720 --> 00:37:29.450
事实上你会猜到哪一个

00:37:27.890 --> 00:37:31.130
如果你看看可用的

00:37:29.450 --> 00:37:32.660
我们在类路径上的实现

00:37:31.130 --> 00:37:35.150
将要实现尤里卡

00:37:32.660 --> 00:37:36.260
发现客户，尽管我们不是

00:37:35.150 --> 00:37:39.470
不知道，因为在运行时

00:37:36.260 --> 00:37:42.380
如果我有接口类型

00:37:39.470 --> 00:37:43.760
如果我使用Spring Cloud支持

00:37:42.380 --> 00:37:45.740
控制台我会实现

00:37:43.760 --> 00:37:47.360
如果我正在使用Spring Cloud支持

00:37:45.740 --> 00:37:49.220
对于动物园管理员，我会得到的

00:37:47.360 --> 00:37:51.410
如果我正在使用spring的实现

00:37:49.220 --> 00:37:53.000
云对网格分布式的支持

00:37:51.410 --> 00:37:55.040
运行时我会实现

00:37:53.000 --> 00:37:59.510
或对于云铸造，我会得到的

00:37:55.040 --> 00:38:01.820
实施等，一旦我完成

00:37:59.510 --> 00:38:03.890
我得到我可以打电话反对

00:38:01.820 --> 00:38:06.410
我可以说发现客户

00:38:03.890 --> 00:38:08.470
客户端我得到实例，这返回一个

00:38:06.410 --> 00:38:10.970
服务实例对象列表和

00:38:08.470 --> 00:38:13.310
这些服务实例是服务

00:38:10.970 --> 00:38:15.620
再次，这是一个界面，所以我会得到一个

00:38:13.310 --> 00:38:17.840
尤里卡特有的实施

00:38:15.620 --> 00:38:19.040
或控制台或任何我可以

00:38:17.840 --> 00:38:22.010
提出诸如服务之类的问题

00:38:19.040 --> 00:38:25.340
主意给定的主机支持等

00:38:22.010 --> 00:38:28.150
服务，我可以表达信息

00:38:25.340 --> 00:38:28.150
关于这项服务

00:38:29.050 --> 00:38:32.410
开始了

00:38:34.860 --> 00:38:36.920
您

00:38:41.220 --> 00:38:51.640
好，那么我们将要打印出来

00:38:45.210 --> 00:38:53.980
对于每项服务，我都会打印出主机

00:38:51.640 --> 00:38:56.380
服务注册表中的端口等

00:38:53.980 --> 00:38:57.520
电话簿，如果您还可以的话

00:38:56.380 --> 00:38:59.980
当然，在我们的情况下，我们只有一个

00:38:57.520 --> 00:39:05.950
每个的注册实例，因此您将

00:38:59.980 --> 00:39:12.660
此处仅显示1个条目

00:39:05.950 --> 00:39:12.660
好的，沿着代码行的小屏幕

00:39:12.930 --> 00:39:18.030
问题对不起那个人好吗

00:39:14.760 --> 00:39:18.990
在这里，我们可能是第一个

00:39:18.030 --> 00:39:21.119
我们可以看到的东西实际上

00:39:18.990 --> 00:39:22.559
这是一种程序化的询问方式

00:39:21.119 --> 00:39:24.720
有关拓扑的问题

00:39:22.559 --> 00:39:27.059
群集是否可用（如果有） 

00:39:24.720 --> 00:39:28.680
你有多少个实例

00:39:27.059 --> 00:39:31.140
知道你还能给我什么其他元数据

00:39:28.680 --> 00:39:34.020
我当然可以贬低我的服务

00:39:31.140 --> 00:39:35.460
实例到尤里卡类型的光束

00:39:34.020 --> 00:39:37.290
服务实例，如果我知道那是

00:39:35.460 --> 00:39:40.140
我得到的类型就是

00:39:37.290 --> 00:39:41.430
类型，我将开始向上移动

00:39:40.140 --> 00:39:45.480
抽象层次结构

00:39:41.430 --> 00:39:47.520
让我们转向而不是手动

00:39:45.480 --> 00:39:48.589
提取主机导入，然后

00:39:47.520 --> 00:39:51.599
喂到其他

00:39:48.589 --> 00:39:53.790
我们了解的沟通机制

00:39:51.599 --> 00:39:56.430
在这种情况下，我正在尝试制作API 

00:39:53.790 --> 00:40:00.109
呼叫另一个参考服务，所以我

00:39:56.430 --> 00:40:02.130
真的不需要我真的不需要

00:40:00.109 --> 00:40:03.780
只是重要的主机，我只想

00:40:02.130 --> 00:40:08.069
打个电话，我当然有

00:40:03.780 --> 00:40:12.000
弹簧休息模板，使人死亡

00:40:08.069 --> 00:40:13.770
简单的常见HTTP调用正确获取

00:40:12.000 --> 00:40:16.290
发布的cetera或更一般的

00:40:13.770 --> 00:40:19.290
目的交流，让我们

00:40:16.290 --> 00:40:20.670
针对休息服务的HTTP调用，所以我

00:40:19.290 --> 00:40:23.280
要使用其余模板，这是一个

00:40:20.670 --> 00:40:25.319
你知道它有能力

00:40:23.280 --> 00:40:28.349
配置拦截器和那些

00:40:25.319 --> 00:40:31.380
拦截器可以进行预处理和发布

00:40:28.349 --> 00:40:32.730
处理HTTP请求和Spring Cloud 

00:40:31.380 --> 00:40:35.849
将自动配置

00:40:32.730 --> 00:40:37.079
拦截器将查看URL 

00:40:35.849 --> 00:40:39.569
我们正在尝试拨打电话

00:40:37.079 --> 00:40:41.190
反对，然后看到我们实际上

00:40:39.569 --> 00:40:42.960
这里没有引用主机

00:40:41.190 --> 00:40:45.630
书签连字符服务，这是一个

00:40:42.960 --> 00:40:49.770
服务ID和确实相同的服务

00:40:45.630 --> 00:40:51.119
我们在尤里卡（Eureka）有想法，所以

00:40:49.770 --> 00:40:53.670
要对此进行预处理

00:40:51.119 --> 00:40:55.859
摘下它会打电话给你

00:40:53.670 --> 00:40:57.780
 eeka它会取回一个收藏

00:40:55.859 --> 00:41:00.089
在我们的案例中，我们将

00:40:57.780 --> 00:41:02.150
只有一个，但是当您注册更多时

00:41:00.089 --> 00:41:07.530
甚至更多，您将获得10 20 100 

00:41:02.150 --> 00:41:10.140
然后尝试从中选择

00:41:07.530 --> 00:41:12.270
这些实例是最好的实例

00:41:10.140 --> 00:41:14.819
接听电话，然后很少

00:41:12.270 --> 00:41:16.920
现在将请求转发到该实例

00:41:14.819 --> 00:41:20.760
这当然是非常重要的一点

00:41:16.920 --> 00:41:22.740
它如何确定要哪个实例

00:41:20.760 --> 00:41:25.380
使用它会使用称为

00:41:22.740 --> 00:41:27.000
来自netflix功能区的功能区是

00:41:25.380 --> 00:41:31.650
软件定义的负载弹跳器

00:41:27.000 --> 00:41:33.750
它提供了编码申请的能力

00:41:31.650 --> 00:41:37.800
她从某种启发式选择

00:41:33.750 --> 00:41:40.250
在一组实例中，有很多

00:41:37.800 --> 00:41:43.770
为什么您会这样做的原因

00:41:40.250 --> 00:41:46.050
用Java代码在客户端中进行路由

00:41:43.770 --> 00:41:49.460
反对也许在五巨头

00:41:46.050 --> 00:41:49.460
路由器F5路由器A否

00:41:50.830 --> 00:41:57.940
我可以给出的大多数原因

00:41:55.600 --> 00:41:59.320
您围绕着这个想法

00:41:57.940 --> 00:42:02.860
客户处于更好的位置

00:41:59.320 --> 00:42:05.680
回应您的独特怪异

00:42:02.860 --> 00:42:09.010
拓扑更改不是路由器正确

00:42:05.680 --> 00:42:10.690
客户端和代码在

00:42:09.010 --> 00:42:12.730
更改并确保最佳位置

00:42:10.690 --> 00:42:15.820
它相应地工作，我保留代码

00:42:12.730 --> 00:42:19.540
将路由规则保留在

00:42:15.820 --> 00:42:21.100
应用程序本身确实可以消耗

00:42:19.540 --> 00:42:23.380
一个带有它的应用程序

00:42:21.100 --> 00:42:25.920
与其他模式不同

00:42:23.380 --> 00:42:30.310
应用程序相同的API但不同

00:42:25.920 --> 00:42:32.770
不同的用例，不同的

00:42:30.310 --> 00:42:35.140
路由规则和功能区有很多

00:42:32.770 --> 00:42:37.270
我们将要定义的贵族错误

00:42:35.140 --> 00:42:40.470
得到一个可以给我们回合的机会

00:42:37.270 --> 00:42:42.940
罗宾调度，但我可以自己插入

00:42:40.470 --> 00:42:46.330
例如，我可能会使用其中之一

00:42:42.940 --> 00:42:50.020
开箱即用的路由器，我可能会选择

00:42:46.330 --> 00:42:51.730
例如关心可用性

00:42:50.020 --> 00:42:54.240
区，否则我可能会决定我想要一个

00:42:51.730 --> 00:42:56.950
路由呼叫到特定的路由器

00:42:54.240 --> 00:42:59.770
服务集群或特定的

00:42:56.950 --> 00:43:01.930
数据中心或其他任何权利，或者我可以

00:42:59.770 --> 00:43:03.820
选择别的东西我可能会有一些

00:43:01.930 --> 00:43:07.800
概念再次基于此

00:43:03.820 --> 00:43:10.180
元数据映射例如

00:43:07.800 --> 00:43:11.410
您知道这个节点是主节点

00:43:10.180 --> 00:43:13.450
那是一个工人或类似的东西

00:43:11.410 --> 00:43:17.230
再次完全取决于

00:43:13.450 --> 00:43:20.740
您可以覆盖该算法

00:43:17.230 --> 00:43:24.370
功能区通过覆盖负载使用的

00:43:20.740 --> 00:43:25.780
弹簧的平衡器客户端对象

00:43:24.370 --> 00:43:28.180
云自动为您配置

00:43:25.780 --> 00:43:30.280
再次，这是一个常规的 spring boot 

00:43:28.180 --> 00:43:32.340
发出的光束具有

00:43:30.280 --> 00:43:34.450
有条件的，有条件的

00:43:32.340 --> 00:43:36.820
注解，因此，如果您定义

00:43:34.450 --> 00:43:38.350
与首选相同的类型

00:43:36.820 --> 00:43:44.050
而不是这个，那将是

00:43:38.350 --> 00:43:46.300
传递到其余模板中

00:43:44.050 --> 00:43:49.510
最终处理的拦截器

00:43:46.300 --> 00:43:51.000
这当然是其他值得注意的事情

00:43:49.510 --> 00:43:54.040
是我们正在打个电话

00:43:51.000 --> 00:43:59.280
打个电话我要问

00:43:54.040 --> 00:43:59.280
返回书签类型列表

00:43:59.460 --> 00:44:02.760
这个书签是一样的，不是

00:44:01.110 --> 00:44:05.280
我们先前在

00:44:02.760 --> 00:44:07.680
书签服务，这是我的一种类型

00:44:05.280 --> 00:44:08.760
不是JP实体的同一代码页

00:44:07.680 --> 00:44:11.370
与其他无关

00:44:08.760 --> 00:44:13.440
类型，也许您知道那是

00:44:11.370 --> 00:44:16.020
因为例如我的其他服务

00:44:13.440 --> 00:44:17.910
被实施，你知道可能不会

00:44:16.020 --> 00:44:19.680
使用现在知道我其他服务的JP 

00:44:17.910 --> 00:44:22.350
据我所知

00:44:19.680 --> 00:44:25.020
 json，所以这是地图上的类型

00:44:22.350 --> 00:44:25.980
 Jason的结构当然可以

00:44:25.020 --> 00:44:29.100
如果你有一个更均匀的

00:44:25.980 --> 00:44:31.500
环境保持类型

00:44:29.100 --> 00:44:33.750
如果您要放在一个单独的罐子中，则会显示详细信息

00:44:31.500 --> 00:44:35.790
人们一直在问这个，但我

00:44:33.750 --> 00:44:40.860
我会尽量不要先这样做吗

00:44:35.790 --> 00:44:44.690
而且只有当你必须做正确的时候

00:44:40.860 --> 00:44:44.690
所以回到这里

00:44:45.440 --> 00:44:49.710
我想要的信息是我想要的

00:44:48.599 --> 00:44:51.720
我们知道的书签列表

00:44:49.710 --> 00:44:53.220
如果我看护照我会得到什么

00:44:51.720 --> 00:44:55.260
服务，例如，如果我去这里或

00:44:53.220 --> 00:44:57.869
如果我去书签服务

00:44:55.260 --> 00:45:02.220
那去这里然后我去p网

00:44:57.869 --> 00:45:03.960
正斜杠书签我知道

00:45:02.220 --> 00:45:07.230
当我得到一个元素的集合

00:45:03.960 --> 00:45:10.859
这是p网站链接的一个元素

00:45:07.230 --> 00:45:14.040
我想把它放在清单中

00:45:10.859 --> 00:45:15.300
必须使用hack，这是一种

00:45:14.040 --> 00:45:17.099
我们必须在Java中做的令人讨厌的事情

00:45:15.300 --> 00:45:18.630
由于类型或亚洲，这是一个

00:45:17.099 --> 00:45:22.380
模式的实现称为

00:45:18.630 --> 00:45:25.140
类型令牌模式Java没有

00:45:22.380 --> 00:45:30.599
实例在运行时的功能

00:45:25.140 --> 00:45:33.000
真正反射的变量告诉您

00:45:30.599 --> 00:45:35.550
它的通用类型是正确的，所以这

00:45:33.000 --> 00:45:37.560
消失的书签列表

00:45:35.550 --> 00:45:39.480
时间java认为这参数化

00:45:37.560 --> 00:45:41.730
类型引用对象是参数化的

00:45:39.480 --> 00:45:43.710
没有或对象的类型引用

00:45:41.730 --> 00:45:45.810
或者如果你很好我的意思是那没有

00:45:43.710 --> 00:45:50.069
通用参数，这里是编译器

00:45:45.810 --> 00:45:52.619
时间只有一块糖以及

00:45:50.069 --> 00:45:56.060
因此，为了规避

00:45:52.619 --> 00:45:58.349
我们可以创建一个匿名内部类

00:45:56.060 --> 00:46:01.619
子类，即是否可以

00:45:58.349 --> 00:46:07.010
我说X类扩展了参数化类型

00:46:01.619 --> 00:46:07.010
您知道这样的列表的引用

00:46:09.050 --> 00:46:14.090
这样做实际上保留了我可以

00:46:11.750 --> 00:46:16.820
我实际上可以问实例X 

00:46:14.090 --> 00:46:18.530
运行时的类型及其通用类型

00:46:16.820 --> 00:46:20.720
是的，它将能够给我

00:46:18.530 --> 00:46:22.640
信息，所以我在做同样的事情

00:46:20.720 --> 00:46:24.560
在这里我正在创建一个匿名子类型

00:46:22.640 --> 00:46:27.170
如果我删除，这就是正确的模式

00:46:24.560 --> 00:46:29.570
实际上是春季私有化类型

00:46:27.170 --> 00:46:31.580
该类型的参考实现

00:46:29.570 --> 00:46:33.410
令牌模式甚至不让我编译

00:46:31.580 --> 00:46:37.850
它是抽象的，所以要求它是

00:46:33.410 --> 00:46:39.530
一个子类好吧，然后我通过

00:46:37.850 --> 00:46:43.070
响应类型转换为交换方法

00:46:39.530 --> 00:46:45.560
和Spring MVC地址模板，并将

00:46:43.070 --> 00:46:46.910
将其传递给spring MVC消息

00:46:45.560 --> 00:46:48.890
转换我在

00:46:46.910 --> 00:46:50.480
客户会说，哦，我们想得到

00:46:48.890 --> 00:46:52.970
您能想到的书签列表吗

00:46:50.480 --> 00:46:56.240
在这种情况下转换此缓冲区为JSON 

00:46:52.970 --> 00:46:57.470
将杰克逊消息放入该对象

00:46:56.240 --> 00:47:00.200
转换器将启动，然后

00:46:57.470 --> 00:47:04.160
它会给我们一个带有

00:47:00.200 --> 00:47:06.050
类型列表书签的有效负载可以吗

00:47:04.160 --> 00:47:07.670
这是身体的清单

00:47:06.050 --> 00:47:10.610
书签，我将要打印

00:47:07.670 --> 00:47:13.010
他们都在这里进一步向上

00:47:10.610 --> 00:47:15.670
堆栈，我将使用fain fain作为

00:47:13.010 --> 00:47:18.230
 netflix是声明式其余客户端

00:47:15.670 --> 00:47:20.360
技术有点像春天

00:47:18.230 --> 00:47:23.060
它基于的数据存储库

00:47:20.360 --> 00:47:26.060
我可以声明式描述的接口

00:47:23.060 --> 00:47:28.640
休息服务合同，所以在这里

00:47:26.060 --> 00:47:30.590
我是说这是一个Java接口

00:47:28.640 --> 00:47:33.950
将是的客户端表示

00:47:30.590 --> 00:47:36.260
休息服务，当我要去

00:47:33.950 --> 00:47:39.380
使用我要去的痛苦客户注释

00:47:36.260 --> 00:47:40.310
插入我的书签服务

00:47:39.380 --> 00:47:41.560
去你知道我花了一些我

00:47:40.310 --> 00:47:43.970
想要将书签服务用作

00:47:41.560 --> 00:47:46.220
再次从您的一周中发现

00:47:43.970 --> 00:47:48.350
它将从您的实例中查找实例

00:47:46.220 --> 00:47:53.210
一周，将它们传递给我想要的功能区

00:47:48.350 --> 00:47:55.010
使用该服务来处理此请求

00:47:53.210 --> 00:47:57.440
然后我想叫正斜杠

00:47:55.010 --> 00:47:59.300
用户ID正斜杠书签和

00:47:57.440 --> 00:48:01.310
用户ID参数的书

00:47:59.300 --> 00:48:03.260
我要过去了，他们得到更多的书

00:48:01.310 --> 00:48:04.700
从方法中借用ER ID参数

00:48:03.260 --> 00:48:07.100
好吧，联络人也一样

00:48:04.700 --> 00:48:09.170
服务在这里，你知道你几乎没有

00:48:07.100 --> 00:48:10.850
消费者的想法

00:48:09.170 --> 00:48:14.090
观点，这是HTTP，这是

00:48:10.850 --> 00:48:18.020
实际上比

00:48:14.090 --> 00:48:20.480
以HTTP为中心的休息模板和低端

00:48:18.020 --> 00:48:22.580
级别发现客户端和Dirk方法

00:48:20.480 --> 00:48:24.200
在这里

00:48:22.580 --> 00:48:26.090
我们已经知道您可以选择

00:48:24.200 --> 00:48:27.890
无论采用何种方法，无论粒度如何

00:48:26.090 --> 00:48:31.220
最适合您的结果

00:48:27.890 --> 00:48:32.720
永远是你知道这会我们不工作

00:48:31.220 --> 00:48:34.670
无论哪种方式，如果您获得结果， 

00:48:32.720 --> 00:48:36.410
希望我没有理由

00:48:34.670 --> 00:48:38.240
采取了发现计划并提取了

00:48:36.410 --> 00:48:39.830
托管端口，然后建立

00:48:38.240 --> 00:48:43.460
 URL并将其插入其余模板

00:48:39.830 --> 00:48:46.060
例如好吧，让我们开始吧

00:48:43.460 --> 00:48:46.060
这项服务

00:48:48.910 --> 00:48:53.980
在某种程度上，服务也是我所拥有的

00:48:52.210 --> 00:48:56.380
也暴露了另一个休息点

00:48:53.980 --> 00:49:00.040
这项服务叫做护照

00:48:56.380 --> 00:49:04.390
终点，这里的重点是两个

00:49:00.040 --> 00:49:07.120
在一个地方返回一个具有

00:49:04.390 --> 00:49:08.890
用户上下文和用户

00:49:07.120 --> 00:49:11.050
收藏这是一种护照

00:49:08.890 --> 00:49:14.910
上下文的护照对象和

00:49:11.050 --> 00:49:18.220
此用户的书签，我正在使用

00:49:14.910 --> 00:49:20.770
我正式以这个名义

00:49:18.220 --> 00:49:24.490
演示中的代码简单性

00:49:20.770 --> 00:49:27.430
但我会推荐任何东西

00:49:24.490 --> 00:49:29.670
不平凡使这两个不同

00:49:27.430 --> 00:49:32.020
电线杆当然是网络运营商

00:49:29.670 --> 00:49:34.600
并发，您可以很容易地做到

00:49:32.020 --> 00:49:36.640
那使用RX Java之类的东西，所以我

00:49:34.600 --> 00:49:38.380
可以用RX旅行说我想要

00:49:36.640 --> 00:49:40.540
这个电话，那是发生的电话

00:49:38.380 --> 00:49:43.960
同时，然后我想要

00:49:40.540 --> 00:49:46.660
压缩然后处理结果

00:49:43.960 --> 00:49:50.370
同时你知道他们一旦

00:49:46.660 --> 00:49:54.820
都回来了，所以我要用那个

00:49:50.370 --> 00:49:57.670
八个终点在这里我可以去尤里卡

00:49:54.820 --> 00:50:00.910
并发现护照服务

00:49:57.670 --> 00:50:09.610
现在启动并运行在端口507上

00:50:00.910 --> 00:50:13.349
 17，我因护照或个人证件入狱

00:50:09.610 --> 00:50:16.730
如果您愿意或这些

00:50:13.349 --> 00:50:18.890
空气，然后在幕后再次确定

00:50:16.730 --> 00:50:21.590
书签，这是对

00:50:18.890 --> 00:50:23.990
书签服务，我有上下文

00:50:21.590 --> 00:50:26.230
再次联系人来自

00:50:23.990 --> 00:50:29.270
我在这里得到结果的另一项服务

00:50:26.230 --> 00:50:30.980
在一种称为

00:50:29.270 --> 00:50:32.810
护照，但没有理由

00:50:30.980 --> 00:50:34.670
不可能被改编， 

00:50:32.810 --> 00:50:38.960
改变了要么就是那个

00:50:34.670 --> 00:50:40.550
当然是真的，所以我想要我想要我的

00:50:38.960 --> 00:50:42.410
服务对失败具有弹性

00:50:40.550 --> 00:50:45.560
例如，如果我去

00:50:42.410 --> 00:50:47.630
书签服务，没有服务

00:50:45.560 --> 00:50:49.760
可以使用我不想要的功能

00:50:47.630 --> 00:50:51.800
只是吹大块，然后举起手

00:50:49.760 --> 00:50:56.570
悬而未决，所以我可以

00:50:51.800 --> 00:50:59.180
使用hystrix这是一个实现

00:50:56.570 --> 00:51:00.710
断路器模式和这个

00:50:59.180 --> 00:51:03.710
实施尤其来自

00:51:00.710 --> 00:51:05.330
来自netflix，基本上

00:51:03.710 --> 00:51:08.150
将此方法包装一点

00:51:05.330 --> 00:51:09.860
有状态的状态机

00:51:08.150 --> 00:51:12.410
带有一个小状态机

00:51:09.860 --> 00:51:14.660
说好吧，最后一次尝试

00:51:12.410 --> 00:51:18.250
此方法的执行调用this 

00:51:14.660 --> 00:51:18.250
方法创建异常

00:51:18.599 --> 00:51:23.400
如果失败并且更多次

00:51:21.269 --> 00:51:24.839
隔离它使您知道

00:51:23.400 --> 00:51:27.390
没有人可以直接调用该方法

00:51:24.839 --> 00:51:29.670
而是将流量路由到

00:51:27.390 --> 00:51:32.069
后备方法，所以后备方法

00:51:29.670 --> 00:51:35.009
这是获得书签后退的它将

00:51:32.069 --> 00:51:38.029
只需返回一个空数组并

00:51:35.009 --> 00:51:40.170
在这种情况下，清空书签列表

00:51:38.029 --> 00:51:41.609
还有一个绅士，另一个英国

00:51:40.170 --> 00:51:43.680
弗雷德·乔治（Fred George）他发表了精彩的演讲

00:51:41.609 --> 00:51:46.349
他将人体描述为

00:51:43.680 --> 00:51:48.420
微服务系统，它给了我们

00:51:46.349 --> 00:51:52.200
好主意，我看到这很棒

00:51:48.420 --> 00:51:56.369
如果我切的话很好的建议或插图

00:51:52.200 --> 00:51:59.039
我的手，我不想整个身体

00:51:56.369 --> 00:52:01.470
只是蓝屏我想我可以

00:51:59.039 --> 00:52:02.819
优雅降级，我可能会在本地流血

00:52:01.470 --> 00:52:04.799
但是整个事情并不会停止

00:52:02.819 --> 00:52:08.539
工作和服务您的系统是一个

00:52:04.799 --> 00:52:11.009
整体应该类似于该权利，所以

00:52:08.539 --> 00:52:12.869
如果出问题了，我会得到一个

00:52:11.009 --> 00:52:15.390
默认情况下，您知道网是否

00:52:12.869 --> 00:52:16.619
 netflix搜索引擎因

00:52:15.390 --> 00:52:19.109
例如我可能会得到建议

00:52:16.619 --> 00:52:23.670
相反，但是你知道我会得到一些东西

00:52:19.109 --> 00:52:25.799
你知道那是重点，所以

00:52:23.670 --> 00:52:27.869
这个代码当然在我的整合中

00:52:25.799 --> 00:52:30.059
客户和集成客户是什么时候

00:52:27.869 --> 00:52:32.489
我使用我的简单例子，对不起

00:52:30.059 --> 00:52:34.559
我的护照管理员

00:52:32.489 --> 00:52:37.950
控制器正在注入集成

00:52:34.559 --> 00:52:41.670
客户端集成客户端正在使用

00:52:37.950 --> 00:52:44.069
相同的实现，我有两个

00:52:41.670 --> 00:52:46.920
不同的方法可能

00:52:44.069 --> 00:52:48.660
摇摇欲坠的网络通话

00:52:46.920 --> 00:52:54.479
客户，如果出现问题，他们

00:52:48.660 --> 00:52:59.339
有备份，我也有备份，你会

00:52:54.479 --> 00:53:02.219
记得他们是zoul代理人，所以zool是一个

00:52:59.339 --> 00:53:03.960
 api网关，所以我不知道有多好

00:53:02.219 --> 00:53:08.749
你的神话或你的

00:53:03.960 --> 00:53:13.609
捉鬼敢死队较低，但动物园是

00:53:08.749 --> 00:53:17.400
看门人就是这个家伙， 

00:53:13.609 --> 00:53:20.190
这是看门人的生物

00:53:17.400 --> 00:53:22.380
对，这是一个幽灵般的大门

00:53:20.190 --> 00:53:24.180
在春天对不起动物

00:53:22.380 --> 00:53:26.700
 cloudstack是

00:53:24.180 --> 00:53:29.369
微代理模式，它是反向代理

00:53:26.700 --> 00:53:31.859
位于任何边缘的行为

00:53:29.369 --> 00:53:32.549
一个服务API，您将获得

00:53:31.859 --> 00:53:34.619
暴露

00:53:32.549 --> 00:53:38.759
给诸如移动设备或

00:53:34.619 --> 00:53:41.130
 html5设备，它将接受请求

00:53:38.759 --> 00:53:42.449
并将它们代理到后端服务，例如

00:53:41.130 --> 00:53:45.239
例如图书寄存服务或

00:53:42.449 --> 00:53:47.309
联系服务，所以我不必做

00:53:45.239 --> 00:53:49.559
除了在...上说什么要工作

00:53:47.309 --> 00:53:51.509
海军Zool代理，它将自动

00:53:49.559 --> 00:53:55.439
在此与服务注册表对话

00:53:51.509 --> 00:53:57.390
尤里卡或领事动物园管理员

00:53:55.439 --> 00:54:01.979
并提供这些服务

00:53:57.390 --> 00:54:03.959
在我的根源下

00:54:01.979 --> 00:54:09.679
护照服务，所以我现在可以去

00:54:03.959 --> 00:54:09.679
联系服务/ p网站/联系

00:54:11.960 --> 00:54:28.110
我在这里弄错了吗联系

00:54:14.850 --> 00:54:32.640
服务那里我们去我错了

00:54:28.110 --> 00:54:35.730
感兴趣的错误清障车服务，所以在这里

00:54:32.640 --> 00:54:38.640
联系信息来自

00:54:35.730 --> 00:54:41.780
后端联系服务，如果我去

00:54:38.640 --> 00:54:41.780
书签服务

00:54:42.210 --> 00:54:46.450
再次添加书签

00:54:44.560 --> 00:54:48.640
请求就是我发送给的

00:54:46.450 --> 00:54:50.890
书签服务路线（如果我是

00:54:48.640 --> 00:54:52.870
与那个节点和那个帖子交谈

00:54:50.890 --> 00:54:54.310
直接导入，但请记住我在

00:54:52.870 --> 00:54:56.850
这里的护照服务，所以我不得不花钱

00:54:54.310 --> 00:54:59.050
在这里购买服务ID作为根

00:54:56.850 --> 00:55:00.760
例如，如果

00:54:59.050 --> 00:55:04.180
我有一个html5客户端或其他

00:55:00.760 --> 00:55:06.550
必须运行它不能违背

00:55:04.180 --> 00:55:08.620
类源请求伪造示例

00:55:06.550 --> 00:55:10.030
限制，我不想读我

00:55:08.620 --> 00:55:11.460
不想改造我的每一个人

00:55:10.030 --> 00:55:14.670
现有的微服务后端

00:55:11.460 --> 00:55:18.250
中级微服务要注意

00:55:14.670 --> 00:55:20.560
每个客户的这些细微差别

00:55:18.250 --> 00:55:23.770
 netflix何时支持API 

00:55:20.560 --> 00:55:25.900
网关边缘像zool的微型代理

00:55:23.770 --> 00:55:27.250
这样的每一位客户

00:55:25.900 --> 00:55:29.950
即使他们有600种不同

00:55:27.250 --> 00:55:31.570
中层服务边缘服务是

00:55:29.950 --> 00:55:34.270
客户端向其发送流量的

00:55:31.570 --> 00:55:36.910
并且没有发现边缘服务

00:55:34.270 --> 00:55:39.460
对你软弱的人站起来造出来

00:55:36.910 --> 00:55:42.100
静态提供给DNS，而他们没有

00:55:39.460 --> 00:55:43.990
你知道你可以把那些和

00:55:42.100 --> 00:55:46.150
包起来，把灵魂放进你的

00:55:43.990 --> 00:55:48.190
路由器，但那些边缘的要求

00:55:46.150 --> 00:55:50.140
服务到中间层服务

00:55:48.190 --> 00:55:52.180
在后台解决了

00:55:50.140 --> 00:55:54.880
通过尤里卡还是可以的

00:55:52.180 --> 00:55:57.430
注册表，所以我有两种不同的方式

00:55:54.880 --> 00:56:01.300
使用这些后端服务的方式

00:55:57.430 --> 00:56:04.720
我们已经看到我有Zulu代理

00:56:01.300 --> 00:56:06.550
玩，我有护照服务

00:56:04.720 --> 00:56:07.840
聚集并消耗两者

00:56:06.550 --> 00:56:12.280
后端服务使用类似

00:56:07.840 --> 00:56:13.540
西班牙，发生什么事，您知道我们会谈

00:56:12.280 --> 00:56:15.820
关于那个断路器会发生什么

00:56:13.540 --> 00:56:17.740
如果书签服务消失了

00:56:15.820 --> 00:56:19.270
例如，如果我转到书签

00:56:17.740 --> 00:56:20.380
应用程序，我要退出它我

00:56:19.270 --> 00:56:22.450
不确定是否可以看到屏幕

00:56:20.380 --> 00:56:25.840
在这里，但我将鼠标悬停在退出图标上

00:56:22.450 --> 00:56:28.600
在IntelliJ中再见了

00:56:25.840 --> 00:56:29.590
服务，我去尤里卡，给你刷新

00:56:28.600 --> 00:56:31.480
可以看到它已经被注销了

00:56:29.590 --> 00:56:33.850
从他们的行业，现在如果我打

00:56:31.480 --> 00:56:36.160
刷新服务，您可以看到

00:56:33.850 --> 00:56:38.170
我得到一个空的收藏，所以

00:56:36.160 --> 00:56:40.390
这正是我们想要的，我们想要的

00:56:38.170 --> 00:56:45.550
适应拓扑变化

00:56:40.390 --> 00:56:47.080
好的，我当然想看看

00:56:45.550 --> 00:56:49.390
这是怎么回事，所以我想

00:56:47.080 --> 00:56:52.760
能够获得仪表板的角度

00:56:49.390 --> 00:56:54.170
这是怎么回事

00:56:52.760 --> 00:56:56.690
我已经很容易站起来

00:56:54.170 --> 00:56:59.030
仪表板适当地称为

00:56:56.690 --> 00:57:04.240
我要去的历史性藏板

00:56:59.030 --> 00:57:04.240
向前，也站在那里，我们去

00:57:06.880 --> 00:57:19.390
好的，这只是在海军历史上

00:57:15.620 --> 00:57:19.390
仪表板并运行

00:57:21.290 --> 00:57:27.560
这将使我

00:57:28.200 --> 00:57:32.820
由具有

00:57:31.500 --> 00:57:35.839
在这种情况下巡回我们的护照

00:57:32.820 --> 00:57:35.839
服务和

00:57:36.530 --> 00:57:43.580
然后我可以要求它消耗服务器

00:57:40.250 --> 00:57:46.130
发送事件流，称为先生先生。极端

00:57:43.580 --> 00:57:47.900
是从护照上散发的

00:57:46.130 --> 00:57:51.850
服务，如果我转到浏览器查看

00:57:47.900 --> 00:57:51.850
例如这里的先生。极端

00:57:52.390 --> 00:57:55.750
只是它永远不会完成加载

00:57:54.190 --> 00:57:59.619
对，根据定义，它是无止境的

00:57:55.750 --> 00:58:05.289
数据流，所以我要告诉

00:57:59.619 --> 00:58:12.549
关于我的关于我的服务的hystrix 

00:58:05.289 --> 00:58:18.640
在端口500817本地主机508 17上

00:58:12.549 --> 00:58:20.829
这样的hystrix HTML，我要

00:58:18.640 --> 00:58:22.510
指定在哪里可以找到流

00:58:20.829 --> 00:58:25.539
这种情况来自密码服务

00:58:22.510 --> 00:58:27.279
点击监视器，您会看到它有一个

00:58:25.539 --> 00:58:30.069
系统中电路的想法

00:58:27.279 --> 00:58:33.099
获取书签，然后获取联系人

00:58:30.069 --> 00:58:37.150
在这里，让我看看是否可以同时显示两个

00:58:33.099 --> 00:58:38.830
这些在行动，所以

00:58:37.150 --> 00:58:41.170
您

00:58:38.830 --> 00:58:43.150
获取书签，好的联系人，这是我的

00:58:41.170 --> 00:58:46.020
护照上都有两个书签

00:58:43.150 --> 00:58:48.790
从那以后，我当然会考虑

00:58:46.020 --> 00:58:51.610
如果我点击，则将书签服务器离线

00:58:48.790 --> 00:58:52.750
刷新，当我点击刷新时，您会看到

00:58:51.610 --> 00:58:55.030
我不确定你是否可以坐在

00:58:52.750 --> 00:58:57.580
屏幕，但我正在刷新

00:58:55.030 --> 00:59:00.250
像我一样，我非常重视我的护照服务

00:58:57.580 --> 00:59:02.080
在这里发出请求，流量激增

00:59:00.250 --> 00:59:04.120
你会看到好的收获

00:59:02.080 --> 00:59:06.850
触点电路工作正常

00:59:04.120 --> 00:59:09.550
这是一个移动平均线，所以我裁员

00:59:06.850 --> 00:59:12.160
车辆排空的汽油，但

00:59:09.550 --> 00:59:14.470
获取书签电路有麻烦了

00:59:12.160 --> 00:59:16.000
再次打开，你知道这很有意义

00:59:14.470 --> 00:59:17.680
对，非常像电路

00:59:16.000 --> 00:59:19.390
我宁愿输掉房子里的断路器

00:59:17.680 --> 00:59:24.240
屋子里的灯开着

00:59:19.390 --> 00:59:32.040
如果我带回书签，则触发

00:59:24.240 --> 00:59:32.040
应用程序看起来如此运行

00:59:33.519 --> 00:59:39.279
最终，我们在

00:59:37.319 --> 00:59:40.809
尤里卡（Eureka），我会尽快

00:59:39.279 --> 00:59:42.549
能够点击刷新并看到

00:59:40.809 --> 00:59:45.130
电路再次关闭， 

00:59:42.549 --> 00:59:46.749
一切都是笨拙的，这是一个音符

00:59:45.130 --> 00:59:49.029
通过笔记视图，但我可以使用一些东西

00:59:46.749 --> 00:59:53.199
叫做涡轮，涡轮会

00:59:49.029 --> 00:59:55.239
聚合一组不同的流，并且

00:59:53.199 --> 01:00:00.130
然后把它们呈现给我

00:59:55.239 --> 01:00:05.159
安娜·坦博（Ana Tambo）的服务仪表板

01:00:00.130 --> 01:00:05.159
我认为我们已经涵盖了很多

01:00:05.699 --> 01:00:12.220
我们已经看过

01:00:07.060 --> 01:00:15.550
在使用春季云消耗

01:00:12.220 --> 01:00:17.470
随心所欲地服务

01:00:15.550 --> 01:00:20.560
像其他模板一样

01:00:17.470 --> 01:00:23.500
分离的发现客户端

01:00:20.560 --> 01:00:26.200
使用服务从可用性获取拓扑

01:00:23.500 --> 01:00:29.490
像你这样的注册表，周末我要

01:00:26.200 --> 01:00:32.650
抱歉，我们周末的动物园管理员

01:00:29.490 --> 01:00:35.020
使我们的服务更能应对停机

01:00:32.650 --> 01:00:38.290
将断路器模式用于

01:00:35.020 --> 01:00:42.700
示例和服务注册

01:00:38.290 --> 01:00:44.620
等等，我们没给你看

01:00:42.700 --> 01:00:46.630
您可能实现的反应式代码

01:00:44.620 --> 01:00:47.800
使用RX Java，但这绝对是

01:00:46.630 --> 01:00:49.800
我鼓励您检查的东西

01:00:47.800 --> 01:00:55.120
我们可以并且可能应该做一个整体

01:00:49.800 --> 01:00:56.620
网络研讨会只是说如果你有我的话

01:00:55.120 --> 01:00:59.440
知道当然有两点

01:00:56.620 --> 01:01:03.550
规模不是每个人的问题

01:00:59.440 --> 01:01:04.930
只是大型网络巨头，这是一个很好的选择

01:01:03.550 --> 01:01:06.820
事和坏事，不必

01:01:04.930 --> 01:01:09.310
尽管有原始元素，但还是要害怕

01:01:06.820 --> 01:01:11.830
工具，以使旅程更加

01:01:09.310 --> 01:01:14.110
毕竟，云原生更容易

01:01:11.830 --> 01:01:17.530
规范，我认为您会同意 spring boot 是

01:01:14.110 --> 01:01:19.080
不错的方法来构建API和站立

01:01:17.530 --> 01:01:21.550
将其投入生产

01:01:19.080 --> 01:01:23.320
受监控的弹簧云简化了

01:01:21.550 --> 01:01:26.710
之间的整合与互动

01:01:23.320 --> 01:01:29.050
那些api，如果您正在运行这些东西

01:01:26.710 --> 01:01:31.630
我当然会毫不犹豫地

01:01:29.050 --> 01:01:33.580
会推荐某种云我

01:01:31.630 --> 01:01:35.410
你会知道我没有使用云

01:01:33.580 --> 01:01:38.260
在这里，但所有代码和github都有

01:01:35.410 --> 01:01:40.000
具有适当的清单

01:01:38.260 --> 01:01:42.610
使其在云上运行的示例

01:01:40.000 --> 01:01:44.080
铸造厂和我很快就会

01:01:42.610 --> 01:01:48.060
适当的配置就可以了

01:01:44.080 --> 01:01:49.840
在出现文档的场景中工作

01:01:48.060 --> 01:01:51.490
因为这很有意义

01:01:49.840 --> 01:01:53.130
您想要持久建立的弹性

01:01:51.490 --> 01:01:54.790
友善，你想给自己

01:01:53.130 --> 01:01:57.000
环境会给你

01:01:54.790 --> 01:02:00.610
弹性，今天就是乌云

01:01:57.000 --> 01:02:06.670
越小越少就是少

01:02:00.610 --> 01:02:08.620
更大，你知道总是瞄准

01:02:06.670 --> 01:02:11.140
为了可能的小事

01:02:08.620 --> 01:02:12.460
工作，如您所见，它没有

01:02:11.140 --> 01:02:15.190
即使你有很多也要复杂

01:02:12.460 --> 01:02:19.800
小事和好处

01:02:15.190 --> 01:02:21.300
胜过潜在的混乱

01:02:19.800 --> 01:02:23.430
好的，非常感谢，我会接受

01:02:21.300 --> 01:02:25.260
现在有些问题我和你一样

01:02:23.430 --> 01:02:26.730
仆人，如果你有问题不要

01:02:25.260 --> 01:02:30.180
犹豫在Twitter上与我联系

01:02:26.730 --> 01:02:33.240
在星巴克那是bx一个人或在

01:02:30.180 --> 01:02:35.190
我的电子邮件或Spring Central当然是我

01:02:33.240 --> 01:02:38.400
意思是我们你很开心

01:02:35.190 --> 01:02:41.310
听听你说的我刚才讲的代码

01:02:38.400 --> 01:02:42.360
关于它在github com上让乔什感叹

01:02:41.310 --> 01:02:44.520
很久，你寻找战利品

01:02:42.360 --> 01:02:46.890
微服务的Spring Cloud项目

01:02:44.520 --> 01:02:49.560
本身是一个独立的组织，所以请

01:02:46.890 --> 01:02:51.660
 comport /春天的炒作和云在那里

01:02:49.560 --> 01:02:53.910
有很多关于

01:02:51.660 --> 01:02:56.160
我04的春天/指导我们刚刚

01:02:53.910 --> 01:02:58.740
实际上添加了有关使用docker的指南

01:02:56.160 --> 01:03:00.390
基于弹簧和基于弹簧的靴子

01:02:58.740 --> 01:03:03.780
应用程序和另一个使用

01:03:00.390 --> 01:03:05.280
格子分布式运行时想到的

01:03:03.780 --> 01:03:08.010
它更像是一个政变黑发asaram asos 

01:03:05.280 --> 01:03:11.640
它运行容器化的工作负载，例如

01:03:08.010 --> 01:03:12.600
泊坞窗，这就是您是否要

01:03:11.640 --> 01:03:17.190
了解有关该签出的更多信息

01:03:12.600 --> 01:03:20.280
 lattest FCF好的，彼得，你是做什么的

01:03:17.190 --> 01:03:22.710
认为还不错吧，你看到了吗

01:03:20.280 --> 01:03:25.770
带有github com Josh long的URL 

01:03:22.710 --> 01:03:27.960
美丽的管道连字符微服务

01:03:25.770 --> 01:03:30.900
我认为这是微服务

01:03:27.960 --> 01:03:34.080
微服务很棒的问题好吗金发

01:03:30.900 --> 01:03:36.900
我很毒品我很高兴

01:03:34.080 --> 01:03:38.820
代理，可以使用微服务

01:03:36.900 --> 01:03:41.640
很好，很好，我只是没有

01:03:38.820 --> 01:03:44.430
投给我们的结论是，阿尔特姆在那里

01:03:41.640 --> 01:03:47.160
你走吧，好吧，所以我们有一堆

01:03:44.430 --> 01:03:51.270
很好的问题，这里首先是

01:03:47.160 --> 01:03:52.890
张本问我是安吉利斯吗

01:03:51.270 --> 01:03:54.600
大约十分钟前

01:03:52.890 --> 01:03:57.000
问这个，他说，嘿，这是

01:03:54.600 --> 01:03:59.820
传递动态数据的正确选择

01:03:57.000 --> 01:04:03.060
服务之间（例如几本书） 

01:03:59.820 --> 01:04:04.890
留给我服务吧，如果服务

01:04:03.060 --> 01:04:06.840
是服务不共享数据库

01:04:04.890 --> 01:04:08.100
你知道你在做什么吗

01:04:06.840 --> 01:04:09.780
案例我的意思是这是最终的

01:04:08.100 --> 01:04:14.850
与微服务的一致性

01:04:09.780 --> 01:04:17.340
正确，所以您询问API，是

01:04:14.850 --> 01:04:18.750
服务无法通过数据再坐

01:04:17.340 --> 01:04:21.690
也许我误解了这个问题

01:04:18.750 --> 01:04:24.570
有点，但是我当时正试图

01:04:21.690 --> 01:04:26.790
释义um因为它是

01:04:24.570 --> 01:04:28.950
不简单的西方让我读它

01:04:26.790 --> 01:04:31.680
从字面上看，如果是正确的选择

01:04:28.950 --> 01:04:33.690
在服务之间传递动态数据，例如

01:04:31.680 --> 01:04:36.770
剩下多少本我的服务

01:04:33.690 --> 01:04:39.660
如果服务不共享数据库

01:04:36.770 --> 01:04:42.960
是的，绝对是绝对的

01:04:39.660 --> 01:04:45.120
当我们将信息传递给您时

01:04:42.960 --> 01:04:46.860
想再次保持自己的轻微

01:04:45.120 --> 01:04:49.260
轻微的痛苦，因为你必须

01:04:46.860 --> 01:04:50.730
通过电线发送东西巨大的收益

01:04:49.260 --> 01:04:52.740
因为现在您的服务可以

01:04:50.730 --> 01:04:56.040
植入选择中，然后

01:04:52.740 --> 01:04:59.130
那个斗鱼的最佳选择

01:04:56.040 --> 01:05:01.110
您知道我的数据库的过程服务

01:04:59.130 --> 01:05:03.450
今天的选择实际上可能是相同的

01:05:01.110 --> 01:05:05.190
作为另一项服务的选择，但

01:05:03.450 --> 01:05:08.460
我可能想搬到另一个地方

01:05:05.190 --> 01:05:09.750
数据库明天，我想

01:05:08.460 --> 01:05:11.970
能够更改我的数据库

01:05:09.750 --> 01:05:13.770
模式，而不必同步

01:05:11.970 --> 01:05:15.720
与您认识的其他人一起

01:05:13.770 --> 01:05:17.390
那个去耦非常非常

01:05:15.720 --> 01:05:19.770
尤其重要的是老龄化

01:05:17.390 --> 01:05:22.620
有一个非常有限的背景

01:05:19.770 --> 01:05:24.090
您曾经读过eric evans惊人的领域

01:05:22.620 --> 01:05:26.850
驱动设计谈论有限

01:05:24.090 --> 01:05:29.450
上下文或提供的服务，您知道

01:05:26.850 --> 01:05:32.460
责任分配

01:05:29.450 --> 01:05:37.860
建议深入研究

01:05:32.460 --> 01:05:41.670
讨论最终另一个问题

01:05:37.860 --> 01:05:44.640
从那时起，当服务不

01:05:41.670 --> 01:05:51.930
掉线但关闭网络注册表

01:05:44.640 --> 01:05:52.770
服务将加热等待1和恶作剧我

01:05:51.930 --> 01:05:54.720
可以弄清楚他开始问哪里

01:05:52.770 --> 01:05:55.980
很抱歉挂在第二个乔希，所以当

01:05:54.720 --> 01:05:58.980
服务已关闭但未关闭网络

01:05:55.980 --> 01:06:00.720
注册服务会吃东西

01:05:58.980 --> 01:06:03.150
服务并更新注册表

01:06:00.720 --> 01:06:04.680
这里有一种类型，但我有

01:06:03.150 --> 01:06:07.320
麻烦我想他是什么样的人

01:06:04.680 --> 01:06:10.430
嗯，注册表如何

01:06:07.320 --> 01:06:14.550
与之打交道的服务

01:06:10.430 --> 01:06:16.560
不可用，我想他没事

01:06:14.550 --> 01:06:18.060
所以它的心脏跳动人的心脏跳动

01:06:16.560 --> 01:06:21.030
好吧，所以我才知道你是对的

01:06:18.060 --> 01:06:24.720
我们去那里有一个

01:06:21.030 --> 01:06:26.040
心跳，如果你又有

01:06:24.720 --> 01:06:28.590
服务版本是您的理想选择

01:06:26.040 --> 01:06:30.060
有要进行的网络分区

01:06:28.590 --> 01:06:32.340
发生就发生心跳

01:06:30.060 --> 01:06:33.900
它在客户端之间进行

01:06:32.340 --> 01:06:36.600
和注册表，并最终

01:06:33.900 --> 01:06:39.080
它将退役，这是正确的

01:06:36.600 --> 01:06:42.210
凹槽的前部非常非常

01:06:39.080 --> 01:06:44.670
你知道所有的重要原则

01:06:42.210 --> 01:06:46.440
不同的服务注册中心

01:06:44.670 --> 01:06:47.280
最终它将退役

01:06:46.440 --> 01:06:49.050
很快它将

01:06:47.280 --> 01:06:50.430
我也可以配置佣金

01:06:49.050 --> 01:06:52.500
情况是默认的，所以

01:06:50.430 --> 01:06:53.970
注册30秒约30秒

01:06:52.500 --> 01:06:56.760
心跳为30秒

01:06:53.970 --> 01:06:59.750
除了什么，你可以找到两个

01:06:56.760 --> 01:07:05.510
通过查看属性

01:06:59.750 --> 01:07:08.520
很棒，很酷，嗯，让我们来看看

01:07:05.510 --> 01:07:11.100
罗伯托你的问题，如果我们使用

01:07:08.520 --> 01:07:12.450
一个以上的实例，因为你只是

01:07:11.100 --> 01:07:14.160
为此添加更多的上下文

01:07:12.450 --> 01:07:18.750
明确知道您指的是什么

01:07:14.160 --> 01:07:21.120
谢谢你，让我们来看一下Stacy Pierce 

01:07:18.750 --> 01:07:22.950
当您外部化属性时询问

01:07:21.120 --> 01:07:25.320
注意到您共享的数据

01:07:22.950 --> 01:07:26.940
应用程序yanil做外部化

01:07:25.320 --> 01:07:28.560
每个微服务的属性a 

01:07:26.940 --> 01:07:33.660
单独的仓库或您如何推荐

01:07:28.560 --> 01:07:34.950
管理所以我这里的配置

01:07:33.660 --> 01:07:37.500
我的春季云配置服务器

01:07:34.950 --> 01:07:39.740
并不是真的想继续讲下去

01:07:37.500 --> 01:07:44.130
网络研讨会，但感谢您提出要求

01:07:39.740 --> 01:07:47.550
它在单个git中从外部站起来

01:07:44.130 --> 01:07:51.030
存储由标识的每个服务

01:07:47.550 --> 01:07:53.220
他们的时代合适的引导

01:07:51.030 --> 01:07:55.980
是的，Mel spring应用程序名称加载

01:07:53.220 --> 01:07:57.360
配置中的配置

01:07:55.980 --> 01:07:59.690
具有相同名称的文件

01:07:57.360 --> 01:08:03.120
例如我在yamo的尤里卡连字符服务

01:07:59.690 --> 01:08:05.280
在git仓库中只会

01:08:03.120 --> 01:08:07.890
由识别以下内容的服务读取

01:08:05.280 --> 01:08:09.660
本身作为yuri向导，服务相同

01:08:07.890 --> 01:08:13.350
对于联系人，对于书签而言是相同的

01:08:09.660 --> 01:08:15.630
服务等等，你也知道

01:08:13.350 --> 01:08:17.880
这将被加载，这将是

01:08:15.630 --> 01:08:19.580
优先，但每项服务

01:08:17.880 --> 01:08:21.359
也将在yamo获得申请

01:08:19.580 --> 01:08:24.240
您将加载的应用程序

01:08:21.359 --> 01:08:27.540
首先，然后专门基于

01:08:24.240 --> 01:08:29.670
 ID这将加载一秒钟的

01:08:27.540 --> 01:08:31.140
春天的云配置服务器

01:08:29.670 --> 01:08:32.069
实际上还有很多其他的伟大

01:08:31.140 --> 01:08:34.170
你可以用它做的事情

01:08:32.069 --> 01:08:35.700
例如实际加密密码

01:08:34.170 --> 01:08:37.770
并指定密钥和服务器，以及

01:08:35.700 --> 01:08:40.109
然后客户端将其解密

01:08:37.770 --> 01:08:42.240
在记忆中以及过境和飞行中

01:08:40.109 --> 01:08:44.520
反对以简单的方式存储密码

01:08:42.240 --> 01:08:45.930
您可以锁定github的文本

01:08:44.520 --> 01:08:48.900
当然，并锁定

01:08:45.930 --> 01:08:50.100
配置服务器本身使用H2B基本你

01:08:48.900 --> 01:08:52.020
实际上可以支持多个git 

01:08:50.100 --> 01:08:53.880
现在的存储库实际上是由于

01:08:52.020 --> 01:08:56.490
来自我们朋友的贡献

01:08:53.880 --> 01:08:58.290
春季云的票务主管可以接受

01:08:56.490 --> 01:09:01.290
服务器，所以我就是全部

01:08:58.290 --> 01:09:03.470
网络研讨会III在这12个事实上做了一个博客

01:09:01.290 --> 01:09:06.510
应用程序样式配置但II 

01:09:03.470 --> 01:09:09.720
闻到第二个来了

01:09:06.510 --> 01:09:10.950
已经链接了两次，我做到了

01:09:09.720 --> 01:09:12.540
网络研讨会开始之初

01:09:10.950 --> 01:09:16.650
当你提到它，我又做了一次

01:09:12.540 --> 01:09:20.760
对此需求的另一种回应

01:09:16.650 --> 01:09:22.230
就像两个在那儿哦，让我成为你的清单

01:09:20.760 --> 01:09:24.150
欢迎你欢迎我要跳过

01:09:22.230 --> 01:09:26.520
一个问题，因为有一个

01:09:24.150 --> 01:09:27.960
我想看到像一个恐惧，但我

01:09:26.520 --> 01:09:29.910
有点想在这里出故障， 

01:09:27.960 --> 01:09:31.740
立即解决此问题10布莱尔

01:09:29.910 --> 01:09:33.359
问我春天是什么春天

01:09:31.740 --> 01:09:36.510
有时由于

01:09:33.359 --> 01:09:38.819
大小如何在这些

01:09:36.510 --> 01:09:41.790
这些服务与

01:09:38.819 --> 01:09:46.589
 netflix开源上的果汁球衣等

01:09:41.790 --> 01:09:51.930
哦，我那些说我的人

01:09:46.589 --> 01:09:53.520
认为我不认为这是部分原因

01:09:51.930 --> 01:09:54.930
有争议的建议人们

01:09:53.520 --> 01:09:58.020
那就是那些拥有

01:09:54.930 --> 01:10:00.750
使弹簧失效的兴趣

01:09:58.020 --> 01:10:03.210
每个人都不是特别沉重

01:10:00.750 --> 01:10:04.860
这些服务中使用嵌入式

01:10:03.210 --> 01:10:06.570
我可以在床上使用的Web服务器

01:10:04.860 --> 01:10:08.670
一样的嵌入式码头

01:10:06.570 --> 01:10:11.340
欺骗，例如掉落之类的东西

01:10:08.670 --> 01:10:13.110
向导将要做，然后再次嵌入

01:10:11.340 --> 01:10:14.970
码头是嵌入果冻，它的重量如此

01:10:13.110 --> 01:10:17.340
如果需要，可以使用很多东西

01:10:14.970 --> 01:10:20.070
春天实际上我们有一个去

01:10:17.340 --> 01:10:22.350
我知道的那个春天开始，你会

01:10:20.070 --> 01:10:23.760
看到这里有点菜

01:10:22.350 --> 01:10:25.890
对，我没有将它部署到tomcat 

01:10:23.760 --> 01:10:27.720
或到websphere网站jboss或其他任何网站

01:10:25.890 --> 01:10:29.370
我选择的东西我什么都不想要

01:10:27.720 --> 01:10:31.020
更重要的是，如果我想使用球衣我

01:10:29.370 --> 01:10:32.580
我可以不推荐它吗，因为

01:10:31.020 --> 01:10:35.100
你错过了很多

01:10:32.580 --> 01:10:37.590
完善的使馆特色

01:10:35.100 --> 01:10:39.450
尽可能地使用手腕或技术

01:10:37.590 --> 01:10:42.450
从春季MC获得优惠，但再次

01:10:39.450 --> 01:10:44.790
那又是你不需要的

01:10:42.450 --> 01:10:46.350
除了我需要的东西

01:10:44.790 --> 01:10:48.780
只需使用网络即可使用

01:10:46.350 --> 01:10:55.320
支持，就是这样，您知道我可以

01:10:48.780 --> 01:10:56.430
打一次旅行198很棒，网络

01:10:55.320 --> 01:10:57.720
支持将带来

01:10:56.430 --> 01:11:02.340
嵌入式Web服务器将

01:10:57.720 --> 01:11:03.180
汤姆猫再次，我打生成我想要

01:11:02.340 --> 01:11:04.410
真正与

01:11:03.180 --> 01:11:06.540
生产和执行器终点

01:11:04.410 --> 01:11:08.190
这又是微不足道的，所以我可以做

01:11:06.540 --> 01:11:12.010
再有一个

01:11:08.190 --> 01:11:13.329
变得非常非常小，因为

01:11:12.010 --> 01:11:15.099
只是片段而已

01:11:13.329 --> 01:11:18.250
如果你看的话，实际上你需要点菜

01:11:15.099 --> 01:11:20.949
在我的罐子里是22 22.6梅格

01:11:18.250 --> 01:11:23.530
包括Tomcat，在这种情况下，您可以使用

01:11:20.949 --> 01:11:24.429
码头，但你会的，我想大多数

01:11:23.530 --> 01:11:26.800
人们会惊讶地知道

01:11:24.429 --> 01:11:29.710
杰德实际上是一个更大的罐子足迹

01:11:26.800 --> 01:11:31.480
比在tomcat中，您可以实际使用

01:11:29.710 --> 01:11:34.000
从你下面的野生苍蝇

01:11:31.480 --> 01:11:35.619
知道红帽一个，所以这个罐子如果

01:11:34.000 --> 01:11:38.349
你还记得这是我什么时候看的

01:11:35.619 --> 01:11:39.699
我再次创建一个愚蠢的脚本

01:11:38.349 --> 01:11:41.139
重量级的术语我不知道

01:11:39.699 --> 01:11:44.110
那就是我不知道该如何回应

01:11:41.139 --> 01:11:45.280
这类指责是因为你

01:11:44.110 --> 01:11:47.019
知道你是否还记得我们

01:11:45.280 --> 01:11:52.000
创造了最开始的地方

01:11:47.019 --> 01:11:53.829
我把它放在这里吗

01:11:52.000 --> 01:11:56.980
在实际代码方面的重要性和

01:11:53.829 --> 01:12:00.309
然后足迹再次是

01:11:56.980 --> 01:12:01.719
网络服务器，就是我的意思

01:12:00.309 --> 01:12:05.559
春天小姐只有几百个

01:12:01.719 --> 01:12:08.139
千字节，所以可以当作礼物

01:12:05.559 --> 01:12:09.309
男人，你就是你，你可以做CF推和

01:12:08.139 --> 01:12:12.190
将其推送到云中，您就起来了

01:12:09.309 --> 01:12:14.710
而运行这些功能则不必

01:12:12.190 --> 01:12:16.360
太过分了

01:12:14.710 --> 01:12:18.690
你需要成为，这就是全部

01:12:16.360 --> 01:12:21.880
关键是你想要一些东西

01:12:18.690 --> 01:12:23.170
对，你就知道你想要你

01:12:21.880 --> 01:12:25.239
需要它帮助有这个东西

01:12:23.170 --> 01:12:26.980
模块化，因为您您知道您的

01:12:25.239 --> 01:12:28.300
微服务不是在煮沸

01:12:26.980 --> 01:12:29.829
海洋吧，应该非常紧密

01:12:28.300 --> 01:12:32.409
范围都在做驱动设计

01:12:29.829 --> 01:12:34.630
单一责任原则

01:12:32.409 --> 01:12:35.980
依赖罐子列表

01:12:34.630 --> 01:12:38.409
越短越好

01:12:35.980 --> 01:12:40.210
做到这一点，你知道在22梅格的那是

01:12:38.409 --> 01:12:43.199
可以肯定的是， 

01:12:40.210 --> 01:12:47.199
云便宜，当然磁盘是如此

01:12:43.199 --> 01:12:48.789
那不是你特别

01:12:47.199 --> 01:12:50.289
知道肯定还有其他含义

01:12:48.789 --> 01:12:52.570
我不知道这是有趣的还是

01:12:50.289 --> 01:12:53.920
在那里他们还有其他会议

01:12:52.570 --> 01:12:55.179
我们无法解密，所以如果

01:12:53.920 --> 01:12:57.400
你知道那是什么可以让我们

01:12:55.179 --> 01:12:59.559
同时知道几个

01:12:57.400 --> 01:13:03.010
其他问题科里问哦，等等

01:12:59.559 --> 01:13:04.210
抱歉，我确实向前走了Ben我认识你

01:13:03.010 --> 01:13:06.010
有一个或两个我没有的问题

01:13:04.210 --> 01:13:07.059
解决，但你已经得到了一对

01:13:06.010 --> 01:13:10.449
在那儿，我想再放一些

01:13:07.059 --> 01:13:12.610
人们问科里淋浴问我们应该

01:13:10.449 --> 01:13:15.579
通过同步来构建微服务

01:13:12.610 --> 01:13:18.039
耦合使用休息还是我们应该使用

01:13:15.579 --> 01:13:21.449
服务之间的基于事件的基础，例如

01:13:18.039 --> 01:13:25.570
 RabbitMQ或其他异步方法

01:13:21.449 --> 01:13:29.170
好问题，所以你知道谁

01:13:25.570 --> 01:13:32.320
男孩，我想你会在下一个看到

01:13:29.170 --> 01:13:36.159
修订下一种主要更新

01:13:32.320 --> 01:13:38.349
主题之一将带来

01:13:36.159 --> 01:13:42.099
在春天，对

01:13:38.349 --> 01:13:44.469
消息传递和集成将是

01:13:42.099 --> 01:13:48.010
通过Spring Framework 适当

01:13:44.469 --> 01:13:50.290
的原语和spring集成

01:13:48.010 --> 01:13:52.239
就是这样，是的，我们当然

01:13:50.290 --> 01:13:54.429
认为消息传递是巨大的

01:13:52.239 --> 01:13:56.230
交流的重要方式

01:13:54.429 --> 01:14:01.929
建立服务，但对很多人来说

01:13:56.230 --> 01:14:03.790
休息就好了，嗯，就是这样

01:14:01.929 --> 01:14:05.380
有几个地方

01:14:03.790 --> 01:14:07.599
会浪费时间，如果你有一个

01:14:05.380 --> 01:14:09.820
长期运行的任务，那么你就不会去

01:14:07.599 --> 01:14:12.960
想用剩下的东西，因为你

01:14:09.820 --> 01:14:15.670
将阻止客户端，但再次

01:14:12.960 --> 01:14:17.290
你可能会同意的

01:14:15.670 --> 01:14:19.840
实际的成本是你

01:14:17.290 --> 01:14:22.510
保持服务器被阻止，如果您

01:14:19.840 --> 01:14:24.280
使用异步I / O，那么您就不会

01:14:22.510 --> 01:14:25.630
你知道你是服务器要

01:14:24.280 --> 01:14:27.340
做背景发布任何东西

01:14:25.630 --> 01:14:29.409
很好吗，其余的确实吗

01:14:27.340 --> 01:14:31.719
请求可能会产生一条您知道的消息

01:14:29.409 --> 01:14:33.329
它可以使用例如弹簧

01:14:31.719 --> 01:14:36.360
集成网关并发送他们的

01:14:33.329 --> 01:14:38.409
处理到一些后端网格

01:14:36.360 --> 01:14:40.480
处理节点然后获得响应

01:14:38.409 --> 01:14:41.860
异步然后发送响应

01:14:40.480 --> 01:14:43.719
你说你知道使用异步

01:14:41.860 --> 01:14:45.730
我/你现在可以在

01:14:43.719 --> 01:14:47.320
事实上，这很容易做到

01:14:45.730 --> 01:14:51.389
只是与春天的框架和春天

01:14:47.320 --> 01:14:54.540
 MVC，但现在已经支持

01:14:51.389 --> 01:14:57.489
如果你寻找并获得春天的云是

01:14:54.540 --> 01:14:59.860
最初的削减能够发回

01:14:57.489 --> 01:15:03.639
从我们的X旅行社观察到的

01:14:59.860 --> 01:15:05.280
春天和小姐的端点如此，如果

01:15:03.639 --> 01:15:07.000
您想运行该处理代码

01:15:05.280 --> 01:15:09.159
异步而不是独占

01:15:07.000 --> 01:15:10.119
您知道的线程就是

01:15:09.159 --> 01:15:14.699
很多人在寻找时

01:15:10.119 --> 01:15:16.800
转到消息传递消息传递

01:15:14.699 --> 01:15:19.079
做了额外的事情确实增加了另一个感动

01:15:16.800 --> 01:15:20.510
部分添加了经纪人和问题

01:15:19.079 --> 01:15:22.949
很好，你打算用什么破

01:15:20.510 --> 01:15:26.039
 RabbitMQ是一个不错的选择，我只是放了一个

01:15:22.949 --> 01:15:29.070
四天前发布博客或类似内容

01:15:26.039 --> 01:15:31.469
关于使用Apache kafka的netflix 

01:15:29.070 --> 01:15:33.510
大量使用大量东西

01:15:31.469 --> 01:15:37.199
大约3000亿到800 

01:15:33.510 --> 01:15:38.760
每天有十亿条消息，这又是

01:15:37.199 --> 01:15:44.459
有很多不同非常非常

01:15:38.760 --> 01:15:47.789
具有云功能的消息队列

01:15:44.459 --> 01:15:49.289
在那里，你可以解决一些

01:15:47.789 --> 01:15:50.940
这些问题现在是否是最好的

01:15:49.289 --> 01:15:52.590
再选择一次，我想我只是在尝试

01:15:50.940 --> 01:15:54.929
取决于您正在尝试什么

01:15:52.590 --> 01:15:56.880
如果您要排队，该怎么办

01:15:54.929 --> 01:15:58.650
而且你需要保证

01:15:56.880 --> 01:16:00.269
那也许消息队列是

01:15:58.650 --> 01:16:02.039
如果您只是正确的方法

01:16:00.269 --> 01:16:04.469
试图在时间上取得同步

01:16:02.039 --> 01:16:06.869
解耦的电话，您可以得到很多

01:16:04.469 --> 01:16:11.249
只是来自异步I / O 

01:16:06.869 --> 01:16:12.659
你今天可以得到，所以你知道我不知道

01:16:11.249 --> 01:16:14.309
知道所以那绝对是

01:16:12.659 --> 01:16:15.749
我们想要的东西

01:16:14.309 --> 01:16:16.769
是的，如果您使用过亲吻

01:16:15.749 --> 01:16:18.929
传播到你特别

01:16:16.769 --> 01:16:21.989
现在对github有兴趣

01:16:18.929 --> 01:16:24.829
 github com孔径春天连字符云

01:16:21.989 --> 01:16:28.829
我们现在正在考虑这些东西

01:16:24.829 --> 01:16:31.499
是的，这是一件很棒的大事，嗯，嘿

01:16:28.829 --> 01:16:34.380
肯·克鲁格（Ken Kruger）近况如何

01:16:31.499 --> 01:16:35.969
克鲁格弹出来问他是否

01:16:34.380 --> 01:16:37.499
可以，如果您可以查看动态

01:16:35.969 --> 01:16:39.780
端口选择中有一些代码

01:16:37.499 --> 01:16:43.469
选择了您知道的美元太阳港美元

01:16:39.780 --> 01:16:45.209
说服务器端口0哦，好吧，小指

01:16:43.469 --> 01:16:47.780
手指的东西0就像端口

01:16:45.209 --> 01:16:54.059
是的，所以我会选择

01:16:47.780 --> 01:16:55.920
是的，这是um服务器的端口0 

01:16:54.059 --> 01:16:59.909
随机选择

01:16:55.920 --> 01:17:03.329
可用的是我正在使用

01:16:59.909 --> 01:17:05.610
属性占位符解析，所以让

01:17:03.329 --> 01:17:11.280
我看到引导程序，我知道这是一个

01:17:05.610 --> 01:17:14.369
在应用程序llamo这里

01:17:11.280 --> 01:17:15.989
我曾被双重嵌套正确放置

01:17:14.369 --> 01:17:20.699
所有分辨率，因此它可能是端口0 

01:17:15.989 --> 01:17:22.739
表示如果端口变量使用

01:17:20.699 --> 01:17:24.360
否则你是0但是我也说我

01:17:22.739 --> 01:17:27.119
说，如果这是他们的伟大

01:17:24.360 --> 01:17:28.610
否则，其他财产将发挥所有

01:17:27.119 --> 01:17:30.889
革命，如果它的服务器

01:17:28.610 --> 01:17:33.679
搬运他们使用它，否则你0所以

01:17:30.889 --> 01:17:36.650
就像这是否其他如果使用

01:17:33.679 --> 01:17:39.050
可以帮助您，但是我很确定

01:17:36.650 --> 01:17:40.820
既然他已经知道了

01:17:39.050 --> 01:17:44.090
知道所有的事情我也是

01:17:40.820 --> 01:17:47.989
误会了我的问题

01:17:44.090 --> 01:17:49.190
想想他大概只有20岁

01:17:47.989 --> 01:17:51.139
因为这可能有点

01:17:49.190 --> 01:17:52.940
一点点的你知道我

01:17:51.139 --> 01:17:54.889
所述约定优于配置和

01:17:52.940 --> 01:17:56.659
如果您不了解约定

01:17:54.889 --> 01:17:59.900
然后人们可能不会错过它

01:17:56.659 --> 01:18:02.360
嗯，我想也许他只是想

01:17:59.900 --> 01:18:03.619
告诉我他没想到我覆盖了它

01:18:02.360 --> 01:18:06.380
显然，这是一个好点，是的，我

01:18:03.619 --> 01:18:09.710
应该多一点

01:18:06.380 --> 01:18:11.960
细节，如果我像往常一样肯爱你的男人

01:18:09.710 --> 01:18:15.139
如果可以的话给我发电子邮件

01:18:11.960 --> 01:18:17.780
更好的是所有都是不同的

01:18:15.139 --> 01:18:20.000
很好，哦，他可以发表评论

01:18:17.780 --> 01:18:22.219
他觉得他的意见是

01:18:20.000 --> 01:18:24.230
重率参考是指罐子

01:18:22.219 --> 01:18:29.300
大小以及运行时内存消耗

01:18:24.230 --> 01:18:30.380
嗯，没什么是春天

01:18:29.300 --> 01:18:34.790
可以用

01:18:30.380 --> 01:18:36.290
螺丝刀inna的地方和影响你

01:18:34.790 --> 01:18:37.699
知道我想在一天结束时你

01:18:36.290 --> 01:18:40.940
知道记忆这种云是

01:18:37.699 --> 01:18:42.679
非常昂贵，所以我的意思是

01:18:40.940 --> 01:18:44.600
即使我不赞成我

01:18:42.679 --> 01:18:46.159
意味着没有理由必须全部

01:18:44.600 --> 01:18:47.600
我们或所有这些服务花费更少

01:18:46.159 --> 01:18:50.270
超过250兆公羊

01:18:47.600 --> 01:18:51.980
我在这里展示给你的一切，所以不是

01:18:50.270 --> 01:18:57.739
我是说每个人都小于

01:18:51.980 --> 01:19:00.590
 256兆公羊，所以再次，抱歉

01:18:57.739 --> 01:19:03.110
鲁伊斯要求更多解释

01:19:00.590 --> 01:19:04.790
在弹簧的负载平衡位上

01:19:03.110 --> 01:19:08.659
云，这是一条丝带，我认为是正确的

01:19:04.790 --> 01:19:12.350
是的，先生，好的，你想要什么

01:19:08.659 --> 01:19:14.420
知道我的朋友拇指他是什么

01:19:12.350 --> 01:19:15.409
特别是他只是说了一点点嘿

01:19:14.420 --> 01:19:18.110
只是要求更多的解释

01:19:15.409 --> 01:19:22.760
你给我做一个简短的小回顾

01:19:18.110 --> 01:19:27.560
然后评论并继续前进，这样功能区是

01:19:22.760 --> 01:19:30.930
一个由 spring boot 配置的哦

01:19:27.560 --> 01:19:32.310
平衡器自动配置Diego 

01:19:30.930 --> 01:19:33.990
您配置其余模板请记住

01:19:32.310 --> 01:19:38.150
我给你看了剩下的东西

01:19:33.990 --> 01:19:41.010
有能力拨打

01:19:38.150 --> 01:19:42.570
负载均衡器和yuiko在那里

01:19:41.010 --> 01:19:46.260
实际上在这里完成了休息模板

01:19:42.570 --> 01:19:50.940
拦截器清单中的La Paz流行音乐

01:19:46.260 --> 01:19:52.320
正确，我们将注入负载

01:19:50.940 --> 01:19:54.750
平衡器拦截器是

01:19:52.320 --> 01:19:56.070
我们在这里开发的客户负载

01:19:54.750 --> 01:19:58.080
平衡器拦截器将需要

01:19:56.070 --> 01:19:59.370
负载均衡器客户端负载

01:19:58.080 --> 01:20:02.640
平衡器拦截器是

01:19:59.370 --> 01:20:05.250
实际上要打电话来住

01:20:02.640 --> 01:20:09.660
这是负载均衡器客户端对象

01:20:05.250 --> 01:20:13.140
在这里，它将要它

01:20:09.660 --> 01:20:16.470
找到适合我们的东西

01:20:13.140 --> 01:20:17.820
和功能区自动配置

01:20:16.470 --> 01:20:19.470
知道这是我们实际上在配置

01:20:17.820 --> 01:20:22.080
在这里，我们配置功能区负载平衡器

01:20:19.470 --> 01:20:26.100
客户端和功能区负载平衡器

01:20:22.080 --> 01:20:27.330
客户是所有魔术发生的地方，所以

01:20:26.100 --> 01:20:29.130
如果您想覆盖事物，则可能

01:20:27.330 --> 01:20:33.750
改变这是你会做的事

01:20:29.130 --> 01:20:36.110
我们在这里选择，所以我们是

01:20:33.750 --> 01:20:36.110
说的是

01:20:36.850 --> 01:20:44.590
服务器让我们查看服务ID 

01:20:39.810 --> 01:20:47.410
获取负载均衡器，请参阅负载均衡器

01:20:44.590 --> 01:20:53.040
服务器终于可以了，所以在某个时候

01:20:47.410 --> 01:20:53.040
这个链子有一个我们要去的地方

01:20:54.139 --> 01:20:57.699
在英国，服务员等等

01:20:58.860 --> 01:21:01.670
在这里检查

01:21:03.010 --> 01:21:06.789
我们去执行，我认为这是

01:21:04.869 --> 01:21:08.829
实际的位置，我们下降，所以

01:21:06.789 --> 01:21:12.760
客户端工厂获取负载均衡器客户端

01:21:08.829 --> 01:21:15.849
获取服务器打开连接获取

01:21:12.760 --> 01:21:17.909
请求申请通过功能区

01:21:15.849 --> 01:21:20.550
服务器，所以我认为这实际上是

01:21:17.909 --> 01:21:24.400
是的，这实际上是我们得到的

01:21:20.550 --> 01:21:29.949
我们想要什么和您的决定

01:21:24.400 --> 01:21:32.860
可以覆盖使用的权利

01:21:29.949 --> 01:21:34.960
指定您自己的负载均衡器

01:21:32.860 --> 01:21:37.239
在这种情况下的保镖，所以他们得到那些

01:21:34.960 --> 01:21:39.519
保镖实际上会打招呼

01:21:37.239 --> 01:21:42.429
得到给定的负载弹跳器

01:21:39.519 --> 01:21:47.039
服务，然后会说得到

01:21:42.429 --> 01:21:51.789
实例，然后看起来

01:21:47.039 --> 01:21:53.769
用于类型为in的bean 

01:21:51.789 --> 01:21:58.640
这种情况下眼睑的跳动，所以如果你

01:21:53.769 --> 01:22:01.460
配置那些它将使用

01:21:58.640 --> 01:22:03.740
否则会委托自负

01:22:01.460 --> 01:22:06.110
这个配置的东西，这是我在哪里

01:22:03.740 --> 01:22:08.210
在代码中有点迷失，但要指出

01:22:06.110 --> 01:22:10.850
这是有据可查的吗？ 

01:22:08.210 --> 01:22:13.000
一切都在空中发生，你在做什么

01:22:10.850 --> 01:22:16.730
基本上要做的就是配置

01:22:13.000 --> 01:22:18.890
我的负载均衡器实例

01:22:16.730 --> 01:22:22.120
指向右边，那是什么时候

01:22:18.890 --> 01:22:22.120
我说我的负载均衡器

01:22:23.130 --> 01:22:28.230
我们是你的那些出来的

01:22:26.460 --> 01:22:29.730
盒子里有一个抽象的

01:22:28.230 --> 01:22:32.670
有一个基础，你知道

01:22:29.730 --> 01:22:35.100
您的通用动态服务器列表保镖

01:22:32.670 --> 01:22:36.510
是我们在大多数情况下使用的

01:22:35.100 --> 01:22:38.699
默认情况下，该代码是

01:22:36.510 --> 01:22:41.100
接受服务实例的集合

01:22:38.699 --> 01:22:43.679
最终有一个无人值守的人

01:22:41.100 --> 01:22:45.900
什么都不做，然后想到

01:22:43.679 --> 01:22:48.320
 tanana的网络服务专区

01:22:45.900 --> 01:22:52.080
平衡器当然也可以

01:22:48.320 --> 01:22:55.110
行使自己的权利，以便您拥有

01:22:52.080 --> 01:22:57.360
您可以轻松地在这里进行很多选择

01:22:55.110 --> 01:23:01.230
如果您想要正确的事情， 

01:22:57.360 --> 01:23:03.389
决定是在里面很棒

01:23:01.230 --> 01:23:06.750
谢谢乔希，非常感谢阿尔瓦罗

01:23:03.389 --> 01:23:07.770
希望这可以帮助我们看看

01:23:06.750 --> 01:23:09.630
我还有两个问题

01:23:07.770 --> 01:23:13.650
认为我们实际上可能会对

01:23:09.630 --> 01:23:17.730
耗尽了我的问题队列，但让我们

01:23:13.650 --> 01:23:19.380
看到佩德罗·埃尔·瓦托问你是什么人

01:23:17.730 --> 01:23:21.000
关于的建议

01:23:19.380 --> 01:23:21.989
选择之间，实际上你知道什么

01:23:21.000 --> 01:23:23.159
我们已经听到了一些关于这次举行的消息

01:23:21.989 --> 01:23:25.310
在lemme上，我要提出这个问题

01:23:23.159 --> 01:23:29.760
多一秒钟，因为有一个

01:23:25.310 --> 01:23:33.690
真的很好，嗯，它去了哪里

01:23:29.760 --> 01:23:35.010
关于安全，是的，基本上我认为你

01:23:33.690 --> 01:23:36.810
有点感动，但是你

01:23:35.010 --> 01:23:38.730
知道，你基本上知道一个

01:23:36.810 --> 01:23:40.679
一位名叫汤·巴拉蒂的绅士

01:23:38.730 --> 01:23:42.510
询问如何提供安全服务

01:23:40.679 --> 01:23:44.130
处理得比你，我们开始触摸他们

01:23:42.510 --> 01:23:48.650
所有令牌都有一点点

01:23:44.130 --> 01:23:54.300
嗯，你知道很多吧

01:23:48.650 --> 01:23:56.909
是的，所以我鼓励您采取

01:23:54.300 --> 01:23:58.830
看一下Spring Cloud的安全性

01:23:56.909 --> 01:24:01.530
建立在Spring Security 性之上

01:23:58.830 --> 01:24:04.130
 Spring Cloud安全性使其变得简单

01:24:01.530 --> 01:24:07.770
超级超级简单站起来

01:24:04.130 --> 01:24:09.630
身份提供者基本上是

01:24:07.770 --> 01:24:14.330
授权服务器，如果他们签名

01:24:09.630 --> 01:24:16.739
它将创建并提供访问令牌

01:24:14.330 --> 01:24:20.250
这样就可以让您知道可以

01:24:16.739 --> 01:24:23.070
有一个带有对象的应用程序

01:24:20.250 --> 01:24:24.840
它将具有挑战身份验证

01:24:23.070 --> 01:24:26.520
挑战应用挑战

01:24:24.840 --> 01:24:28.860
被转发给身份提供者

01:24:26.520 --> 01:24:32.639
就像授权服务器一样

01:24:28.860 --> 01:24:34.380
提供授权令牌，如果有的话

01:24:32.639 --> 01:24:36.449
有效它将授权服务器

01:24:34.380 --> 01:24:38.820
会给

01:24:36.449 --> 01:24:41.070
我要一个访问令牌，然后所有

01:24:38.820 --> 01:24:42.959
不同的微服务可以指向

01:24:41.070 --> 01:24:45.539
那个授权服务器说你

01:24:42.959 --> 01:24:47.070
知道现在你需要错位

01:24:45.539 --> 01:24:49.590
服务器从此服务，他们将

01:24:47.070 --> 01:24:51.329
知道自动重定向到那个

01:24:49.590 --> 01:24:53.249
授权服务器（如果有） 

01:24:51.329 --> 01:24:56.190
没有Nexus令牌的无效请求

01:24:53.249 --> 01:24:58.320
身体再次可以用Spring Cloud

01:24:56.190 --> 01:25:02.249
基于身份的证券

01:24:58.320 --> 01:25:03.959
服务器，或者您可以指向您知道

01:25:02.249 --> 01:25:04.800
 Facebook或github或任何您可以

01:25:03.959 --> 01:25:07.380
用你可以用别人的

01:25:04.800 --> 01:25:08.880
身份服务器旁边，但是

01:25:07.380 --> 01:25:11.309
结果是您有一套

01:25:08.880 --> 01:25:13.559
一个注释和几个注释的服务

01:25:11.309 --> 01:25:16.289
配置属性基本上可以说明这一点

01:25:13.559 --> 01:25:20.209
在哪里寻找可以

01:25:16.289 --> 01:25:23.070
用于解密访问令牌和

01:25:20.209 --> 01:25:25.110
在您知道的许多XP中就是这样

01:25:23.070 --> 01:25:27.030
每个受保护的资源将

01:25:25.110 --> 01:25:30.179
自动知道叫这个

01:25:27.030 --> 01:25:33.570
授权作为身份提供

01:25:30.179 --> 01:25:35.249
提供者，并经历

01:25:33.570 --> 01:25:40.709
如果要获取访问令牌

01:25:35.249 --> 01:25:42.989
学到更多，我不能，我不能

01:25:40.709 --> 01:25:44.389
更强调地推荐它，但是你

01:25:42.989 --> 01:25:46.829
想学到很多东西

01:25:44.389 --> 01:25:50.519
不要犹豫，检查好

01:25:46.829 --> 01:25:53.489
医生戴夫（Dave）先生现在令人惊叹的7部分

01:25:50.519 --> 01:25:55.409
单页应用程序上的博客系列

01:25:53.489 --> 01:25:58.619
 angularjs和spring安全性和spring 

01:25:55.409 --> 01:26:01.530
云动物和spring-cloud-security和

01:25:58.619 --> 01:26:03.539
春天的会议，真是太棒了

01:26:01.530 --> 01:26:06.300
是的，您从十二月份开始

01:26:03.539 --> 01:26:08.070
只是它非常了不起所以如果你

01:26:06.300 --> 01:26:09.530
想知道这是一个

01:26:08.070 --> 01:26:12.599
好方法，他谈论

01:26:09.530 --> 01:26:14.190
春天云安全是很多

01:26:12.599 --> 01:26:18.630
在那里，非常感谢

01:26:14.190 --> 01:26:19.499
非常好，所以佩德罗夫妇

01:26:18.630 --> 01:26:21.900
还有更多问题，我想我们要去

01:26:19.499 --> 01:26:24.479
在半小时的时间里将其削减到豪尔赫

01:26:21.900 --> 01:26:25.739
李问覆盖有多容易

01:26:24.479 --> 01:26:28.979
那些黄色的配置

01:26:25.739 --> 01:26:32.219
自动化测试非常呃，如果

01:26:28.979 --> 01:26:36.780
你在一开始就看到

01:26:32.219 --> 01:26:40.289
可以在我指定的GUI应用程序上

01:26:36.780 --> 01:26:42.209
命令行在这里，很抱歉，他

01:26:40.289 --> 01:26:43.559
继续问只是让你打

01:26:42.209 --> 01:26:45.809
形状，因为只是你打相同

01:26:43.559 --> 01:26:47.459
同时他也很好奇

01:26:45.809 --> 01:26:49.260
你如何交换基于的配置

01:26:47.459 --> 01:26:50.100
您知道的配置文件或环境设置

01:26:49.260 --> 01:26:52.440
这是一种

01:26:50.100 --> 01:26:53.790
就这样就可以了

01:26:52.440 --> 01:26:56.460
我超越个人的一点点

01:26:53.790 --> 01:27:00.120
再次可以做一些属性

01:26:56.460 --> 01:27:02.880
 Java减去D服务器的端口等于

01:27:00.120 --> 01:27:06.150
八千颗负星无论如何

01:27:02.880 --> 01:27:07.320
战斗或高个像你这样的罐子

01:27:06.150 --> 01:27:08.940
可以做那样的事情，这样

01:27:07.320 --> 01:27:11.700
破折号或我们可以说出口

01:27:08.940 --> 01:27:13.980
服务器下划线端口等于9 

01:27:11.700 --> 01:27:15.330
千，然后把我的星星加倍

01:27:13.980 --> 01:27:25.220
那肯定会像

01:27:15.330 --> 01:27:27.330
好吧，但是哇，但是你也可以

01:27:25.220 --> 01:27:30.750
就像个人资料要关注的一样

01:27:27.330 --> 01:27:32.570
例如在您的配置服务器存储中

01:27:30.750 --> 01:27:36.450
书签高度和服务连字符

01:27:32.570 --> 01:27:39.180
云或开发人员或其他任何东西

01:27:36.450 --> 01:27:40.380
根据配置文件被激活

01:27:39.180 --> 01:27:42.570
当请求是什么时候，当他们

01:27:40.380 --> 01:27:44.520
应用程序启动，因此它将加载

01:27:42.570 --> 01:27:46.530
正确的配置文件基于

01:27:44.520 --> 01:27:49.800
正在运行的客户端中的配置文件

01:27:46.530 --> 01:27:56.130
应用程序，所以我认为这可能是

01:27:49.800 --> 01:27:59.730
您正在寻找完美的东西，让我们

01:27:56.130 --> 01:28:00.960
看看是否有建议

01:27:59.730 --> 01:28:02.250
关于您的建议

01:28:00.960 --> 01:28:03.690
我们在上次网络研讨会上再次听到了

01:28:02.250 --> 01:28:05.070
乔希，对您有什么建议

01:28:03.690 --> 01:28:06.810
考虑到选择

01:28:05.070 --> 01:28:10.620
服务注册表的实现否

01:28:06.810 --> 01:28:12.180
控制台动物园管理员尤里卡（Eureka）说

01:28:10.620 --> 01:28:15.900
您才刚开始使用服务

01:28:12.180 --> 01:28:18.960
这样的发现将始于

01:28:15.900 --> 01:28:22.220
尤里卡真是太好了，它当然有效

01:28:18.960 --> 01:28:25.140
 Netflix正在大规模使用它们

01:28:22.220 --> 01:28:27.120
站起来很容易

01:28:25.140 --> 01:28:31.500
看到它只是一个注释和一个

01:28:27.120 --> 01:28:32.580
依赖导入无法正常工作，所以我

01:28:31.500 --> 01:28:34.830
从那开始就是

01:28:32.580 --> 01:28:38.730
绝对是最友好的

01:28:34.830 --> 01:28:42.690
从控制台开始是相同的

01:28:38.730 --> 01:28:44.310
在海浪上游荡的人们

01:28:42.690 --> 01:28:46.620
并有一些非常聪明的人

01:28:44.310 --> 01:28:50.540
它是用go编写的功能

01:28:46.620 --> 01:28:52.500
一点也不构成

01:28:50.540 --> 01:28:55.350
部署的复杂性，但我又没有

01:28:52.500 --> 01:28:57.260
认为这对大多数人来说确实是一个问题

01:28:55.350 --> 01:28:58.400
现代团队

01:28:57.260 --> 01:29:01.070
它有一些非常酷的功能

01:28:58.400 --> 01:29:03.490
所以再次值得一看，但是

01:29:01.070 --> 01:29:07.040
如果您正在寻找一条直线

01:29:03.490 --> 01:29:10.870
直接非常非常简单的服务

01:29:07.040 --> 01:29:14.270
登记处击败尤里卡动物园管理员

01:29:10.870 --> 01:29:15.530
可以做到，实际上是将其用作

01:29:14.270 --> 01:29:20.720
服务注册中心的方式与我们

01:29:15.530 --> 01:29:24.320
可能使用尤里卡是无益的

01:29:20.720 --> 01:29:27.020
饲养员实际上有能力

01:29:24.320 --> 01:29:29.810
更正确的是，它实际上有其利基

01:29:27.020 --> 01:29:32.050
是协调信息，因此您可以

01:29:29.810 --> 01:29:36.200
例如处理一个非常非常奇怪的

01:29:32.050 --> 01:29:40.430
特殊的，因为我专门拓扑

01:29:36.200 --> 01:29:43.250
例如举手

01:29:40.430 --> 01:29:44.810
难忘的未知可能会消失，你

01:29:43.250 --> 01:29:46.040
想知道你吃东西，你不想

01:29:44.810 --> 01:29:48.380
有分裂飞机的问题，你

01:29:46.040 --> 01:29:52.340
想确保是否有一项服务

01:29:48.380 --> 01:29:53.990
主人那么你知道是你

01:29:52.340 --> 01:29:57.080
迅速将其从集群中逐出或

01:29:53.990 --> 01:29:58.250
不管你有很多

01:29:57.080 --> 01:29:59.600
你知道那里的力量，它可以

01:29:58.250 --> 01:30:01.670
检测一组低级原语

01:29:59.600 --> 01:30:04.580
因此，尽管Spring Cloud可以治疗它， 

01:30:01.670 --> 01:30:06.110
用作低层服务

01:30:04.580 --> 01:30:08.290
训练得很好，实际上有很多

01:30:06.110 --> 01:30:10.760
我会说的是我更多的力量

01:30:08.290 --> 01:30:12.260
如果你不解决的话

01:30:10.760 --> 01:30:14.960
对其他人完全满意

01:30:12.260 --> 01:30:17.060
首先，一个人真的很强大

01:30:14.960 --> 01:30:21.110
它当然也可以正常运行

01:30:17.060 --> 01:30:24.760
我的意思是我们在Spring XD Apache中使用它

01:30:21.110 --> 01:30:28.340
卡夫卡使用它，你知道我们有一个

01:30:24.760 --> 01:30:32.780
初步支持不仅仅用于

01:30:28.340 --> 01:30:34.660
作为uzuki作为发现引擎，但作为

01:30:32.780 --> 01:30:39.980
服务经纪人，但也一样

01:30:34.660 --> 01:30:43.220
动态选举的框架

01:30:39.980 --> 01:30:45.560
某些节点作为领导者，例如a 

01:30:43.220 --> 01:30:50.300
某些碗，如果你可以说很好

01:30:45.560 --> 01:30:52.820
这如果我的节点得到它被选为

01:30:50.300 --> 01:30:55.340
一位领导答应了申请活动

01:30:52.820 --> 01:30:56.540
例如，有很多真正的

01:30:55.340 --> 01:30:57.950
您可以在那里做的强大的事情， 

01:30:56.540 --> 01:31:00.590
那实际上是编码并离开

01:30:57.950 --> 01:31:02.390
现在你可以在它周围戳

01:31:00.590 --> 01:31:03.530
如果有用例，总是

01:31:02.390 --> 01:31:04.940
也非常喜欢听那些

01:31:03.530 --> 01:31:06.020
那肯定是其中之一

01:31:04.940 --> 01:31:09.679
我们正在关注的事情更多

01:31:06.020 --> 01:31:13.500
那里复杂的互动

01:31:09.679 --> 01:31:14.940
好吧，那里的东西，当然

01:31:13.500 --> 01:31:17.010
如果您是，则可能不需要服务费

01:31:14.940 --> 01:31:18.659
例如在晶格内运行

01:31:17.010 --> 01:31:20.250
您可以使用洒水弹簧云- 

01:31:18.659 --> 01:31:21.810
项目，这会给你一个

01:31:20.250 --> 01:31:23.760
发现客户端实现

01:31:21.810 --> 01:31:27.000
会用它，因为再次是螳螂

01:31:23.760 --> 01:31:29.969
知道哪个节点是哪个节点

01:31:27.000 --> 01:31:32.100
运行哪个应用程序

01:31:29.969 --> 01:31:35.520
说出哪种服务，以便您可以询问

01:31:32.100 --> 01:31:37.199
就像你可以用尤里卡一样

01:31:35.520 --> 01:31:40.080
知道这个服务ID给我

01:31:37.199 --> 01:31:42.270
主机进口，取决于反弹

01:31:40.080 --> 01:31:46.290
云和支持的云代工厂

01:31:42.270 --> 01:31:48.869
在去的路上，所以你知道也许你

01:31:46.290 --> 01:31:50.010
你不需要它，也许或者

01:31:48.869 --> 01:31:52.290
没有理由你不能使用

01:31:50.010 --> 01:31:54.090
例如我们在课堂上

01:31:52.290 --> 01:31:57.239
确实，我们实际上是站起来

01:31:54.090 --> 01:32:01.020
在顶部放置尤里卡按钮

01:31:57.239 --> 01:32:02.340
信用，但也许你只是想

01:32:01.020 --> 01:32:07.260
那个映射已经是

01:32:02.340 --> 01:32:09.270
由平台维护好所有

01:32:07.260 --> 01:32:10.260
对，所以问题继续

01:32:09.270 --> 01:32:12.330
进来，但我认为我们将有

01:32:10.260 --> 01:32:15.360
叫做30分钟后

01:32:12.330 --> 01:32:18.480
而且我们通常通常真的不尝试

01:32:15.360 --> 01:32:21.230
再走下去，我们

01:32:18.480 --> 01:32:25.139
现在只有100人

01:32:21.230 --> 01:32:26.940
我们之前有几百个

01:32:25.139 --> 01:32:29.369
所以我认为我们认为我们非常

01:32:26.940 --> 01:32:34.619
当时我很高兴收到你的来信

01:32:29.369 --> 01:32:36.449
和克鲁格是的，是的，所以让

01:32:34.619 --> 01:32:38.190
我们快速整理房间

01:32:36.449 --> 01:32:41.820
记录下来，它将被发布

01:32:38.190 --> 01:32:44.790
再次弹出iof //视频的权利

01:32:41.820 --> 01:32:47.880
春天，我哦/ video是的，我们永远

01:32:44.790 --> 01:32:51.600
记录一下，您知道Josh posis滑到

01:32:47.880 --> 01:32:55.860
扬声器座，然后滑动链接

01:32:51.600 --> 01:32:57.929
将在博客文章中，因此再次

01:32:55.860 --> 01:33:00.480
您想获得有关何时的通知

01:32:57.929 --> 01:33:01.860
这是重播功能

01:33:00.480 --> 01:33:05.400
即将到来的春天，我哦，正斜线

01:33:01.860 --> 01:33:06.960
博客并在那里订阅原子

01:33:05.400 --> 01:33:09.869
喂-这是一个好方法

01:33:06.960 --> 01:33:11.670
因为当我们发布重播时， 

01:33:09.869 --> 01:33:13.650
总是在该嵌入上发表博客文章

01:33:11.670 --> 01:33:15.780
 YouTube视频，然后将所有内容

01:33:13.650 --> 01:33:19.380
您正在寻找的信息是

01:33:15.780 --> 01:33:22.480
对不起，我的机器有点吓坏了

01:33:19.380 --> 01:33:25.270
所以我缺少一些信息

01:33:22.480 --> 01:33:27.670
随时挂一秒钟

01:33:25.270 --> 01:33:29.410
如果四月二十八号回来

01:33:27.670 --> 01:33:31.600
您对Apache Kafka完全感兴趣

01:33:29.410 --> 01:33:33.160
和高速消息传递，但输入内容

01:33:31.600 --> 01:33:35.290
像那位先生科里一样可怜

01:33:33.160 --> 01:33:36.970
你应该在四月回来吗

01:33:35.290 --> 01:33:40.450
 Springsteen团队的第二十八名

01:33:36.970 --> 01:33:42.850
会谈论一片斑驳的可卡姆

01:33:40.450 --> 01:33:46.210
并与

01:33:42.850 --> 01:33:49.570
 Spring XD和Apache Kafka，所以我认为

01:33:46.210 --> 01:33:51.190
这可能是采石场

01:33:49.570 --> 01:33:56.590
我对那个我真的很感兴趣

01:33:51.190 --> 01:33:58.680
尝试在这里发布视频博客

01:33:56.590 --> 01:34:03.489
一些我只是失去了聊天窗口

01:33:58.680 --> 01:34:08.620
抱一秒钟的人看到我们去了

01:34:03.489 --> 01:34:11.920
我希望乔希的作品能使您吃饱

01:34:08.620 --> 01:34:14.920
屏幕是，好吧，好吧

01:34:11.920 --> 01:34:18.760
丢失了哦，很酷，是的， 

01:34:14.920 --> 01:34:20.770
很好，谢谢，嗯，Cory是的

01:34:18.760 --> 01:34:23.380
大家不要错过网络研讨会

01:34:20.770 --> 01:34:25.540
马里奥吸烟机博士波洛克

01:34:23.380 --> 01:34:28.480
很棒，确定格式即将到来

01:34:25.540 --> 01:34:29.739
通过所有奇怪的希望是

01:34:28.480 --> 01:34:32.470
足以让你得到它

01:34:29.739 --> 01:34:34.330
关于这一点，让我最后一次尝试

01:34:32.470 --> 01:34:36.190
这个网址是格式化人员

01:34:34.330 --> 01:34:41.670
在那儿引入一些换行符

01:34:36.190 --> 01:34:41.670
搞砸了，让我们看看是否可行哦

01:34:42.570 --> 01:34:49.690
来吧是的，它只是没有开始

01:34:47.530 --> 01:34:51.010
换行符不是

01:34:49.690 --> 01:34:52.360
将其剪切并复制，但

01:34:51.010 --> 01:34:54.520
是的，非常感谢Cory，你明白了

01:34:52.360 --> 01:34:56.440
太棒了，顺便说一句，如果你想

01:34:54.520 --> 01:34:58.510
让您沾沾上嗯，只是做一个

01:34:56.440 --> 01:35:00.730
请注意，我们并不是真的鼓励您

01:34:58.510 --> 01:35:03.700
通过HTT直接下载弹簧钻头

01:35:00.730 --> 01:35:05.380
 HTT P direct我们真的很想鼓励

01:35:03.700 --> 01:35:09.010
您可以使用Maven通讯座

01:35:05.380 --> 01:35:10.300
更好，但是如果你知道

01:35:09.010 --> 01:35:12.340
您被困在了解学习者的背后或

01:35:10.300 --> 01:35:14.170
代理服务器或您在军队中工作

01:35:12.340 --> 01:35:16.989
网络或紧密的政府网络或

01:35:14.170 --> 01:35:19.720
像这样的东西，你可以得到HTTP 

01:35:16.989 --> 01:35:22.450
下载，只是我们不让它变得超级

01:35:19.720 --> 01:35:27.100
坦率地说，嗯，这些是

01:35:22.450 --> 01:35:28.750
可在repo spring上购买

01:35:27.100 --> 01:35:30.940
由于某些原因，您需要直接使用HTTP 

01:35:28.750 --> 01:35:33.940
下载确实鼓励您使用

01:35:30.940 --> 01:35:35.240
专家或如果您知道鼓励您

01:35:33.940 --> 01:35:37.850
最好的组织

01:35:35.240 --> 01:35:40.840
在上面建立私人纳曼的最佳案例

01:35:37.850 --> 01:35:44.210
您的网络，以便您可以在

01:35:40.840 --> 01:35:45.740
让我们知道您对

01:35:44.210 --> 01:35:48.170
Spring Cloud团队很想听听

01:35:45.740 --> 01:35:49.760
从你那里，如果你愿意，你可以

01:35:48.170 --> 01:35:53.240
将您的任何反馈转发给他们

01:35:49.760 --> 01:35:55.780
在春季云OSS上，是正确的

01:35:53.240 --> 01:36:00.140
在右边的聊天室， 

01:35:55.780 --> 01:36:04.520
是的，就像我说过会有博客

01:36:00.140 --> 01:36:06.950
发布春季I 04 /视频重播

01:36:04.520 --> 01:36:09.200
和幻灯片，让我们再次听到

01:36:06.950 --> 01:36:11.330
对于Josh来说，真是令人难以置信

01:36:09.200 --> 01:36:14.120
详细的精彩演讲

01:36:11.330 --> 01:36:15.980
分布式中非常困难的话题

01:36:14.120 --> 01:36:18.050
计算您知道我们正在工作

01:36:15.980 --> 01:36:19.790
很难让你们更容易，所以我

01:36:18.050 --> 01:36:23.480
乔希非常感谢，我从中学到了很多

01:36:19.790 --> 01:36:24.650
这个演讲太好了

01:36:23.480 --> 01:36:27.290
你想在我们结束之前说

01:36:24.650 --> 01:36:30.530
并称之为一天，不，谢谢大家看到

01:36:27.290 --> 01:36:31.910
你在线上，好吧，哦，保重

01:36:30.530 --> 01:36:33.650
每个人都感谢你的时间

01:36:31.910 --> 01:36:35.630
问题期待着您的光临

01:36:33.650 --> 01:36:39.460
 4月20日拿咖啡或水

01:36:35.630 --> 01:36:39.460
呵呵，那会很棒的，不要错过

01:36:43.650 --> 01:36:45.710
您

01:36:47.909 --> 01:36:49.969
您

