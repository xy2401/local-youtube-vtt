WEBVTT
Kind: captions
Language: zh-Hans

00:00:13.660 --> 00:00:18.220
欢迎我要给的所有人

00:00:16.600 --> 00:00:20.260
您将进行简短的演示

00:00:18.220 --> 00:00:23.140
大约45分钟，然后向您展示

00:00:20.260 --> 00:00:24.700
那些新的春季启动项目

00:00:23.140 --> 00:00:27.700
不知道你我叫菲尔·韦伯

00:00:24.700 --> 00:00:31.620
我是纺靴的共同负责人，也是

00:00:27.700 --> 00:00:31.620
课程春季框架的提交者

00:00:32.070 --> 00:00:37.200
所以Spring Boot是一个新项目

00:00:34.870 --> 00:00:39.610
春天，这是我们的一个项目

00:00:37.200 --> 00:00:40.930
以获取为目的进行介绍

00:00:39.610 --> 00:00:43.379
从春天开始

00:00:40.930 --> 00:00:45.129
这个想法可能是普遍的

00:00:43.379 --> 00:00:46.750
您的非功能性要求

00:00:45.129 --> 00:00:49.059
需要一个真正的应用程序，使

00:00:46.750 --> 00:00:52.120
他们尽可能容易使用我们

00:00:49.059 --> 00:00:53.890
还试图摆脱尽可能多的

00:00:52.120 --> 00:00:57.909
可能有您想要的任何配置

00:00:53.890 --> 00:00:59.350
需要与春天复制想法

00:00:57.909 --> 00:01:01.750
靴子也是，我们要尝试

00:00:59.350 --> 00:01:03.580
并集中一些注意力

00:01:01.750 --> 00:01:06.130
不同的春季项目，而不是

00:01:03.580 --> 00:01:08.170
只是被洒或弹簧数据，我们

00:01:06.130 --> 00:01:10.860
防止我们提出一种统一的方法

00:01:08.170 --> 00:01:13.450
访问整个春季投资组合

00:01:10.860 --> 00:01:15.700
这也是春天的机会

00:01:13.450 --> 00:01:18.789
实际上对类型有意见

00:01:15.700 --> 00:01:20.770
您可以使用的技术

00:01:18.789 --> 00:01:22.299
而不是将太多细节

00:01:20.770 --> 00:01:26.259
我想直接跳入一些幻灯片

00:01:22.299 --> 00:01:28.710
代码并向您展示外观，所以我

00:01:26.259 --> 00:01:31.270
首先要演示一个greevey 

00:01:28.710 --> 00:01:32.799
应用程序，如果您是Java 

00:01:31.270 --> 00:01:34.630
开发人员不用担心我们会

00:01:32.799 --> 00:01:36.189
来一点点Java但

00:01:34.630 --> 00:01:39.039
时髦的故事是一个很好的方法

00:01:36.189 --> 00:01:40.149
开始，所以我只是要空一个

00:01:39.039 --> 00:01:47.799
目录在这里，我只是去

00:01:40.149 --> 00:01:49.630
首先编辑示例电话，以便

00:01:47.799 --> 00:01:52.359
这个例子只是一个典型的问候

00:01:49.630 --> 00:01:56.710
世界，我要用春天

00:01:52.359 --> 00:01:59.670
手腕控制器注释，我

00:01:56.710 --> 00:01:59.670
要注释一堂课

00:02:05.600 --> 00:02:09.899
所以对于那些以前没看过的人

00:02:07.800 --> 00:02:11.730
休息控制器在注释中

00:02:09.899 --> 00:02:13.650
那是春天4的一部分， 

00:02:11.730 --> 00:02:16.350
基本上只是行为的组合

00:02:13.650 --> 00:02:18.690
控制器和响应主体

00:02:16.350 --> 00:02:20.370
保存您键入响应的正文

00:02:18.690 --> 00:02:22.230
您的每种方法都是一种

00:02:20.370 --> 00:02:24.900
返回方法的结果

00:02:22.230 --> 00:02:32.100
直接转到屏幕上，所以我要

00:02:24.900 --> 00:02:35.900
为路由网址添加请求包装

00:02:32.100 --> 00:02:35.900
然后只返回一个简单的消息

00:02:53.950 --> 00:02:58.410
好的，所以我只需要保存此文件

00:03:01.140 --> 00:03:09.310
我们去了，所以如果我想运行这个

00:03:07.000 --> 00:03:11.800
应用程序Spring Boot附带了一个

00:03:09.310 --> 00:03:14.620
小型命令行工具大约是五个

00:03:11.800 --> 00:03:16.300
 Meg，您可以将其下载为

00:03:14.620 --> 00:03:19.390
 zip文件，或者如果您使用的是Mac， 

00:03:16.300 --> 00:03:21.970
可以使用brew安装来获取

00:03:19.390 --> 00:03:25.209
你的系统上的东西基本上是

00:03:21.970 --> 00:03:27.849
只是一个普通的编译器，所以如果我想

00:03:25.209 --> 00:03:31.390
运行这个我可以使用的应用程序

00:03:27.849 --> 00:03:36.250
春季运行，然后输入名称

00:03:31.390 --> 00:03:39.010
该文件，这样您就可以看到

00:03:36.250 --> 00:03:41.890
应用程序启动，我们开始运行

00:03:39.010 --> 00:03:44.280
春季启动应用程序，如果我上网

00:03:41.890 --> 00:03:48.880
浏览器，我应该能够看到

00:03:44.280 --> 00:03:53.980
本地地址并查看回复你好

00:03:48.880 --> 00:03:56.319
世界电子邮件通知中添加了-- 

00:03:53.980 --> 00:03:59.889
观看选项，这使我能够

00:03:56.319 --> 00:04:03.310
更改文件并重新编译为

00:03:59.889 --> 00:04:06.790
我这样做可以保存此内容

00:04:03.310 --> 00:04:09.760
再次归档，然后控制台将

00:04:06.790 --> 00:04:21.340
识别它刷新并获取

00:04:09.760 --> 00:04:22.300
立即反馈，所以如果我们回顾一下

00:04:21.340 --> 00:04:24.789
那里发生了什么，因为看起来

00:04:22.300 --> 00:04:26.620
有点神奇，但是我可以保证

00:04:24.789 --> 00:04:28.450
你不是我们从一个真正的开始

00:04:26.620 --> 00:04:30.130
简单的例子在这里休息

00:04:28.450 --> 00:04:33.190
控制器，我们正在执行该请求

00:04:30.130 --> 00:04:34.510
映射并返回响应，但是

00:04:33.190 --> 00:04:36.100
但是弹簧靴实际上正在做一个

00:04:34.510 --> 00:04:38.410
幕后的事物数量

00:04:36.100 --> 00:04:42.010
我们，让我们逐步了解这些

00:04:38.410 --> 00:04:44.039
他们一一被第一

00:04:42.010 --> 00:04:46.270
发生的是弹簧靴增加了一个

00:04:44.039 --> 00:04:48.639
导入声明的东西

00:04:46.270 --> 00:04:50.590
您可能需要，所以我没有

00:04:48.639 --> 00:04:52.810
添加导入组织点Spring 

00:04:50.590 --> 00:04:53.740
框架Web绑定注释

00:04:52.810 --> 00:04:55.030
因为我想用剩下的

00:04:53.740 --> 00:04:56.919
控制器，因为它发生了

00:04:55.030 --> 00:04:58.750
自动，我们有一些

00:04:56.919 --> 00:05:04.390
进口你所要的东西

00:04:58.750 --> 00:05:06.430
可能想使用下一件事

00:05:04.390 --> 00:05:07.190
发生的情况是我们看一下您的

00:05:06.430 --> 00:05:09.260
应用

00:05:07.190 --> 00:05:10.730
国家，我们对

00:05:09.260 --> 00:05:13.130
您将需要的东西类型

00:05:10.730 --> 00:05:15.500
例如，因为这是一个

00:05:13.130 --> 00:05:17.300
剩下的控制器应用程序，我们要去

00:05:15.500 --> 00:05:21.260
假设您要在其中运行

00:05:17.300 --> 00:05:22.640
一个网站，所以我们有一个网络启动器，如果

00:05:21.260 --> 00:05:24.950
你在抓之前还没看过

00:05:22.640 --> 00:05:27.140
注释是很时髦的

00:05:24.950 --> 00:05:29.420
提供，基本上是

00:05:27.140 --> 00:05:31.670
相当于做一个Maven建造阀

00:05:29.420 --> 00:05:33.500
直接在您的班级中

00:05:31.670 --> 00:05:40.340
只是说我需要得到这些

00:05:33.500 --> 00:05:41.840
运行应用程序的依赖项

00:05:40.340 --> 00:05:44.450
接下来发生的事情是我们添加了这个

00:05:41.840 --> 00:05:46.630
启用水配置注释

00:05:44.450 --> 00:05:49.760
这是 spring boot 的一部分

00:05:46.630 --> 00:05:51.580
允许其尝试猜测

00:05:49.760 --> 00:05:53.630
您可能需要的配置

00:05:51.580 --> 00:05:55.520
再说一次，因为我们正在休息

00:05:53.630 --> 00:05:57.680
控制器，我们将要设置弹簧

00:05:55.520 --> 00:05:59.600
 MVC自动为您提供Dis 

00:05:57.680 --> 00:06:02.860
注释，我会稍作介绍

00:05:59.600 --> 00:06:04.970
我们上班时会有更多细节， 

00:06:02.860 --> 00:06:07.850
最后发生的事情是我们有

00:06:04.970 --> 00:06:09.590
添加一个主要方法，这样我们可以

00:06:07.850 --> 00:06:11.210
实际启动该应用程序并

00:06:09.590 --> 00:06:12.710
这只是委托给另一个

00:06:11.210 --> 00:06:14.870
弹簧靴类称为弹簧

00:06:12.710 --> 00:06:17.510
应用程序，我将再次介绍

00:06:14.870 --> 00:06:19.240
现在我应该注意到更多细节

00:06:17.510 --> 00:06:21.560
还应该注意，这不是

00:06:19.240 --> 00:06:23.300
更改您的源代码是

00:06:21.560 --> 00:06:26.090
实际更改已编译的字节码

00:06:23.300 --> 00:06:32.750
因此您的来源将保持不变

00:06:26.090 --> 00:06:35.570
当您进行这项工作时，如果您已经看过

00:06:32.750 --> 00:06:37.250
 groov示例，现在您将所有

00:06:35.570 --> 00:06:38.600
发生在你身上的事情你可以看到

00:06:37.250 --> 00:06:41.900
它开始看起来更多了

00:06:38.600 --> 00:06:43.520
就像经典的Java应用程序一样，我们

00:06:41.900 --> 00:06:45.650
确实提供一流的Java 

00:06:43.520 --> 00:06:47.330
支撑和弹簧靴，所以我想要什么

00:06:45.650 --> 00:06:49.790
现在要做的是使用相同的应用程序

00:06:47.330 --> 00:06:50.810
我们只是用groovy写的

00:06:49.790 --> 00:06:56.990
它在Java中

00:06:50.810 --> 00:07:00.560
在新的IDE中，所以我有一个空白

00:06:56.990 --> 00:07:02.480
项目在这里设置，我正在使用Maven 

00:07:00.560 --> 00:07:03.890
这个项目，但你可以

00:07:02.480 --> 00:07:06.530
如果这是您的话，请轻松使用Gradle 

00:07:03.890 --> 00:07:08.750
偏好，然后几个特殊

00:07:06.530 --> 00:07:10.100
我首先设置的是

00:07:08.750 --> 00:07:12.200
我有一些仓库

00:07:10.100 --> 00:07:15.110
定义，因为我要加入

00:07:12.200 --> 00:07:18.050
快照和里程碑版本的发布是因为

00:07:15.110 --> 00:07:19.830
我们实际上还没有发布完整的GA 

00:07:18.050 --> 00:07:21.720
 spring boot 

00:07:19.830 --> 00:07:23.460
我得到的另一件事是

00:07:21.720 --> 00:07:26.250
重要的是我要从中继承

00:07:23.460 --> 00:07:28.740
父母pom，这是一个很好的小

00:07:26.250 --> 00:07:30.659
我们为春天提供的便利

00:07:28.740 --> 00:07:32.819
引导您不必使用它，但是如果您

00:07:30.659 --> 00:07:35.190
这样做只会使您的Maven文件

00:07:32.819 --> 00:07:37.710
他们写起来容易一点， 

00:07:35.190 --> 00:07:40.379
您可以看到，默认情况下，我们提供了

00:07:37.710 --> 00:07:45.300
您正在测试的依赖项数

00:07:40.379 --> 00:07:47.099
可能会使用J单位和hamcrest这样

00:07:45.300 --> 00:07:50.520
我想写一样的东西

00:07:47.099 --> 00:07:51.960
 Java最佳控制器的第一件事

00:07:50.520 --> 00:07:54.000
我真正需要做的是

00:07:51.960 --> 00:07:57.690
自动添加的依赖项

00:07:54.000 --> 00:08:07.830
通过常规代码，因此使用Maven我可以

00:07:57.690 --> 00:08:10.430
只是寻找一个依赖春天蓝色

00:08:07.830 --> 00:08:13.250
提供了一些入门的poms和

00:08:10.430 --> 00:08:15.389
初学者池塘只是分组的一种方式

00:08:13.250 --> 00:08:17.969
您可能的常见依赖关系

00:08:15.389 --> 00:08:19.110
需要一遍又一遍，所以在这个

00:08:17.969 --> 00:08:21.509
案例，因为我正在写网

00:08:19.110 --> 00:08:24.479
我要用弹簧的应用程序

00:08:21.509 --> 00:08:26.580
入门网络pom，您会注意到所有

00:08:24.479 --> 00:08:28.440
起动器以相同的方式开始，因此

00:08:26.580 --> 00:08:29.880
他们很容易搜索，如果你想

00:08:28.440 --> 00:08:36.240
尝试发现

00:08:29.880 --> 00:08:37.979
我们支持的事情，所以我保存下来

00:08:36.240 --> 00:08:39.570
文件，您现在会看到我们得到了一堆

00:08:37.979 --> 00:08:42.329
已经有额外的依赖

00:08:39.570 --> 00:08:45.450
通过这个初学者池塘拉

00:08:42.329 --> 00:08:47.670
我们有春季MVC显然是因为

00:08:45.450 --> 00:08:50.520
我们正在编写一个休息控制器

00:08:47.670 --> 00:08:52.500
弹簧靴本身，我们有雄猫

00:08:50.520 --> 00:08:58.800
嵌入式将提供

00:08:52.500 --> 00:09:00.570
实际的服务器上下文，让我们继续

00:08:58.800 --> 00:09:07.170
并实际写那个我们

00:09:00.570 --> 00:09:08.850
需要，所以我要做的第一件事是

00:09:07.170 --> 00:09:10.890
用rest控制器注释它为

00:09:08.850 --> 00:09:13.589
之前然后我需要添加

00:09:10.890 --> 00:09:14.850
启用自动配置注释

00:09:13.589 --> 00:09:16.860
因为那不会发生

00:09:14.850 --> 00:09:18.899
自动在Java世界中

00:09:16.860 --> 00:09:20.700
只是选择加入汽车

00:09:18.899 --> 00:09:24.290
我们的配置功能

00:09:20.700 --> 00:09:27.290
提供，我想写我的实际

00:09:24.290 --> 00:09:27.290
功能性

00:09:45.230 --> 00:09:51.920
我需要使用请求映射不要

00:09:48.440 --> 00:09:53.710
抢先控制，最后一件事

00:09:51.920 --> 00:09:56.120
我需要做的是添加main方法

00:09:53.710 --> 00:09:57.470
再次发生的事情

00:09:56.120 --> 00:09:59.120
在groovy世界中自动

00:09:57.470 --> 00:10:01.400
你必须在这里自己做，我是

00:09:59.120 --> 00:10:04.010
只是去代表春天

00:10:01.400 --> 00:10:07.610
应用程序类并调用静态

00:10:04.010 --> 00:10:10.430
便捷运行方法及来源

00:10:07.610 --> 00:10:12.050
我的应用程序是此类本身， 

00:10:10.430 --> 00:10:13.550
然后让我们通过

00:10:12.050 --> 00:10:19.670
来自命令行的参数

00:10:13.550 --> 00:10:21.560
所以应该就是我所需要的

00:10:19.670 --> 00:10:24.530
该应用程序正在运行，如果我想

00:10:21.560 --> 00:10:30.380
真正开始，我可以从

00:10:24.530 --> 00:10:31.700
在IDE中，希望这

00:10:30.380 --> 00:10:34.270
如果您得到应用程序启动

00:10:31.700 --> 00:10:38.510
与您在

00:10:34.270 --> 00:10:40.580
常规代码，然后如果我刷新我的

00:10:38.510 --> 00:10:49.160
屏幕上您看到我们正在运行

00:10:40.580 --> 00:10:51.800
在IDE中，所以让我们回顾一下

00:10:49.160 --> 00:10:54.560
发生在那里我们有这个应用程序

00:10:51.800 --> 00:10:57.200
再次上课，我们要记得添加

00:10:54.560 --> 00:10:59.720
启用自动配置和

00:10:57.200 --> 00:11:02.270
主要方法，以便我们可以启动它，但是

00:10:59.720 --> 00:11:03.830
否则很简单，我们有

00:11:02.270 --> 00:11:10.670
实际的请求映射

00:11:03.830 --> 00:11:12.950
做这项工作是为了总结

00:11:10.670 --> 00:11:14.600
入门者问题是解决问题的一种好方法

00:11:12.950 --> 00:11:17.390
你这些依赖的东西

00:11:14.600 --> 00:11:19.730
我们建议大家一起努力

00:11:17.390 --> 00:11:22.370
有这个可选的父pom 

00:11:19.730 --> 00:11:24.680
可以使用它有助于减少您的可能

00:11:22.370 --> 00:11:27.140
甚至配置，我们为

00:11:24.680 --> 00:11:29.960
许多项目，包括网络批处理

00:11:27.140 --> 00:11:31.610
我应该整合和弹簧数据

00:11:29.960 --> 00:11:33.560
还提这些不只是

00:11:31.610 --> 00:11:34.700
我们提供的spring依赖

00:11:33.560 --> 00:11:37.130
他们实际上是首发

00:11:34.700 --> 00:11:39.980
第三方依赖也是如此

00:11:37.130 --> 00:11:42.140
实例，如果您使用数据入门

00:11:39.980 --> 00:11:46.070
将获得春季数据，但也会休眠

00:11:42.140 --> 00:11:49.870
和jsr 303批注，使您能够

00:11:46.070 --> 00:11:49.870
做验证

00:11:53.730 --> 00:11:59.110
接下来我们要做的是

00:11:56.310 --> 00:12:01.060
从主创建运行方法

00:11:59.110 --> 00:12:04.930
并调用spring应用程序类

00:12:01.060 --> 00:12:06.930
在大多数时候，您可以

00:12:04.930 --> 00:12:08.890
只是调用spring应用程序不运行

00:12:06.930 --> 00:12:11.170
有时您可能想做一些

00:12:08.890 --> 00:12:13.589
定制您的应用之前

00:12:11.170 --> 00:12:16.480
它开始，所以如果您愿意，也可以

00:12:13.589 --> 00:12:19.420
使用它的一个实例，所以这段代码

00:12:16.480 --> 00:12:21.279
顶部显示了如何创建一个

00:12:19.420 --> 00:12:23.050
春天的应用程序，然后对其进行自定义

00:12:21.279 --> 00:12:24.760
在这种情况下，我只是关闭

00:12:23.050 --> 00:12:27.760
得到的小春叶横幅

00:12:24.760 --> 00:12:32.079
显示，然后按我的方式运行

00:12:27.760 --> 00:12:34.930
在春季申请之前

00:12:32.079 --> 00:12:36.940
类本身非常简单

00:12:34.930 --> 00:12:39.700
它只有一份工作，那就是给

00:12:36.940 --> 00:12:42.880
您是Spring应用程序上下文，如果

00:12:39.700 --> 00:12:45.550
您正在使用网络应用程序，然后

00:12:42.880 --> 00:12:47.829
获取嵌入式Web应用程序上下文

00:12:45.550 --> 00:12:49.870
这是spring提供的一种新型

00:12:47.829 --> 00:12:51.880
靴子，这只是一种快速的方法

00:12:49.870 --> 00:12:54.610
嵌入式运行并运行

00:12:51.880 --> 00:12:57.040
 servlet容器，开箱即用

00:12:54.610 --> 00:13:00.279
支持Tomcat，我们也支持码头

00:12:57.040 --> 00:13:01.930
如果要添加其他服务器

00:13:00.279 --> 00:13:05.410
界面非常简单，所以它

00:13:01.930 --> 00:13:08.050
如果你不应该应该

00:13:05.410 --> 00:13:10.110
编写一个Web应用程序，然后

00:13:08.050 --> 00:13:14.699
应用程序上下文只是一个标准

00:13:10.110 --> 00:13:14.699
注释驱动的应用程序上下文

00:13:19.829 --> 00:13:23.970
接下来我们要做的是

00:13:22.089 --> 00:13:26.500
启用此自动配置

00:13:23.970 --> 00:13:28.750
注释，这就是这种方式

00:13:26.500 --> 00:13:31.540
选择加入 spring boot 

00:13:28.750 --> 00:13:35.350
配置功能的方式

00:13:31.540 --> 00:13:37.899
有用吗，它需要看你的课

00:13:35.350 --> 00:13:39.940
路径并尝试做出有根据的猜测

00:13:37.899 --> 00:13:44.589
关于您将要配置什么

00:13:39.940 --> 00:13:46.630
通常要创建这样，例如

00:13:44.589 --> 00:13:49.269
在这种情况下，因为它有

00:13:46.630 --> 00:13:50.680
 Tomcat在类路径上，然后

00:13:49.269 --> 00:13:53.709
将尝试并自动配置您一个

00:13:50.680 --> 00:13:55.750
这些tomcat服务器的方式

00:13:53.709 --> 00:13:59.199
配置工作实际上他们

00:13:55.750 --> 00:14:02.160
配置弹簧等级的标准

00:13:59.199 --> 00:14:04.449
带有几个附加注释

00:14:02.160 --> 00:14:06.579
春季4将引入一个新的

00:14:04.449 --> 00:14:08.559
条件注释

00:14:06.579 --> 00:14:10.509
让你有条件地选择

00:14:08.559 --> 00:14:13.079
是否创建了bean 

00:14:10.509 --> 00:14:15.160
这有点像应用程序配置文件，但对于

00:14:13.079 --> 00:14:18.069
以编程方式确定是否

00:14:15.160 --> 00:14:20.459
被创造了大部分的自动

00:14:18.069 --> 00:14:22.989
我们提供的配置是

00:14:20.459 --> 00:14:25.239
有条件的，这意味着

00:14:22.989 --> 00:14:27.610
它只有在特定的班级才有效

00:14:25.239 --> 00:14:29.769
在你上课的路上，也是有条件的

00:14:27.610 --> 00:14:32.319
缺少存在，这意味着如果你

00:14:29.769 --> 00:14:33.399
定义自己的豆子来照顾

00:14:32.319 --> 00:14:35.649
该特定部分

00:14:33.399 --> 00:14:38.679
功能，然后弹回Google 

00:14:35.649 --> 00:14:45.699
走了，我们有一个演示，我将

00:14:38.679 --> 00:14:46.989
稍后再告诉你，接下来我

00:14:45.699 --> 00:14:49.689
想告诉你如何去做

00:14:46.989 --> 00:14:52.449
该应用程序正在其中运行

00:14:49.689 --> 00:14:54.220
您的IDE并将其打包，以便您

00:14:52.449 --> 00:15:00.389
可以实际运送并部署它

00:14:54.220 --> 00:15:04.179
 spring boot 提供了一个不错的地方

00:15:00.389 --> 00:15:06.519
适用于Maven的Java插件，也是一个插件

00:15:04.179 --> 00:15:08.769
您可以使用的Gradle，所以我只是

00:15:06.519 --> 00:15:11.100
要插入弹簧靴子万

00:15:08.769 --> 00:15:11.100
插入

00:15:15.809 --> 00:15:21.699
如果我保存了，那么跳转到命令

00:15:19.299 --> 00:15:30.790
排队并手动构建项目，我们可以

00:15:21.699 --> 00:15:33.699
看看输出，这是我的

00:15:30.790 --> 00:15:37.480
您可以看到基本的项目

00:15:33.699 --> 00:15:47.379
我要去的课程

00:15:37.480 --> 00:15:48.759
做maven clean install来构建它，如果

00:15:47.379 --> 00:15:56.199
我们来看看目标目录

00:15:48.759 --> 00:15:58.509
现在您可以看到我们有几个

00:15:56.199 --> 00:16:00.549
 jar文件，我们有一个原始的jar文件

00:15:58.509 --> 00:16:02.649
那是内森会的版本

00:16:00.549 --> 00:16:05.559
通常创建并且权衡

00:16:02.649 --> 00:16:06.699
大约3k什么样的数字

00:16:05.559 --> 00:16:09.309
因为我们还没有写很多

00:16:06.699 --> 00:16:11.949
自己的代码，但我们也有这个新的jar 

00:16:09.309 --> 00:16:15.549
创建Maven插件的文件

00:16:11.949 --> 00:16:17.079
对我们来说大约是九兆

00:16:15.549 --> 00:16:19.360
这是一种特殊的罐子

00:16:17.079 --> 00:16:22.110
可以实际运行，我只向您展示

00:16:19.360 --> 00:16:22.110
它的内容

00:16:25.330 --> 00:16:30.709
所以在这里您可以看到我们有一种

00:16:28.430 --> 00:16:32.779
 Maven将产生的标准东西

00:16:30.709 --> 00:16:34.310
一个pom文件

00:16:32.779 --> 00:16:36.860
有我们写的课

00:16:34.310 --> 00:16:39.170
自己，然后我们还有一个

00:16:36.860 --> 00:16:41.360
 Lib文件夹，其中包含所有

00:16:39.170 --> 00:16:43.250
我们已经有了依赖性，所以在这里你

00:16:41.360 --> 00:16:50.140
可以看到我们对spring有依赖性

00:16:43.250 --> 00:16:52.399
引导和Tomcat和Jackson这些是

00:16:50.140 --> 00:16:54.620
相当容易阅读，而且非常

00:16:52.399 --> 00:16:56.300
类似于您的有线文件格式

00:16:54.620 --> 00:16:57.830
只能以翻转方式进入网络，所以如果您

00:16:56.300 --> 00:17:00.830
熟悉它应该相当

00:16:57.830 --> 00:17:02.360
容易理解

00:17:00.830 --> 00:17:05.000
还有一些其他的课程

00:17:02.360 --> 00:17:07.209
被写，这些只是必需的

00:17:05.000 --> 00:17:11.470
这样我们就可以支持本机运行

00:17:07.209 --> 00:17:11.470
您不必担心太多

00:17:12.220 --> 00:17:19.670
因此，如果我想运行该应用程序， 

00:17:14.720 --> 00:17:25.189
现在可以只键入Java-gr，然后

00:17:19.670 --> 00:17:29.179
 jar文件的名称，现在

00:17:25.189 --> 00:17:37.250
启动，我可以点击刷新以查看

00:17:29.179 --> 00:17:39.380
它正在运行，所以正如我所说的， 

00:17:37.250 --> 00:17:40.670
一个navin插件和一个Gradle插件

00:17:39.380 --> 00:17:42.200
您可以自由使用其中任何一个

00:17:40.670 --> 00:17:44.929
系统，我们还提供了

00:17:42.200 --> 00:17:46.700
通用Java库，如果您

00:17:44.929 --> 00:17:52.160
需要一些更奇特的东西

00:17:46.700 --> 00:17:54.830
知道这些是jar文件胖

00:17:52.160 --> 00:17:56.330
我认为jar文件真的很有用

00:17:54.830 --> 00:17:58.790
因为它们很容易理解

00:17:56.330 --> 00:18:01.070
您不需要拆开它们的包装

00:17:58.790 --> 00:18:03.080
需要运送任何启动脚本，并作为

00:18:01.070 --> 00:18:05.300
您可以看到一个典型的West rest应用是

00:18:03.080 --> 00:18:07.550
即将达到10兆字节

00:18:05.300 --> 00:18:09.710
很好，也很小，他们也是

00:18:07.550 --> 00:18:12.080
与Cloud一起使用时非常友好

00:18:09.710 --> 00:18:14.480
铸造，所以如果您部署您的

00:18:12.080 --> 00:18:23.210
然后将应用程序迁移到云服务

00:18:14.480 --> 00:18:25.100
这些档案可以很好地运作

00:18:23.210 --> 00:18:27.260
我编写的示例应用程序是

00:18:25.100 --> 00:18:29.270
 Web应用程序，但您不必

00:18:27.260 --> 00:18:30.650
使用spring编写Web应用程序

00:18:29.270 --> 00:18:32.900
你实际上可以写任何类型的

00:18:30.650 --> 00:18:35.419
我们提供一些应用程序

00:18:32.900 --> 00:18:37.370
小钩点，您可以使用

00:18:35.419 --> 00:18:39.200
首先是命令行运行程序

00:18:37.370 --> 00:18:41.300
一个简单的界面，基本上

00:18:39.200 --> 00:18:44.030
反映您将要使用的主要方法

00:18:41.300 --> 00:18:47.750
调用，以便您可以创建一个bean实现

00:18:44.030 --> 00:18:50.780
此接口，然后处理任何类型

00:18:47.750 --> 00:18:53.300
您还希望提供的代码

00:18:50.780 --> 00:18:56.120
获取命令行的便捷方法

00:18:53.300 --> 00:18:58.340
实际上争论进入春天

00:18:56.120 --> 00:19:00.620
您指定的任何带有破折号的

00:18:58.340 --> 00:19:03.230
命令行将变为可用

00:19:00.620 --> 00:19:05.300
在春季环境中，您可以

00:19:03.230 --> 00:19:08.480
然后将这些值直接注入

00:19:05.300 --> 00:19:11.630
您的豆子，所以我们实际使用它

00:19:08.480 --> 00:19:13.400
内部使用启动本身，您可以

00:19:11.630 --> 00:19:15.650
使用以下命令配置引导的许多方面

00:19:13.400 --> 00:19:18.260
命令行，例如，如果您这样做- 

00:19:15.650 --> 00:19:20.450
 -服务器点端口可以更改

00:19:18.260 --> 00:19:28.400
端口号从默认的8080到

00:19:20.450 --> 00:19:32.240
您想要的东西我们也给您

00:19:28.400 --> 00:19:34.820
一种使用配置文件的方法

00:19:32.240 --> 00:19:36.740
和属性文件的弹簧箱我们

00:19:34.820 --> 00:19:38.450
约定寻找文件

00:19:36.740 --> 00:19:41.270
称为应用程序或属性

00:19:38.450 --> 00:19:44.870
您可以将该文件放在您的

00:19:41.270 --> 00:19:52.010
课堂路径或您的jar旁边，我会

00:19:44.870 --> 00:19:54.490
给你一个快速的演示，让我们

00:19:52.010 --> 00:20:00.590
更改我们拥有的控件， 

00:19:54.490 --> 00:20:02.419
使我的工作变得更有用

00:20:00.590 --> 00:20:05.960
要做的就是为此注入一个值

00:20:02.419 --> 00:20:09.770
专用字段和我的通话名称

00:20:05.960 --> 00:20:11.720
将从Springs环境获得

00:20:09.770 --> 00:20:18.020
然后我将这个世界变成

00:20:11.720 --> 00:20:20.480
你好名字，所以如果我想拥有那个

00:20:18.020 --> 00:20:23.410
我实际上可以创建的可配置名称

00:20:20.480 --> 00:20:26.300
一个本地属性文件，让我们

00:20:23.410 --> 00:20:28.690
也把一个放在来源主语中

00:20:26.300 --> 00:20:28.690
亚洲人

00:20:30.360 --> 00:20:39.610
我可以使用名字等于

00:20:36.610 --> 00:20:46.450
坚持我的名字，所以如果我运行这个

00:20:39.610 --> 00:20:48.460
再次申请，然后上网

00:20:46.450 --> 00:20:52.630
这次的浏览器

00:20:48.460 --> 00:20:54.970
你好，菲尔，如果我跳回

00:20:52.630 --> 00:20:58.150
命令行我们可以改变

00:20:54.970 --> 00:21:09.670
该文件在本地只是重建

00:20:58.150 --> 00:21:16.030
再次投影，然后我可以回显和

00:21:09.670 --> 00:21:20.080
然后是戴夫（Dave） 

00:21:16.030 --> 00:21:28.510
好，然后如果我运行此应用程序

00:21:20.080 --> 00:21:29.920
再次在本地刷新，您将看到

00:21:28.510 --> 00:21:32.200
它正在拾取的属性

00:21:29.920 --> 00:21:35.170
偏好，因此我们仍然有

00:21:32.200 --> 00:21:37.300
罐子里的属性，这将

00:21:35.170 --> 00:21:39.280
仍然得到应用，这只是外部

00:21:37.300 --> 00:21:41.770
文件将具有优先权，因此

00:21:39.280 --> 00:21:43.510
是提供方法的一种非常好的方法

00:21:41.770 --> 00:21:45.070
配置您的应用程序，您可以

00:21:43.510 --> 00:21:47.620
具有相当完整的配置

00:21:45.070 --> 00:21:49.210
与您的应用捆绑在一起，并允许其他人

00:21:47.620 --> 00:21:53.020
只是覆盖他们想要的位

00:21:49.210 --> 00:21:55.180
在本地您也可以使用以下命令

00:21:53.020 --> 00:21:56.470
行参数，以便我可以替换

00:21:55.180 --> 00:21:58.540
再次使用命令行参数

00:21:56.470 --> 00:22:06.310
这将是当地的先例

00:21:58.540 --> 00:22:09.360
文件并在其中刷新

00:22:06.310 --> 00:22:09.360
本地选择

00:22:17.670 --> 00:22:22.060
如果您不想使用属性

00:22:19.870 --> 00:22:23.890
您可以使用yeah Moe和yeah Moe的文件

00:22:22.060 --> 00:22:25.960
真的很受欢迎，尤其是在Ruby中

00:22:23.890 --> 00:22:29.350
世界，这是一个非常不错的格式

00:22:25.960 --> 00:22:30.880
快速配置，如果您想

00:22:29.350 --> 00:22:33.430
轻松戊基，您只需要包括

00:22:30.880 --> 00:22:35.620
山药蛇

00:22:33.430 --> 00:22:37.450
然后您可以替换应用程序点

00:22:35.620 --> 00:22:41.560
属性或结合使用

00:22:37.450 --> 00:22:44.320
与应用程序通道和

00:22:41.560 --> 00:22:45.910
这些文件将导致思想

00:22:44.320 --> 00:22:47.920
分隔的值最后出现在

00:22:45.910 --> 00:22:50.170
环境，所以在这里您可以看到

00:22:47.920 --> 00:22:57.760
可以使用以下命令指定服务器点端口

00:22:50.170 --> 00:23:01.480
 Yammer我们还提供了一种

00:22:57.760 --> 00:23:03.910
 Spring Boot将属性绑定到

00:23:01.480 --> 00:23:05.620
直接上课，这可能非常

00:23:03.910 --> 00:23:08.430
如果您的结构更合理，则很有用

00:23:05.620 --> 00:23:10.480
格式，并且您要确保它

00:23:08.430 --> 00:23:12.790
属性文件正确

00:23:10.480 --> 00:23:14.140
配置，所以这里有一个例子

00:23:12.790 --> 00:23:16.390
我们有一班叫我的

00:23:14.140 --> 00:23:19.420
有几个成员的属性

00:23:16.390 --> 00:23:21.270
变量位置和跳过，我们有

00:23:19.420 --> 00:23:23.920
 apt配置属性

00:23:21.270 --> 00:23:26.230
注释告诉弹簧靴子这是

00:23:23.920 --> 00:23:30.430
应当与之结合的春豆

00:23:26.230 --> 00:23:31.900
属性中的值，以便您可以

00:23:30.430 --> 00:23:34.360
看看那个应用程序

00:23:31.900 --> 00:23:37.510
以下属性定义了几个

00:23:34.360 --> 00:23:40.360
字符串值classpath我的xml和

00:23:37.510 --> 00:23:42.940
 skip是错误的，实际上将那些绑定

00:23:40.360 --> 00:23:44.560
 Java中两个真正的强类型

00:23:42.940 --> 00:23:49.630
世界，所以在这种情况下，春天

00:23:44.560 --> 00:23:51.250
资源抽象和布尔值

00:23:49.630 --> 00:23:54.630
我们实际上在 spring boot 中使用它

00:23:51.250 --> 00:23:58.860
本身，例如，如果我告诉你

00:23:54.630 --> 00:23:58.860
有一个叫做服务器属性的类

00:23:59.760 --> 00:24:06.460
这就是我们使用的属性

00:24:03.850 --> 00:24:08.980
定义服务器设置，以便您可以看到

00:24:06.460 --> 00:24:10.660
我们有一个服务器前缀，然后点

00:24:08.980 --> 00:24:11.800
端口是我们提早设置的东西， 

00:24:10.660 --> 00:24:15.030
还有很多其他事情

00:24:11.800 --> 00:24:15.030
你可以同意

00:24:22.039 --> 00:24:26.850
因此，如果您不想使用应用程序

00:24:24.960 --> 00:24:29.130
点属性可以作为您的名字

00:24:26.850 --> 00:24:31.830
改变它你可以指定一个弹簧

00:24:29.130 --> 00:24:34.260
配置点名称或弹簧冲突

00:24:31.830 --> 00:24:36.120
如果要更改的位置是

00:24:34.260 --> 00:24:38.210
该文件的名称或位置

00:24:36.120 --> 00:24:41.160
从那里捡起，你可以做到这一点

00:24:38.210 --> 00:24:43.470
在命令行上，或者您可以

00:24:41.160 --> 00:24:45.360
将其直接放置在环境中， 

00:24:43.470 --> 00:24:47.789
这将改变文件的方式

00:24:45.360 --> 00:24:50.370
被捡起，所以我们努力做到最大

00:24:47.789 --> 00:24:51.659
 Boo中的内容可自定义，因此，如果您

00:24:50.370 --> 00:24:53.190
不喜欢任何决定

00:24:51.659 --> 00:24:59.070
我们让您应该能够改变

00:24:53.190 --> 00:25:01.080
他们相对轻松另一个好

00:24:59.070 --> 00:25:03.059
有关属性文件的功能是

00:25:01.080 --> 00:25:05.070
我们可以支持个人资料的事实

00:25:03.059 --> 00:25:07.830
与他们非常容易，所以如果您使用

00:25:05.070 --> 00:25:09.090
出现在轮廓注释中

00:25:07.830 --> 00:25:10.620
你有不同的一套

00:25:09.090 --> 00:25:15.120
您用于的配置

00:25:10.620 --> 00:25:17.010
生产与发展然后你

00:25:15.120 --> 00:25:19.530
可以有一个不同的属性文件

00:25:17.010 --> 00:25:21.659
会自动根据

00:25:19.530 --> 00:25:23.669
按照那个惯例，所以在这里你可以看到

00:25:21.659 --> 00:25:26.700
那是因为我们正在启用

00:25:23.669 --> 00:25:28.590
开发配置文件应用程序- 

00:25:26.700 --> 00:25:31.080
开发的属性将被加载

00:25:28.590 --> 00:25:33.000
与动物在一起，甚至更好，因为

00:25:31.080 --> 00:25:37.049
你可以有一个嵌套的文档来定义

00:25:33.000 --> 00:25:39.150
实际设置的特定配置文件

00:25:37.049 --> 00:25:42.780
您可以使用的活动配置文件

00:25:39.150 --> 00:25:44.400
弹簧型材主动触发，因此您

00:25:42.780 --> 00:25:45.780
可以在命令行上做到这一点

00:25:44.400 --> 00:25:47.760
或者您可以将其放在属性中

00:25:45.780 --> 00:25:49.380
实际上以任何方式获取文件

00:25:47.760 --> 00:25:57.510
进入环境将受到尊重

00:25:49.380 --> 00:25:59.490
通过spring boot spring boot随带

00:25:57.510 --> 00:26:02.640
支持三种常见的日志记录

00:25:59.490 --> 00:26:04.740
框架重新登录log4j和java.util 

00:26:02.640 --> 00:26:06.419
如果您使用

00:26:04.740 --> 00:26:08.909
初学者池塘，然后您将被记录

00:26:06.419 --> 00:26:11.580
返回，我们努力确保

00:26:08.909 --> 00:26:14.210
日志的输出看起来很明智， 

00:26:11.580 --> 00:26:16.669
还要指出各种不同的日志记录

00:26:14.210 --> 00:26:20.220
库使用的实现

00:26:16.669 --> 00:26:22.860
可能已经利用过

00:26:20.220 --> 00:26:24.539
通过并正确工作，这样您就可以

00:26:22.860 --> 00:26:26.549
注意到当我启动应用程序时

00:26:24.539 --> 00:26:30.730
在命令行上我得到了不错的单身

00:26:26.549 --> 00:26:32.230
彩色突出显示的行输出

00:26:30.730 --> 00:26:33.850
如果您想更改任何锁定

00:26:32.230 --> 00:26:35.320
配置很漂亮

00:26:33.850 --> 00:26:38.740
直接，您可以创建一个

00:26:35.320 --> 00:26:42.040
日志文件属性取决于

00:26:38.740 --> 00:26:45.760
您正在使用的实际系统

00:26:42.040 --> 00:26:46.870
随您的应用程序一起运送

00:26:45.760 --> 00:26:49.660
想看看这实际上如何

00:26:46.870 --> 00:26:51.850
工作有一个称为日志记录的类

00:26:49.660 --> 00:26:53.800
应用程序上下文初始化器是

00:26:51.850 --> 00:27:01.150
弹簧实际启动的路线方式

00:26:53.800 --> 00:27:02.470
开始记录我想做的事

00:27:01.150 --> 00:27:06.160
现在真的带您通过演示

00:27:02.470 --> 00:27:08.470
自动配置如何工作只是为了尝试

00:27:06.160 --> 00:27:15.400
并澄清一些事情，我想要什么

00:27:08.470 --> 00:27:16.720
要做的就是跳回该代码， 

00:27:15.400 --> 00:27:18.610
我要做的就是改变这个

00:27:16.720 --> 00:27:20.080
类，而不是打印出一个

00:27:18.610 --> 00:27:24.250
名称将打印出信息

00:27:20.080 --> 00:27:32.890
从数据源中，我只是要

00:27:24.250 --> 00:27:34.900
注入数据源，所以我在这里

00:27:32.890 --> 00:27:37.780
一个新的数据源将其注入，然后

00:27:34.900 --> 00:27:39.760
我将不得不更改此输出

00:27:37.780 --> 00:27:41.320
只是从中获取一些信息

00:27:39.760 --> 00:27:43.870
在这种情况下连接，所以我要

00:27:41.320 --> 00:27:46.470
从数据库返回数据库供应商

00:27:43.870 --> 00:27:46.470
元数据

00:27:54.720 --> 00:27:59.190
所以如果我再次启动这个应用程序

00:28:02.460 --> 00:28:06.550
现在要发生的是

00:28:04.300 --> 00:28:08.410
实际上会在

00:28:06.550 --> 00:28:09.700
在这种情况下，我们被游戏告知

00:28:08.410 --> 00:28:13.300
实际上没有任何数据源

00:28:09.700 --> 00:28:15.280
定义，这是有道理的，因为我们

00:28:13.300 --> 00:28:17.320
实际上没有任何数据源

00:28:15.280 --> 00:28:20.950
春天来了，对我们的临终关怀的依赖

00:28:17.320 --> 00:28:23.770
引导无法真正尝试创建

00:28:20.950 --> 00:28:26.380
我们的配置，所以如果我更改我的

00:28:23.770 --> 00:28:28.980
 POM文件，我可以纠正我只是

00:28:26.380 --> 00:28:39.760
将有几个依赖

00:28:28.980 --> 00:28:48.760
我将添加spring JDBC，然后

00:28:39.760 --> 00:28:50.260
我将hsqldb添加为我的数据库

00:28:48.760 --> 00:28:51.790
可能会注意到没有版本

00:28:50.260 --> 00:28:54.010
数字显示在此pom文件中

00:28:51.790 --> 00:28:58.290
那是由于父母必须

00:28:54.010 --> 00:28:58.290
为我找到一堆默认值

00:28:58.650 --> 00:29:03.510
因此，如果我再次重新启动此应用程序

00:29:05.550 --> 00:29:09.730
这次开始了，如果我刷新我

00:29:08.350 --> 00:29:11.800
获得有关的信息

00:29:09.730 --> 00:29:14.680
我们所使用的特定数据库引擎

00:29:11.800 --> 00:29:16.480
使用，如果我继续，也许交换

00:29:14.680 --> 00:29:18.340
为了不同的东西，我们可以

00:29:16.480 --> 00:29:21.040
看看自动配置如何

00:29:18.340 --> 00:29:24.000
为我们管理，我将其交换为

00:29:21.040 --> 00:29:24.000
 h2数据库

00:29:30.510 --> 00:29:37.230
如果我要定义我的，那我们就走了

00:29:34.080 --> 00:29:39.419
自己在本地定义数据

00:29:37.230 --> 00:29:41.250
来源，然后春季启动会看到

00:29:39.419 --> 00:29:42.630
完全不参与其中

00:29:41.250 --> 00:29:45.000
它将在内存中创建

00:29:42.630 --> 00:29:46.710
数据库，但是如果我想移至

00:29:45.000 --> 00:29:48.840
生产，并指出一个真正的

00:29:46.710 --> 00:29:52.790
数据库，那么这很容易

00:29:48.840 --> 00:29:52.790
由我自己配置

00:29:59.660 --> 00:30:05.910
所以目前用于水配置

00:30:02.419 --> 00:30:07.770
我们提供了很多东西，我们

00:30:05.910 --> 00:30:09.600
总是在寻找更多，所以如果你发现

00:30:07.770 --> 00:30:10.830
缺少的东西

00:30:09.600 --> 00:30:14.940
那你认为我们应该支持

00:30:10.830 --> 00:30:16.740
请添加github问题，有一个

00:30:14.940 --> 00:30:19.200
最近关于

00:30:16.740 --> 00:30:21.000
我们的团队之一采取的添加步骤

00:30:19.200 --> 00:30:23.490
支持，这是一个很好的起点

00:30:21.000 --> 00:30:24.960
如果您想直接阅读

00:30:23.490 --> 00:30:27.660
我们目前为您提供支持

00:30:24.960 --> 00:30:31.470
嵌入式servlet容器，因此我们提供

00:30:27.660 --> 00:30:33.960
 Tomcat和码头我们可以自动为您添加内容

00:30:31.470 --> 00:30:37.710
数据源和JDBC模板

00:30:33.960 --> 00:30:41.510
 JPA支持和Spring数据JPA这样

00:30:37.710 --> 00:30:43.950
是使用JPA的一种非常不错的方法

00:30:41.510 --> 00:30:45.540
实体，我真的推荐

00:30:43.950 --> 00:30:49.410
如果您有参加项目的春季

00:30:45.540 --> 00:30:51.809
还没用过，我们也可以给

00:30:49.410 --> 00:30:53.280
您及时进行网络模板制作，我们

00:30:51.809 --> 00:30:57.240
对平常的春天有支持

00:30:53.280 --> 00:30:59.549
项目批处理等我们也有支持

00:30:57.240 --> 00:31:01.260
对于反应堆这是一个新的关键

00:30:59.549 --> 00:31:04.440
这个项目确实有帮助

00:31:01.260 --> 00:31:06.630
进行超快速的数据提取

00:31:04.440 --> 00:31:07.980
异步处理非常

00:31:06.630 --> 00:31:12.570
有趣的项目越来越多

00:31:07.980 --> 00:31:16.980
我最后一个功能的关注点

00:31:12.570 --> 00:31:20.130
要覆盖的是执行器和执行器

00:31:16.980 --> 00:31:22.830
是您可以附加的依赖

00:31:20.130 --> 00:31:24.690
如果要添加生产就绪则添加

00:31:22.830 --> 00:31:31.230
功能，因此我将跳回

00:31:24.690 --> 00:31:32.970
代码并向您展示它的外观

00:31:31.230 --> 00:31:40.970
就像我们拥有的入门产品一样

00:31:32.970 --> 00:31:40.970
我只需要包括的执行器

00:31:41.259 --> 00:31:48.799
如果我现在重新启动应用程序，我们

00:31:47.330 --> 00:31:56.029
应该看到一些其他终点

00:31:48.799 --> 00:31:58.759
已经被映射，所以在这里我们有一些

00:31:56.029 --> 00:32:00.859
其他信息端点和端点

00:31:58.759 --> 00:32:03.139
指标，如果我跳了，你有什么想法

00:32:00.859 --> 00:32:05.299
回到我的网络浏览器我的应用程序

00:32:03.139 --> 00:32:06.919
仍然像往常一样运行，但我现在

00:32:05.299 --> 00:32:11.979
还有一些其他信息，我

00:32:06.919 --> 00:32:14.539
可以得到，例如，如果我打豆子

00:32:11.979 --> 00:32:16.279
然后我可以得到一个JSON响应

00:32:14.539 --> 00:32:20.059
告诉我所有的豆子

00:32:16.279 --> 00:32:22.159
这个应用程序，或者我可以做一个线程

00:32:20.059 --> 00:32:24.049
转储权应该放在斜线转储

00:32:22.159 --> 00:32:26.769
然后我得到所有的信息

00:32:24.049 --> 00:32:30.379
当前正在运行的线程

00:32:26.769 --> 00:32:32.839
我们还提供简单的健康检查，因此

00:32:30.379 --> 00:32:35.419
如果你健康，可以写你的

00:32:32.839 --> 00:32:37.669
自己的实现，也许

00:32:35.419 --> 00:32:39.469
检查数据库或查看是否

00:32:37.669 --> 00:32:43.849
一些网络连接有效，因此

00:32:39.469 --> 00:32:46.759
对于监控非常有用，我们还

00:32:43.849 --> 00:32:48.769
提供有用的跟踪和指标

00:32:46.759 --> 00:32:51.559
信息，所以如果我点击跟踪，您可以

00:32:48.769 --> 00:32:54.139
查看我最近收到的请求

00:32:51.559 --> 00:32:55.879
使有关的应用程序信息

00:32:54.139 --> 00:33:00.979
通过用户的标题

00:32:55.879 --> 00:33:06.979
代理响应，如果我达到指标

00:33:00.979 --> 00:33:08.719
我得到有关各种URL的信息

00:33:06.979 --> 00:33:11.989
被击中，所以在这种情况下，您

00:33:08.719 --> 00:33:13.999
让我们看看路透社的斜线和

00:33:11.989 --> 00:33:16.639
 Wister决定我打200的状态

00:33:13.999 --> 00:33:21.950
一次，如果我去这里刷新

00:33:16.639 --> 00:33:24.080
此页面几次，您可以看到

00:33:21.950 --> 00:33:26.210
那个计数器上升，这些是

00:33:24.080 --> 00:33:28.519
相当简单的内存表示

00:33:26.210 --> 00:33:31.809
此刻让你知道

00:33:28.519 --> 00:33:31.809
持续这么多数据

00:33:44.020 --> 00:33:49.970
所以这些是执行器，然后添加这些

00:33:46.780 --> 00:33:51.350
生产就绪的功能

00:33:49.970 --> 00:33:53.990
当您到达时可能会需要

00:33:51.350 --> 00:33:57.130
生产它通过春天暴露了他们

00:33:53.990 --> 00:34:00.520
 MVC端点，它提供

00:33:57.130 --> 00:34:03.710
指标和健康状况等信息

00:34:00.520 --> 00:34:06.470
您可以在本地访问

00:34:03.710 --> 00:34:07.760
他们使用相同的端口，所以如果你是

00:34:06.470 --> 00:34:09.620
部署到动力环境

00:34:07.760 --> 00:34:11.900
这非常有用，或者如果您正在跑步

00:34:09.620 --> 00:34:13.610
在您自己的数据中心中，您还可以

00:34:11.900 --> 00:34:16.520
指定其他端口

00:34:13.610 --> 00:34:18.590
执行器端点，因此简单

00:34:16.520 --> 00:34:23.870
您可以决定的配置选择

00:34:18.590 --> 00:34:25.610
如果您不公开他们在您的主要站点

00:34:23.870 --> 00:34:27.620
想要向端点添加安全性，以便

00:34:25.610 --> 00:34:29.660
其中一些信息您可能不会

00:34:27.620 --> 00:34:31.370
想揭露那很漂亮

00:34:29.660 --> 00:34:33.620
您只需要做的就是

00:34:31.370 --> 00:34:40.610
增加春季安全性，所以我就给

00:34:33.620 --> 00:34:41.570
您再次进行快速演示，我们有一个

00:34:40.610 --> 00:34:47.120
初学者

00:34:41.570 --> 00:34:48.860
所以春季初学者安全，所以我只是

00:34:47.120 --> 00:34:51.440
必须再次添加该依赖项

00:34:48.860 --> 00:34:52.730
春季靴将看到新的事物

00:34:51.440 --> 00:35:00.110
类路径并配置它

00:34:52.730 --> 00:35:03.940
适当地让我们开始

00:35:00.110 --> 00:35:06.440
再次申请，然后尝试点击

00:35:03.940 --> 00:35:09.620
强大的击球手

00:35:06.440 --> 00:35:10.850
有时在这里你会发现它很敏感

00:35:09.620 --> 00:35:16.330
要求我输入用户名和密码

00:35:10.850 --> 00:35:19.460
如果我逃脱了，我得到一个错误页面

00:35:16.330 --> 00:35:21.560
默认情况下，我们将为您生成一个唯一的

00:35:19.460 --> 00:35:23.240
每次停止时都输入密码，但是您

00:35:21.560 --> 00:35:30.110
可以在我的日志中进行配置

00:35:23.240 --> 00:35:31.610
说在这种情况下我应该是你

00:35:30.110 --> 00:35:34.850
某处应该有一个小密码

00:35:31.610 --> 00:35:40.550
在这里，这就是

00:35:34.850 --> 00:35:42.110
为我生成的密码，如果

00:35:40.550 --> 00:35:44.510
我输入正确，我得到

00:35:42.110 --> 00:35:46.100
端点，您可以自定义所有这些

00:35:44.510 --> 00:35:49.630
并以标准的方式

00:35:46.100 --> 00:35:49.630
与任何其他Spring Security应用程序一起

00:36:00.380 --> 00:36:05.450
是的，我说我们有基本的安全保障

00:36:03.050 --> 00:36:08.210
默认启用，如果您想

00:36:05.450 --> 00:36:10.250
自定义任何终点

00:36:08.210 --> 00:36:12.170
密码，那真的很容易

00:36:10.250 --> 00:36:17.780
 github上有文档

00:36:12.170 --> 00:36:19.820
项目页面我想做的最后一件事

00:36:17.780 --> 00:36:24.320
告诉你我们一直在合作

00:36:19.820 --> 00:36:26.480
这些新的胖子jar文件正在运行

00:36:24.320 --> 00:36:28.640
直接从主要方法，但你

00:36:26.480 --> 00:36:30.980
实际上可以在更多情况下使用弹簧靴

00:36:28.640 --> 00:36:33.140
古典风格，如果您想要或需要

00:36:30.980 --> 00:36:35.450
因此，我将向您展示如何

00:36:33.140 --> 00:36:36.140
立即更改此应用程序并部署

00:36:35.450 --> 00:36:40.160
它内

00:36:36.140 --> 00:36:41.300
您目前可能会这样做的Tomcat 

00:36:40.160 --> 00:36:42.920
我需要的一切都非常简单

00:36:41.300 --> 00:36:46.400
要做的就是将包装类型更改为

00:36:42.920 --> 00:36:53.930
墙，然后我必须刷新你的

00:36:46.400 --> 00:36:56.120
现在我只需要再做一个剪辑

00:36:53.930 --> 00:36:58.280
事情就是给自己一个

00:36:56.120 --> 00:37:03.830
 Servlet初始化程序将启动

00:36:58.280 --> 00:37:05.110
项目，所以我只是称呼它，我们

00:37:03.830 --> 00:37:07.550
实际上提供了一个真正的方便

00:37:05.110 --> 00:37:09.290
起点是九次

00:37:07.550 --> 00:37:12.650
十个会为你工作，所以如果你有

00:37:09.290 --> 00:37:14.480
您刚刚启动的Spring Boot Servlet初始化程序

00:37:12.650 --> 00:37:17.330
需要重写一种方法来告诉它

00:37:14.480 --> 00:37:19.670
主要配置类

00:37:17.330 --> 00:37:24.020
情况下，我想指出

00:37:19.670 --> 00:37:27.770
示例类，但不是

00:37:24.020 --> 00:37:30.860
从我将开始的主要方法开始运行

00:37:27.770 --> 00:37:32.120
它通过eclipse嵌入了Tomcat 

00:37:30.860 --> 00:37:37.090
服务器，所以在这里您可以看到我的服务器

00:37:32.120 --> 00:37:39.230
如果我现在开始就已经部署了

00:37:37.090 --> 00:37:41.450
看到它需要更长的时间，但是

00:37:39.230 --> 00:37:45.680
有我的，有我的春天的标志

00:37:41.450 --> 00:37:47.390
开机，如果我回头就开始

00:37:45.680 --> 00:37:49.370
在这里点击刷新，您将看到

00:37:47.390 --> 00:37:51.230
我们得到一个404，因为我们

00:37:49.370 --> 00:37:55.250
不再需要添加根项目

00:37:51.230 --> 00:37:57.899
上下文根，然后问

00:37:55.250 --> 00:38:00.279
再次保证您的安全

00:37:57.899 --> 00:38:03.119
我们只是拿出安全带给你看

00:38:00.279 --> 00:38:03.119
该应用仍然有效

00:38:16.319 --> 00:38:22.739
好吧，我们去吧，那里

00:38:18.849 --> 00:38:22.739
现在运行的应用程序已部署在tomcat中

00:38:24.660 --> 00:38:29.440
与此有关的一件好事是

00:38:27.039 --> 00:38:39.729
你实际上跳回了行家

00:38:29.440 --> 00:38:41.559
如果您看一下，请再次构建并重新构建它

00:38:39.729 --> 00:38:45.309
目标目录，您将看到我们

00:38:41.559 --> 00:38:46.569
仍然有我们存档的两个副本

00:38:45.309 --> 00:38:49.630
有原始的那显然是

00:38:46.569 --> 00:38:51.699
比以前更大，但我们

00:38:49.630 --> 00:38:54.400
还有一个改写的

00:38:51.699 --> 00:38:57.940
允许我们实际上仍然进行这场战争

00:38:54.400 --> 00:38:59.559
申请就好像是她一样

00:38:57.940 --> 00:39:03.849
是一个命令行应用程序，所以我仍然可以

00:38:59.559 --> 00:39:05.859
运行jar的Java，然后运行

00:39:03.849 --> 00:39:07.809
战争档案（如果您曾经使用过） 

00:39:05.859 --> 00:39:09.789
像詹金斯这样的东西很常见

00:39:07.809 --> 00:39:11.829
您可以发布应用程序的方式

00:39:09.789 --> 00:39:14.259
这真的很有用，因为您可以

00:39:11.829 --> 00:39:17.259
人们只是运行它或将其部署到

00:39:14.259 --> 00:39:25.089
他们自己的应用服务器，如果那是

00:39:17.259 --> 00:39:27.130
他们希望这样做的希望

00:39:25.089 --> 00:39:28.269
如果您喜欢这个简短的旅游， 

00:39:27.130 --> 00:39:31.059
想了解更多

00:39:28.269 --> 00:39:34.599
项目页面上的文档

00:39:31.059 --> 00:39:36.309
项目带到I / O和github 

00:39:34.599 --> 00:39:38.289
项目本身就是我们托管的地方

00:39:36.309 --> 00:39:41.229
所有的代码，我们是Apache 2许可证

00:39:38.289 --> 00:39:42.759
我们正在寻找任何问题

00:39:41.229 --> 00:39:44.859
你必须在那里加薪

00:39:42.759 --> 00:39:46.239
拉出您要放入的请求

00:39:44.859 --> 00:39:49.089
我们正在寻找贡献，所以

00:39:46.239 --> 00:39:51.849
请参与也将记录

00:39:49.089 --> 00:39:53.229
关于这一点，我们继续

00:39:51.849 --> 00:39:55.930
你看一下新的春季网站

00:39:53.229 --> 00:39:57.249
春天你可能感兴趣的IO 

00:39:55.930 --> 00:39:59.619
这实际上是一个弹簧靴

00:39:57.249 --> 00:40:02.529
应用程序，所以我们实际上正在使用

00:39:59.619 --> 00:40:05.019
这个我们在生产中

00:40:02.529 --> 00:40:06.789
演示文稿本身可以在我的

00:40:05.019 --> 00:40:08.440
 github页面，如果您想联系

00:40:06.789 --> 00:40:10.989
我自己或戴夫是谁

00:40:08.440 --> 00:40:13.959
然后，我将联系详细信息

00:40:10.989 --> 00:40:15.640
屏幕在那里，所以我认为我们已经

00:40:13.959 --> 00:40:22.329
有时间提问

00:40:15.640 --> 00:40:26.799
哦，是的，有很多我会得到一个

00:40:22.329 --> 00:40:28.480
活着的人在这里为你服务，所以戴夫

00:40:26.799 --> 00:40:30.550
当然是

00:40:28.480 --> 00:40:33.339
恰好位于顶部

00:40:30.550 --> 00:40:34.720
它回答了所有问题，所以他是

00:40:33.339 --> 00:40:36.630
他们几乎都回答了，但我

00:40:34.720 --> 00:40:40.599
认为我们可以回去挑选一对

00:40:36.630 --> 00:40:43.420
对于仍在290人的人们

00:40:40.599 --> 00:40:45.400
如果您还有其他电话

00:40:43.420 --> 00:40:45.849
现在的问题是回答的好时机

00:40:45.400 --> 00:40:47.530
他们

00:40:45.849 --> 00:40:49.680
请原谅我进入问答环节

00:40:47.530 --> 00:40:55.060
面板，但让我们从几个开始

00:40:49.680 --> 00:41:00.810
直到我看到任何全新的顶部

00:40:55.060 --> 00:41:03.940
暂时关闭盘子，这样

00:41:00.810 --> 00:41:06.160
好人是嗯，我想我认为这是

00:41:03.940 --> 00:41:07.950
有趣，因为它只是在说话

00:41:06.160 --> 00:41:10.869
关于春季食物可能如何搭配

00:41:07.950 --> 00:41:13.750
春天生态系统之外的东西我

00:41:10.869 --> 00:41:16.450
认为这是Mubeen的重要话题

00:41:13.750 --> 00:41:19.359
卡恩（Kahn）提出的申请要求

00:41:16.450 --> 00:41:23.380
混合物使上钩的CSS生锈

00:41:19.359 --> 00:41:26.079
服务spring boot如何工作

00:41:23.380 --> 00:41:27.250
这种情况，而戴夫回应了

00:41:26.079 --> 00:41:29.920
会工作，我们会失去一些

00:41:27.250 --> 00:41:31.570
你们想谈谈魔术

00:41:29.920 --> 00:41:35.680
编写自己的启动插件

00:41:31.570 --> 00:41:38.440
将支持您的CSS cxf功能

00:41:35.680 --> 00:41:41.500
谈了一点

00:41:38.440 --> 00:41:44.380
嗯，当然我们已经尝试设计

00:41:41.500 --> 00:41:46.359
 spring boot ，这样您就可以选择加入

00:41:44.380 --> 00:41:48.310
随心所欲，您会注意到

00:41:46.359 --> 00:41:51.819
自动配置是什么

00:41:48.310 --> 00:41:53.890
您必须选择加入，这样您就可以自由选择

00:41:51.819 --> 00:41:55.660
使用任何现有技术

00:41:53.890 --> 00:41:57.609
您不需要的其他演示

00:41:55.660 --> 00:41:59.800
必须使用jar方法

00:41:57.609 --> 00:42:02.230
你可以部署在经典的哇吗

00:41:59.800 --> 00:42:05.050
如果您可能需要做一些工作

00:42:02.230 --> 00:42:07.240
你要离开人迹罕至的地方

00:42:05.050 --> 00:42:08.740
跟踪我们推荐的东西

00:42:07.240 --> 00:42:12.550
嗯，这很简单

00:42:08.740 --> 00:42:15.869
您也可能会注意到

00:42:12.550 --> 00:42:19.000
我添加了执行器功能

00:42:15.869 --> 00:42:22.270
已自动启用，您可以

00:42:19.000 --> 00:42:24.700
分发自动配置设置

00:42:22.270 --> 00:42:26.230
实际上在您自己的项目中，如果您

00:42:24.700 --> 00:42:29.290
想要这样会很漂亮

00:42:26.230 --> 00:42:31.990
直接写一些你的东西

00:42:29.290 --> 00:42:34.060
知道为您添加自动配置

00:42:31.990 --> 00:42:36.069
如果那是您需要的特别的东西

00:42:34.060 --> 00:42:37.540
所以那是我的另一件事

00:42:36.069 --> 00:42:40.589
认为很多人可能会感兴趣

00:42:37.540 --> 00:42:40.589
在未来

00:42:41.439 --> 00:42:47.059
优秀的恩爱夫妻问题

00:42:44.779 --> 00:42:48.409
进入戴夫的回答

00:42:47.059 --> 00:42:52.669
实时在这里，我认为这是

00:42:48.409 --> 00:42:56.900
特别值得重复一个问题

00:42:52.669 --> 00:42:59.390
从德维·基兰（Devi Kieran）那里他问到

00:42:56.900 --> 00:43:01.279
摊位应用程序服务器或Web 

00:42:59.390 --> 00:43:03.949
服务器

00:43:01.279 --> 00:43:06.890
我需要Dave或Dave回应

00:43:03.949 --> 00:43:08.059
既不是呃，但是如果你

00:43:06.890 --> 00:43:09.489
我会谈一会儿

00:43:08.059 --> 00:43:10.999
认为这是一个非常重要的问题

00:43:09.489 --> 00:43:14.390
是的

00:43:10.999 --> 00:43:15.890
所以春天的靴子也不是，但是

00:43:14.390 --> 00:43:18.349
确实提供了一流的支持

00:43:15.890 --> 00:43:21.709
嵌入式servlet容器在春天

00:43:18.349 --> 00:43:24.890
开机真的是要开始一个春天

00:43:21.709 --> 00:43:26.900
应用程序上下文是他的主要目标

00:43:24.890 --> 00:43:28.579
因此，如果您要处理一批

00:43:26.900 --> 00:43:31.339
显然意味着

00:43:28.579 --> 00:43:33.919
您不是在处理网页内容

00:43:31.339 --> 00:43:35.859
一定要，但是一旦你知道了

00:43:33.919 --> 00:43:38.479
应用程序上下文启动并运行

00:43:35.859 --> 00:43:40.759
弹簧靴的另一方面

00:43:38.479 --> 00:43:43.729
为您提供一流的支持

00:43:40.759 --> 00:43:45.859
嵌入式Tomcat，因此在演示中

00:43:43.729 --> 00:43:47.839
我在这里展示了我们一直在使用

00:43:45.859 --> 00:43:50.059
嵌入式Tomcat就是这样

00:43:47.839 --> 00:43:52.279
并处理了Web请求，而且

00:43:50.059 --> 00:43:55.039
别忘了你可以很开心地扔

00:43:52.279 --> 00:43:57.619
所有这一切，只要部署就可以了

00:43:55.039 --> 00:43:59.179
在现有的环境中启动应用程序

00:43:57.619 --> 00:44:00.939
您使用的应用服务器

00:43:59.179 --> 00:44:03.559
没有什么特别神奇的

00:44:00.939 --> 00:44:04.819
你可以选择的主要方法

00:44:03.559 --> 00:44:10.159
然后选择春天的东西

00:44:04.819 --> 00:44:12.049
你想要很棒，我继续

00:44:10.159 --> 00:44:16.029
肯定与之相关的问题

00:44:12.049 --> 00:44:18.529
朱迪·布鲁斯（Judy Bruce）为什么要发明Tomcat 

00:44:16.029 --> 00:44:18.890
你为什么要嵌入Tomcat是

00:44:18.529 --> 00:44:21.969
题

00:44:18.890 --> 00:44:26.839
那天完全正确是是好的

00:44:21.969 --> 00:44:28.969
好吧，你再次知道这取决于

00:44:26.839 --> 00:44:31.640
您正在编写的应用程序样式

00:44:28.969 --> 00:44:35.630
弹簧珠的功能很多

00:44:31.640 --> 00:44:37.999
实际上是受客户要求驱动的

00:44:35.630 --> 00:44:39.769
我们发现了很多团队

00:44:37.999 --> 00:44:43.189
正在以更多的方式工作

00:44:39.769 --> 00:44:45.380
 DevOps e-way建筑物自成体系

00:44:43.189 --> 00:44:47.150
应用，然后将它们扔到

00:44:45.380 --> 00:44:49.519
电线要配置的东西要少得多

00:44:47.150 --> 00:44:51.890
你很容易控制它

00:44:49.519 --> 00:44:53.029
知道何时使用Java运行-JAL是

00:44:51.890 --> 00:44:54.650
同一件事

00:44:53.029 --> 00:44:56.390
只要您拥有相同版本的

00:44:54.650 --> 00:44:58.279
 Java无论您在何处都可以运行

00:44:56.390 --> 00:44:59.839
真的对您没有帮助

00:44:58.279 --> 00:45:02.809
必须配置一个应用服务器

00:44:59.839 --> 00:45:04.749
或进行设置，我们也发现它可行

00:45:02.809 --> 00:45:09.319
基于云的技术真的很好

00:45:04.749 --> 00:45:11.119
部署，因此Cloud Foundry是

00:45:09.319 --> 00:45:13.569
春天的I / O的经典例子

00:45:11.119 --> 00:45:16.729
网站正在Cloud Foundry上运行，并且

00:45:13.569 --> 00:45:22.579
嵌入Tomcat意味着有一个

00:45:16.729 --> 00:45:24.289
不用担心，因为你

00:45:22.579 --> 00:45:26.329
你知道你掌控一切

00:45:24.289 --> 00:45:28.069
该应用只是

00:45:26.329 --> 00:45:29.959
在您没有的云环境上运行

00:45:28.069 --> 00:45:31.729
不得不担心那种方式

00:45:29.959 --> 00:45:37.249
云环境可能已配置

00:45:31.729 --> 00:45:40.640
他们的应用服务器不错

00:45:37.249 --> 00:45:43.249
他们看到了另一个非常重要的问题

00:45:40.640 --> 00:45:46.189
来自埃里克·尼尔斯（Eric Nils） 

00:45:43.249 --> 00:45:48.609
估计何时将成为GA或

00:45:46.189 --> 00:45:52.699
想要发布一个初始数据

00:45:48.609 --> 00:45:55.130
是的，我们实际上是在

00:45:52.699 --> 00:45:57.380
功能的春天，所以我们不会

00:45:55.130 --> 00:45:58.819
能够释放GA，直到弹簧4 

00:45:57.380 --> 00:46:00.949
被释放，那应该正在发生

00:45:58.819 --> 00:46:02.269
在今年年底之前，所以我们

00:46:00.949 --> 00:46:05.329
可能正在看 spring boot 

00:46:02.269 --> 00:46:08.509
大约在年底发布或

00:46:05.329 --> 00:46:09.949
可能是明年年初，这是我们

00:46:08.509 --> 00:46:11.900
说我们有一些里程碑

00:46:09.949 --> 00:46:13.159
现在在那里，我们对

00:46:11.900 --> 00:46:15.799
他们尤其是在我们自己运行时

00:46:13.159 --> 00:46:18.199
与他们一起工作，以便您可以

00:46:15.799 --> 00:46:20.089
当然可以给它一个机会

00:46:18.199 --> 00:46:23.630
最稳定的方面

00:46:20.089 --> 00:46:25.130
释放，即使您知道自己不想要

00:46:23.630 --> 00:46:28.130
在快照上运行，您可以

00:46:25.130 --> 00:46:29.449
考虑里程碑，是的

00:46:28.130 --> 00:46:35.299
在展位上以Java语言运行

00:46:29.449 --> 00:46:38.239
虽然效果很好，但对于人们来说

00:46:35.299 --> 00:46:40.939
可能不知道Spring Framework 4或更高版本

00:46:38.239 --> 00:46:43.459
哪个春季展台取决于您

00:46:40.939 --> 00:46:45.199
知道典型的是典型的释放手杖

00:46:43.459 --> 00:46:49.099
因为那是在今年年底

00:46:45.199 --> 00:46:51.079
或2014年初

00:46:49.099 --> 00:46:53.269
你知道你会的，你会说

00:46:51.079 --> 00:46:58.869
 Spring Boot和Spring框架在那

00:46:53.269 --> 00:46:58.869
好的时间，让我们看看

00:46:59.179 --> 00:47:04.130
埃里克·米尔斯（Eric Mills）问另一个好问题吗

00:47:01.819 --> 00:47:06.740
您期望API有更多重大更改

00:47:04.130 --> 00:47:09.410
在GA之前还是这样安全

00:47:06.740 --> 00:47:14.540
开始在新产品中使用

00:47:09.410 --> 00:47:17.300
今天的应用程序，所以我想我们不是

00:47:14.540 --> 00:47:20.240
真的期待任何重大的API更改

00:47:17.300 --> 00:47:22.280
在您想使用的东西上

00:47:20.240 --> 00:47:25.340
直接自己，例如

00:47:22.280 --> 00:47:28.190
春天的应用程序类

00:47:25.340 --> 00:47:31.430
我猜现在已经相当稳定了

00:47:28.190 --> 00:47:32.510
一些内部可能会改变，所以如果

00:47:31.430 --> 00:47:35.960
你正在写自己的汽车

00:47:32.510 --> 00:47:37.880
你知道我猜的配置类

00:47:35.960 --> 00:47:39.530
我们保留对此进行更改的权利，但

00:47:37.880 --> 00:47:41.660
如果您实际上只是将其用作

00:47:39.530 --> 00:47:43.820
消费者你应该还不错

00:47:41.660 --> 00:47:46.780
绝缘的，我认为这是相对的

00:47:43.820 --> 00:47:49.610
使用安全，我们当然不会

00:47:46.780 --> 00:47:51.650
任何重大变化，例如明显的春天

00:47:49.610 --> 00:47:53.119
网站本身正在运行，但我没有

00:47:51.650 --> 00:47:57.770
认为如果我们破产了他们会太高兴

00:47:53.119 --> 00:48:00.470
一切都绝对

00:47:57.770 --> 00:48:02.750
是的，Dave Dave Dave的回答表示欢迎

00:48:00.470 --> 00:48:05.330
同意你，但他也知道

00:48:02.750 --> 00:48:07.100
让你知道，嘿，你知道，不，不， 

00:48:05.330 --> 00:48:10.070
绝对免责声明

00:48:07.100 --> 00:48:13.270
所以听起来

00:48:10.070 --> 00:48:15.800
埃里克（Eric）听起来不太可能，所以我想你

00:48:13.270 --> 00:48:18.170
你知道需要打个电话

00:48:15.800 --> 00:48:20.510
自己找出是的，我的意思是

00:48:18.170 --> 00:48:22.400
项目的胆量越多，您

00:48:20.510 --> 00:48:24.080
你带你知道更有可能

00:48:22.400 --> 00:48:26.450
是我们可能要改变

00:48:24.080 --> 00:48:29.540
某些东西，但我认为正如您所注意到的

00:48:26.450 --> 00:48:32.210
我写的应用真的没有

00:48:29.540 --> 00:48:35.869
 spring boot 本身很多，所以你

00:48:32.210 --> 00:48:37.369
应该是相当安全的，是的，并且

00:48:35.869 --> 00:48:40.130
埃里克（Eric）感谢我的意思

00:48:37.369 --> 00:48:42.080
那是对...的很好的赞美吗

00:48:40.130 --> 00:48:43.880
知道之后就听到

00:48:42.080 --> 00:48:45.230
介绍了您知道的技术

00:48:43.880 --> 00:48:47.650
您已经很高兴使用它了

00:48:45.230 --> 00:48:51.770
那真是太棒了

00:48:47.650 --> 00:48:53.420
谢谢你，让我们来看看哇

00:48:51.770 --> 00:48:57.440
哎呀问题一直在这

00:48:53.420 --> 00:49:03.170
是Dave Dave的轮胎吗？ 

00:48:57.440 --> 00:49:04.460
嗯，让我们来看看Greg Proctor问

00:49:03.170 --> 00:49:07.490
我们有某种图表， 

00:49:04.460 --> 00:49:11.330
显示启动及其与其他的关系

00:49:07.490 --> 00:49:14.869
组件，我要画他的

00:49:11.330 --> 00:49:16.760
注意幻灯片上的主题

00:49:14.869 --> 00:49:18.859
从1到2本书的未知数，我只是

00:49:16.760 --> 00:49:20.040
意识到不是每个人都拥有这些

00:49:18.859 --> 00:49:22.920
嗯

00:49:20.040 --> 00:49:25.140
从春季发布第一天主题演讲

00:49:22.920 --> 00:49:30.030
一个完全有这样的地方

00:49:25.140 --> 00:49:32.130
图um但与此同时污秽

00:49:30.030 --> 00:49:35.190
记忆为您服务

00:49:32.130 --> 00:49:37.160
上的某种基本图

00:49:35.190 --> 00:49:42.120
从您介绍的博客

00:49:37.160 --> 00:49:44.760
是的，我认为可能是有些东西

00:49:42.120 --> 00:49:47.130
在春季温暖的演讲中，我们

00:49:44.760 --> 00:49:51.150
以及你可能会发现的

00:49:47.130 --> 00:49:54.210
在戴夫的github帐户上，死兽是

00:49:51.150 --> 00:49:56.250
我认为那是平静的斜线存在

00:49:54.210 --> 00:50:00.870
将为您提供细分

00:49:56.250 --> 00:50:02.490
我们使用的spring boot模块

00:50:00.870 --> 00:50:05.610
在内部就种类而言

00:50:02.490 --> 00:50:08.510
什么弹簧吊舱的大图

00:50:05.610 --> 00:50:10.800
项目可用，然后我认为

00:50:08.510 --> 00:50:13.170
第一天的主题演讲将是

00:50:10.800 --> 00:50:14.990
在发布时以及在

00:50:13.170 --> 00:50:18.120
你，如果你跳到github 

00:50:14.990 --> 00:50:20.460
项目春季启动有一个整体

00:50:18.120 --> 00:50:23.390
一堆示例应用程序，您可以

00:50:20.460 --> 00:50:25.470
看哪个显示你的基本

00:50:23.390 --> 00:50:30.210
我们拥有的基本春季项目

00:50:25.470 --> 00:50:32.340
我猜目前的报道

00:50:30.210 --> 00:50:34.200
我猜只是一件事

00:50:32.340 --> 00:50:36.770
新产品入门指南

00:50:34.200 --> 00:50:39.270
春天的I / O网站也真的很好

00:50:36.770 --> 00:50:47.930
整个弹簧的概述

00:50:39.270 --> 00:50:53.550
生态系统非常好，谢谢

00:50:47.930 --> 00:50:55.200
男孩，只是来吧，让我们

00:50:53.550 --> 00:50:57.180
是的，稍后再问

00:50:55.200 --> 00:51:00.180
请问我的问题早一点

00:50:57.180 --> 00:51:04.710
戴夫回答我以为我

00:51:00.180 --> 00:51:06.930
以为会很好，那是你

00:51:04.710 --> 00:51:09.690
知道什么样的弹簧

00:51:06.930 --> 00:51:12.740
我们应该使用boot进行的项目

00:51:09.690 --> 00:51:15.270
我们不应该在什么时候使用食物

00:51:12.740 --> 00:51:16.890
 spring boot ，呃大卫以为我有一个

00:51:15.270 --> 00:51:20.130
真的很有趣的答案

00:51:16.890 --> 00:51:21.030
嘿，无论您在哪里使用弹簧，但我只是

00:51:20.130 --> 00:51:24.360
以为也许你可以谈谈

00:51:21.030 --> 00:51:26.190
一点点，是的，我完全同意

00:51:24.360 --> 00:51:29.490
戴夫的手臂，尤其是我

00:51:26.190 --> 00:51:31.950
是的，是的，我们希望不给你

00:51:29.490 --> 00:51:33.450
 spring boot 的巨大足迹

00:51:31.950 --> 00:51:38.099
试图介绍

00:51:33.450 --> 00:51:40.560
整个春天，所以我肯定

00:51:38.099 --> 00:51:42.750
不要以为有很多地方

00:51:40.560 --> 00:51:44.430
使用弹簧靴会很痛，我可以

00:51:42.750 --> 00:51:47.849
说你有这么多的部署选项

00:51:44.430 --> 00:51:50.640
你知道你可以使用这个嵌入式罐子

00:51:47.849 --> 00:51:52.950
或者您可以按照经典的方式进行部署

00:51:50.640 --> 00:51:54.660
我想不起很多地方

00:51:52.950 --> 00:51:58.380
不会考虑

00:51:54.660 --> 00:52:02.880
我想这是某个时候

00:51:58.380 --> 00:52:04.710
您正在编写自己的应用程序， 

00:52:02.880 --> 00:52:06.690
你最终完全是自己的

00:52:04.710 --> 00:52:09.030
配置，然后部署到

00:52:06.690 --> 00:52:10.800
一会儿你可能会想知道

00:52:09.030 --> 00:52:13.140
那就是它的意义所在

00:52:10.800 --> 00:52:17.630
那个阶段，但是我可以肯定大多数应用

00:52:13.140 --> 00:52:23.670
认为实际上会从中受益

00:52:17.630 --> 00:52:25.290
很好，很好，下次再见

00:52:23.670 --> 00:52:28.920
时间哦，我只想提几个

00:52:25.290 --> 00:52:33.079
人们问是否有教程

00:52:28.920 --> 00:52:35.160
或某处在线演示， 

00:52:33.079 --> 00:52:39.690
当然，您应该检查一下

00:52:35.160 --> 00:52:43.050
 Phil和Dan的最初博客条目

00:52:39.690 --> 00:52:48.000
介绍了 spring boot ，所以我会

00:52:43.050 --> 00:52:50.730
将其发布到“问答”窗口中，但我

00:52:48.000 --> 00:52:54.180
认为注意以下几点也很重要

00:52:50.730 --> 00:52:57.660
我们有很多新指南

00:52:54.180 --> 00:53:01.560
在春天介绍的确也正在使用

00:52:57.660 --> 00:53:04.920
 spring boot ，那里只有一个

00:53:01.560 --> 00:53:07.230
整吨的新内容

00:53:04.920 --> 00:53:10.050
指南和教程，所以我只想

00:53:07.230 --> 00:53:16.530
鼓励人们检查那些

00:53:10.050 --> 00:53:18.450
资源，让我们看看，所以这可能

00:53:16.530 --> 00:53:21.210
相当简单，但我认为

00:53:18.450 --> 00:53:23.280
也许值得一提的是本杰明

00:53:21.210 --> 00:53:26.640
尼丁问你知道这些罐子吗

00:53:23.280 --> 00:53:28.109
可执行文件，戴夫与您回应

00:53:26.640 --> 00:53:29.849
知道春天创造的罐子

00:53:28.109 --> 00:53:32.099
不丹可执行文件，您还可以

00:53:29.849 --> 00:53:35.130
使用类似Maven的阴影

00:53:32.099 --> 00:53:36.240
插件还有更多您想说的吗

00:53:35.130 --> 00:53:39.720
关于还是那个

00:53:36.240 --> 00:53:41.609
简单明了的开枪

00:53:39.720 --> 00:53:45.390
放置更多有趣的主题

00:53:41.609 --> 00:53:47.340
比我们有时间去做Java本身

00:53:45.390 --> 00:53:51.720
并不真正提供第一

00:53:47.340 --> 00:53:53.820
支持这些阴影或

00:53:51.720 --> 00:53:56.160
胖罐子，所以你总是要跳

00:53:53.820 --> 00:53:59.370
通过一些箍，我们认为

00:53:56.160 --> 00:54:01.380
我们得到的解决方案是其中之一

00:53:59.370 --> 00:54:03.360
它呈现的更好的东西，你知道

00:54:01.380 --> 00:54:05.340
就像一个很好的简单视图

00:54:03.360 --> 00:54:08.100
依赖不是所有东西都被解压了

00:54:05.340 --> 00:54:10.710
并重新包装，这很好，但你可能

00:54:08.100 --> 00:54:12.480
仍然遇到问题，特别是如果

00:54:10.710 --> 00:54:14.220
您有第三方库

00:54:12.480 --> 00:54:16.350
正在进行类路径扫描

00:54:14.220 --> 00:54:18.000
是的，他们必须在一个

00:54:16.350 --> 00:54:21.060
确保它不会的某种方法

00:54:18.000 --> 00:54:22.560
出问题了，所以这里你有不同

00:54:21.060 --> 00:54:24.660
选项在那里，如果它不起作用，如果

00:54:22.560 --> 00:54:28.200
你跳出来，但实际上我们发现

00:54:24.660 --> 00:54:29.730
大多数事情对我们都起作用， 

00:54:28.200 --> 00:54:31.740
如果您发现失败的地方

00:54:29.730 --> 00:54:35.160
请提出一个问题，因为我们一直

00:54:31.740 --> 00:54:36.300
能够为您找到一些解决方法

00:54:35.160 --> 00:54:39.240
知道我们已经有了依赖

00:54:36.300 --> 00:54:41.130
我们自己的问题等等

00:54:39.240 --> 00:54:42.630
有可能我们可以得到东西

00:54:41.130 --> 00:54:48.030
如果您找到了东西，就会为您工作

00:54:42.630 --> 00:54:49.350
不适合这种风格哦，哦， 

00:54:48.030 --> 00:54:50.580
我还有另一个问题

00:54:49.350 --> 00:54:53.640
想突出显示，因为我认为

00:54:50.580 --> 00:54:56.190
会告诉你努力工作的人

00:54:53.640 --> 00:54:58.380
知道我看到商店正在做

00:54:56.190 --> 00:55:01.710
这有点传统风格

00:54:58.380 --> 00:55:03.750
频道3问我是否要更新

00:55:01.710 --> 00:55:04.680
不管是XML的网站，我该怎么办

00:55:03.750 --> 00:55:07.200
那和呃

00:55:04.680 --> 00:55:10.140
戴佛斯看到了大卫的回应，你知道我们

00:55:07.200 --> 00:55:11.490
建议不要在web.xml中使用作品，但

00:55:10.140 --> 00:55:12.840
如果您出于某些原因需要， 

00:55:11.490 --> 00:55:14.100
您必须编辑自己的源代码

00:55:12.840 --> 00:55:16.680
因为您发送了更多有关

00:55:14.100 --> 00:55:19.860
那，而你知道跟

00:55:16.680 --> 00:55:21.750
你们那种人都知道

00:55:19.860 --> 00:55:26.570
工作或必须与之合作的力量

00:55:21.750 --> 00:55:31.530
较传统的Java ee设置

00:55:26.570 --> 00:55:35.790
是的，嗯，我想我们提供这些

00:55:31.530 --> 00:55:37.530
方便的方法，但他们确实

00:55:35.790 --> 00:55:39.540
有点假设你在仆人中

00:55:37.530 --> 00:55:41.940
 3个环境，因此您可以拥有一个servlet 

00:55:39.540 --> 00:55:44.400
初始化器，如果您不记得了

00:55:41.940 --> 00:55:48.950
而且您需要使用网络XML 

00:55:44.400 --> 00:55:51.960
为什么你不能开始经典

00:55:48.950 --> 00:55:55.380
弹簧应用程序上下文并使用

00:55:51.960 --> 00:55:58.920
在启用自动配置注释

00:55:55.380 --> 00:56:01.200
常规的应用程序配置春季课程

00:55:58.920 --> 00:56:04.290
这是另一种挂钩方式

00:56:01.200 --> 00:56:07.950
自己投入其中，我们并不是真的

00:56:04.290 --> 00:56:11.490
目前推荐或支持的是

00:56:07.950 --> 00:56:13.890
一直以XML作为此入口点

00:56:11.490 --> 00:56:15.600
仍然可以是XML，但实际上

00:56:13.890 --> 00:56:18.000
想要一个配置类作为您的

00:56:15.600 --> 00:56:20.070
起点，然后导入为XML 

00:56:18.000 --> 00:56:23.510
如果那是您需要运行的，我们不需要

00:56:20.070 --> 00:56:23.510
建议您从XML开始

00:56:23.870 --> 00:56:31.130
好的，让我们看看几个

00:56:28.050 --> 00:56:34.530
其他人来自一个问题

00:56:31.130 --> 00:56:36.540
圣诞老人不是执行器工作室

00:56:34.530 --> 00:56:39.870
监控和寻址机制

00:56:36.540 --> 00:56:41.820
调试无功能的东西为什么会

00:56:39.870 --> 00:56:46.380
决定添加和打包

00:56:41.820 --> 00:56:49.500
他们与CF为什么决定

00:56:46.380 --> 00:56:53.190
原子与一起练习

00:56:49.500 --> 00:56:56.400
演示中或作为一般来源的应用程序

00:56:53.190 --> 00:57:00.030
他们为什么向我们发送包裹，我认为是

00:56:56.400 --> 00:57:01.290
一般的手臂，但圣诞老人，如果你是

00:57:00.030 --> 00:57:03.030
仍在电话中，请随时

00:57:01.290 --> 00:57:06.150
澄清一下，但这就是我的意思

00:57:03.030 --> 00:57:07.890
从问题中推断出

00:57:06.150 --> 00:57:10.380
意思是我想主要原因是

00:57:07.890 --> 00:57:12.210
一旦你有了这个东西的水平

00:57:10.380 --> 00:57:14.090
在生产中这很有意义

00:57:12.210 --> 00:57:18.060
使这些功能始终可用

00:57:14.090 --> 00:57:20.160
我知道那个网站

00:57:18.060 --> 00:57:23.880
发现执行器的东西真的很

00:57:20.160 --> 00:57:26.190
仅对调试您有用

00:57:23.880 --> 00:57:29.030
知道一个特定的请求出了错

00:57:26.190 --> 00:57:32.340
您最近知道的那些请求是什么

00:57:29.030 --> 00:57:35.070
他们还与新网站一起

00:57:32.340 --> 00:57:37.650
他们运行双重部署，因此他们已经

00:57:35.070 --> 00:57:39.900
总是有连续的正常运行时间

00:57:37.650 --> 00:57:42.090
小事情，例如获取信息

00:57:39.900 --> 00:57:44.100
端点告诉您哪个特定

00:57:42.090 --> 00:57:46.620
构建在实时环境中运行

00:57:44.100 --> 00:57:48.390
真的很有用，所以我想这个问题

00:57:46.620 --> 00:57:51.720
这就是为什么你不想要他们

00:57:48.390 --> 00:57:54.450
与您的应用程序一起部署cyntha可以

00:57:51.720 --> 00:57:56.130
继续澄清他或她

00:57:54.450 --> 00:57:57.720
回答他或她刚才发现

00:57:56.130 --> 00:57:59.730
所以你总的来说我为什么要

00:57:57.720 --> 00:58:02.930
他们的应用程序的一部分，我想你我

00:57:59.730 --> 00:58:08.940
认为你说的好吧

00:58:02.930 --> 00:58:10.590
很好，嗯，我想看看

00:58:08.940 --> 00:58:12.180
你盖这个，有人问

00:58:10.590 --> 00:58:15.119
关于嵌入式数据源选项，但我

00:58:12.180 --> 00:58:17.579
认为您涵盖了h2或hsqldb 

00:58:15.119 --> 00:58:19.680
由皮肤是的人员是

00:58:17.579 --> 00:58:23.279
那些被支持的外盒如

00:58:19.680 --> 00:58:25.349
是达比，很明显，如果您需要

00:58:23.279 --> 00:58:27.150
你知道的其他东西

00:58:25.349 --> 00:58:29.670
我们都应该拿一个数字然后发送

00:58:27.150 --> 00:58:32.430
一个问题，但您可以随时使用

00:58:29.670 --> 00:58:34.200
标准嵌入式数据库板

00:58:32.430 --> 00:58:36.509
那是春天，我们就不会

00:58:34.200 --> 00:58:38.190
然后参与其中，以便您可以进行连线

00:58:36.509 --> 00:58:41.640
您在正常春季时所做的一切

00:58:38.190 --> 00:58:43.950
好吧，你好

00:58:41.640 --> 00:58:45.900
嗯，你知道有几个人

00:58:43.950 --> 00:58:47.999
评论你认识一个人

00:58:45.900 --> 00:58:50.849
评论这本身就是一个问题，但是

00:58:47.999 --> 00:58:52.170
发表评论，然后我将形成一个

00:58:50.849 --> 00:58:54.180
片刻之下在此问题

00:58:52.170 --> 00:58:55.529
菲尔，所以几个人都说嘿

00:58:54.180 --> 00:58:59.220
这看起来和我类似

00:58:55.529 --> 00:59:02.069
看到空白右边，你知道我爱

00:58:59.220 --> 00:59:04.529
它很棒，你不会找到

00:59:02.069 --> 00:59:07.529
 spring boot 的一些灵感

00:59:04.529 --> 00:59:09.390
曾经，你知道在那些

00:59:07.529 --> 00:59:11.789
最初的客户对话，我们

00:59:09.390 --> 00:59:14.069
你知道有他们有

00:59:11.789 --> 00:59:18.779
讨论的权利，你知道是什么

00:59:14.069 --> 00:59:21.239
其他一些灵感

00:59:18.779 --> 00:59:23.309
帮助您知道将春季食品带到

00:59:21.239 --> 00:59:25.890
生活肯定吗，是的，我们

00:59:23.309 --> 00:59:27.989
实际上看了一些不同的

00:59:25.890 --> 00:59:31.529
项目都在Java之内

00:59:27.989 --> 00:59:33.119
世界及其外部

00:59:31.529 --> 00:59:35.759
提到了裁剪向导

00:59:33.119 --> 00:59:39.329
的时间，那当然是非常

00:59:35.759 --> 00:59:41.460
巨大的影响力和很多人

00:59:39.329 --> 00:59:43.769
说他们喜欢与他人一起工作

00:59:41.460 --> 00:59:47.069
手写笔的部署，所以

00:59:43.769 --> 00:59:49.410
一个半管是我们看过的另一个

00:59:47.069 --> 00:59:52.170
以及你所知道的

00:59:49.410 --> 00:59:57.319
像Sinatra这样的Ruby世界

00:59:52.170 --> 01:00:02.640
非常受欢迎的感谢

00:59:57.319 --> 01:00:04.200
好吧，这没意思，这是

01:00:02.640 --> 01:00:10.369
我认为我认为我们很有趣

01:00:04.200 --> 01:00:12.450
在这里几乎快没时间了，但是

01:00:10.369 --> 01:00:13.710
好吧，我认为还有两个问题

01:00:12.450 --> 01:00:15.779
进来，我想如果你不介意

01:00:13.710 --> 01:00:16.829
我们会花点力气

01:00:15.779 --> 01:00:19.589
是的没问题

01:00:16.829 --> 01:00:20.910
是的，很好，很酷，谢谢，我确定

01:00:19.589 --> 01:00:26.309
电话里的人们会很感激

01:00:20.910 --> 01:00:28.589
这是因为嗯，我们仍然有天哪194 

01:00:26.309 --> 01:00:30.809
电话上的人真棒

01:00:28.589 --> 01:00:34.589
所以是的，让您的问题不断出现

01:00:30.809 --> 01:00:36.739
嗯，让我们来看看呃两个问题

01:00:34.589 --> 01:00:40.859
您与spring数据集成

01:00:36.739 --> 01:00:44.189
普通成绩Proctor要求我们这样做

01:00:40.859 --> 01:00:46.739
是的，如果你看看我的样品

01:00:44.189 --> 01:00:49.079
应用程序，但实际上是

01:00:46.739 --> 01:00:55.279
很简单，让我看看我是否

01:00:49.079 --> 01:00:57.599
可以找到它，你还能看到我的屏幕吗

01:00:55.279 --> 01:01:07.410
是的，是的，您正在使用此手机

01:00:57.599 --> 01:01:12.660
填写春季展位github 

01:01:07.410 --> 01:01:14.670
回购有很多样品，如果

01:01:12.660 --> 01:01:17.609
你看一下春季样品

01:01:14.670 --> 01:01:21.569
数据JP有一个真的

01:01:17.609 --> 01:01:24.329
使用以下示例的简单示例

01:01:21.569 --> 01:01:28.699
如果可以的话，春季数据存储库

01:01:24.329 --> 01:01:32.339
通过包装结构效果

01:01:28.699 --> 01:01:34.410
是的，所以他们在那里，例如

01:01:32.339 --> 01:01:36.749
春天数据存储库的示例

01:01:34.410 --> 01:01:38.160
会自动捡起，所以

01:01:36.749 --> 01:01:41.189
那可能是拥有一个最好的地方

01:01:38.160 --> 01:01:44.189
看起来是github的春天-项目

01:01:41.189 --> 01:01:47.209
春天-但是-然后在春天下

01:01:44.189 --> 01:01:50.699
查看样品，您会找到的

01:01:47.209 --> 01:01:53.789
我给了一个很好的观点

01:01:50.699 --> 01:01:55.499
在聊天中回答您知道我们的情况

01:01:53.789 --> 01:01:58.049
确实有一些外部社区

01:01:55.499 --> 01:02:01.589
主持人请问社区通勤者

01:01:58.049 --> 01:02:04.679
贡献编码的弹簧数据并

01:02:01.589 --> 01:02:09.150
你知道我们肯定在找

01:02:04.679 --> 01:02:11.339
贡献者和新提交者的方式

01:02:09.150 --> 01:02:14.670
正如我们提到的，我们支持kPa和

01:02:11.339 --> 01:02:17.279
到目前为止，MongoDB您知道很多

01:02:14.670 --> 01:02:19.499
其他没有SQL数据库的数据库

01:02:17.279 --> 01:02:21.119
对的，当然甚至只是我们

01:02:19.499 --> 01:02:23.789
直接支持字符串数据，因此

01:02:21.119 --> 01:02:26.309
希望您能优雅地认识

01:02:23.789 --> 01:02:28.949
收到捐款，如果您

01:02:26.309 --> 01:02:30.689
对如何参与到您感到好奇

01:02:28.949 --> 01:02:34.289
知道只是在春季中央对我们

01:02:30.689 --> 01:02:37.259
这是Twitter，它将让您

01:02:34.289 --> 01:02:39.359
知道在签出休息罗布发布为

01:02:37.259 --> 01:02:41.070
对他的贡献真的很好

01:02:39.359 --> 01:02:43.080
最近的JMS支持

01:02:41.070 --> 01:02:45.720
记录了整个过程

01:02:43.080 --> 01:02:48.150
与正确阅读的会面

01:02:45.720 --> 01:02:50.880
没错，就是刚刚发布的

01:02:48.150 --> 01:02:53.550
春季生物博客，是的， 

01:02:50.880 --> 01:02:57.120
在aa上的精彩帖子，他有四个

01:02:53.550 --> 01:03:00.300
可以做出贡献，这只是绿色，但

01:02:57.120 --> 01:03:03.720
是的，所以嗯，请看一看

01:03:00.300 --> 01:03:06.570
我会，我会发布一个链接，我在这里

01:03:03.720 --> 01:03:08.760
如果可以的话，在聊天中

01:03:06.570 --> 01:03:11.610
我们在这里聊天的时候

01:03:08.760 --> 01:03:13.770
埃德温·克鲁兹（Edwin Cruz）提出的另一个好问题

01:03:11.610 --> 01:03:16.440
最小磁盘和内存是多少

01:03:13.770 --> 01:03:18.090
我认为春季春季食品的足迹

01:03:16.440 --> 01:03:20.130
只是猜到你知道

01:03:18.090 --> 01:03:22.140
嘿，你知道什么是开销

01:03:20.130 --> 01:03:24.930
我的意思是我在这里招致什么

01:03:22.140 --> 01:03:26.790
价格，我付出是有趣的

01:03:24.930 --> 01:03:29.700
其实我从来没有测量过

01:03:26.790 --> 01:03:32.640
这是一个有趣的问题

01:03:29.700 --> 01:03:34.350
因为它真的取决于什么

01:03:32.640 --> 01:03:36.660
您正在使用春季食品本身是

01:03:34.350 --> 01:03:39.510
相当轻，你知道没有

01:03:36.660 --> 01:03:41.910
您可以了解其中的大量代码

01:03:39.510 --> 01:03:45.030
它有很多可选的

01:03:41.910 --> 01:03:46.650
你知道它依赖的依赖

01:03:45.030 --> 01:03:48.690
关于你最终拉进来的东西，所以你看到了

01:03:46.650 --> 01:03:51.690
剩下的例子大约在

01:03:48.690 --> 01:03:54.600
 10梅格，我想我做了一个春天

01:03:51.690 --> 01:03:57.930
我认为要输入的数据样本是

01:03:54.600 --> 01:04:00.870
大概十二点让你知道

01:03:57.930 --> 01:04:03.060
休眠和JPA支持，但您知道

01:04:00.870 --> 01:04:06.120
这取决于你拉什么依赖

01:04:03.060 --> 01:04:10.620
关于那个项目有多大，但是

01:04:06.120 --> 01:04:13.260
春季食品本身很清淡， 

01:04:10.620 --> 01:04:17.220
我要发布那个，我们要

01:04:13.260 --> 01:04:19.770
发布该链接，我确实找到了

01:04:17.220 --> 01:04:21.150
为 spring boot 做贡献，所以我只是

01:04:19.770 --> 01:04:25.050
现在将其发布给所有人

01:04:21.150 --> 01:04:27.870
回应Greg Proctor的

01:04:25.050 --> 01:04:32.850
问题，所以现在就解决这个问题

01:04:27.870 --> 01:04:35.100
好吧，让我们看看科林

01:04:32.850 --> 01:04:37.380
木板要求弹簧靴很好玩

01:04:35.100 --> 01:04:40.260
具有Spring的相关项目

01:04:37.380 --> 01:04:42.540
 3.2传递依赖Dave 

01:04:40.260 --> 01:04:45.420
回应说弹簧杆需要

01:04:42.540 --> 01:04:46.830
自动配置功能，但您可以

01:04:45.420 --> 01:04:48.900
使用一些Spring应用程序

01:04:46.830 --> 01:04:51.690
具有嵌入式和嵌入式服务器的功能

01:04:48.900 --> 01:04:54.630
春季3-您想说更多吗

01:04:51.690 --> 01:04:55.020
关于这个或者是的，我想我

01:04:54.630 --> 01:04:57.110
猜测

01:04:55.020 --> 01:05:01.350
我唯一要补充的是，我们

01:04:57.110 --> 01:05:03.810
在春季内努力奋斗

01:05:01.350 --> 01:05:06.480
保留二进制返回的核心框架

01:05:03.810 --> 01:05:09.590
兼容性，所以如果您不使用

01:05:06.480 --> 01:05:14.790
不推荐使用的功能从三个

01:05:09.590 --> 01:05:16.680
你知道一个Spring应用程序是否

01:05:14.790 --> 01:05:18.300
针对三个两个进行构建不起作用

01:05:16.680 --> 01:05:19.590
用弹簧，那通常是

01:05:18.300 --> 01:05:21.600
考虑到该错误，您应该报告

01:05:19.590 --> 01:05:24.720
它，我们将尽力解决它，以便

01:05:21.600 --> 01:05:27.920
所以是的，你需要春天给你

01:05:24.720 --> 01:05:30.390
 spring boot ，但没有理由

01:05:27.920 --> 01:05:32.670
专案会针对较旧版本的

01:05:30.390 --> 01:05:39.630
春天不应该与

01:05:32.670 --> 01:05:41.970
春天秋天还好，所以我们下来了

01:05:39.630 --> 01:05:43.470
你知道我们已经被淘汰了

01:05:41.970 --> 01:05:46.680
硬件工作量降至150 

01:05:43.470 --> 01:05:49.350
人们给电话打了个电话，好像

01:05:46.680 --> 01:05:52.550
质量检查就此结束了

01:05:49.350 --> 01:05:55.080
我们要多给一些

01:05:52.550 --> 01:05:58.320
还有更多时间让人们问

01:05:55.080 --> 01:05:59.970
当你在我身边时，最后一个问题

01:05:58.320 --> 01:06:01.860
在这里思考任何最后的问题

01:05:59.970 --> 01:06:05.630
如果有的话，我只想你

01:06:01.860 --> 01:06:08.940
意识到我们确实发布了

01:06:05.630 --> 01:06:11.090
我的YouTube频道上的网络研讨会

01:06:08.940 --> 01:06:13.680
刚刚发布在聊天窗口中

01:06:11.090 --> 01:06:17.970
 youtube.com正斜杠Spring源

01:06:13.680 --> 01:06:19.380
开发人员，我们通常会将其包含在您的内部

01:06:17.970 --> 01:06:21.690
知道我们会在两周内说，但是你

01:06:19.380 --> 01:06:22.710
知道周围事情不是疯了怎么办

01:06:21.690 --> 01:06:25.560
在这里，我们通常尝试去找他们

01:06:22.710 --> 01:06:27.960
很快，所以您可以寻找

01:06:25.560 --> 01:06:29.820
重播，然后我们尝试

01:06:27.960 --> 01:06:32.790
如果还有链接到

01:06:29.820 --> 01:06:34.560
各种github仓库或示例代码

01:06:32.790 --> 01:06:36.660
你知道演示幻灯片，你知道我们

01:06:34.560 --> 01:06:38.970
试着把那些放在

01:06:36.660 --> 01:06:40.770
还说YouTube视频，以便您

01:06:38.970 --> 01:06:42.750
有一些真正独立的东西

01:06:40.770 --> 01:06:45.480
您可以与您的员工分享，或者

01:06:42.750 --> 01:06:47.550
对不起，你认识的同事

01:06:45.480 --> 01:06:49.830
在一个棕色袋子的午餐中，或者在

01:06:47.550 --> 01:06:54.330
下个月的Tech Talk这样的事情

01:06:49.830 --> 01:06:57.000
哦，所以我也想摧毁你的

01:06:54.330 --> 01:07:00.650
注意即将举行的几场网络研讨会

01:06:57.000 --> 01:07:05.520
真的很有趣， 

01:07:00.650 --> 01:07:06.810
如果您正在寻找并感兴趣

01:07:05.520 --> 01:07:08.850
 WebSockets之类的东西

01:07:06.810 --> 01:07:10.500
或者如果您有兴趣

01:07:08.850 --> 01:07:16.890
我有一些非常酷的网络研讨会

01:07:10.500 --> 01:07:19.590
接下来的一个是十月

01:07:16.890 --> 01:07:20.730
第三天是星期四

01:07:19.590 --> 01:07:23.700
关于建立大数据

01:07:20.730 --> 01:07:25.290
 Hadoop和spring的应用程序以及

01:07:23.700 --> 01:07:30.780
我们会谈论很多新的

01:07:25.290 --> 01:07:32.550
春季XD项目已被推广

01:07:30.780 --> 01:07:34.380
揭开面纱，你知道放大

01:07:32.550 --> 01:07:35.880
在那个春天第一次缩放

01:07:34.380 --> 01:07:39.510
一个，尽管我们一直具有里程碑

01:07:35.880 --> 01:07:44.130
在整个2013年和

01:07:39.510 --> 01:07:48.480
我们也要参加另一个网络研讨会

01:07:44.130 --> 01:07:51.600
在10月10日和Rawson 

01:07:48.480 --> 01:07:53.760
关于厨师的故事要讲

01:07:51.600 --> 01:07:56.370
关于构建WebSocket浏览器应用程序

01:07:53.760 --> 01:08:03.540
和斯普林斯在一起，所以他会讲很多话

01:07:56.370 --> 01:08:06.540
关于某种消息传递和使用

01:08:03.540 --> 01:08:09.270
 sock j / s是一个JavaScript库

01:08:06.540 --> 01:08:12.960
关键在

01:08:09.270 --> 01:08:16.440
做出贡献，所以他会这样做

01:08:12.960 --> 01:08:18.569
 10月8日星期二下午3点，如果

01:08:16.440 --> 01:08:20.370
您有兴趣报名只是去

01:08:18.569 --> 01:08:22.560
 spring dot IO网站，看看

01:08:20.370 --> 01:08:25.440
博客，如果您查看新闻， 

01:08:22.560 --> 01:08:27.740
没有留下所有帖子提要或只是

01:08:25.440 --> 01:08:32.040
新闻和事件供稿，您将看到

01:08:27.740 --> 01:08:36.299
您会看到帖子--以及这些链接

01:08:32.040 --> 01:08:37.560
两个网络研讨会，所以我有一个

01:08:36.299 --> 01:08:39.420
刚完成时要求

01:08:37.560 --> 01:08:42.210
菲尔，你能把那带回来吗

01:08:39.420 --> 01:08:46.710
具有主要网址的幻灯片

01:08:42.210 --> 01:08:49.890
链接谢谢，是的，我觉得

01:08:46.710 --> 01:08:52.530
谢谢你提到

01:08:49.890 --> 01:08:55.770
是的，我通常会记得

01:08:52.530 --> 01:08:57.540
在执行质量检查时执行此操作，但可以

01:08:55.770 --> 01:09:00.330
太好了，所以您可以看到

01:08:57.540 --> 01:09:02.850
文档链接就在那里，您也可以

01:09:00.330 --> 01:09:06.150
获得页面链接一次又一次

01:09:02.850 --> 01:09:07.350
博客中有一个或两个博客条目

01:09:06.150 --> 01:09:09.000
目前正在喂我哦

01:09:07.350 --> 01:09:12.180
我认为您会感兴趣的是

01:09:09.000 --> 01:09:15.510
与戴夫和菲尔的弦靴有关

01:09:12.180 --> 01:09:20.339
是很平易近人的

01:09:15.510 --> 01:09:22.319
 Twitter或电子邮件如此，但只想

01:09:20.339 --> 01:09:24.270
分享菲尔和戴夫

01:09:22.319 --> 01:09:25.589
哇的评论，这是你知道的谢谢

01:09:24.270 --> 01:09:28.049
你这么多的答案，这

01:09:25.589 --> 01:09:30.290
事情很棒，你知道一些

01:09:28.049 --> 01:09:34.049
聊天中一些非常酷的评论

01:09:30.290 --> 01:09:35.779
在这里，所以您知道这也就不足为奇了

01:09:34.049 --> 01:09:38.569
那些人是失控的最爱

01:09:35.779 --> 01:09:41.040
在今年春季的演讲，以及

01:09:38.569 --> 01:09:42.779
你知道恭喜，这只是

01:09:41.040 --> 01:09:44.579
一些非常酷的东西，所以谢谢

01:09:42.779 --> 01:09:46.409
你的时间家伙，你想说

01:09:44.579 --> 01:09:48.810
现在一切都很好玩

01:09:46.409 --> 01:09:50.759
只是感谢大家的收看和

01:09:48.810 --> 01:09:54.510
期待您的任何反馈

01:09:50.759 --> 01:09:56.670
可能让欢呼声带给大家希望

01:09:54.510 --> 01:09:58.849
看到下届网络研讨会非常精彩

01:09:56.670 --> 01:09:58.849
事情

