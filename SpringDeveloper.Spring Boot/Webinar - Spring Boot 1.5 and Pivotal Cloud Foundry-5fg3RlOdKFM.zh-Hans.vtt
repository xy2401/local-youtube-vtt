WEBVTT
Kind: captions
Language: zh-Hans

00:00:04.569 --> 00:00:07.819
早上好，下午好

00:00:06.890 --> 00:00:09.320
晚间

00:00:07.819 --> 00:00:10.730
我的名字叫彼得·汉弗莱（Peter Humphrey） 

00:00:09.320 --> 00:00:13.730
首席产品营销经理

00:00:10.730 --> 00:00:16.490
春季团队的关键工作

00:00:13.730 --> 00:00:18.769
 Cloud Foundry团队我很幸运

00:00:16.490 --> 00:00:20.900
今天被最新的之一加入

00:00:18.769 --> 00:00:22.250
春季丁烯妈妈的成员哦

00:00:20.900 --> 00:00:23.689
你会自我介绍吗？ 

00:00:22.250 --> 00:00:27.519
告诉我们你的身份

00:00:23.689 --> 00:00:30.320
以及如何到达这里好吧，谢谢PJ 

00:00:27.519 --> 00:00:33.260
大家好，我叫杰夫妈妈

00:00:30.320 --> 00:00:35.840
很高兴，我是单身的开发人员

00:00:33.260 --> 00:00:38.630
像彼得这样的团队说我刚加入

00:00:35.840 --> 00:00:41.240
几个月前，在此之前，我

00:00:38.630 --> 00:00:44.210
在Cloud Foundry上工作更多

00:00:41.240 --> 00:00:46.490
特别是用户身份验证和

00:00:44.210 --> 00:00:51.710
 Cloud Foundry的授权组件

00:00:46.490 --> 00:00:54.200
也称为UA a that product so 

00:00:51.710 --> 00:00:56.000
你是一个字符串项目，它是其中之一

00:00:54.200 --> 00:00:59.300
 Cloud Foundry上的几个春季项目

00:00:56.000 --> 00:01:01.910
我觉得我很幸运

00:00:59.300 --> 00:01:04.070
切换到字符串启动并进入

00:01:01.910 --> 00:01:06.799
在一些很棒的字符串启动上工作， 

00:01:04.070 --> 00:01:11.899
我马上就进行了Cloud Foundry集成

00:01:06.799 --> 00:01:16.909
事实上我加入了，是的

00:01:11.899 --> 00:01:18.560
很高兴有你哦，今天如此酷

00:01:16.909 --> 00:01:20.749
我们将谈论 spring boot 

00:01:18.560 --> 00:01:22.969
新的春天点一五发布

00:01:20.749 --> 00:01:24.799
并谈到了如何

00:01:22.969 --> 00:01:27.049
适用于整个Cloud Foundry和一些

00:01:24.799 --> 00:01:29.749
我们正在做的令人兴奋的事情

00:01:27.049 --> 00:01:31.310
作为联合工程团队，但之前

00:01:29.749 --> 00:01:33.740
我们了解到，让我们来做一个

00:01:31.310 --> 00:01:35.090
快速回顾一下发生了什么

00:01:33.740 --> 00:01:38.149
在某些最新版本中发生

00:01:35.090 --> 00:01:39.439
只是强制性的安全港声明

00:01:38.149 --> 00:01:41.210
因为我们要谈论的是

00:01:39.439 --> 00:01:43.549
前瞻性路线图的一点点

00:01:41.210 --> 00:01:45.759
您知道的信息会注意到

00:01:43.549 --> 00:01:49.639
没有明显的日期和这样的数字

00:01:45.759 --> 00:01:50.990
所以你知道，只是意识到

00:01:49.639 --> 00:01:52.969
这些信息是正向的

00:01:50.990 --> 00:01:54.170
并可能会很好地改变

00:01:52.969 --> 00:01:56.899
当我们进入前向时

00:01:54.170 --> 00:02:03.139
信息虽然应该很漂亮

00:01:56.899 --> 00:02:04.969
很酷，让我们谈一点

00:02:03.139 --> 00:02:07.700
关于通过谈一点开始

00:02:04.969 --> 00:02:09.619
关于开机1/4发生的情况

00:02:07.700 --> 00:02:11.690
您错过了它，我们将专注于

00:02:09.619 --> 00:02:13.670
 spring boot 1/5和一些很棒的东西

00:02:11.690 --> 00:02:14.150
菲尔·韦伯母亲和其他人的东西

00:02:13.670 --> 00:02:16.670
团队的

00:02:14.150 --> 00:02:18.860
在该版本中发布，然后我们将

00:02:16.670 --> 00:02:20.030
向您展示一些有关其工作原理的演示

00:02:18.860 --> 00:02:21.260
在关键的Cloud Foundry上是一些

00:02:20.030 --> 00:02:24.319
我们正在做的有趣的整合

00:02:21.260 --> 00:02:27.860
那里受到以代码为中心的宽松启发

00:02:24.319 --> 00:02:30.859
在他们的 spring boot 管理工具上

00:02:27.860 --> 00:02:33.640
一个可用的开源工具，但

00:02:30.859 --> 00:02:36.680
我们将其用作设计点

00:02:33.640 --> 00:02:39.859
我们正在进行的整合

00:02:36.680 --> 00:02:41.689
弹簧模式和pc f，然后我们将

00:02:39.859 --> 00:02:44.599
完成我的那种看

00:02:41.689 --> 00:02:46.970
大步向前不仅是为了什么

00:02:44.599 --> 00:02:48.859
下一个 spring boot 间隔

00:02:46.970 --> 00:02:50.900
云铸造也有种拉

00:02:48.859 --> 00:02:52.459
镜头向后退了一点

00:02:50.900 --> 00:02:56.180
看着其他一些有趣的东西

00:02:52.459 --> 00:02:57.920
春天的圆顶里有一些东西

00:02:56.180 --> 00:03:01.989
很酷的整合指向关键

00:02:57.920 --> 00:03:01.989
 Quadri，让我们开始吧

00:03:07.120 --> 00:03:12.829
太好了，在春季点一

00:03:10.329 --> 00:03:14.629
那里有几个大主题

00:03:12.829 --> 00:03:16.480
在播放方面有很多改进

00:03:14.629 --> 00:03:20.060
处理我们做了一些增量

00:03:16.480 --> 00:03:23.900
执行器的改进和一些

00:03:20.060 --> 00:03:26.359
数据方面的改进以及

00:03:23.900 --> 00:03:28.040
相当多的改进

00:03:26.359 --> 00:03:29.780
在那上面有一张完整的幻灯片

00:03:28.040 --> 00:03:30.500
空气处理位很漂亮

00:03:29.780 --> 00:03:32.569
直截了当

00:03:30.500 --> 00:03:35.810
我们围绕我们添加了一些东西

00:03:32.569 --> 00:03:38.000
基本上调用故障分析器

00:03:35.810 --> 00:03:39.620
试图简化一些诊断

00:03:38.000 --> 00:03:41.480
常见的启动问题，而不是

00:03:39.620 --> 00:03:43.489
只是讨厌的Java堆栈跟踪

00:03:41.480 --> 00:03:45.829
我们正在尝试分析这些

00:03:43.489 --> 00:03:48.909
堆栈跟踪，不仅给您

00:03:45.829 --> 00:03:51.859
稍微更明智的错误消息，但

00:03:48.909 --> 00:03:53.389
尝试给我一些补救指导

00:03:51.859 --> 00:03:56.359
最喜欢的例子是咬人的例子

00:03:53.389 --> 00:03:58.849
我一直在泥泞中，这是我

00:03:56.359 --> 00:04:00.859
启动一个进程，然后提示该进程是

00:03:58.849 --> 00:04:02.930
已经在使用中，该端口已经在使用中

00:04:00.859 --> 00:04:04.729
被别人使用，我有点

00:04:02.930 --> 00:04:07.190
忘了我离开了，你知道

00:04:04.729 --> 00:04:09.530
 Tomcat服务器或在8080上运行的码头

00:04:07.190 --> 00:04:13.129
我引导它试图绑定的东西

00:04:09.530 --> 00:04:13.909
 8080不起作用，因此尝试进入

00:04:13.129 --> 00:04:15.739
前面，给你更好

00:04:13.909 --> 00:04:18.650
质量错误消息基本上我们

00:04:15.739 --> 00:04:20.030
提供一些这些失败

00:04:18.650 --> 00:04:22.370
分析仪开箱即用

00:04:20.030 --> 00:04:23.389
可扩展的，因此您可以编写自己的

00:04:22.370 --> 00:04:25.010
另一个有趣的是

00:04:23.389 --> 00:04:27.500
基于约定的错误页面

00:04:25.010 --> 00:04:31.969
不错，你基本上是

00:04:27.500 --> 00:04:34.370
能够放入自定义404页面

00:04:31.969 --> 00:04:36.440
按照惯例，所以如果您

00:04:34.370 --> 00:04:38.719
想注册一个自定义的404页面

00:04:36.440 --> 00:04:42.409
例如，您只需添加它，然后删除

00:04:38.719 --> 00:04:44.990
 404 HTML进入类似于源main的路径

00:04:42.409 --> 00:04:48.080
您知道的资源公共错误是

00:04:44.990 --> 00:04:50.000
只是基于约定，然后

00:04:48.080 --> 00:04:51.710
您可以添加静态HTML或模板

00:04:50.000 --> 00:04:53.870
在那个正确的位置，它只是

00:04:51.710 --> 00:04:55.340
自动创建映射，因此

00:04:53.870 --> 00:04:57.789
这很酷NIC的错误页面是

00:04:55.340 --> 00:04:59.750
一点点的数据支持

00:04:57.789 --> 00:05:04.479
基本上只是说我们

00:04:59.750 --> 00:05:11.919
为添加一些新的自动配置

00:05:04.479 --> 00:05:16.279
 neo4j Couchbase Redis Redis spring data 

00:05:11.919 --> 00:05:18.710
存储库，并且还休眠5.0是

00:05:16.279 --> 00:05:20.000
现在是默认的JPA提供程序，然后

00:05:18.710 --> 00:05:22.219
最后，我们刚刚刷新了

00:05:20.000 --> 00:05:22.969
 elasticsearch集成以包括

00:05:22.219 --> 00:05:26.630
笑话

00:05:22.969 --> 00:05:30.669
 EST悄悄地我最喜欢的是

00:05:26.630 --> 00:05:30.669
执行器啦

00:05:34.700 --> 00:05:40.850
点，以便您可以自定义

00:05:37.970 --> 00:05:42.650
并贡献额外的物品，所以现在

00:05:40.850 --> 00:05:45.050
下车我们支持诸如

00:05:42.650 --> 00:05:46.820
全部或部分获取信息

00:05:45.050 --> 00:05:49.070
从maydel maven生成

00:05:46.820 --> 00:05:50.450
 Gradle插件构建信息

00:05:49.070 --> 00:05:52.460
春季繁荣产生的一个人

00:05:50.450 --> 00:05:55.070
 Gradle插件，然后进行任何自定义

00:05:52.460 --> 00:05:57.850
环境信息任何财产

00:05:55.070 --> 00:06:01.580
基本上启动信息点星

00:05:57.850 --> 00:06:03.680
我们也完善了正斜线

00:06:01.580 --> 00:06:06.290
指标并指出一点，以便

00:06:03.680 --> 00:06:07.640
提交内容可以合并在一起， 

00:06:06.290 --> 00:06:10.640
组合在一起使操作变得容易得多

00:06:07.640 --> 00:06:13.850
继续阅读，以便快速回顾

00:06:10.640 --> 00:06:15.950
 1.4 um中的一些主要功能

00:06:13.850 --> 00:06:20.120
另一个大问题是测试

00:06:15.950 --> 00:06:23.120
支持，所以实际上很漂亮

00:06:20.120 --> 00:06:25.760
对我们所做的事情进行了很好的大修

00:06:23.120 --> 00:06:27.790
我们在早期版本中做到了一个点

00:06:25.760 --> 00:06:31.790
介绍了测试切片的概念

00:06:27.790 --> 00:06:34.430
和那种性质的东西

00:06:31.790 --> 00:06:36.680
现在，我们基本上是在尝试

00:06:34.430 --> 00:06:39.800
使自动配置变得简单

00:06:36.680 --> 00:06:42.890
测试它，你知道它真的

00:06:39.800 --> 00:06:44.840
容易测试您的应用程序的一部分，所以如果

00:06:42.890 --> 00:06:46.910
你知道我们会给你一块

00:06:44.840 --> 00:06:48.890
因为你知道你的数据层

00:06:46.910 --> 00:06:52.670
一个休息的客户，或者也许是杰森

00:06:48.890 --> 00:06:55.010
序列化我们要做的另一件事

00:06:52.670 --> 00:06:57.650
添加是，您基本上知道自动

00:06:55.010 --> 00:07:00.770
配置了模拟，因此产生了影响

00:06:57.650 --> 00:07:02.390
 MVC测试注释可以自动

00:07:00.770 --> 00:07:05.210
通过模拟配置您的方式

00:07:02.390 --> 00:07:07.580
 MVC是很酷的春季啤酒罐

00:07:05.210 --> 00:07:09.830
本质上是自动创建

00:07:07.580 --> 00:07:12.440
模拟bean并管理其生命周期

00:07:09.830 --> 00:07:14.720
没有设置的茶，所以你知道这不是

00:07:12.440 --> 00:07:18.470
这是一个相当不错的大修

00:07:14.720 --> 00:07:20.570
测试课程的测试支持，以及

00:07:18.470 --> 00:07:24.410
现在在

00:07:20.570 --> 00:07:28.490
专用 spring boot 测试和弹簧

00:07:24.410 --> 00:07:30.500
引导测试自动配置jar文件

00:07:28.490 --> 00:07:32.840
添加了诸如搜索JSON之类的内容

00:07:30.500 --> 00:07:35.450
糖浆和JSON路径对

00:07:32.840 --> 00:07:37.400
测试入门，并提供了更简单的排序

00:07:35.450 --> 00:07:39.830
斧头弹簧启动测试

00:07:37.400 --> 00:07:41.990
用于Springs j-unit的注释

00:07:39.830 --> 00:07:44.360
跑步者，我们现在也可以自动

00:07:41.990 --> 00:07:47.030
配置许多这些测试的含义

00:07:44.360 --> 00:07:48.470
你只需要知道就少做些

00:07:47.030 --> 00:07:51.490
配置为

00:07:48.470 --> 00:07:55.340
我们还介绍了专用

00:07:51.490 --> 00:07:58.790
 Web MVC上的JSON测试的注释

00:07:55.340 --> 00:08:01.550
静态测试客户端测试和

00:07:58.790 --> 00:08:03.650
数据GPA测试，以便您可以快速

00:08:01.550 --> 00:08:05.390
到我提到的那些切片

00:08:03.650 --> 00:08:07.310
在您的数据层之前

00:08:05.390 --> 00:08:09.950
西部客户Jason序列化的东西

00:08:07.310 --> 00:08:12.020
就像我之前提到的那样

00:08:09.950 --> 00:08:16.400
现在也有一些更好的

00:08:12.020 --> 00:08:18.860
集成上的模拟，使它成为现实

00:08:16.400 --> 00:08:27.790
只是更容易嘲笑或间谍

00:08:18.860 --> 00:08:30.410
弹簧珠，当然最

00:08:27.790 --> 00:08:31.400
要求和我个人的最爱

00:08:30.410 --> 00:08:32.840
功能，当然还有我们的主要

00:08:31.400 --> 00:08:37.039
传教士乔希·朗（Josh Long） 

00:08:32.840 --> 00:08:39.289
现在最喜欢的功能是横幅图像

00:08:37.039 --> 00:08:41.240
您有您的CIO或您的照片

00:08:39.289 --> 00:08:43.550
首席财务官，您绝对可以放下

00:08:41.240 --> 00:08:46.040
 spring boot 现在就这样，它将来

00:08:43.550 --> 00:08:48.590
就在启动启动屏幕上

00:08:46.040 --> 00:08:50.210
知道您是否只需要尝试帮助获得

00:08:48.590 --> 00:08:51.290
您的项目有资金，您知道可以

00:08:50.210 --> 00:08:53.000
可以确保您有一张

00:08:51.290 --> 00:08:54.680
您的CIO就在食物屏幕上

00:08:53.000 --> 00:08:56.300
他们会喜欢的，否则你可以去

00:08:54.680 --> 00:08:58.040
和我个人的青色猫在一起

00:08:56.300 --> 00:08:59.690
 Josh的个人收藏中的收藏，但

00:08:58.040 --> 00:09:01.880
无论哪种方式，您基本上都可以

00:08:59.690 --> 00:09:03.350
拍摄任意图像文件，它将

00:09:01.880 --> 00:09:05.750
呈现ASCII艺术横幅

00:09:03.350 --> 00:09:08.840
愚蠢的酷只是放下横幅礼物

00:09:05.750 --> 00:09:10.790
更好的JPEG或gander标语PNG文件

00:09:08.840 --> 00:09:12.560
您的来源主要资源

00:09:10.790 --> 00:09:14.360
自动转换获取

00:09:12.560 --> 00:09:17.380
自动转换为se 

00:09:14.360 --> 00:09:17.380
只是有史以来最酷的事情

00:09:24.899 --> 00:09:31.450
这是正确的屏幕滞后

00:09:28.480 --> 00:09:34.269
是的，让我们来吧，这只是一个超级

00:09:31.450 --> 00:09:37.329
快速回顾一下1.4中发生的情况

00:09:34.269 --> 00:09:39.040
现在我想将其移交给

00:09:37.329 --> 00:09:40.630
监视一下有关

00:09:39.040 --> 00:09:43.029
释放她一直在努力

00:09:40.630 --> 00:09:45.279
刚刚出去了一点

00:09:43.029 --> 00:09:46.180
而 spring boot 1.5妈妈你

00:09:45.279 --> 00:09:50.620
想和我们谈谈

00:09:46.180 --> 00:09:52.930
是的一些亮点是的，所以肯定一个

00:09:50.620 --> 00:09:57.130
令人兴奋的新功能

00:09:52.930 --> 00:09:59.709
在Spring Boot 1.5中添加了对

00:09:57.130 --> 00:10:01.720
阿帕奇脚轮适合那些谁

00:09:59.709 --> 00:10:04.899
没听说过帕特里克·非洲

00:10:01.720 --> 00:10:06.519
分布式消息传递系统和其中之一

00:10:04.899 --> 00:10:08.170
帕特里克·帕特里克之间的主要区别

00:10:06.519 --> 00:10:10.660
 after子与传统信息

00:10:08.170 --> 00:10:13.060
经纪人是，有了Patrick Alpha，您

00:10:10.660 --> 00:10:15.279
可以回去看比赛

00:10:13.060 --> 00:10:17.949
因为是消费者

00:10:15.279 --> 00:10:20.199
维护指向日志的指针

00:10:17.949 --> 00:10:22.410
信息而传统的最好

00:10:20.199 --> 00:10:25.060
消息一旦发送

00:10:22.410 --> 00:10:30.000
生产者生产的基本上

00:10:25.060 --> 00:10:34.600
春季卡斯卡（Casca）消失了， 

00:10:30.000 --> 00:10:37.690
向Casca提供字符串核心概念

00:10:34.600 --> 00:10:40.930
基于消息的系统和字符串引导

00:10:37.690 --> 00:10:44.290
通过提供自动

00:10:40.930 --> 00:10:46.709
弹簧托斯卡配置是

00:10:44.290 --> 00:10:49.870
现在超级容易上手

00:10:46.709 --> 00:10:51.430
在项目和 spring boot 后，我

00:10:49.870 --> 00:10:54.970
将带您快速演示

00:10:51.430 --> 00:10:59.019
如何做到这一点，让我们切换

00:10:54.970 --> 00:11:00.490
就在我们之前进行演示

00:10:59.019 --> 00:11:03.940
春天有货吗

00:11:00.490 --> 00:11:05.290
现在就可以集成

00:11:03.940 --> 00:11:08.319
您可以直接从

00:11:05.290 --> 00:11:10.300
 spring boot 是的，这是正确的

00:11:08.319 --> 00:11:13.269
所以现在是头等公民

00:11:10.300 --> 00:11:17.680
您可以直接配置您的挥杆

00:11:13.269 --> 00:11:21.160
卡夫卡一直很好，所以我们在这里

00:11:17.680 --> 00:11:23.860
是一个非常简单的屏幕启动应用程序

00:11:21.160 --> 00:11:25.899
这是您的应用程序类

00:11:23.860 --> 00:11:29.290
常规的 spring boot 应用

00:11:25.899 --> 00:11:33.250
注释超过其他已启用的非洲

00:11:29.290 --> 00:11:35.160
稍后详细注释，但

00:11:33.250 --> 00:11:37.450
如您所见，它具有主要方法

00:11:35.160 --> 00:11:41.590
这将启动Springer 

00:11:37.450 --> 00:11:45.310
位置我们在这里是一个发件人

00:11:41.590 --> 00:11:48.190
类和发送者类被注入

00:11:45.310 --> 00:11:50.080
用咳嗽模板Tasker 

00:11:48.190 --> 00:11:53.260
模板是由

00:11:50.080 --> 00:11:56.320
字符串根自动配置

00:11:53.260 --> 00:11:59.530
提供方便的发送方法

00:11:56.320 --> 00:12:03.600
给班级经纪人和这里的消息

00:11:59.530 --> 00:12:06.040
配置为发送字符串消息，以便

00:12:03.600 --> 00:12:08.980
在这里的发送方法是

00:12:06.040 --> 00:12:11.650
计划每秒运行一次

00:12:08.980 --> 00:12:15.370
使用咖啡馆模板发送消息

00:12:11.650 --> 00:12:17.170
关于这个话题，所以这个话题叫做

00:12:15.370 --> 00:12:19.960
字符串主题和消息

00:12:17.170 --> 00:12:24.370
要发送的只是附加的消息

00:12:19.960 --> 00:12:27.610
与柜台只是为了给你一个想法

00:12:24.370 --> 00:12:30.670
这个演示的内容更多

00:12:27.610 --> 00:12:33.280
关于字符串启动如何使它容易实现

00:12:30.670 --> 00:12:33.790
您可以配置Casca并开始使用

00:12:33.280 --> 00:12:35.830
用它

00:12:33.790 --> 00:12:38.140
来源是，深入了解

00:12:35.830 --> 00:12:41.620
阿帕奇车祸的内部和我

00:12:38.140 --> 00:12:43.630
在这里排队在这里排队

00:12:41.620 --> 00:12:46.870
提交，我们从

00:12:43.630 --> 00:12:51.280
最初提交的只是发送

00:12:46.870 --> 00:12:53.950
字符串消息，并在此接收器中

00:12:51.280 --> 00:12:56.530
上课我们要去消耗

00:12:53.950 --> 00:12:59.380
消息，所以接收者类有一个

00:12:56.530 --> 00:13:01.720
在Kafka注释的方法

00:12:59.380 --> 00:13:04.660
监听器广告Kafka监听器

00:13:01.720 --> 00:13:07.510
批注将此方法标记为

00:13:04.660 --> 00:13:12.130
 Casca消息侦听器的目标

00:13:07.510 --> 00:13:15.820
这个话题，所以在这里你会做

00:13:12.130 --> 00:13:17.890
一些要处理并决定什么

00:13:15.820 --> 00:13:20.230
与消息有关，但对于

00:13:17.890 --> 00:13:24.040
该演示的目的是

00:13:20.230 --> 00:13:25.990
记录该消息以启用

00:13:24.040 --> 00:13:29.260
该Kafka侦听器的处理

00:13:25.990 --> 00:13:31.900
我们为所有启用的广告提供的注释

00:13:29.260 --> 00:13:34.930
在这里的注释之后

00:13:31.900 --> 00:13:38.410
应用程序类，因为我们运行了此应用程序

00:13:34.930 --> 00:13:41.200
现在我已经有一个棺材经纪人和一个

00:13:38.410 --> 00:13:44.490
动物园管理员在后台运行

00:13:41.200 --> 00:13:47.350
如您所见，它正在打印

00:13:44.490 --> 00:13:50.680
收到消息一二三四为

00:13:47.350 --> 00:13:53.050
发件人倾向于

00:13:50.680 --> 00:13:56.080
即使在这里正在聆听

00:13:53.050 --> 00:14:00.100
正在接收有关此主题的信息

00:13:56.080 --> 00:14:02.500
信息并卷曲出来，那是

00:14:00.100 --> 00:14:05.380
一件事我很简单

00:14:02.500 --> 00:14:07.570
忘了在这里提到是为了

00:14:05.380 --> 00:14:10.649
自动配置后喝

00:14:07.570 --> 00:14:13.540
您只需要添加字符串任务

00:14:10.649 --> 00:14:16.570
依赖关系在您的炸弹XML中是否

00:14:13.540 --> 00:14:20.459
您正在使用Maven或在您的构建器中

00:14:16.570 --> 00:14:23.740
交易员，如果您使用Gradle 

00:14:20.459 --> 00:14:25.420
接下来让我们看一下

00:14:23.740 --> 00:14:34.630
您如何配置它

00:14:25.420 --> 00:14:37.630
塔斯克，所以我要去看看

00:14:34.630 --> 00:14:40.060
我在这里的下一个神话

00:14:37.630 --> 00:14:42.279
这和以前的区别

00:14:40.060 --> 00:14:45.190
现在的版本是

00:14:42.279 --> 00:14:51.250
发送方配置为发送整数

00:14:45.190 --> 00:14:53.230
消息传递给Kafka经纪人，所以我已经

00:14:51.250 --> 00:14:55.990
更改了主题中的主题名称，并

00:14:53.230 --> 00:14:58.950
而不是发送字符串消息

00:14:55.990 --> 00:15:02.680
我要去寄柜台

00:14:58.950 --> 00:15:04.720
现在，如果我尝试运行此应用程序，那么

00:15:02.680 --> 00:15:07.240
如您所见，因为我已经更改了

00:15:04.720 --> 00:15:19.420
我的接收者的主题名称也是

00:15:07.240 --> 00:15:21.459
现在，您可以在英寸主题上收听

00:15:19.420 --> 00:15:23.740
可以看到我正在序列化

00:15:21.459 --> 00:15:27.160
这里的例外，因为我试图

00:15:23.740 --> 00:15:28.680
发送类整数的值，但是

00:15:27.160 --> 00:15:32.890
字符串序列化器

00:15:28.680 --> 00:15:35.170
无法序列化，其中之一

00:15:32.890 --> 00:15:38.770
我们用Spring Boot获得的东西是

00:15:35.170 --> 00:15:42.490
非常有能力配置属性

00:15:38.770 --> 00:15:44.440
轻松通过属性文件，这是一个

00:15:42.490 --> 00:15:48.250
 Spring Boot功能文件配置

00:15:44.440 --> 00:15:50.740
可以让您做到的属性，因此我们

00:15:48.250 --> 00:15:54.700
可以轻松修复此序列化为

00:15:50.740 --> 00:15:57.130
通过添加我们到达这里的错误

00:15:54.700 --> 00:15:59.529
这些整数D序列化器和

00:15:57.130 --> 00:16:03.880
应用程序中的序列化器

00:15:59.529 --> 00:16:05.500
属性文件，所以现在如果我运行

00:16:03.880 --> 00:16:07.750
位置，这是我们唯一的变化

00:16:05.500 --> 00:16:15.850
必须做出才能发送

00:16:07.750 --> 00:16:17.440
现在，如果我发送整数消息

00:16:15.850 --> 00:16:20.590
您可以看到接收器是

00:16:17.440 --> 00:16:23.170
打印出整数消息

00:16:20.590 --> 00:16:26.170
它得到了，所以很容易得到

00:16:23.170 --> 00:16:27.730
开始于rathotsava配置一些

00:16:26.170 --> 00:16:29.940
一堆其他的属性

00:16:27.730 --> 00:16:32.680
您可以配置的属性以及

00:16:29.940 --> 00:16:35.020
他们都在字符串点下

00:16:32.680 --> 00:16:37.450
子树的东西，所以你可以看看

00:16:35.020 --> 00:16:39.400
文档找出哪个

00:16:37.450 --> 00:16:49.750
属性是属性值

00:16:39.400 --> 00:16:53.050
里面不错，我们有一些问题

00:16:49.750 --> 00:16:55.870
观众对此的看法，但是我们可以

00:16:53.050 --> 00:16:57.970
让我们在里面解决他们，只是在

00:16:55.870 --> 00:17:00.160
最后，让那些人有耐心

00:16:57.970 --> 00:17:01.060
我们正在看到您的问题，我们只是

00:17:00.160 --> 00:17:03.880
如果你要解决的话

00:17:01.060 --> 00:17:05.530
不要介意乔，我们放心

00:17:03.880 --> 00:17:07.480
你知道如果你受伤的东西，我们已经

00:17:05.530 --> 00:17:11.110
看过所以请随时保留

00:17:07.480 --> 00:17:12.959
这样做，但对不起母亲-我回到

00:17:11.110 --> 00:17:18.550
我猜我

00:17:12.959 --> 00:17:20.260
很好，所以实际上我们不要后悔

00:17:18.550 --> 00:17:22.209
是我的良心，这是你

00:17:20.260 --> 00:17:24.670
所以你现在是否说话

00:17:22.209 --> 00:17:26.709
关于弹簧启动器中的执行器

00:17:24.670 --> 00:17:30.700
一些整合的序言

00:17:26.709 --> 00:17:34.000
我们所做的工作是，谢谢彼得

00:17:30.700 --> 00:17:36.790
所以我们做的另一件事

00:17:34.000 --> 00:17:39.730
作为春季花花公子1.5的一部分进行了更改

00:17:36.790 --> 00:17:42.610
安全模型或 spring boot 

00:17:39.730 --> 00:17:44.440
执行器，但在我们开始之前

00:17:42.610 --> 00:17:46.570
我想谈的安全模型

00:17:44.440 --> 00:17:50.830
关于执行器和

00:17:46.570 --> 00:17:53.260
点是执行器端点允许的

00:17:50.830 --> 00:17:55.720
您监控并与您互动

00:17:53.260 --> 00:17:57.940
春季路线申请，因此，如果您有

00:17:55.720 --> 00:18:00.760
Spring Boot Actuator依赖性

00:17:57.940 --> 00:18:03.400
添加到您的应用程序中，您将获得一个

00:18:00.760 --> 00:18:06.160
内置端点的数量和您

00:18:03.400 --> 00:18:08.440
也可以根据需要添加自己的

00:18:06.160 --> 00:18:11.440
内置端点的一些示例

00:18:08.440 --> 00:18:14.230
你得到健康终点

00:18:11.440 --> 00:18:17.620
给View应用程序运行状况信息

00:18:14.230 --> 00:18:20.500
给您的环境终点

00:18:17.620 --> 00:18:23.680
有关春季环境的信息

00:18:20.500 --> 00:18:27.130
指标交易审核事件和

00:18:23.680 --> 00:18:29.800
其他终点数量，但我们不会

00:18:27.130 --> 00:18:32.770
在您进入每个细节时

00:18:29.800 --> 00:18:34.840
可以告诉其中一些端点

00:18:32.770 --> 00:18:37.150
可能暴露一些敏感

00:18:34.840 --> 00:18:39.940
信息，因此您的终点

00:18:37.150 --> 00:18:42.640
因为它向您显示了

00:18:39.940 --> 00:18:44.290
在你的春天环境中

00:18:42.640 --> 00:18:48.160
可能是你里面的东西

00:18:44.290 --> 00:18:51.330
可能不想

00:18:48.160 --> 00:18:55.300
可以访问这些终点的任何人

00:18:51.330 --> 00:19:00.310
那么什么是安全模式

00:18:55.300 --> 00:19:02.650
 1 5我之前的 spring boot 执行器

00:19:00.310 --> 00:19:06.850
只说说执行器

00:19:02.650 --> 00:19:07.660
通过HTTP公开的信息，我们也可以

00:19:06.850 --> 00:19:10.240
 JMX 

00:19:07.660 --> 00:19:12.910
他实际上确实暴露了gmx，但是

00:19:10.240 --> 00:19:16.870
我们只是要谈论MDC 

00:19:12.910 --> 00:19:19.950
和HTTP在这里，所以在1之前

00:19:16.870 --> 00:19:23.350
 5（如果包括执行器） 

00:19:19.950 --> 00:19:26.170
在您的应用程序中的依赖关系

00:19:23.350 --> 00:19:28.330
您没有故意添加它，但是

00:19:26.170 --> 00:19:30.970
它被添加在某种可传递的

00:19:28.330 --> 00:19:35.140
依赖，说你没有

00:19:30.970 --> 00:19:38.410
在您的应用程序中的安全性

00:19:35.140 --> 00:19:41.440
指向执行器端点

00:19:38.410 --> 00:19:44.440
开放，我的意思是说，任何人

00:19:41.440 --> 00:19:46.990
有权访问该URL，而您在哪里

00:19:44.440 --> 00:19:50.580
帮助和指向终点或终点

00:19:46.990 --> 00:19:55.360
可以到达终点

00:19:50.580 --> 00:19:58.420
看到终点的一切

00:19:55.360 --> 00:20:00.640
如果您无意间这样说了

00:19:58.420 --> 00:20:02.860
作为传递的依赖而来

00:20:00.640 --> 00:20:05.440
您不想添加字符串安全性

00:20:02.860 --> 00:20:08.530
您的应用程序可能已经结束

00:20:05.440 --> 00:20:12.330
在你有这些的情况下

00:20:08.530 --> 00:20:16.660
所有潜在的敏感信息

00:20:12.330 --> 00:20:19.120
暴露而如果您添加弹簧

00:20:16.660 --> 00:20:22.270
安全性，您将使用

00:20:19.120 --> 00:20:24.450
默认的用户名和密码，但不是

00:20:22.270 --> 00:20:29.110
每个人都想增加春季安全性

00:20:24.450 --> 00:20:30.759
并具有默认的暴露端点

00:20:29.110 --> 00:20:37.779
可能是

00:20:30.759 --> 00:20:40.599
在春天有点吓人，但是- 

00:20:37.779 --> 00:20:43.899
五，我们决定撤离结束

00:20:40.599 --> 00:20:47.589
默认情况下，通过

00:20:43.899 --> 00:20:51.129
安全，我的意思是只允许访问用户

00:20:47.589 --> 00:20:53.109
具有正确的权限，所以现在如果您

00:20:51.129 --> 00:20:55.719
有执行器依赖性，您

00:20:53.109 --> 00:20:57.789
没有春季安全保障， 

00:20:55.719 --> 00:21:00.639
您尝试执行未经授权的错误

00:20:57.789 --> 00:21:02.799
如果您确实有访问端点

00:21:00.639 --> 00:21:05.469
春季安全，您将获得基本

00:21:02.799 --> 00:21:07.719
可以登录的身份验证

00:21:05.469 --> 00:21:11.229
默认的用户名和密码

00:21:07.719 --> 00:21:14.319
访问这些端点，以便基本上

00:21:11.229 --> 00:21:18.219
防止意外暴露

00:21:14.319 --> 00:21:20.019
事件点，但说你确实想

00:21:18.219 --> 00:21:22.329
暴露这些端点，您感到

00:21:20.019 --> 00:21:24.819
他们可以，这个信息可以

00:21:22.329 --> 00:21:28.059
可供您的任何用户使用

00:21:24.819 --> 00:21:30.940
应用程序或任何公共用户

00:21:28.059 --> 00:21:34.329
您可以禁用这些安全性

00:21:30.940 --> 00:21:35.949
通过简单地设置一个标志

00:21:34.329 --> 00:21:39.249
如果管理执行，则调用该标志

00:21:35.949 --> 00:21:42.669
启用安全性，并且如果将其设置为

00:21:39.249 --> 00:21:44.909
错误的字符串启动将退出，您

00:21:42.669 --> 00:21:48.009
可以离开执行器端点

00:21:44.909 --> 00:21:59.169
不安全或您可以添加自定义

00:21:48.009 --> 00:22:02.889
安全配置还可以，所以下一个

00:21:59.169 --> 00:22:06.940
我们在1.5中添加的新内容

00:22:02.889 --> 00:22:09.279
是记录器端点和储物柜

00:22:06.940 --> 00:22:13.449
端点实际上是一个插入

00:22:09.279 --> 00:22:15.999
执行器端点及其作用是什么

00:22:13.449 --> 00:22:19.889
允许您查看和修改日志

00:22:15.999 --> 00:22:23.589
在运行时在应用程序中级别

00:22:19.889 --> 00:22:25.419
您可以在其中获取所有记录器记录器

00:22:23.589 --> 00:22:28.059
您的应用程序可以获取

00:22:25.419 --> 00:22:32.369
个人记录器，您可以更改

00:22:28.059 --> 00:22:32.369
特定记录器的配置

00:22:34.889 --> 00:22:41.739
我只想给你个快速的

00:22:37.179 --> 00:22:43.269
如何更改记录器的示例

00:22:41.739 --> 00:22:44.740
运行时配置

00:22:43.269 --> 00:22:47.049
随着

00:22:44.740 --> 00:23:01.690
日志的输出是什么

00:22:47.049 --> 00:23:10.659
再说一遍，我只是非常简单

00:23:01.690 --> 00:23:14.409
 Spring Boot应用程序在这里和它

00:23:10.659 --> 00:23:19.049
有执行器依赖性，所以如果我去

00:23:14.409 --> 00:23:22.360
到冲突记录器的终点，我可以看到

00:23:19.049 --> 00:23:25.240
相邻的第一个向我显示日志

00:23:22.360 --> 00:23:27.850
级别，以便记录器端点支持

00:23:25.240 --> 00:23:31.360
用于记录系统

00:23:27.850 --> 00:23:37.029
 spring boot 支持，因此请重新登录

00:23:31.360 --> 00:23:39.190
 jewel log4j-它向我显示日志

00:23:37.029 --> 00:23:42.009
可以配置的级别

00:23:39.190 --> 00:23:44.559
对于当前的日志记录系统

00:23:42.009 --> 00:23:49.139
被使用，并显示

00:23:44.559 --> 00:23:51.879
记录器列表向我显示

00:23:49.139 --> 00:23:54.549
彼此配置的级别，以及

00:23:51.879 --> 00:24:01.779
那个恋人的受影响程度，所以我

00:23:54.549 --> 00:24:04.629
可以通过做一个单一的数字过滤

00:24:01.779 --> 00:24:07.480
在那边，你可以看到

00:24:04.629 --> 00:24:09.519
记录器的配置级别为null，但

00:24:07.480 --> 00:24:13.539
赋予它的有效水平

00:24:09.519 --> 00:24:16.749
现在通过日志系统作为信息

00:24:13.539 --> 00:24:31.740
想要更改此情人的日志级别

00:24:16.749 --> 00:24:37.090
我可以给记录员画一条曲线

00:24:31.740 --> 00:24:41.549
记录器名称和数据

00:24:37.090 --> 00:24:45.519
我要经过这里，我寄给我相信

00:24:41.549 --> 00:24:47.710
配置的级别将其设置为

00:24:45.519 --> 00:24:50.999
调试，因为现在

00:24:47.710 --> 00:24:50.999
有效水平是信息

00:24:58.009 --> 00:25:05.039
所以现在是200，如果我查看

00:25:02.129 --> 00:25:06.960
此演示的日志记录配置

00:25:05.039 --> 00:25:08.580
应用程序其他我可以看到

00:25:06.960 --> 00:25:11.429
配置级别已更改为调试

00:25:08.580 --> 00:25:14.549
有效的有效水平是

00:25:11.429 --> 00:25:17.669
也是一个调试，所以这希望给你

00:25:14.549 --> 00:25:19.590
改变它有多容易的想法

00:25:17.669 --> 00:25:24.139
您的日志记录配置

00:25:19.590 --> 00:25:24.139
运行时的应用程序

00:25:31.940 --> 00:25:38.730
好吧，现在我们已经看到了一点

00:25:36.090 --> 00:25:41.129
关于执行器和新日志

00:25:38.730 --> 00:25:44.789
我们已经添加了一点，让我们继续前进

00:25:41.129 --> 00:25:48.809
继续获得Cloud Foundry支持

00:25:44.789 --> 00:25:53.519
作为一侧的一部分添加，作为

00:25:48.809 --> 00:25:55.889
物理Cloud Foundry 1.9我们添加了一些

00:25:53.519 --> 00:25:59.730
弹簧引导执行器通过

00:25:55.889 --> 00:26:03.109
应用管理器用户界面，因此，如果您部署

00:25:59.730 --> 00:26:05.249
 Spring Boot 1.5应用程序请参阅cf-19 

00:26:03.109 --> 00:26:08.039
您将看到更多信息

00:26:05.249 --> 00:26:11.460
关于应用程序中的应用程序

00:26:08.039 --> 00:26:12.840
经理，你看到的几件事

00:26:11.460 --> 00:26:16.619
在这里列出

00:26:12.840 --> 00:26:18.989
引导应用程序是引导图标

00:26:16.619 --> 00:26:21.690
可以成为吸引眼球的对象

00:26:18.989 --> 00:26:24.989
敬礼的应用程序增加了

00:26:21.690 --> 00:26:27.119
健康信息获取信息

00:26:24.989 --> 00:26:30.090
记录器的运行时配置

00:26:27.119 --> 00:26:34.289
我们刚刚看到的也可以做到

00:26:30.090 --> 00:26:37.889
应用管理器用户界面，所有这些都是

00:26:34.289 --> 00:26:39.570
由核心认证和

00:26:37.889 --> 00:26:43.080
 Cloud Foundry的授权组件

00:26:39.570 --> 00:26:46.320
这是UA a，因此请注意用户

00:26:43.080 --> 00:26:48.629
无需配置任何其他

00:26:46.320 --> 00:26:52.399
执行器屏幕的安全性

00:26:48.629 --> 00:26:55.649
部署到关键Cloud Foundry时

00:26:52.399 --> 00:27:01.549
我们可以浏览应用程序管理器用户界面

00:26:55.649 --> 00:27:01.549
看一下这些东西是如何工作的

00:27:03.120 --> 00:27:10.930
所以我这里是问问经理

00:27:07.210 --> 00:27:14.890
通过Web服务或

00:27:10.930 --> 00:27:15.400
 PWS是Cloud的托管版本

00:27:14.890 --> 00:27:20.790
铸造厂

00:27:15.400 --> 00:27:23.530
这是我的执行器应用程序

00:27:20.790 --> 00:27:28.180
这是春季的不错的v应用程序

00:27:23.530 --> 00:27:31.090
推向PWS和我的眼球

00:27:28.180 --> 00:27:34.150
刚才说的是这个

00:27:31.090 --> 00:27:36.640
 spring boot 图标，所以我可以轻松分辨

00:27:34.150 --> 00:27:41.110
好的，这个应用程序是一个

00:27:36.640 --> 00:27:44.140
应用这里保存的实例

00:27:41.110 --> 00:27:48.640
补充了更多信息

00:27:44.140 --> 00:27:51.550
从帮助端点可以配置

00:27:48.640 --> 00:27:54.430
您的应用程序添加一些自定义

00:27:51.550 --> 00:27:57.430
健康指标，所以在这里我只是

00:27:54.430 --> 00:28:00.400
添加了自定义的Hello World Health 

00:27:57.430 --> 00:28:03.280
指标，但在您的组织中是否

00:28:00.400 --> 00:28:05.050
您有某种定制服务

00:28:03.280 --> 00:28:09.660
您要报告健康状况或

00:28:05.050 --> 00:28:09.660
您可以添加自定义健康指标

00:28:11.700 --> 00:28:16.840
另一个很酷的事情是

00:28:14.110 --> 00:28:20.650
集成到应用管理器用户界面中的是

00:28:16.840 --> 00:28:23.860
好信息很多次

00:28:20.650 --> 00:28:26.380
你想知道哪个得到沙尔维斯

00:28:23.860 --> 00:28:29.680
来自和如果有销售的申请

00:28:26.380 --> 00:28:32.410
 Angelita，但有了应用程序管理器，您

00:28:29.680 --> 00:28:36.010
可以实际点击该链接

00:28:32.410 --> 00:28:38.530
在这里，它将带您进入git 

00:28:36.010 --> 00:28:41.260
提交第一个应用程序已送达

00:28:38.530 --> 00:28:46.330
从中获取信息

00:28:41.260 --> 00:28:47.650
信息和信息执行器，以及

00:28:46.330 --> 00:28:51.130
这样做，您必须配置一些

00:28:47.650 --> 00:28:53.980
事情，但我认为那些被提到

00:28:51.130 --> 00:29:00.310
在文档中我们将讨论

00:28:53.980 --> 00:29:03.040
关于稍后在“设置”标签中，您可以

00:29:00.310 --> 00:29:05.290
见附加的跳板

00:29:03.040 --> 00:29:08.290
来自信息执行器的信息

00:29:05.290 --> 00:29:11.310
目前是这种原始JSON格式

00:29:08.290 --> 00:29:14.340
但未来强大的计划

00:29:11.310 --> 00:29:16.480
为此改善UI 

00:29:14.340 --> 00:29:19.690
所以再次在这里

00:29:16.480 --> 00:29:24.160
并查看获取信息的提交

00:29:19.690 --> 00:29:30.970
该应用程序是从

00:29:24.160 --> 00:29:37.980
用户等，日志选项卡上有底物

00:29:30.970 --> 00:29:40.810
可配置的日志记录级别，所以如果我去

00:29:37.980 --> 00:29:43.540
配置日志记录级别，您可以看到

00:29:40.810 --> 00:29:46.120
我们之前看到的记录器列表

00:29:43.540 --> 00:29:48.390
为此，单身

00:29:46.120 --> 00:29:52.210
独立运行的应用程序

00:29:48.390 --> 00:29:54.850
您可以对记录器进行过滤

00:29:52.210 --> 00:29:56.710
按名称，所以我要在其中填充TARDIS 

00:29:54.850 --> 00:30:00.820
我在这里的日程表记录器

00:29:56.710 --> 00:30:08.710
并更改日志记录级别以进行调试

00:30:00.820 --> 00:30:12.580
您的问题会增加您的规模

00:30:08.710 --> 00:30:21.780
发短信哦，我不知道你能不能做到

00:30:12.580 --> 00:30:28.030
在这个屏幕上，好吧，漂亮

00:30:21.780 --> 00:30:30.220
可以肯定的是，如您所见，我更改了

00:30:28.030 --> 00:30:39.640
联邦熔岩的测井水平从

00:30:30.220 --> 00:30:42.220
信息到女主角，如果我面对那2000 

00:30:39.640 --> 00:30:45.570
我特别特别看看我是否能得到

00:30:42.220 --> 00:30:45.570
在日志中对不起

00:31:08.120 --> 00:31:23.670
它正在爆炸，所以需要一个

00:31:11.070 --> 00:31:24.720
在此期间，您可以处理一个

00:31:23.670 --> 00:31:36.510
或两个问题

00:31:24.720 --> 00:31:54.150
哦，不，我们知道了，让我看看是否可以

00:31:36.510 --> 00:31:58.140
拟合该模型显示所有第三次调试

00:31:54.150 --> 00:32:00.660
如果你能看到这里

00:31:58.140 --> 00:32:02.340
打印这些日志记录语句

00:32:00.660 --> 00:32:05.340
从我的日程安排中

00:32:02.340 --> 00:32:07.340
而这些仅打印在

00:32:05.340 --> 00:32:10.230
调试模式，因为我将其更改为

00:32:07.340 --> 00:32:17.610
我现在正在获取这些日志的人

00:32:10.230 --> 00:32:20.010
声明是的，那么就这样吧

00:32:17.610 --> 00:32:23.930
 PCF和执行器集成

00:32:20.010 --> 00:32:29.030
现在我们有几件事

00:32:23.930 --> 00:32:29.030
彼得，我们稍后再讲

00:32:29.720 --> 00:32:38.960
那是妈妈哦，对不起，我真的

00:32:36.060 --> 00:32:43.860
想谈谈如何

00:32:38.960 --> 00:32:47.430
这有效，所以它的工作方式是我们

00:32:43.860 --> 00:32:49.860
与春季食品1.5发布

00:32:47.430 --> 00:32:52.530
执行器模块现在包括

00:32:49.860 --> 00:32:54.540
额外的支持或得到

00:32:52.530 --> 00:32:57.870
部署到

00:32:54.540 --> 00:33:00.510
兼容的Cloud Foundry实例，因此

00:32:57.870 --> 00:33:02.760
我们在一个

00:33:00.510 --> 00:33:05.880
他们定期春季食品应用

00:33:02.760 --> 00:33:10.110
也通过闪光灯暴露了什么

00:33:05.880 --> 00:33:12.540
 Cloud Foundry应用程序包和

00:33:10.110 --> 00:33:15.419
这是一条单独路径的原因是

00:33:12.540 --> 00:33:19.409
因为此路径受保护

00:33:15.419 --> 00:33:22.139
我从阿联酋访问令牌

00:33:19.409 --> 00:33:24.869
它受云控制器保护

00:33:22.139 --> 00:33:27.959
角色，所以只有当你有某些角色时

00:33:24.869 --> 00:33:30.869
内部边界就像说太空开发商

00:33:27.959 --> 00:33:33.239
或基本审核员和

00:33:30.869 --> 00:33:36.690
允许在上查看此应用程序

00:33:33.239 --> 00:33:41.099
只有这些角色才能获得Cloud Foundry 

00:33:36.690 --> 00:33:45.409
可以访问这些执行器端点

00:33:41.099 --> 00:33:48.509
是由

00:33:45.409 --> 00:33:51.479
在应用管理器和UAA之间以及

00:33:48.509 --> 00:33:54.149
不需要的云控制器

00:33:51.479 --> 00:34:03.209
任何其他安全配置

00:33:54.149 --> 00:34:06.209
应用程序开发人员另外五个

00:34:03.209 --> 00:34:08.700
我想过去的重点是

00:34:06.209 --> 00:34:11.460
审核事件的添加

00:34:08.700 --> 00:34:15.839
端点，因此审核事件端点为

00:34:11.460 --> 00:34:19.440
另一个执行器和审核事件得到

00:34:15.839 --> 00:34:22.109
记录用于身份验证和

00:34:19.440 --> 00:34:25.259
授权事件，但您也可以

00:34:22.109 --> 00:34:28.200
使用审核记录您自己的事件

00:34:25.259 --> 00:34:31.019
现在冒险冒险ori，所以现在我们有了

00:34:28.200 --> 00:34:33.269
 jmx端点，可让您查询

00:34:31.019 --> 00:34:33.929
先前记录的审核事件

00:34:33.269 --> 00:34:37.440
 GMX 

00:34:33.929 --> 00:34:42.509
我们还进行了大幅的审核活动

00:34:37.440 --> 00:34:45.210
 MVC端点以获取这些事件

00:34:42.509 --> 00:34:48.119
现在我们作为老年人的支持目标

00:34:45.210 --> 00:34:51.419
自动配置任何长者

00:34:48.119 --> 00:34:55.409
兼容服务器并易于测试

00:34:51.419 --> 00:35:01.109
您在应用程序中提供的LDAP 

00:34:55.409 --> 00:35:03.990
来自未绑定ID的内存中LDAP 

00:35:01.109 --> 00:35:09.559
允许您测试我们的应用程序而无需

00:35:03.990 --> 00:35:09.559
确实需要一个真正的LDAP服务器

00:35:16.450 --> 00:35:23.150
妈妈，谢谢你

00:35:18.109 --> 00:35:25.190
好吧，让我们谈一点，让我们

00:35:23.150 --> 00:35:28.430
向前看一点，嗯，我们

00:35:25.190 --> 00:35:30.170
有很多问题，所以我和妈妈

00:35:28.430 --> 00:35:32.030
正在尝试快速解决这个问题

00:35:30.170 --> 00:35:33.440
这样我们就可以去那些我去过的地方

00:35:32.030 --> 00:35:35.180
在您研究其中的某些内容时

00:35:33.440 --> 00:35:37.220
在说话，所以我们有几个答案

00:35:35.180 --> 00:35:41.299
在排队中，嗯，是的，让我们

00:35:37.220 --> 00:35:44.210
向前看一点手臂，我们是

00:35:41.299 --> 00:35:46.579
对兴奋的菲尔和

00:35:44.210 --> 00:35:48.770
团队的其他成员真的很努力

00:35:46.579 --> 00:35:51.589
字符串簿为零显然会

00:35:48.770 --> 00:35:54.260
出来并在之后被释放

00:35:51.589 --> 00:35:58.789
 Spring Framework 5.0 SGA发布

00:35:54.260 --> 00:35:59.180
当然，所以只是展望 spring boot 

00:35:58.789 --> 00:36:01.339
 -哦

00:35:59.180 --> 00:36:03.950
不管是卵石铸造厂

00:36:01.339 --> 00:36:05.660
集成显然这将

00:36:03.950 --> 00:36:07.010
是支持

00:36:05.660 --> 00:36:10.609
春季框架复兴反应

00:36:07.010 --> 00:36:13.190
概念和Spring Web Blocks Web 

00:36:10.609 --> 00:36:15.770
框架反应式Web框架，这是

00:36:13.190 --> 00:36:17.589
什么会使您的堆栈全满

00:36:15.770 --> 00:36:19.849
反应性应用程序更容易

00:36:17.589 --> 00:36:23.329
引导程序，您知道典型的

00:36:19.849 --> 00:36:25.190
 Spring Boot自动配置嗯，所以你

00:36:23.329 --> 00:36:28.339
知道机制将在您可用时

00:36:25.190 --> 00:36:29.750
可能显然你会得到

00:36:28.339 --> 00:36:33.260
团队的其他成员非常

00:36:29.750 --> 00:36:36.859
密切跟踪发布的Java九

00:36:33.260 --> 00:36:38.630
现在有一段时间，我们将支持

00:36:36.859 --> 00:36:43.430
约翰九在 spring boot -当然哦

00:36:38.630 --> 00:36:47.180
在Java EE八上，​​您知道Jade的一些知识

00:36:43.430 --> 00:36:50.000
 jsr显然是服务器servlet或四个

00:36:47.180 --> 00:36:51.380
 O和令人兴奋的jsr肯定是

00:36:50.000 --> 00:36:53.750
祝您知道Java的好知识

00:36:51.380 --> 00:36:55.069
那里的宇宙以及

00:36:53.750 --> 00:36:57.589
验证，所以这些都是

00:36:55.069 --> 00:37:00.410
绝对非常紧密地跟踪

00:36:57.589 --> 00:37:02.200
将在启动时受支持-哦， 

00:37:00.410 --> 00:37:04.190
另一件事当然是

00:37:02.200 --> 00:37:05.930
好吧，你知道这是事实

00:37:04.190 --> 00:37:08.599
通常是滚动交付

00:37:05.930 --> 00:37:09.559
但是你知道每年春天的船上的GH 

00:37:08.599 --> 00:37:12.140
你做

00:37:09.559 --> 00:37:13.970
我们将从专注于

00:37:12.140 --> 00:37:15.829
各代的主要更新

00:37:13.970 --> 00:37:18.170
春天计划，所以你知道春天

00:37:15.829 --> 00:37:20.359
整合500或春季课程200 

00:37:18.170 --> 00:37:23.599
或与之相反的性质

00:37:20.359 --> 00:37:26.089
也许你知道

00:37:23.599 --> 00:37:27.270
我更小一些

00:37:26.089 --> 00:37:29.880
你可以期待

00:37:27.270 --> 00:37:33.900
一些主要的顶级春季

00:37:29.880 --> 00:37:37.589
要启动的项目-Olaf我就在

00:37:33.900 --> 00:37:39.180
准备发布也是我的主要类型

00:37:37.589 --> 00:37:42.390
想想答案，你知道我什么时候

00:37:39.180 --> 00:37:44.849
最初与直到网络团队聊天

00:37:42.390 --> 00:37:46.770
布赖恩D展示假装罗森和

00:37:44.849 --> 00:37:48.690
大家，你知道我有点问

00:37:46.770 --> 00:37:50.790
他们我就像你知道什么

00:37:48.690 --> 00:37:53.220
为什么有什么独特的

00:37:50.790 --> 00:37:55.200
 Spring Framework反应性方法

00:37:53.220 --> 00:37:57.089
知道为什么有人会

00:37:55.200 --> 00:37:58.560
选择我们而不是一些

00:37:57.089 --> 00:38:00.540
其他反应性选择，我

00:37:58.560 --> 00:38:02.430
意味着真正有力的答案之一

00:38:00.540 --> 00:38:04.710
这是通过能力

00:38:02.430 --> 00:38:06.690
即插即用不同的运行时

00:38:04.710 --> 00:38:08.400
可用，无论您是否可能

00:38:06.690 --> 00:38:11.040
知道斑驳的Tomcat肯定是

00:38:08.400 --> 00:38:13.980
努力工作甚至可能没有意识到

00:38:11.040 --> 00:38:16.349
实际上这是Apache Tomcat的75％ 

00:38:13.980 --> 00:38:18.839
代码库由关键员工编写

00:38:16.349 --> 00:38:20.190
我想如果有三四个人

00:38:18.839 --> 00:38:23.670
你我们增加了一些你们

00:38:20.190 --> 00:38:25.200
最近但关键是员工

00:38:23.670 --> 00:38:27.540
实际上负责大多数

00:38:25.200 --> 00:38:29.790
 Apache Tomcat代码，他们很难

00:38:27.540 --> 00:38:32.069
对非阻塞不反应

00:38:29.790 --> 00:38:34.740
 servlet实现正确

00:38:32.069 --> 00:38:36.480
如果您使用，有反应堆网

00:38:34.740 --> 00:38:39.720
之前的MIDI一直很流行

00:38:36.480 --> 00:38:42.000
当码头和JBoss受到追捧时， 

00:38:39.720 --> 00:38:43.470
可能其他人您知道这些是

00:38:42.000 --> 00:38:45.450
我们将成为的反应性运行时

00:38:43.470 --> 00:38:51.480
专注于弹簧点弹簧

00:38:45.450 --> 00:38:54.480
开机-太好了

00:38:51.480 --> 00:38:55.380
嗯，嗯，这让母亲很兴奋

00:38:54.480 --> 00:38:57.540
我昨天在谈论这个

00:38:55.380 --> 00:38:59.130
即将到来的是什么

00:38:57.540 --> 00:39:01.800
她曾经是执行器集成

00:38:59.130 --> 00:39:03.990
向您展示您知道本·黑尔（Ben Hale）和

00:39:01.800 --> 00:39:07.470
团队的其他成员都在努力工作

00:39:03.990 --> 00:39:09.359
下一组启动执行器

00:39:07.470 --> 00:39:11.490
并在关键云中覆盖

00:39:09.359 --> 00:39:13.170
边界应用程序管理器

00:39:11.490 --> 00:39:15.390
您所看到的用户界面

00:39:13.170 --> 00:39:17.280
实际上早先是完全

00:39:15.390 --> 00:39:19.410
技术上准确的妈妈正在展示

00:39:17.280 --> 00:39:21.869
您来自关键网络的应用程序管理器

00:39:19.410 --> 00:39:23.819
我们托管的公共服务

00:39:21.869 --> 00:39:25.740
 Cloud Foundry的云实例

00:39:23.819 --> 00:39:27.690
适用于任何Spring Boot开发人员

00:39:25.740 --> 00:39:29.040
如果您注册，您就会明白

00:39:27.690 --> 00:39:30.270
八十七美元的审判费。 

00:39:29.040 --> 00:39:32.790
信用或某事马特，所以这是一个

00:39:30.270 --> 00:39:34.890
春季蓝色应用程序测试的好地方

00:39:32.790 --> 00:39:36.750
 CI的开发环境精神能力

00:39:34.890 --> 00:39:38.250
建立这样的东西，这就是

00:39:36.750 --> 00:39:40.740
她向你展示我们正在努力

00:39:38.250 --> 00:39:43.980
下一套春天心情执行器

00:39:40.740 --> 00:39:48.180
像热转储线程转储和

00:39:43.980 --> 00:39:49.740
跟踪当前正在计划中，但是

00:39:48.180 --> 00:39:51.000
你知道我们不荣幸站起来

00:39:49.740 --> 00:39:53.100
承诺在那里，但我们仍然有点

00:39:51.000 --> 00:39:54.180
来回去决定什么

00:39:53.100 --> 00:39:56.100
对下一次最有意义

00:39:54.180 --> 00:39:57.480
放出的热量很漂亮

00:39:56.100 --> 00:40:02.970
直截了当，这才回到

00:39:57.480 --> 00:40:04.700
 gzip压缩热转储文件转储

00:40:02.970 --> 00:40:06.990
简单明了的面包

00:40:04.700 --> 00:40:09.690
跟踪只给您最后

00:40:06.990 --> 00:40:12.270
信息最近的100个HTTP请求

00:40:09.690 --> 00:40:16.110
默认情况下，跟踪信息在

00:40:12.270 --> 00:40:18.270
在那里，那些很快就会到

00:40:16.110 --> 00:40:25.170
您附近的新踏板Cloud Foundry发布

00:40:18.270 --> 00:40:26.820
手臂和时间的充裕，我们

00:40:25.170 --> 00:40:30.180
肯定会去的

00:40:26.820 --> 00:40:32.610
整套执行器和堆焊

00:40:30.180 --> 00:40:35.580
应用管理器中的用户

00:40:32.610 --> 00:40:37.080
界面，所以基本上只有两个

00:40:35.580 --> 00:40:41.070
我们不会去仪器

00:40:37.080 --> 00:40:43.470
关闭和日志文件和母亲

00:40:41.070 --> 00:40:45.270
昨天给我解释为什么

00:40:43.470 --> 00:40:48.300
完美的感觉，因为你可以关闭

00:40:45.270 --> 00:40:49.710
在Apps内启动应用程序

00:40:48.300 --> 00:40:52.320
经理，所以您不一定需要

00:40:49.710 --> 00:40:52.770
自行关闭端点借贷

00:40:52.320 --> 00:40:55.830
文件

00:40:52.770 --> 00:40:59.970
 PCF中更长的Gator效果惊人

00:40:55.830 --> 00:41:01.860
来自多个流日志的工作

00:40:59.970 --> 00:41:05.940
 Spring Boot实例多个

00:41:01.860 --> 00:41:07.590
 PCF系统中的容器和

00:41:05.940 --> 00:41:09.510
使它看起来像一个日志

00:41:07.590 --> 00:41:12.060
流，我们称之为组件主持人

00:41:09.510 --> 00:41:13.620
因此没有必要真正丢弃

00:41:12.060 --> 00:41:15.060
在PCF上运行时的日志文件

00:41:13.620 --> 00:41:19.380
博客Gator为您做到这一点

00:41:15.060 --> 00:41:21.540
自动地，我们也在看

00:41:19.380 --> 00:41:23.790
 PCF指标小组（如果您不熟悉） 

00:41:21.540 --> 00:41:26.760
关于PCF指标，我会讲一点

00:41:23.790 --> 00:41:28.710
只需一分钟即可了解更多信息，但这仅仅是

00:41:26.760 --> 00:41:31.800
某种操作数据容器

00:41:28.710 --> 00:41:34.920
您知道的指标网络知道

00:41:31.800 --> 00:41:37.260
 CPU使用率在那些

00:41:34.920 --> 00:41:39.090
指标将通过管道传递

00:41:37.260 --> 00:41:41.640
如果定义，则为春季心情执行器

00:41:39.090 --> 00:41:43.530
自定义指标，我们正在使用这些指标

00:41:41.640 --> 00:41:45.420
指标小组正在研究

00:41:43.530 --> 00:41:47.310
 PCF指标用户中的用户

00:41:45.420 --> 00:41:48.300
体验真的很棒

00:41:47.310 --> 00:41:50.520
更像是

00:41:48.300 --> 00:41:52.020
雷达，你不知道，你也不知道

00:41:50.520 --> 00:41:53.450
远程承诺尚未完成

00:41:52.020 --> 00:41:55.400
那样，但是我们有点

00:41:53.450 --> 00:41:58.849
使用并真的希望听到

00:41:55.400 --> 00:42:00.980
坦率地说，我们一直在Heil 

00:41:58.849 --> 00:42:01.849
考虑电抗器

00:42:00.980 --> 00:42:04.609
终点

00:42:01.849 --> 00:42:07.760
我们也在研究微服务

00:42:04.609 --> 00:42:10.070
仪表板或Dino的J作品

00:42:07.760 --> 00:42:11.800
乔什（Josh）长期得到一个很酷的黎巴嫩

00:42:10.070 --> 00:42:13.730
几周前的春季贴士系列

00:42:11.800 --> 00:42:16.130
有一个很棒的可视化

00:42:13.730 --> 00:42:17.960
您的微服务的仪表板

00:42:16.130 --> 00:42:19.550
看起来也一样

00:42:17.960 --> 00:42:22.460
我们真正想做的就是听到

00:42:19.550 --> 00:42:24.079
如果您是Springville用户，并且

00:42:22.460 --> 00:42:26.960
关键的Cloud Foundry用户或

00:42:24.079 --> 00:42:30.589
关键的Web服务用户um遍历

00:42:26.960 --> 00:42:32.750
该链接，您可以申请拥有一个

00:42:30.589 --> 00:42:35.150
采访我们的用户体验团队

00:42:32.750 --> 00:42:36.770
他们会给您一张75美元的礼品卡

00:42:35.150 --> 00:42:38.510
参加论坛实际上是

00:42:36.770 --> 00:42:39.980
像三个字段，但是如果您使用这些

00:42:38.510 --> 00:42:42.470
两件事在一起现在是您的机会

00:42:39.980 --> 00:42:44.570
影响产品管理

00:42:42.470 --> 00:42:46.750
直接运行并发出声音

00:42:44.570 --> 00:42:54.200
听说我们非常感兴趣

00:42:46.750 --> 00:42:56.599
和你说话很酷，那么什么傻瓜镜头

00:42:54.200 --> 00:42:59.030
回来只是一个小小的

00:42:56.599 --> 00:43:03.470
 spring boot 是什么

00:42:59.030 --> 00:43:05.599
当过Cloud Foundry场景时

00:43:03.470 --> 00:43:07.670
将镜头扩大到稍微宽一点

00:43:05.599 --> 00:43:09.770
在春季，“ dom中有一些东西

00:43:07.670 --> 00:43:11.480
我们已经完成了一些很棒的

00:43:09.770 --> 00:43:12.770
您可以或的春季云集成

00:43:11.480 --> 00:43:15.619
可能对您不熟悉

00:43:12.770 --> 00:43:18.170
到现在为止听说过它，但是春天

00:43:15.619 --> 00:43:21.260
云服务基本上是

00:43:18.170 --> 00:43:23.990
 Eureka Netflix的服务器端组件

00:43:21.260 --> 00:43:25.790
 OSS eureka历史记录和我们的配置服务器

00:43:23.990 --> 00:43:27.710
这就是您的大门或开心之门

00:43:25.790 --> 00:43:29.420
作为配置的故障

00:43:27.710 --> 00:43:32.260
网络服务，这些都是

00:43:29.420 --> 00:43:34.310
博世百分百管理的PCF管理

00:43:32.260 --> 00:43:36.650
实例，所以您不再需要

00:43:34.310 --> 00:43:39.560
某种安装和配置，甚至

00:43:36.650 --> 00:43:41.420
在尤里卡hystrix配置服务器上管理

00:43:39.560 --> 00:43:44.150
在你知道多个倍数

00:43:41.420 --> 00:43:47.000
容器，这现在是一个极端

00:43:44.150 --> 00:43:48.290
最近住在关键的公开测试版中

00:43:47.000 --> 00:43:49.819
网络服务，所以您想给它一个

00:43:48.290 --> 00:43:51.560
旋转你就可以运行它

00:43:49.819 --> 00:43:54.710
关键的，你可以试一试吗

00:43:51.560 --> 00:43:56.569
我们没有想到的很酷的东西

00:43:54.710 --> 00:43:59.060
关于各种疯狂的事情

00:43:56.569 --> 00:44:01.010
未来，我们希望听到您的消息

00:43:59.060 --> 00:44:02.900
你觉得听起来有趣吗

00:44:01.010 --> 00:44:04.910
给你一些正在发生的事情

00:44:02.900 --> 00:44:06.440
在产品管理中谈到

00:44:04.910 --> 00:44:07.220
现在我们在谈论事情

00:44:06.440 --> 00:44:09.740
像复合

00:44:07.220 --> 00:44:11.570
后端的配置服务器

00:44:09.740 --> 00:44:15.200
您可以混合使用散列式法院 Vault 

00:44:11.570 --> 00:44:17.270
聚在一起，我们正在寻找直接

00:44:15.200 --> 00:44:19.280
支持spring cloud数据流为

00:44:17.270 --> 00:44:21.470
春季云服务的一部分

00:44:19.280 --> 00:44:23.060
再次运行时那些运行时碎片

00:44:21.470 --> 00:44:24.470
通常知道你在什么时候我们在说话

00:44:23.060 --> 00:44:25.849
关于一些我们提供的服务

00:44:24.470 --> 00:44:28.520
通常更多地谈论

00:44:25.849 --> 00:44:30.890
现在服务器端的位

00:44:28.520 --> 00:44:32.930
我们也在偶然地调查

00:44:30.890 --> 00:44:34.060
如何使客户更轻松

00:44:32.930 --> 00:44:36.530
发展，但这是另一个话题

00:44:34.060 --> 00:44:39.020
其他支持一些新事物的东西

00:44:36.530 --> 00:44:41.810
 Pinto Cloud Foundry的最新功能

00:44:39.020 --> 00:44:43.700
像外科手术一样进入市场的

00:44:41.810 --> 00:44:48.500
路由或新容器

00:44:43.700 --> 00:44:50.090
容器网络堆栈也可能是

00:44:48.500 --> 00:44:52.099
改善我们周围的合作

00:44:50.090 --> 00:44:55.130
服务注册表通常我们发现

00:44:52.099 --> 00:44:57.349
团队希望以某种方式进行协作

00:44:55.130 --> 00:44:59.930
不一定只是映射到CF组织

00:44:57.349 --> 00:45:01.700
和空间，以便人们可能想要

00:44:59.930 --> 00:45:04.160
实际能够看到服务

00:45:01.700 --> 00:45:06.230
来自其他团体的注册表

00:45:04.160 --> 00:45:08.330
考虑一些随意的链接

00:45:06.230 --> 00:45:10.849
比赛吸引了很多人

00:45:08.330 --> 00:45:12.740
轻松协作，然后再进行协作

00:45:10.849 --> 00:45:14.180
工作表上的东西不断发展的配置

00:45:12.740 --> 00:45:15.859
服务器多一点

00:45:14.180 --> 00:45:17.270
独立的配置管理

00:45:15.859 --> 00:45:19.460
产品，所以您知道也许我们会

00:45:17.270 --> 00:45:20.990
实际提供了后端图形化

00:45:19.460 --> 00:45:22.460
数据库，而不是您知道的那种

00:45:20.990 --> 00:45:24.650
带上自己的装备或带上自己的装备

00:45:22.460 --> 00:45:26.480
保险库和其他很多东西

00:45:24.650 --> 00:45:29.270
使更多或交钥匙

00:45:26.480 --> 00:45:31.460
你知道最后一点交钥匙

00:45:29.270 --> 00:45:32.630
这是我个人最喜欢的一件事

00:45:31.460 --> 00:45:35.960
我很兴奋，我认为这真的

00:45:32.630 --> 00:45:37.520
有趣的是

00:45:35.960 --> 00:45:40.730
我们可能会看到的服务注册表

00:45:37.520 --> 00:45:42.859
在自动配置和配对Zul时

00:45:40.730 --> 00:45:45.320
您的尤里卡实例

00:45:42.859 --> 00:45:48.140
可以做基于内容的路由之类的事情

00:45:45.320 --> 00:45:51.470
实际上是

00:45:48.140 --> 00:45:53.150
疯狂的期货其他

00:45:51.470 --> 00:45:56.240
您知道的功能，例如金丝雀

00:45:53.150 --> 00:45:57.859
部署和诸如此类的东西

00:45:56.240 --> 00:45:59.390
在某些方面您知道的是

00:45:57.859 --> 00:46:02.780
当然已经在

00:45:59.390 --> 00:46:05.540
台布铸造厂，但这基本上是

00:46:02.780 --> 00:46:07.430
如您所见，一个充满活力的

00:46:05.540 --> 00:46:09.349
 Spring Cloud激动人心的路线图

00:46:07.430 --> 00:46:10.849
服务，我们认为这很漂亮

00:46:09.349 --> 00:46:11.510
市场上独一无二的，所以我们期待

00:46:10.849 --> 00:46:14.510
听到你的消息

00:46:11.510 --> 00:46:16.099
在其他一些事情上再次拉

00:46:14.510 --> 00:46:18.290
镜头后退一点点，让我们转移

00:46:16.099 --> 00:46:19.849
焦点远离春天的云

00:46:18.290 --> 00:46:21.140
服务一秒钟，只是说很

00:46:19.849 --> 00:46:22.790
短暂地

00:46:21.140 --> 00:46:25.910
关于他们正在进行的一些工作

00:46:22.790 --> 00:46:27.560
 PCF指标小组并在春季

00:46:25.910 --> 00:46:30.470
专门与春天云

00:46:27.560 --> 00:46:32.720
侦探这是我们的框架

00:46:30.470 --> 00:46:35.570
包装了一些不同的赛车

00:46:32.720 --> 00:46:38.360
功能料斗弹簧云和

00:46:35.570 --> 00:46:40.940
想法是，如果您启用了

00:46:38.360 --> 00:46:42.590
而您基本上是PCF指标

00:46:40.940 --> 00:46:46.010
是您的运营数据视图

00:46:42.590 --> 00:46:49.910
并炫耀诸如容器之类的东西

00:46:46.010 --> 00:46:51.350
指标CPU内存磁盘使用情况网络

00:46:49.910 --> 00:46:53.120
您知道每个指标有多少个请求的指标

00:46:51.350 --> 00:46:55.550
第二种东西的应用

00:46:53.120 --> 00:46:58.490
您知道创建午睡的事件已更新

00:46:55.550 --> 00:47:00.620
开始从头开始应用程序日志您

00:46:58.490 --> 00:47:04.100
知道这种PCF指标

00:47:00.620 --> 00:47:05.570
像是两秒钟的摘要，但是你

00:47:04.100 --> 00:47:08.150
知道那是您的运营数据， 

00:47:05.570 --> 00:47:10.700
这个想法是，如果你打开

00:47:08.150 --> 00:47:13.130
跟踪PCF指标的一些访问是

00:47:10.700 --> 00:47:14.660
要检测那些风扇ID的数据

00:47:13.130 --> 00:47:17.060
那些跟踪ID会自动出现在

00:47:14.660 --> 00:47:18.830
日志并开始将其集成到

00:47:17.060 --> 00:47:21.170
这种用户界面是

00:47:18.830 --> 00:47:22.520
有点像是攀登系列

00:47:21.170 --> 00:47:25.130
如您在屏幕截图中所见

00:47:22.520 --> 00:47:27.260
所以当你特别是当你

00:47:25.130 --> 00:47:29.090
做微服务架构的地方

00:47:27.260 --> 00:47:31.700
你可能会有很多不同

00:47:29.090 --> 00:47:34.940
服务了解完整的通话

00:47:31.700 --> 00:47:37.460
每个组件的图形延迟

00:47:34.940 --> 00:47:38.840
真的很重要，所以这是

00:47:37.460 --> 00:47:40.340
将帮助您找到所有的日志

00:47:38.840 --> 00:47:43.010
具有该跟踪ID，您知道什么

00:47:40.340 --> 00:47:44.300
服务触及了多长时间

00:47:43.010 --> 00:47:46.100
时间安排，当然

00:47:44.300 --> 00:47:47.960
调用层次结构，所以这是一些工作

00:47:46.100 --> 00:47:49.580
那还没有上市，但是

00:47:47.960 --> 00:47:52.100
我们非常积极工作的地方

00:47:49.580 --> 00:47:55.480
并已经相当成熟，当然

00:47:52.100 --> 00:48:02.150
希望您对um的反馈

00:47:55.480 --> 00:48:04.730
太好了，让我们继续前进，是的， 

00:48:02.150 --> 00:48:06.260
让我们继续进行最后一行， 

00:48:04.730 --> 00:48:08.360
开始问一些我们已经问过的问题

00:48:06.260 --> 00:48:10.310
还剩十分钟左右，还有一吨

00:48:08.360 --> 00:48:14.650
问题，这太好了，谢谢

00:48:10.310 --> 00:48:17.960
嗯，让我马上开始

00:48:14.650 --> 00:48:21.080
解决那里的错误链接

00:48:17.960 --> 00:48:23.900
父母上有一个错误的链接

00:48:21.080 --> 00:48:26.900
文档，所以我只是显示

00:48:23.900 --> 00:48:29.210
现在，这是正确的链接

00:48:26.900 --> 00:48:30.410
Spring Boot ActuatorDocs和您

00:48:29.210 --> 00:48:33.220
知道您是否只是Google 

00:48:30.410 --> 00:48:34.299
粉丝，你就可以知道Google 

00:48:33.220 --> 00:48:38.309
行动

00:48:34.299 --> 00:48:40.959
 Doc的pibil上的Springwood执行器

00:48:38.309 --> 00:48:42.279
你会正确的

00:48:40.959 --> 00:48:46.660
那是到达的另一种方式

00:48:42.279 --> 00:48:48.279
很快就无罪释放

00:48:46.660 --> 00:48:50.079
就像我只是要跟踪很多

00:48:48.279 --> 00:48:53.829
我只需要保留的问题

00:48:50.079 --> 00:48:55.900
很好地跟踪其中的一些东西

00:48:53.829 --> 00:48:57.400
什么软件版本的问题

00:48:55.900 --> 00:49:00.429
做饭才能得到所有这些

00:48:57.400 --> 00:49:03.249
好东西或作动器

00:49:00.429 --> 00:49:06.400
整合基本上是春天

00:49:03.249 --> 00:49:09.249
引导一五一我认为可以教它

00:49:06.400 --> 00:49:13.150
一个不是，所以这是很好的一五个

00:49:09.249 --> 00:49:14.769
一个和cf-19对，如果您

00:49:13.150 --> 00:49:18.160
想要玩它，你也可以

00:49:14.769 --> 00:49:20.739
使用只是Web服务的CWS 

00:49:18.160 --> 00:49:22.299
这是整个街道的版本，我

00:49:20.739 --> 00:49:25.719
相信您可以免费注册

00:49:22.299 --> 00:49:34.329
试用并将您的spring部署到1.5 

00:49:25.719 --> 00:49:36.189
适用于它的应用程序，谢谢您的手臂还可以，并注意

00:49:34.329 --> 00:49:37.779
有人说调查链接

00:49:36.189 --> 00:49:40.420
沮丧将解决这一权利

00:49:37.779 --> 00:49:42.189
离开并获得该调查链接，如果

00:49:40.420 --> 00:49:47.049
您对用户界面感兴趣

00:49:42.189 --> 00:49:48.189
采访一秒钟，是的

00:49:47.049 --> 00:49:49.630
希望我们会把它备份

00:49:48.189 --> 00:49:53.439
很快，所以也许回来看看

00:49:49.630 --> 00:50:00.939
五分钟谢谢你的评论

00:49:53.439 --> 00:50:02.559
好的，太好了，是的，我

00:50:00.939 --> 00:50:06.449
谢谢你喊出来谢谢

00:50:02.559 --> 00:50:09.339
用于报告博客，让我们来看看

00:50:06.449 --> 00:50:10.959
问题是有人征服了吗

00:50:09.339 --> 00:50:11.949
我要早点问的问题

00:50:10.959 --> 00:50:13.329
只需一秒钟

00:50:11.949 --> 00:50:16.929
对此有一个问题

00:50:13.329 --> 00:50:19.299
 PWS上的春季引导与

00:50:16.929 --> 00:50:23.019
 spring boot 微服务，所以答案

00:50:19.299 --> 00:50:26.199
就是说我的意思是 spring boot 可以

00:50:23.019 --> 00:50:29.140
用于独自创建微服务

00:50:26.199 --> 00:50:30.400
春天的云是春天的延伸

00:50:29.140 --> 00:50:33.099
引导为您提供了一堆

00:50:30.400 --> 00:50:35.979
工具和基础架构可以为您提供帮助

00:50:33.099 --> 00:50:38.829
微服务更容易运行

00:50:35.979 --> 00:50:41.140
典型Web服务上的Spring Boot 

00:50:38.829 --> 00:50:44.079
你知道我的意思是微的差异

00:50:41.140 --> 00:50:45.640
服务是架构中的，典型的

00:50:44.079 --> 00:50:47.440
 Web服务是一个部署平台

00:50:45.640 --> 00:50:48.940
真的是这样

00:50:47.440 --> 00:50:50.349
你在说什么不同

00:50:48.940 --> 00:50:52.270
关于苹果和橙子，他们是

00:50:50.349 --> 00:50:53.260
一点点的青春，只是当你

00:50:52.270 --> 00:50:54.760
运行Springville和枢纽网络

00:50:53.260 --> 00:50:58.539
您正在我们的服务上运行的服务

00:50:54.760 --> 00:50:59.920
公共云铸造实例，您

00:50:58.539 --> 00:51:01.680
知道只是做平常的云事情

00:50:59.920 --> 00:51:04.150
知道您为使用的商品付费

00:51:01.680 --> 00:51:05.200
你知道你显然没有部署

00:51:04.150 --> 00:51:08.589
到要部署的本地服务器

00:51:05.200 --> 00:51:10.180
远程的东西，你部署什么

00:51:08.589 --> 00:51:13.000
不管是微服务还是

00:51:10.180 --> 00:51:16.569
有点取决于你，所以希望

00:51:13.000 --> 00:51:18.940
希望这有助于质疑在哪里

00:51:16.569 --> 00:51:22.990
你能从嗯那里得到调查链接吗

00:51:18.940 --> 00:51:25.059
如果它在如果你看

00:51:22.990 --> 00:51:27.309
您的附件和链接部分

00:51:25.059 --> 00:51:28.869
用户界面上有一个链接

00:51:27.309 --> 00:51:31.510
有人刚刚报告说

00:51:28.869 --> 00:51:32.740
是D的问题，但是是D的问题

00:51:31.510 --> 00:51:34.599
调查链接出于某些原因，但

00:51:32.740 --> 00:51:36.400
我们将在您那里为您备份

00:51:34.599 --> 00:51:38.049
没时间了，所以也许就回来看看吧

00:51:36.400 --> 00:51:40.510
今天稍晚一点给我们一些

00:51:38.049 --> 00:51:41.829
分钟，我们将确保

00:51:40.510 --> 00:51:43.450
如果您有兴趣，这适合您

00:51:41.829 --> 00:51:44.020
在采访中，我们非常想

00:51:43.450 --> 00:51:46.299
听到你的消息

00:51:44.020 --> 00:51:50.260
太好了，不客气

00:51:46.299 --> 00:51:52.150
谢谢你的举报

00:51:50.260 --> 00:51:53.140
很好，还有另一个问题是

00:51:52.150 --> 00:51:55.180
开箱即用的Splunk 

00:51:53.140 --> 00:51:58.960
集成多头指标管理员

00:51:55.180 --> 00:52:00.460
事情的变化还可以

00:51:58.960 --> 00:52:01.750
那里的语法很多，但我认为你是

00:52:00.460 --> 00:52:03.549
要求开箱即用的Splunk 

00:52:01.750 --> 00:52:07.180
积分um 

00:52:03.549 --> 00:52:09.220
我拥有的Cloud Foundry总有自己的

00:52:07.180 --> 00:52:12.339
某种日志关系功能，但我

00:52:09.220 --> 00:52:13.960
相信有一些Splunk集成

00:52:12.339 --> 00:52:16.000
我个人必须仔细检查

00:52:13.960 --> 00:52:18.339
网络上的关键点IO到

00:52:16.000 --> 00:52:19.510
绝对确定我含糊

00:52:18.339 --> 00:52:21.460
回忆起来，但我不想

00:52:19.510 --> 00:52:22.599
给你错误的答案，所以你

00:52:21.460 --> 00:52:25.510
可能只想转到网络顶部

00:52:22.599 --> 00:52:29.289
视频，看看任何形式的

00:52:25.510 --> 00:52:32.039
 Splunk集成文件um，但我们确实

00:52:29.289 --> 00:52:34.119
一些提供一些日志聚合

00:52:32.039 --> 00:52:36.190
我认为我们是Splunk的能力

00:52:34.119 --> 00:52:37.839
在日志分析上要多一点

00:52:36.190 --> 00:52:40.539
前沿不再是鳄鱼

00:52:37.839 --> 00:52:44.289
取决于您的实际情况

00:52:40.539 --> 00:52:46.059
寻找真的，你知道你是否

00:52:44.289 --> 00:52:47.710
我有点为那个决定而苦恼

00:52:46.059 --> 00:52:50.799
来看看记录仪鳄鱼

00:52:47.710 --> 00:52:52.390
文档文档，看看是否

00:52:50.799 --> 00:52:54.010
那种你就足够了

00:52:52.390 --> 00:52:55.690
功能集或是否需要

00:52:54.010 --> 00:53:00.250
真正成熟的东西

00:52:55.690 --> 00:53:01.339
分析啊，让我们看看还好吧

00:53:00.250 --> 00:53:03.479
一秒

00:53:01.339 --> 00:53:04.799
快来的小问题

00:53:03.479 --> 00:53:06.449
对了，我已经到了栈顶

00:53:04.799 --> 00:53:07.799
我觉得我对某些人不公平

00:53:06.449 --> 00:53:09.089
的人在

00:53:07.799 --> 00:53:11.369
开始，所以我现在要去

00:53:09.089 --> 00:53:14.219
问题堆栈的底部

00:53:11.369 --> 00:53:16.319
在春季博览会上有几个问题

00:53:14.219 --> 00:53:18.029
拼凑而成的Kafka，由Gary设计

00:53:16.319 --> 00:53:21.390
罗素非常友善

00:53:18.029 --> 00:53:23.399
回到我的频道，有一个

00:53:21.390 --> 00:53:26.999
关于斑点卡夫卡的春天的问题

00:53:23.399 --> 00:53:30.569
您可以创建一个新的侦听器吗

00:53:26.999 --> 00:53:32.819
该主题是在运行时定义的， 

00:53:30.569 --> 00:53:36.449
回答是可以创建

00:53:32.819 --> 00:53:39.179
 Kafka messagelistener容器对象

00:53:36.449 --> 00:53:43.049
或如果您正在使用Spring Integration 

00:53:39.179 --> 00:53:44.789
您可以使用特定于域的语言

00:53:43.049 --> 00:53:46.890
 DSL的动态流

00:53:44.789 --> 00:53:48.689
那里的注册能力，如果

00:53:46.890 --> 00:53:51.299
您正在使用DSL，它是动态流

00:53:48.689 --> 00:53:53.789
如果您知道我不是，请注册

00:53:51.299 --> 00:53:56.459
使用DSL，并且您正在对java进行编码

00:53:53.789 --> 00:53:59.130
您创建Kafka的命令行

00:53:56.459 --> 00:54:00.839
消息侦听器容器对象开始

00:53:59.130 --> 00:54:02.009
到那里的日志名称，但是spring没有

00:54:00.839 --> 00:54:06.599
以短名而闻名

00:54:02.009 --> 00:54:09.329
 tee hee hee hee hee um希望如此

00:54:06.599 --> 00:54:11.759
可以帮助您，还有另一个问题

00:54:09.329 --> 00:54:13.799
有 spring boot 启动器Kafka I 

00:54:11.759 --> 00:54:16.169
以为你的意思是有一个入门

00:54:13.799 --> 00:54:19.259
 Spring for Apache Kafka和答案

00:54:16.169 --> 00:54:20.999
那是对芽开始春天生物

00:54:19.259 --> 00:54:24.899
有一个弹簧复选框

00:54:20.999 --> 00:54:26.789
我认为Apache Kafka是入门

00:54:24.899 --> 00:54:30.539
还是我要疯了，还是那个

00:54:26.789 --> 00:54:32.579
是我认为春天来了

00:54:30.539 --> 00:54:35.939
他们可能会问的就像

00:54:32.579 --> 00:54:38.429
弹簧良好的数据执行器或全部

00:54:35.939 --> 00:54:40.739
我们和我拥有的那种东西

00:54:38.429 --> 00:54:42.389
不要以为我们有一个适合Apache的

00:54:40.739 --> 00:54:44.759
通过你在说的东西

00:54:42.389 --> 00:54:46.769
在Stratos手指iOS上，您可以添加

00:54:44.759 --> 00:54:48.959
当你是依赖卡

00:54:46.769 --> 00:54:52.859
在启动时创建该应用程序

00:54:48.959 --> 00:54:55.409
手指拨盘，但我不确定

00:54:52.859 --> 00:54:57.689
阿帕奇车载充电器我不认为这是

00:54:55.409 --> 00:55:00.439
好的，谢谢你的赞赏

00:54:57.689 --> 00:55:00.439
不错的现金

00:55:05.180 --> 00:55:10.680
推荐，以及为什么对春天有疑问

00:55:09.270 --> 00:55:13.200
公鸡在RabbitMQ上，你会

00:55:10.680 --> 00:55:14.730
推荐，为什么是我的其中之一

00:55:13.200 --> 00:55:16.740
最近我和我最喜欢的问题

00:55:14.730 --> 00:55:19.890
以为妈妈说的话就钉了

00:55:16.740 --> 00:55:22.200
 caca是真正设计和制造的

00:55:19.890 --> 00:55:23.820
周围非常狭窄

00:55:22.200 --> 00:55:26.220
用例集，但确实可以解决

00:55:23.820 --> 00:55:28.650
您知道的那些用例的对接

00:55:26.220 --> 00:55:30.750
这是一个持久的消息存储库，所以您

00:55:28.650 --> 00:55:33.810
有一个光标，你有这个

00:55:30.750 --> 00:55:36.150
能够回溯的概念

00:55:33.810 --> 00:55:37.800
及时说嘿，最后是什么

00:55:36.150 --> 00:55:39.690
一堆消息，例如您的消费者

00:55:37.800 --> 00:55:41.160
代码需要跟踪

00:55:39.690 --> 00:55:43.680
光标是，而在传统

00:55:41.160 --> 00:55:46.890
专注于RabbitMQ的企业消息

00:55:43.680 --> 00:55:49.410
当您进行DQ 

00:55:46.890 --> 00:55:52.440
消费者J'Accuse收到一条消息

00:55:49.410 --> 00:55:55.260
消息说对了，有一个

00:55:52.440 --> 00:55:57.300
还有更多的保证和

00:55:55.260 --> 00:55:58.710
认可和交易能力以及

00:55:57.300 --> 00:56:01.140
诸如此类的东西

00:55:58.710 --> 00:56:03.390
进行这种交换

00:56:01.140 --> 00:56:07.410
像这样的超大容量用例

00:56:03.390 --> 00:56:12.120
你知道的一个事件firehose 

00:56:07.410 --> 00:56:14.070
可卡很棒，很多

00:56:12.120 --> 00:56:16.980
其他企业种类的花园

00:56:14.070 --> 00:56:20.250
您将要使用的企业用例

00:56:16.980 --> 00:56:21.690
可能发现RabbitMQ已经成熟

00:56:20.250 --> 00:56:24.270
对你来说足够了

00:56:21.690 --> 00:56:25.770
盖茨比有你需要的东西

00:56:24.270 --> 00:56:27.270
在很多方面都非常互补

00:56:25.770 --> 00:56:30.060
因为我觉得什么sc之以鼻

00:56:27.270 --> 00:56:31.530
他们不是兔子的长处

00:56:30.060 --> 00:56:33.270
长处和很多兔子弦

00:56:31.530 --> 00:56:34.230
也不是卡夫卡人，所以我

00:56:33.270 --> 00:56:36.060
真的看到他们真的很

00:56:34.230 --> 00:56:37.610
免费，我认为您需要付款

00:56:36.060 --> 00:56:40.320
注意您的用例，以及

00:56:37.610 --> 00:56:42.900
从那个角度回答

00:56:40.320 --> 00:56:45.870
关于枢轴的事有很棒的博客文章

00:56:42.900 --> 00:56:47.580
来自弗雷德和醇厚的关于这个确切

00:56:45.870 --> 00:56:51.240
关于一些用例的事情

00:56:47.580 --> 00:56:53.270
每个消息经纪人都是核心能力

00:56:51.240 --> 00:56:56.910
因此，如果您搜索Fred mellow 

00:56:53.270 --> 00:56:58.440
泡菜现场的兔子卡夫卡

00:56:56.910 --> 00:56:59.970
您会立即找到该文章， 

00:56:58.440 --> 00:57:01.350
你可以得到一些额外的细节，但我

00:56:59.970 --> 00:57:02.160
只是为您总结了一下

00:57:01.350 --> 00:57:07.470
尽我所能

00:57:02.160 --> 00:57:09.270
嗯，另一个伟大的一两个问题

00:57:07.470 --> 00:57:11.400
卡夫卡在那里有一个驾驶舱服务器

00:57:09.270 --> 00:57:12.960
嵌入春季卡夫卡和答案

00:57:11.400 --> 00:57:14.370
是的，但这是发展

00:57:12.960 --> 00:57:18.330
版本，因此您真的不想使用

00:57:14.370 --> 00:57:20.910
用于生产的另一个问题

00:57:18.330 --> 00:57:23.220
在春季核心小组会议上

00:57:20.910 --> 00:57:25.680
适用于未使用的应用

00:57:23.220 --> 00:57:27.330
靴子是的，但那只是你的

00:57:25.680 --> 00:57:28.830
手动，你知道你没有

00:57:27.330 --> 00:57:30.450
自动配置的好处是

00:57:28.830 --> 00:57:32.550
所有其他的东西

00:57:30.450 --> 00:57:34.170
自己手动进行操作，这样您

00:57:32.550 --> 00:57:36.210
如果您只是使用杆当然可以

00:57:34.170 --> 00:57:40.650
 Spring框架而不是Spring Boot你

00:57:36.210 --> 00:57:46.710
绝对可以选择啊，让我们

00:57:40.650 --> 00:57:48.780
看到um做um其他问题

00:57:46.710 --> 00:57:51.180
哦，我想我已经回答了，但是

00:57:48.780 --> 00:57:53.220
有一个问题是什么版本的

00:57:51.180 --> 00:57:54.360
我需要支持PCF弹性运行时吗

00:57:53.220 --> 00:57:55.590
执行器集成我认为我们

00:57:54.360 --> 00:58:01.970
解决了这个问题，但那是 spring boot 

00:57:55.590 --> 00:58:03.930
 1/5和关键百1.9或更高

00:58:01.970 --> 00:58:05.940
有人问我们是否已经

00:58:03.930 --> 00:58:07.980
涵盖了微服务创建以及如何

00:58:05.940 --> 00:58:09.300
部署我知道我们没有，那是

00:58:07.980 --> 00:58:12.720
超出了此范围

00:58:09.300 --> 00:58:14.820
网络研讨会，如果您对此不感兴趣

00:58:12.720 --> 00:58:17.130
有一些很棒的视频

00:58:14.820 --> 00:58:19.080
正是我个人的那个话题

00:58:17.130 --> 00:58:22.350
我推荐的最爱是乔什

00:58:19.080 --> 00:58:24.360
 Long的云原生Java（如果您要访问） 

00:58:22.350 --> 00:58:25.590
春天的YouTube频道，还有一个

00:58:24.360 --> 00:58:27.240
在屏幕上右侧的链接

00:58:25.590 --> 00:58:31.110
 IO样例视频在您的眼前

00:58:27.240 --> 00:58:33.510
你会发现你会谈论

00:58:31.110 --> 00:58:35.070
您会发现Josh long的一些视频

00:58:33.510 --> 00:58:38.760
在云原生Java上

00:58:35.070 --> 00:58:40.860
那时应用上的另一个问题

00:58:38.760 --> 00:58:42.600
关键Cloud Foundry的经理是

00:58:40.860 --> 00:58:44.580
应用程序管理器是一个开源应用程序

00:58:42.600 --> 00:58:46.020
我可以拖延，答案是否定的

00:58:44.580 --> 00:58:48.360
那是Google随附的东西

00:58:46.020 --> 00:58:50.010
您肯定可以获得的Cloud Foundry 

00:58:48.360 --> 00:58:52.590
从太少的网络访问它

00:58:50.010 --> 00:58:54.060
如果您不是PCF用户，则可以提供服务

00:58:52.590 --> 00:59:00.270
不是您可以使用的开源应用

00:58:54.060 --> 00:59:01.800
解决不了，好吧，看起来我们像

00:59:00.270 --> 00:59:03.270
在我身上取得一些进展

00:59:01.800 --> 00:59:04.920
要从一个快速休息一下

00:59:03.270 --> 00:59:06.530
第二，然后遍历日志并

00:59:04.920 --> 00:59:08.570
确保我们在这里得到一切

00:59:06.530 --> 00:59:11.460
很好很好

00:59:08.570 --> 00:59:13.560
好吧，我们要用光了

00:59:11.460 --> 00:59:15.240
时间差不多就是一个

00:59:13.560 --> 00:59:19.710
一分半钟，我很不幸

00:59:15.240 --> 00:59:20.820
认为我真的要去II 

00:59:19.710 --> 00:59:22.380
想继续回答所有这些

00:59:20.820 --> 00:59:23.910
问题，但实际上系统是

00:59:22.380 --> 00:59:25.410
要在三分钟之内切断我们

00:59:23.910 --> 00:59:29.070
而不是特别

00:59:25.410 --> 00:59:31.350
我即将结束网络研讨会

00:59:29.070 --> 00:59:32.160
要注销我认为我们可以保存

00:59:31.350 --> 00:59:34.859
你的问题

00:59:32.160 --> 00:59:36.240
和那些我无法

00:59:34.859 --> 00:59:40.500
如果您想尝试打我，请回答

00:59:36.240 --> 00:59:42.569
在Twitter上，我很容易找到

00:59:40.500 --> 00:59:45.150
在彼得·汉弗莱（Peter Humphrey）或您可以

00:59:42.569 --> 00:59:46.410
 Spring Central，我们将尝试解决

00:59:45.150 --> 00:59:49.530
您的问题，我将尽力解决您的问题

00:59:46.410 --> 00:59:50.640
问题在那里，也许也许跟着我

00:59:49.530 --> 00:59:53.609
在Twitter之类的网站上，我们可以

00:59:50.640 --> 00:59:55.049
可以在此期间回升

00:59:53.609 --> 00:59:56.520
在最后几秒钟过得很开心

00:59:55.049 --> 01:00:00.000
我们在这里只是检查那些

00:59:56.520 --> 01:00:01.980
附件和链接um，而且绝对是

01:00:00.000 --> 01:00:04.589
试用Spring Cloud的公开测试版

01:00:01.980 --> 01:00:06.960
容器网络上的服务

01:00:04.589 --> 01:00:09.869
云铸造厂很热，然后

01:00:06.960 --> 01:00:11.970
呃，你知道你是否是两者的用户

01:00:09.869 --> 01:00:13.770
请务必注册技术

01:00:11.970 --> 01:00:15.690
为美联航经验丰富的团队

01:00:13.770 --> 01:00:17.789
采访中，我们将确保该链接

01:00:15.690 --> 01:00:19.710
备份并仅需几个工作

01:00:17.789 --> 01:00:21.359
分钟在这里，所以也许回来看看

01:00:19.710 --> 01:00:22.920
今天晚一点甚至更多

01:00:21.359 --> 01:00:24.240
如果有的话欢迎注册

01:00:22.920 --> 01:00:26.069
关于这个问题，请随时

01:00:24.240 --> 01:00:29.069
在Peter Humphrey的Twitter上打我

01:00:26.069 --> 01:00:30.869
 Rhett非常重要，我认为

01:00:29.069 --> 01:00:32.130
这就是我们今天的时间

01:00:30.869 --> 01:00:33.510
非常感谢我的问题

01:00:32.130 --> 01:00:37.079
抱歉，我们无法解决所有问题

01:00:33.510 --> 01:00:38.520
只是有太多，但嗯，看看

01:00:37.079 --> 01:00:41.369
期待在另一个网络研讨会上见到您

01:00:38.520 --> 01:00:43.950
这周很快

01:00:41.369 --> 01:00:46.559
记录下来，幻灯片和重放将

01:00:43.950 --> 01:00:49.650
被发布到关键网站并

01:00:46.559 --> 01:00:51.329
明亮的热门频道，所以如果您想

01:00:49.650 --> 01:00:52.619
与您的同事分享

01:00:51.329 --> 01:00:54.539
当然适合你

01:00:52.619 --> 01:00:56.520
我们鼓励您回来， 

01:00:54.539 --> 01:00:58.140
检查Tivoli哦和spring spring 

01:00:56.520 --> 01:01:00.809
扎染我们的网站，以备将来举行网络研讨会

01:00:58.140 --> 01:01:02.069
我们真的在网络研讨会上

01:01:00.809 --> 01:01:02.910
在整个公司范围内进行编程

01:01:02.069 --> 01:01:06.210
有很多很酷的东西

01:01:02.910 --> 01:01:07.710
每个月都会发生，好吧

01:01:06.210 --> 01:01:10.730
妈妈是你想要保持关注的任何东西

01:01:07.710 --> 01:01:13.770
知道我只是感谢大家

01:01:10.730 --> 01:01:15.539
参加此网络研讨会，如果您有

01:01:13.770 --> 01:01:17.369
您可以关注的任何后续问题

01:01:15.539 --> 01:01:21.630
我在推特上问我

01:01:17.369 --> 01:01:23.339
推特手柄是我23岁时的工作

01:01:21.630 --> 01:01:25.140
相信这是在开始的时候

01:01:23.339 --> 01:01:28.130
滑轨，因此您可以从那里得到它

01:01:25.140 --> 01:01:28.130
谢谢

01:01:32.140 --> 01:01:34.200
您

