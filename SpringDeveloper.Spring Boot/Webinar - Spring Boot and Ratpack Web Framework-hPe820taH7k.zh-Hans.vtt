WEBVTT
Kind: captions
Language: zh-Hans

00:00:10.950 --> 00:00:13.869
感谢您参加今天的重要活动

00:00:13.299 --> 00:00:16.299
网络直播

00:00:13.869 --> 00:00:18.189
关于on24接口的一些知识

00:00:16.299 --> 00:00:20.200
从观众的底部开始

00:00:18.189 --> 00:00:22.630
控制台或应用程序组件

00:00:20.200 --> 00:00:24.759
包括质量检查资源，健康和媒体

00:00:22.630 --> 00:00:26.710
您的音频正在通过筛选

00:00:24.759 --> 00:00:28.300
您的电脑和扬声器，您可以

00:00:26.710 --> 00:00:30.700
通过单击扩展中心幻灯片区域

00:00:28.300 --> 00:00:32.559
在右上方的最大化图标上，或

00:00:30.700 --> 00:00:34.420
技术右下角

00:00:32.559 --> 00:00:36.730
困难，请点击帮助图标

00:00:34.420 --> 00:00:38.350
在控制台底部或使用

00:00:36.730 --> 00:00:41.020
右上角的问答组件

00:00:38.350 --> 00:00:43.360
屏幕的一侧，我们鼓励您

00:00:41.020 --> 00:00:44.980
在整个网络广播中向

00:00:43.360 --> 00:00:47.170
查看您和其他人的回应

00:00:44.980 --> 00:00:49.989
参与者问题使用刷新

00:00:47.170 --> 00:00:51.820
在整个活动中链接资源

00:00:49.989 --> 00:00:53.950
在您的左上角列出

00:00:51.820 --> 00:00:55.680
控制台包含支持资源

00:00:53.950 --> 00:00:57.960
带有可点击链接供您查看

00:00:55.680 --> 00:01:06.850
包括视频重播的链接

00:00:57.960 --> 00:01:08.560
早上好享受今天的演讲

00:01:06.850 --> 00:01:09.520
到西海岸，下午好

00:01:08.560 --> 00:01:12.969
从东海岸

00:01:09.520 --> 00:01:15.040
我的名字叫Dan Ken，我为

00:01:12.969 --> 00:01:17.950
公司称为IAC应用程序基于

00:01:15.040 --> 00:01:20.470
纽约市，我是

00:01:17.950 --> 00:01:22.120
鼠包核心团队，今天我们将成为

00:01:20.470 --> 00:01:23.950
谈论 spring boot 和鼠尾包

00:01:22.120 --> 00:01:26.610
网络框架以及为什么要这么做

00:01:23.950 --> 00:01:26.610
同时使用它们

00:01:27.450 --> 00:01:38.710
所以让我们谈谈春天

00:01:30.790 --> 00:01:40.150
引导，我们知道春天是

00:01:38.710 --> 00:01:43.260
作为生态系统的框架

00:01:40.150 --> 00:01:47.680
大约十多年了

00:01:43.260 --> 00:01:49.570
 spring MVC特别是spring web MVC 

00:01:47.680 --> 00:01:51.549
特别是也有

00:01:49.570 --> 00:01:53.080
超过10年，所以当您考虑

00:01:51.549 --> 00:01:55.360
具有这种类型的图书馆

00:01:53.080 --> 00:01:57.850
长寿，但也只是纯粹的市场

00:01:55.360 --> 00:01:59.799
优势，我们正在谈论一个真正的

00:01:57.850 --> 00:02:03.520
您可以真正依赖的可靠库

00:01:59.799 --> 00:02:06.220
实际上，很多人都在做

00:02:03.520 --> 00:02:08.920
如果我们在春天看一天

00:02:06.220 --> 00:02:11.110
在Maven Central，我们寻找

00:02:08.920 --> 00:02:13.510
织带的原始弹簧

00:02:11.110 --> 00:02:17.650
我最早可以找到的时候是102 

00:02:13.510 --> 00:02:19.390
在2005年发行的2006年16 

00:02:17.650 --> 00:02:21.970
现在，该框架实际上已经

00:02:19.390 --> 00:02:23.120
随着变化的不断发展

00:02:21.970 --> 00:02:26.870
次

00:02:23.120 --> 00:02:28.800
当你知道维护的时候

00:02:26.870 --> 00:02:30.780
向后兼容

00:02:28.800 --> 00:02:33.569
尽力而为，直到您知道

00:02:30.780 --> 00:02:37.530
是时候关闭AP中的内容了

00:02:33.569 --> 00:02:40.310
生活在AP岛上，但 spring boot 

00:02:37.530 --> 00:02:43.230
真的需要所有这些经验， 

00:02:40.310 --> 00:02:45.930
变成一个非常愉快的

00:02:43.230 --> 00:02:48.030
开发经验的一些

00:02:45.930 --> 00:02:50.489
春天强调的变化

00:02:48.030 --> 00:02:52.440
果是你知道你应该创造

00:02:50.489 --> 00:02:55.349
一个独立的人工制品是否

00:02:52.440 --> 00:02:57.120
一个jar或可执行的war文件，甚至

00:02:55.349 --> 00:02:58.739
部署到servlet的war文件

00:02:57.120 --> 00:03:00.049
容器，无论您需要什么

00:02:58.739 --> 00:03:03.680
无论您的运营需求是什么

00:03:00.049 --> 00:03:06.780
 Spring Boot显然可以告诉我们

00:03:03.680 --> 00:03:10.019
关于 spring boot 的另一件事是

00:03:06.780 --> 00:03:13.310
我们真的根本不想使用XML 

00:03:10.019 --> 00:03:16.260
 XML不仅看起来很冗长而且

00:03:13.310 --> 00:03:20.760
很难通过内存输入，但是

00:03:16.260 --> 00:03:23.459
不是，不是真正的类型安全，所以如果

00:03:20.760 --> 00:03:25.049
您正在尝试实例化您的

00:03:23.459 --> 00:03:27.870
您的所有应用程序上下文

00:03:25.049 --> 00:03:29.609
和所有您拥有我们的XML节点

00:03:27.870 --> 00:03:31.889
我彼此的意思是这些天的ID 

00:03:29.609 --> 00:03:34.489
确实对您有帮助

00:03:31.889 --> 00:03:36.810
 bean 并确保它们适合但

00:03:34.489 --> 00:03:38.130
您知道我们只是说您正在使用

00:03:36.810 --> 00:03:40.530
像这样的标准文本编辑器

00:03:38.130 --> 00:03:43.560
会在春季完全帮助您

00:03:40.530 --> 00:03:45.269
框架上下文库中有一个

00:03:43.560 --> 00:03:48.359
一系列有助于您的注释

00:03:45.269 --> 00:03:49.410
提供用于定义的Java机制

00:03:48.359 --> 00:03:54.780
Spring bean ，它被称为

00:03:49.410 --> 00:03:58.079
配置中有一个注释

00:03:54.780 --> 00:04:01.109
能够声明的配置

00:03:58.079 --> 00:04:02.850
你知道一个简单的课程

00:04:01.109 --> 00:04:04.440
其他注释，例如at和

00:04:02.850 --> 00:04:08.459
这样的事情可以让你

00:04:04.440 --> 00:04:10.980
用如此巨大的Java代码定义bean 

00:04:08.459 --> 00:04:12.870
你知道的优势，你可以编译

00:04:10.980 --> 00:04:17.430
验证编译时间验证

00:04:12.870 --> 00:04:19.910
你在那里都很好，是的

00:04:17.430 --> 00:04:23.630
它说这是程序化的方式

00:04:19.910 --> 00:04:23.630
定义一个bean结构

00:04:24.140 --> 00:04:30.480
斯普林伍德也非常重视

00:04:28.280 --> 00:04:32.460
与一些最好的集成

00:04:30.480 --> 00:04:36.150
 jvm中存在的库

00:04:32.460 --> 00:04:37.530
生态系统，尤其是春季云

00:04:36.150 --> 00:04:40.410
浮现在脑海

00:04:37.530 --> 00:04:42.810
春季云项目有很多

00:04:40.410 --> 00:04:45.270
库中的东西使

00:04:42.810 --> 00:04:46.200
您可以进行自动服务发现

00:04:45.270 --> 00:04:50.300
说出您是否在经销商中

00:04:46.200 --> 00:04:53.580
建筑，以便您知道您可以

00:04:50.300 --> 00:04:56.370
您可以像添加一个一样

00:04:53.580 --> 00:04:57.960
注解和您的服务您知道吗

00:04:56.370 --> 00:04:59.580
自动知道在哪里寻找

00:04:57.960 --> 00:05:01.590
该服务在哪里生活

00:04:59.580 --> 00:05:03.090
该服务是现场服务还是我是服务， 

00:05:01.590 --> 00:05:10.680
我正在注册成为

00:05:03.090 --> 00:05:14.580
这个小组在这里，我的意思是

00:05:10.680 --> 00:05:16.440
使用像spring boot这样的项目

00:05:14.580 --> 00:05:20.670
使用任何一种Spring的价值

00:05:16.440 --> 00:05:23.160
如前所述，框架是

00:05:20.670 --> 00:05:25.650
行业标准，我认为您不会

00:05:23.160 --> 00:05:31.890
在那找到任何基于JVM的商店

00:05:25.650 --> 00:05:33.900
在使用a之前从未使用过spring 

00:05:31.890 --> 00:05:36.360
春季展台之类的项目让您专注

00:05:33.900 --> 00:05:39.810
正确编写业务逻辑

00:05:36.360 --> 00:05:42.390
门，证明你认识人

00:05:39.810 --> 00:05:43.410
参加项目或者你知道你

00:05:42.390 --> 00:05:44.660
知道交换项目即将到来

00:05:43.410 --> 00:05:46.830
通过公司或类似的东西

00:05:44.660 --> 00:05:48.420
因为每个人都知道带来

00:05:46.830 --> 00:05:52.020
因为你真的专注于很多

00:05:48.420 --> 00:05:53.340
每个人的全部技能

00:05:52.020 --> 00:05:57.240
从初学者到

00:05:53.340 --> 00:05:59.070
实习到高级开发人员等等

00:05:57.240 --> 00:06:01.710
等等，它们立即产生影响

00:05:59.070 --> 00:06:07.650
他们才开始编写代码，而我

00:06:01.710 --> 00:06:09.900
认为那是非常宝贵的，所以

00:06:07.650 --> 00:06:12.720
 spring boot 入门

00:06:09.900 --> 00:06:14.580
我的意思是首先我建议你知道

00:06:12.720 --> 00:06:17.010
前往网页上的春季蓝页

00:06:14.580 --> 00:06:19.800
春季官方网站，他们有一个整体

00:06:17.010 --> 00:06:22.530
一堆灰色指南

00:06:19.800 --> 00:06:24.480
文档很棒Java Doc的

00:06:22.530 --> 00:06:27.060
令人惊讶的是有据可查

00:06:24.480 --> 00:06:28.230
很多例子可以解决以下问题之一

00:06:27.060 --> 00:06:29.490
我最喜欢的入门方式

00:06:28.230 --> 00:06:32.820
 Spring Boot应用程序是

00:06:29.490 --> 00:06:35.220
通过弹簧初始化器，所以如果你

00:06:32.820 --> 00:06:36.620
去那年春天开始IO可以来

00:06:35.220 --> 00:06:38.990
在

00:06:36.620 --> 00:06:40.420
春天真的不在乎

00:06:38.990 --> 00:06:43.430
关于您使用哪种内置系统

00:06:40.420 --> 00:06:46.220
他们支持行业标准

00:06:43.430 --> 00:06:48.140
这是Maven和Gradle，而您

00:06:46.220 --> 00:06:53.660
可以指定您的Spring Boot版本

00:06:48.140 --> 00:06:56.650
您想使用的并且您知道这一点

00:06:53.660 --> 00:06:58.570
小搜索框可让您添加

00:06:56.650 --> 00:07:01.460
与之相关的库

00:06:58.570 --> 00:07:03.320
入门包和 spring boot 

00:07:01.460 --> 00:07:06.110
入门包是一个协作

00:07:03.320 --> 00:07:07.390
在 The Spring Team 和所有各种球队之间

00:07:06.110 --> 00:07:10.460
在那里的框架

00:07:07.390 --> 00:07:14.480
基本上提供一个注释

00:07:10.460 --> 00:07:15.980
您需要提供的基于基础的导入

00:07:14.480 --> 00:07:19.490
你的主要 spring boot 类，你得到

00:07:15.980 --> 00:07:21.170
所有这些功能都是免费的，我们

00:07:19.490 --> 00:07:24.530
切换到完整版本即可

00:07:21.170 --> 00:07:26.330
其实看到有一堆

00:07:24.530 --> 00:07:27.830
像这样的东西是这个

00:07:26.330 --> 00:07:30.170
 spring boot 的值对，这是

00:07:27.830 --> 00:07:35.990
春天的生态系统真的很喜欢你

00:07:30.170 --> 00:07:37.490
有所有这些可供您使用

00:07:35.990 --> 00:07:39.770
你再次喜欢的那种关注

00:07:37.490 --> 00:07:40.490
周围我们正在做云的东西，你知道

00:07:39.770 --> 00:07:42.080
您要确保您的

00:07:40.490 --> 00:07:45.050
发现只是照顾您的

00:07:42.080 --> 00:07:49.370
郊游照顾你喜欢

00:07:45.050 --> 00:07:50.750
强大的架构

00:07:49.370 --> 00:07:53.390
就像您要使用微服务一样

00:07:50.750 --> 00:07:55.970
体系结构之类的日志记录

00:07:53.390 --> 00:07:58.540
只是这真的很宝贵

00:07:55.970 --> 00:08:00.710
进来这里，按一下你想要的

00:07:58.540 --> 00:08:02.960
有一个生成项目，它将

00:08:00.710 --> 00:08:06.670
它会下载一个zip文件

00:08:02.960 --> 00:08:06.670
入门所需的一切

00:08:07.060 --> 00:08:15.320
真正宝贵的资源，所以说

00:08:13.760 --> 00:08:20.270
我们确实想从屏幕开始

00:08:15.320 --> 00:08:22.990
启动我已经开始并创建了一个基本的

00:08:20.270 --> 00:08:22.990
项目在这里和

00:08:23.860 --> 00:08:29.470
这个项目包括三个模块

00:08:25.930 --> 00:08:32.159
真正并肩而坐的我

00:08:29.470 --> 00:08:34.120
使用基于网格的配置

00:08:32.159 --> 00:08:36.459
我想介绍的第一件事

00:08:34.120 --> 00:08:38.649
对你来说只是在

00:08:36.459 --> 00:08:40.810
代表一个定型工件

00:08:38.649 --> 00:08:43.810
您会发现您公司的Nexus 

00:08:40.810 --> 00:08:45.610
储存库为例

00:08:43.810 --> 00:08:49.450
这个的build.gradle文件很漂亮

00:08:45.610 --> 00:08:54.070
简单，我们只依赖于Spring Core 

00:08:49.450 --> 00:08:56.620
依赖注入，我们依赖

00:08:54.070 --> 00:08:58.630
在这里的春天，所以你知道

00:08:56.620 --> 00:08:59.980
你可以想象你会去

00:08:58.630 --> 00:09:03.190
通过您的应用程序，您已经

00:08:59.980 --> 00:09:05.350
曾经的定义，也许你知道

00:09:03.190 --> 00:09:13.269
您已经设置了一些JPA内容，或者

00:09:05.350 --> 00:09:14.829
对于不熟悉的人如何

00:09:13.269 --> 00:09:16.690
 Java配置已经存在

00:09:14.829 --> 00:09:19.540
好一阵子了，但是还没有

00:09:16.690 --> 00:09:23.560
普及，我会争论直到

00:09:19.540 --> 00:09:26.019
春季食品是这个，这就是你的

00:09:23.560 --> 00:09:29.020
为您替换XML 

00:09:26.019 --> 00:09:30.940
了解应用程序上下文XML，因此您可以

00:09:29.020 --> 00:09:33.540
把整个班级都认为

00:09:30.940 --> 00:09:36.190
应用程序上下文XML文档

00:09:33.540 --> 00:09:38.740
文档，我们有三个存在

00:09:36.190 --> 00:09:42.880
我相信默认情况下在这里定义

00:09:38.740 --> 00:09:45.130
这些的范围为Singleton和

00:09:42.880 --> 00:09:47.370
 Bean由您的类型定义

00:09:45.130 --> 00:09:50.140
可以看到然后执行

00:09:47.370 --> 00:09:53.950
你知道我们的四季 bean 只是一些

00:09:50.140 --> 00:09:55.839
您知道的一种重要消息网

00:09:53.950 --> 00:09:58.360
一个重要的商业服务是

00:09:55.839 --> 00:10:01.510
只是您知道一个简单的界面而已

00:09:58.360 --> 00:10:03.370
赚钱，我们也有一个消息

00:10:01.510 --> 00:10:10.329
只是发送某种服务

00:10:03.370 --> 00:10:12.310
消息传递，所以您知道就像

00:10:10.329 --> 00:10:14.020
真的没有什么和我一样

00:10:12.310 --> 00:10:16.149
早点强调你知道你是否有

00:10:14.020 --> 00:10:17.500
某种类似的依赖注入

00:10:16.149 --> 00:10:20.290
这是怎么回事

00:10:17.500 --> 00:10:23.230
完成了，所以这个秘密信息

00:10:20.290 --> 00:10:25.329
实际上会被注入

00:10:23.230 --> 00:10:29.079
这个秘密消息就是

00:10:25.329 --> 00:10:33.010
早先定义为所有事物

00:10:29.079 --> 00:10:34.720
就像被命令不是那种

00:10:33.010 --> 00:10:36.970
其实并没有关系

00:10:34.720 --> 00:10:38.350
声明，因为春天会

00:10:36.970 --> 00:10:44.470
出色的代理，您可以做任何需要的事情

00:10:38.350 --> 00:10:46.660
这样做是的，这些只是我们的

00:10:44.470 --> 00:10:49.150
我们界面的基本局限性

00:10:46.660 --> 00:10:52.510
是我们的三个光束的集合，这是

00:10:49.150 --> 00:10:54.040
这是这个模块的东西

00:10:52.510 --> 00:10:55.240
只是代表您知道

00:10:54.040 --> 00:11:02.620
你会随身携带的神器

00:10:55.240 --> 00:11:04.270
和你在一起，所以我只想告诉你她

00:11:02.620 --> 00:11:09.280
 Spring Boot春季入门

00:11:04.270 --> 00:11:10.900
启动我们的Gradle构建以进行 spring boot 

00:11:09.280 --> 00:11:13.840
我已经拿了几件事

00:11:10.900 --> 00:11:15.580
自从Gradle以来有几件事

00:11:13.840 --> 00:11:20.710
我们的春季配置项目是

00:11:15.580 --> 00:11:24.700
与春天的野蛮人并排

00:11:20.710 --> 00:11:27.010
演示和rat-pack演示，我们有一个

00:11:24.700 --> 00:11:29.410
对Spring 配置的依赖

00:11:27.010 --> 00:11:30.910
所以这将编译该工件

00:11:29.410 --> 00:11:36.190
并把它带到项目中并穿上

00:11:30.910 --> 00:11:38.760
这个课我应该在这里提到

00:11:36.190 --> 00:11:42.670
这你真的不能用呃做

00:11:38.760 --> 00:11:45.340
与Maven与Maven，你将不得不

00:11:42.670 --> 00:11:51.280
你知道把东西发布到你当地的

00:11:45.340 --> 00:11:52.150
 Maven和恩，然后将其拉入并

00:11:51.280 --> 00:11:53.560
这种嗯

00:11:52.150 --> 00:11:55.060
您拥有的Maven标准格式

00:11:53.560 --> 00:11:59.050
您的小组工件和您的版本

00:11:55.060 --> 00:12:01.990
协调了我想要的几件事

00:11:59.050 --> 00:12:04.930
在这里指出，因为我们正在使用

00:12:01.990 --> 00:12:08.650
 Gradle，我们确实是从

00:12:04.930 --> 00:12:10.420
春天初始化我们实际上有

00:12:08.650 --> 00:12:13.150
弹簧初始化器应用Gradle 

00:12:10.420 --> 00:12:15.550
 spring boot 插件，这是

00:12:13.150 --> 00:12:16.060
屏幕提供的展位弹簧

00:12:15.550 --> 00:12:19.420
常规

00:12:16.060 --> 00:12:22.180
所以这个插件提供了几个

00:12:19.420 --> 00:12:24.160
真的很酷的事情之一是

00:12:22.180 --> 00:12:27.540
您会注意到此编译时间依赖性

00:12:24.160 --> 00:12:27.540
在春季良好的入门网站上

00:12:28.499 --> 00:12:34.019
您会注意到这里没有版本

00:12:30.569 --> 00:12:35.789
结束，通常是当你

00:12:34.019 --> 00:12:38.609
使用像Spring Boot这样的项目

00:12:35.789 --> 00:12:40.019
带来的不仅仅是你认识的一个

00:12:38.609 --> 00:12:41.999
或您所拥有的两个图书馆

00:12:40.019 --> 00:12:44.309
带来Spring Security 保障

00:12:41.999 --> 00:12:48.929
引入您正在引入的Web WC 

00:12:44.309 --> 00:12:51.029
数据可能会休眠

00:12:48.929 --> 00:12:53.879
可用，但如果您再参考一下

00:12:51.029 --> 00:12:57.269
页面上有大量的集成

00:12:53.879 --> 00:12:59.789
使用弹簧时的 spring boot 

00:12:57.269 --> 00:13:01.589
启动插件，它实际上将确保

00:12:59.789 --> 00:13:03.479
所有这些版本都在

00:13:01.589 --> 00:13:06.109
彼此同步，以便您

00:13:03.479 --> 00:13:08.999
保持二进制兼容性并

00:13:06.109 --> 00:13:10.889
这些版本将被锁定到此

00:13:08.999 --> 00:13:13.789
暴露的春天蓝色版本

00:13:10.889 --> 00:13:17.129
对于那些不熟悉groovy的人

00:13:13.789 --> 00:13:20.639
因为Gradle本质上是

00:13:17.129 --> 00:13:24.479
 groovy DSL的依赖关系

00:13:20.639 --> 00:13:26.579
构建脚本齿轮具有这种时髦

00:13:24.479 --> 00:13:28.049
语法，但如果您的用户是弹簧和使用

00:13:26.579 --> 00:13:30.689
应该使用的 Spring Expression Language 

00:13:28.049 --> 00:13:32.069
看起来对您来说很熟悉

00:13:30.689 --> 00:13:34.529
发生在这里只是一个时髦

00:13:32.069 --> 00:13:36.419
字符串插值配音，这很好

00:13:34.529 --> 00:13:37.559
因为你知道而不是重复

00:13:36.419 --> 00:13:38.849
这整个时期，我们

00:13:37.559 --> 00:13:41.939
已经避免使用弹簧

00:13:38.849 --> 00:13:44.249
蓝色插件，您可以对此进行定义

00:13:41.939 --> 00:13:46.679
在这个外在的关键价值

00:13:44.249 --> 00:13:49.470
配对，那是一首很棒的歌

00:13:46.679 --> 00:13:52.019
构造一个非常好的保持方式

00:13:49.470 --> 00:13:55.949
您所有的版本都锁定在一个

00:13:52.019 --> 00:13:57.959
的地方，但除此之外获得一个

00:13:55.949 --> 00:14:00.659
最小的弹簧良好的应用程序，这是

00:13:57.959 --> 00:14:01.979
真的唯一的，这是真的唯一的

00:14:00.659 --> 00:14:03.539
你需要的依赖，甚至这个

00:14:01.979 --> 00:14:05.429
依赖过大，因为它带来

00:14:03.539 --> 00:14:06.869
在弹簧引擎中查看弹簧启动

00:14:05.429 --> 00:14:08.369
应用程序不必是网络

00:14:06.869 --> 00:14:12.599
可以作为命令行的应用程序

00:14:08.369 --> 00:14:14.429
再次像您知道的应用程序来

00:14:12.599 --> 00:14:17.639
回到我们的Acme配置

00:14:14.429 --> 00:14:19.679
是我们的春天背景，您知道是否

00:14:17.639 --> 00:14:22.369
设置好所有 bean 图，然后

00:14:19.679 --> 00:14:24.599
要创建命令行

00:14:22.369 --> 00:14:27.479
运行cron作业的应用程序，但是您

00:14:24.599 --> 00:14:30.239
需要您知道您的目标路线

00:14:27.479 --> 00:14:32.879
在场，这是做到这一点的好方法

00:14:30.239 --> 00:14:34.979
你带进去就可以带回来

00:14:32.879 --> 00:14:37.589
因为更大的配置

00:14:34.979 --> 00:14:40.560
春天的好命令行课程和

00:14:37.589 --> 00:14:43.079
挂上去

00:14:40.560 --> 00:14:47.699
所以让我们看一下春天所吸引的

00:14:43.079 --> 00:14:49.589
在你好世界看起来我只是想

00:14:47.699 --> 00:14:52.889
花一点时间思考一下简洁

00:14:49.589 --> 00:14:55.019
本课我们什么也不看

00:14:52.889 --> 00:14:59.850
行号正确，包括新行

00:14:55.019 --> 00:15:01.350
我们共有22行，当您

00:14:59.850 --> 00:15:04.709
想一想就好了

00:15:01.350 --> 00:15:07.370
回到像春天MBC到五个

00:15:04.709 --> 00:15:11.699
说或什至像春季3o一样pre 31 

00:15:07.370 --> 00:15:14.939
您知道的MVC喜欢设置

00:15:11.699 --> 00:15:16.050
春季申请实际上就像

00:15:14.939 --> 00:15:19.279
比那里的替代品更好

00:15:16.050 --> 00:15:22.079
就像贾达·李一样

00:15:19.279 --> 00:15:23.819
以应用服务器为例，但是

00:15:22.079 --> 00:15:26.579
你仍然要关心自己

00:15:23.819 --> 00:15:29.639
一堆XML以您的形式

00:15:26.579 --> 00:15:33.149
您知道要注册的WebEx Mo签名

00:15:29.639 --> 00:15:35.249
该弹簧调度程序servlet有权

00:15:33.149 --> 00:15:38.389
提取所有应用程序

00:15:35.249 --> 00:15:38.389
来自特定容器的代码

00:15:38.870 --> 00:15:45.589
你知道也许你有申请

00:15:41.160 --> 00:15:47.970
上下文XML，并将所有内容带入

00:15:45.589 --> 00:15:50.279
至高无上的食物真的会让你知道那些

00:15:47.970 --> 00:15:52.740
多年的创作经验

00:15:50.279 --> 00:15:55.259
这些应用程序，并蒸馏下来

00:15:52.740 --> 00:15:58.230
到这个22行文件，或者在这里

00:15:55.259 --> 00:16:02.220
您最不可行的应用程序

00:15:58.230 --> 00:16:04.709
知道绑定到针对

00:16:02.220 --> 00:16:08.100
路由路径并返回点文本

00:16:04.709 --> 00:16:12.389
响应，这就是我想要的所有提示

00:16:08.100 --> 00:16:14.639
指出我们知道的那个

00:16:12.389 --> 00:16:15.660
这里有两个注释，可能是

00:16:14.639 --> 00:16:18.029
对您来说新鲜的是春季食品

00:16:15.660 --> 00:16:18.959
这个启用的应用

00:16:18.029 --> 00:16:20.970
自动配置

00:16:18.959 --> 00:16:23.370
你知道组件扫描带来的

00:16:20.970 --> 00:16:25.920
春季MVC，您知道所有这些好东西

00:16:23.370 --> 00:16:29.100
可以让您真正写出

00:16:25.920 --> 00:16:30.689
简洁的类控制器注释

00:16:29.100 --> 00:16:32.189
您现在应该已经熟悉

00:16:30.689 --> 00:16:35.309
您已经使用Spring MVC已有一段时间了

00:16:32.189 --> 00:16:39.209
当然你知道一些

00:16:35.309 --> 00:16:42.529
基于请求的注释将通知

00:16:39.209 --> 00:16:42.529
春天大使馆关于这个终点

00:16:43.930 --> 00:16:48.910
是的，让我们快速

00:16:46.420 --> 00:16:56.230
看看发送请求的对象

00:16:48.910 --> 00:16:58.449
这种应用看起来还不错

00:16:56.230 --> 00:17:05.470
我以前有一个机构在运作

00:16:58.449 --> 00:17:10.689
让我们再次运行它，所以我们

00:17:05.470 --> 00:17:12.250
快速启动并运行

00:17:10.689 --> 00:17:17.679
 -是的，起床很快，如果我们

00:17:12.250 --> 00:17:19.329
针对默认端口发出请求

00:17:17.679 --> 00:17:21.760
大家都知道并喜欢8080端口

00:17:19.329 --> 00:17:23.679
我们确实确实看到我们重新获得了我们的

00:17:21.760 --> 00:17:26.350
你好，世界，如果我们只是打开

00:17:23.679 --> 00:17:30.130
详细了解请求的位置

00:17:26.350 --> 00:17:33.970
就像我们看到您了解Apache 

00:17:30.130 --> 00:17:36.940
土狼1 1是服务器

00:17:33.970 --> 00:17:40.630
设置这个响应头，还有

00:17:36.940 --> 00:17:48.070
我们以编码为

00:17:40.630 --> 00:17:49.630
 utf-8，所以这是嗯，我的意思是这个

00:17:48.070 --> 00:17:53.620
下车的权利非常引人注目

00:17:49.630 --> 00:17:55.659
地面运行几乎不需要时间

00:17:53.620 --> 00:17:58.179
特别是如果你去春天

00:17:55.659 --> 00:18:00.039
初始化程序下载工件并

00:17:58.179 --> 00:18:02.260
就像你一样运行应用程序

00:18:00.039 --> 00:18:04.390
只需单击一下就可以了

00:18:02.260 --> 00:18:05.590
按钮，我认为那是真的

00:18:04.390 --> 00:18:09.280
如果您不使用spring，那么令人信服

00:18:05.590 --> 00:18:11.020
但也许还不错，这应该是

00:18:09.280 --> 00:18:12.970
至少让你有点好奇

00:18:11.020 --> 00:18:15.750
关于可能性是什么样的

00:18:12.970 --> 00:18:15.750
使用最高引导

00:18:17.250 --> 00:18:26.160
是的，我只是想指出

00:18:24.840 --> 00:18:29.310
再次正确，没有申请

00:18:26.160 --> 00:18:32.190
上下文XML，没有没有的web.xml 

00:18:29.310 --> 00:18:35.820
必须喜欢猜测，或者您知道Google 

00:18:32.190 --> 00:18:37.790
你刚刚放注释的地方

00:18:35.820 --> 00:18:40.170
继续，你很好走

00:18:37.790 --> 00:18:41.430
也没有紧凑的配置

00:18:40.170 --> 00:18:42.810
一起玩，但如果需要的话再玩一次

00:18:41.430 --> 00:18:43.520
可以访问任何一种

00:18:42.810 --> 00:18:45.900
东西

00:18:43.520 --> 00:18:47.100
带上这份文件真是太神奇了

00:18:45.900 --> 00:18:50.880
应该能够就在那里

00:18:47.100 --> 00:18:52.530
弄清楚你需要做什么，那就是

00:18:50.880 --> 00:19:01.740
 spring boot 的一些背景让我们

00:18:52.530 --> 00:19:06.090
谈论Rat Pack，所以Rat Pack Rat Pack 

00:19:01.740 --> 00:19:07.650
主持人是Rat Pack的家伙，哦，这是

00:19:06.090 --> 00:19:11.190
好的枢纽仓库

00:19:07.650 --> 00:19:13.860
此处存储库的组织，但

00:19:11.190 --> 00:19:17.160
恩，我们来谈谈Rat Pack，所以Rat Pack 

00:19:13.860 --> 00:19:18.630
是一组Java库，您可以

00:19:17.160 --> 00:19:20.100
可以将它们视为罐子，它们只是一个

00:19:18.630 --> 00:19:22.260
图表

00:19:20.100 --> 00:19:26.880
这些罐子让你做什么

00:19:22.260 --> 00:19:29.550
服务HTTP请求和一堆

00:19:26.880 --> 00:19:32.700
其他好的东西，所以它是

00:19:29.550 --> 00:19:35.340
整个项目最少

00:19:32.700 --> 00:19:39.360
 Java 8版本，因此您需要使用Java 

00:19:35.340 --> 00:19:42.530
八十年代鼠包另一个非常重要

00:19:39.360 --> 00:19:46.350
指出的是Rat Pack有

00:19:42.530 --> 00:19:48.480
不了解servlet API，不是

00:19:46.350 --> 00:19:50.010
我们的运行时类路径的一部分

00:19:48.480 --> 00:19:52.260
不反对它，我们不反对

00:19:50.010 --> 00:19:56.670
实施其中任何一项，但我们确实提供

00:19:52.260 --> 00:19:59.220
所有Servlet API构造的类似物

00:19:56.670 --> 00:20:01.260
就像您知道HTTP请求对象一样

00:19:59.220 --> 00:20:06.060
响应对象会话cookie标头

00:20:01.260 --> 00:20:07.340
所有那些我们没有的好东西

00:20:06.060 --> 00:20:10.410
知道，因为它不是servlet 

00:20:07.340 --> 00:20:12.270
我们不会部署到

00:20:10.410 --> 00:20:14.220
 servlet容器中没有更多文件

00:20:12.270 --> 00:20:15.560
你只要建立一个jar文件， 

00:20:14.220 --> 00:20:19.290
好去

00:20:15.560 --> 00:20:21.270
我说数学包有些自以为是

00:20:19.290 --> 00:20:24.570
轻率地因为你知道我们确实强调

00:20:21.270 --> 00:20:26.640
异步懒惰，您知道使用

00:20:24.570 --> 00:20:31.049
像写这篇文章的功能方法

00:20:26.640 --> 00:20:33.119
使之成为不变的代码

00:20:31.049 --> 00:20:36.269
还有一个星号害怕它是

00:20:33.119 --> 00:20:38.720
一切都如此反应

00:20:36.269 --> 00:20:42.289
右上角的功能区

00:20:38.720 --> 00:20:45.239
反应性就意味着他们

00:20:42.289 --> 00:20:48.210
实现反应流

00:20:45.239 --> 00:20:52.409
那就是API的兼容套件

00:20:48.210 --> 00:20:53.999
我们通过了70 TDK测试，所以如果

00:20:52.409 --> 00:20:56.389
您熟悉其他反应式

00:20:53.999 --> 00:20:58.769
像rx Java这样的流项目

00:20:56.389 --> 00:21:02.909
您实际上可以使用rx Java和rap 

00:20:58.769 --> 00:21:04.109
回到一起是的，还有其他

00:21:02.909 --> 00:21:06.659
那里的图书馆

00:21:04.109 --> 00:21:09.539
实现反应式流API是的

00:21:06.659 --> 00:21:14.840
实施起来很容易

00:21:09.539 --> 00:21:16.739
与胖背攻击整合

00:21:14.840 --> 00:21:18.629
因为不是你知道这是真的

00:21:16.739 --> 00:21:20.460
它必须自己照顾

00:21:18.629 --> 00:21:24.239
请求处理，并通过

00:21:20.460 --> 00:21:25.649
一个你不知道的叫做Metis的图书馆

00:21:24.239 --> 00:21:30.059
关于坚果

00:21:25.649 --> 00:21:32.539
它是经过战斗验证的，并且是一个网

00:21:30.059 --> 00:21:35.249
关于最小最小值真的很好

00:21:32.539 --> 00:21:38.489
减少资源，所以我们在谈论

00:21:35.249 --> 00:21:43.309
大约像CPU和内存并产生收益

00:21:38.489 --> 00:21:45.840
大容量的能力

00:21:43.309 --> 00:21:48.299
处理大量HTTP 

00:21:45.840 --> 00:21:51.059
请求或实际上任何形式的请求

00:21:48.299 --> 00:21:55.830
 nati只是网络框架

00:21:51.059 --> 00:22:00.809
然后他们确实有您知道的支持

00:21:55.830 --> 00:22:04.070
用于HTTP和HTTPS的东西，但是不是

00:22:00.809 --> 00:22:08.009
仅限于http 

00:22:04.070 --> 00:22:10.080
所以再次强调Rat Pack只是一个

00:22:08.009 --> 00:22:12.359
你知道编译时间上课时间

00:22:10.080 --> 00:22:14.850
没有SDK下载

00:22:12.359 --> 00:22:17.850
没有代码发生

00:22:14.850 --> 00:22:20.369
包绝对不是MVC，没有

00:22:17.850 --> 00:22:22.619
控制器在这里，我们当然不会

00:22:20.369 --> 00:22:27.359
有意见虽然我们有我们有

00:22:22.619 --> 00:22:29.009
支持模板，没有桌子

00:22:27.359 --> 00:22:33.059
基于路由，这更多的是

00:22:29.009 --> 00:22:35.999
责任的方式，我会

00:22:33.059 --> 00:22:37.710
进入另一件事

00:22:35.999 --> 00:22:41.009
 Rat Pack是它目前在

00:22:37.710 --> 00:22:44.549
版本1200，因此我们对API稳定

00:22:41.009 --> 00:22:46.490
 1点X线的100分支

00:22:44.549 --> 00:22:49.230
鼠包

00:22:46.490 --> 00:22:52.680
我们已经稳定API大约

00:22:49.230 --> 00:22:55.559
一年以来，我们确实有一个小但

00:22:52.680 --> 00:22:58.290
围绕Rat成长的敬业社区

00:22:55.559 --> 00:23:00.840
打包，如果您加入我们的行列

00:22:58.290 --> 00:23:02.580
您知道的频道人们谈论如何

00:23:00.840 --> 00:23:04.230
他们正在使用说唱回声或

00:23:02.580 --> 00:23:08.040
关于说唱的疑问

00:23:04.230 --> 00:23:08.940
回来，所以你为什么要使用

00:23:08.040 --> 00:23:11.220
像说唱回来

00:23:08.940 --> 00:23:13.410
好说唱回来，我们会考虑

00:23:11.220 --> 00:23:16.020
成为所见即所得你所看到的就是你

00:23:13.410 --> 00:23:17.610
得到那是没有报价-取消报价

00:23:16.020 --> 00:23:18.780
魔术，意味着你知道没有

00:23:17.610 --> 00:23:24.660
类路径扫描

00:23:18.780 --> 00:23:27.270
没有反思，不是，它做什么

00:23:24.660 --> 00:23:29.550
你告诉它为某些人做

00:23:27.270 --> 00:23:31.980
他们喜欢他们想要的其他人

00:23:29.550 --> 00:23:33.000
在盒子里解决的事情

00:23:31.980 --> 00:23:35.520
希望一切都挂钩

00:23:33.000 --> 00:23:37.080
连接，但这就是核心

00:23:35.520 --> 00:23:39.210
鼠包的宗旨并不意味着

00:23:37.080 --> 00:23:42.090
你不能围绕老鼠写代码

00:23:39.210 --> 00:23:44.550
确实有这个quote-unquote的包

00:23:42.090 --> 00:23:48.720
魔术，确实有些人是

00:23:44.550 --> 00:23:50.100
实际做这个老鼠包是设计的

00:23:48.720 --> 00:23:52.590
为了开发人员友好和

00:23:50.100 --> 00:23:54.720
生产力的意义，因为有这样的

00:23:52.590 --> 00:23:57.270
那只老鼠包没什么

00:23:54.720 --> 00:23:58.710
服务器实际上正在启动， 

00:23:57.270 --> 00:24:02.550
拆解时间的大鼠包服务器是

00:23:58.710 --> 00:24:04.590
一秒钟内不管什么手表

00:24:02.550 --> 00:24:08.340
不管怎么说，不应该说

00:24:04.590 --> 00:24:10.620
这导致生产力提高，因为

00:24:08.340 --> 00:24:13.920
我们启用开发模式hot 

00:24:10.620 --> 00:24:17.520
重新加载，实际上很有趣

00:24:13.920 --> 00:24:18.900
因为作为 spring boot 1/3鼠装

00:24:17.520 --> 00:24:21.900
和 spring boot 实际上有相同的

00:24:18.900 --> 00:24:24.600
锅重装的机制

00:24:21.900 --> 00:24:26.610
 spring boot ，只要您添加开发人员

00:24:24.600 --> 00:24:30.390
弹簧提供的工具

00:24:26.610 --> 00:24:33.600
蓝队，因为它检测到变化，它将

00:24:30.390 --> 00:24:36.450
你知道重新加载整个应用程序

00:24:33.600 --> 00:24:38.250
服务器只是发生在大鼠包中，如果您

00:24:36.450 --> 00:24:41.250
碰巧使用Gradle我们有一流的

00:24:38.250 --> 00:24:43.050
摇篮支持，因此，如果您正在运行老鼠

00:24:41.250 --> 00:24:45.000
通过Gradle打包或您正在运行它

00:24:43.050 --> 00:24:46.920
尽快通过常规脚本

00:24:45.000 --> 00:24:49.860
通知更改它将重新启动服务器

00:24:46.920 --> 00:24:52.140
和眨眼

00:24:49.860 --> 00:24:55.710
这使得老鼠包非常适合快速

00:24:52.140 --> 00:24:57.210
原型设计，而不仅仅是原型设计

00:24:55.710 --> 00:24:58.860
但实际上发展到更大

00:24:57.210 --> 00:25:01.690
代码库，因为我们有很多

00:24:58.860 --> 00:25:03.700
封装件的机制

00:25:01.690 --> 00:25:06.580
数据或行为的一部分

00:25:03.700 --> 00:25:09.580
描述了大鼠背包应该如何

00:25:06.580 --> 00:25:12.310
处理传入流量，它允许

00:25:09.580 --> 00:25:15.640
您要分开并重复使用

00:25:12.310 --> 00:25:17.890
这些代码以一种非常不错的方式

00:25:15.640 --> 00:25:19.330
使用Rat Pack的价值是因为它

00:25:17.890 --> 00:25:22.240
不需要您太多的资源

00:25:19.330 --> 00:25:24.820
真的可以每月减少

00:25:22.240 --> 00:25:27.550
云账单上的足迹是否

00:25:24.820 --> 00:25:30.460
您正在使用AWS或Google云

00:25:27.550 --> 00:25:32.680
电脑就是你所没有的

00:25:30.460 --> 00:25:36.910
具有强大的节点用尽

00:25:32.680 --> 00:25:39.840
那里的所有代码示例

00:25:36.910 --> 00:25:42.340
将使用Java，但首先

00:25:39.840 --> 00:25:45.070
 groovy中的“ hello world”示例

00:25:42.340 --> 00:25:49.240
实际上是为Rat Pack我实际上要去

00:25:45.070 --> 00:25:55.540
写这个俗套的原因

00:25:49.240 --> 00:25:57.340
原因当然是要展示

00:25:55.540 --> 00:26:03.670
令人信服的是使用类似

00:25:57.340 --> 00:26:12.880
这就是老鼠包的时髦

00:26:03.670 --> 00:26:13.299
应用程序看起来像安娜脚本

00:26:12.880 --> 00:26:17.590
抓

00:26:13.299 --> 00:26:19.419
批注像专家一样烘焙

00:26:17.590 --> 00:26:21.669
脚本，这基本上是一种获取方式

00:26:19.419 --> 00:26:25.749
你知道你可以使用你的依赖

00:26:21.669 --> 00:26:27.639
熟悉，他们对您有人工制品

00:26:25.749 --> 00:26:33.070
组组是iota rat-pack 

00:26:27.639 --> 00:26:34.659
工件名称是groovy和

00:26:33.070 --> 00:26:38.019
处女的耳朵一两个这是最新的

00:26:34.659 --> 00:26:40.029
我们要做的是稳定版本

00:26:38.019 --> 00:26:41.679
导入此静态rat-pack方法，然后

00:26:40.029 --> 00:26:43.450
静态rat-pack方法的作用是

00:26:41.679 --> 00:26:46.269
它使我们可以开始构建我们的

00:26:43.450 --> 00:26:48.159
服务器或真正描述

00:26:46.269 --> 00:26:50.859
应用程序应处理传入

00:26:48.159 --> 00:26:52.840
要求我们定义处理程序

00:26:50.859 --> 00:26:56.739
谈一点，我们做什么

00:26:52.840 --> 00:26:59.739
是我们最终找到了一个处理程序

00:26:56.739 --> 00:27:01.359
获取根请求根路径请求

00:26:59.739 --> 00:27:04.659
进来，我们该怎么办

00:27:01.359 --> 00:27:10.389
这个我们只是要打个招呼

00:27:04.659 --> 00:27:13.330
 Ruby，就是这样，这是一个

00:27:10.389 --> 00:27:15.840
整个大鼠包的实际应用

00:27:13.330 --> 00:27:15.840
处理和

00:27:15.890 --> 00:27:21.140
只是为了运行这个应用程序

00:27:18.799 --> 00:27:22.910
只需运行groovy，然后输入

00:27:21.140 --> 00:27:26.240
你的时髦脚本，这是你好贪婪

00:27:22.910 --> 00:27:29.330
在我们的例子中，让我们启动应用程序

00:27:26.240 --> 00:27:30.950
先生，它将启动服务器并告诉您

00:27:29.330 --> 00:27:32.920
它处于开发模式，并且

00:27:30.950 --> 00:27:35.210
准备开始接受请求，因此

00:27:32.920 --> 00:27:37.220
我们将要求针对本地

00:27:35.210 --> 00:27:38.840
如果您在此处阅读日志，则主机为50/50 

00:27:37.220 --> 00:27:40.100
这是rat-pack的默认端口

00:27:38.840 --> 00:27:44.030
你应该看到

00:27:40.100 --> 00:27:46.910
大家好，这是一个额外的节目

00:27:44.030 --> 00:27:50.630
这里的冗长你知道

00:27:46.910 --> 00:27:52.280
 utf-8中设置的明文护理现在我

00:27:50.630 --> 00:27:54.940
想要告诉你一些

00:27:52.280 --> 00:27:57.110
原型和

00:27:54.940 --> 00:27:59.330
用户友好开发人员友好

00:27:57.110 --> 00:28:01.280
在这里，所以我们实际上可以开始修改

00:27:59.330 --> 00:28:03.530
该应用程序正在运行时

00:28:01.280 --> 00:28:04.549
我们将立即看到结果，因此如果

00:28:03.530 --> 00:28:07.010
我们要改成你好

00:28:04.549 --> 00:28:09.350
大家-您好，老鼠包保存此

00:28:07.010 --> 00:28:11.090
您知道我们没有碰到的文件

00:28:09.350 --> 00:28:15.710
时髦的东西，我们只是发出一个请求

00:28:11.090 --> 00:28:19.960
再次关闭该标志黄色愤怒

00:28:15.710 --> 00:28:23.780
 hack这确实有利于迅速

00:28:19.960 --> 00:28:26.059
假设是一个REST API， 

00:28:23.780 --> 00:28:28.850
你知道定义了两个端点

00:28:26.059 --> 00:28:30.799
而且你知道可以返回罐头

00:28:28.850 --> 00:28:32.540
您最终替换的回复

00:28:30.799 --> 00:28:35.450
真正的服务之类的东西

00:28:32.540 --> 00:28:38.200
沿着这条路走下去

00:28:35.450 --> 00:28:44.690
机制在Java领域可用

00:28:38.200 --> 00:28:47.330
通过扒炉你只是事实就像

00:28:44.690 --> 00:28:49.910
你要跑步，你知道Gradle与

00:28:47.330 --> 00:28:53.080
 -茶将启用连续模式

00:28:49.910 --> 00:28:55.040
茶-茶是它的简称

00:28:53.080 --> 00:28:58.010
连续是该标志的长名称

00:28:55.040 --> 00:28:59.210
但基本上只要

00:28:58.010 --> 00:29:01.970
你告诉Gradle你的主要

00:28:59.210 --> 00:29:05.929
应用程序可能正在运行或

00:29:01.970 --> 00:29:07.010
主要类别的名称Gradle将

00:29:05.929 --> 00:29:10.010
照顾一切

00:29:07.010 --> 00:29:12.160
启动应用程序，直到

00:29:10.010 --> 00:29:14.330
您正在传递此连续标志为

00:29:12.160 --> 00:29:16.690
您对源进行修改

00:29:14.330 --> 00:29:19.760
代码，它将反映这些更改

00:29:16.690 --> 00:29:21.919
立即一个警告是

00:29:19.760 --> 00:29:23.030
对构建脚本的任何修改或

00:29:21.919 --> 00:29:25.790
设置或类似的东西

00:29:23.030 --> 00:29:27.620
任何基于Gradle的文件，例如

00:29:25.790 --> 00:29:28.890
添加依赖项或删除

00:29:27.620 --> 00:29:31.950
依赖它

00:29:28.890 --> 00:29:34.260
生效，直到您停止此命令

00:29:31.950 --> 00:29:37.350
并再次运行它，那是一个

00:29:34.260 --> 00:29:39.930
请注意，我们应该注意

00:29:37.350 --> 00:29:42.300
用groovy告诉世界，让我们来

00:29:39.930 --> 00:29:48.780
看一个类似的例子

00:29:42.300 --> 00:29:51.990
像Java，所以回到我们的未来

00:29:48.780 --> 00:29:55.740
回到我们的项目设置，这里是

00:29:51.990 --> 00:29:57.330
有点像最小的最小格雷

00:29:55.740 --> 00:29:59.300
您需要获取的配置

00:29:57.330 --> 00:30:01.590
 Rat Pack应用程序启动并运行

00:29:59.300 --> 00:30:05.550
您实际上并不需要任何

00:30:01.590 --> 00:30:07.560
我在这里声明这些依赖

00:30:05.550 --> 00:30:11.430
通过扒手的插件

00:30:07.560 --> 00:30:13.590
实验性的插件关闭功能

00:30:11.430 --> 00:30:16.470
您带上Rat Pack Java 

00:30:13.590 --> 00:30:19.010
插件将应用事物并制作

00:30:16.470 --> 00:30:21.540
您的日常开发工作流程不错

00:30:19.010 --> 00:30:24.180
再次，您知道我们正在引用版本

00:30:21.540 --> 00:30:26.310
 1-哦，还有我们要使用的另一个插件

00:30:24.180 --> 00:30:28.980
带来的是一个已发布的插件

00:30:26.310 --> 00:30:31.350
 John Engelmann撰写的一个影子插件

00:30:28.980 --> 00:30:33.210
如果您熟悉Maven， 

00:30:31.350 --> 00:30:35.400
它实现相同的阴影插件

00:30:33.210 --> 00:30:39.170
它产生一个单一的人工产物

00:30:35.400 --> 00:30:43.080
具有所有传递依赖项

00:30:39.170 --> 00:30:45.690
并打包成一个工件

00:30:43.080 --> 00:30:48.740
您可以拥有一个工件

00:30:45.690 --> 00:30:50.850
运送到我真的很方便

00:30:48.740 --> 00:30:53.040
强烈建议您在以下情况下使用它

00:30:50.850 --> 00:30:58.170
您正在使用任何类型的可执行文件

00:30:53.040 --> 00:31:00.540
基于jar的应用程序，所以让我们

00:30:58.170 --> 00:31:03.290
看看那个世界你好

00:31:00.540 --> 00:31:09.990
看起来像老鼠装

00:31:03.290 --> 00:31:11.550
如果我们比较一下，基本上就是这样

00:31:09.990 --> 00:31:12.750
 groovy版本，您将看到

00:31:11.550 --> 00:31:15.750
我们的共同点是

00:31:12.750 --> 00:31:18.440
处理程序方法以及此get方法和

00:31:15.750 --> 00:31:24.060
我们在这里自由使用lambdas 

00:31:18.440 --> 00:31:26.790
许多公开的Rat Pack API 

00:31:24.060 --> 00:31:29.100
给用户经常采取的行动或

00:31:26.790 --> 00:31:30.960
代码块就是

00:31:29.100 --> 00:31:33.300
也许给了一些东西，也许不是

00:31:30.960 --> 00:31:36.840
给某事和某事发生

00:31:33.300 --> 00:31:40.590
在那里面，所以你在这里注意到像得到

00:31:36.840 --> 00:31:43.150
 X处理程序和处理程序执行一个操作

00:31:40.590 --> 00:31:46.090
这给了一个链

00:31:43.150 --> 00:31:48.990
甚至Rat-pack启动服务器

00:31:46.090 --> 00:31:51.940
构建一个Rat Pack服务器找到它

00:31:48.990 --> 00:31:54.550
一些本地套接字并开始

00:31:51.940 --> 00:31:56.800
接受需要服务器的流量

00:31:54.550 --> 00:31:58.030
 Rat Pack服务规格

00:31:56.800 --> 00:32:00.190
告诉你如何建立一个鼠包

00:31:58.030 --> 00:32:02.140
服务器，所以在这种情况下，我们要告诉它

00:32:00.190 --> 00:32:04.210
嘿，喜欢所有传入的获取请求

00:32:02.140 --> 00:32:07.660
相对于我们想要的根路径

00:32:04.210 --> 00:32:10.270
向它呈现问候世界并展示

00:32:07.660 --> 00:32:11.830
确实做到了这一点

00:32:10.270 --> 00:32:15.130
与常规应用程序相同

00:32:11.830 --> 00:32:17.170
我们将加载您可以看到启动

00:32:15.130 --> 00:32:22.690
我们很快就在港口上听

00:32:17.170 --> 00:32:26.230
五十五十，只是表明，但

00:32:22.690 --> 00:32:28.750
是的，我们有了世界你好

00:32:26.230 --> 00:32:30.550
知道，因为我专注于IntelliJ 

00:32:28.750 --> 00:32:33.970
你知道右键点击这个主

00:32:30.550 --> 00:32:35.770
方法我们不会获得重载

00:32:33.970 --> 00:32:38.290
这里需要调用功能

00:32:35.770 --> 00:32:41.500
扒炉连续运行以获得

00:32:38.290 --> 00:32:44.560
但是，嗯，我这样做的原因

00:32:41.500 --> 00:32:46.000
的地方，因为我有很多课程

00:32:44.560 --> 00:32:49.600
与我想要的静态主要方法

00:32:46.000 --> 00:32:52.600
并排运行，基本上

00:32:49.600 --> 00:32:57.460
简而言之，您好世界老鼠包

00:32:52.600 --> 00:33:00.760
 Java和groovy我想做什么

00:32:57.460 --> 00:33:02.650
这是开始介绍

00:33:00.760 --> 00:33:04.570
作为老鼠的各种组件

00:33:02.650 --> 00:33:08.410
包用户将与

00:33:04.570 --> 00:33:09.940
每天，我们有点过了

00:33:08.410 --> 00:33:12.700
名称和概念很快

00:33:09.940 --> 00:33:15.310
但我只想分享我的笔记

00:33:12.700 --> 00:33:19.660
在这里，在资源

00:33:15.310 --> 00:33:23.100
您可以在24个用户界面中使用

00:33:19.660 --> 00:33:26.230
有我的演讲笔记的链接，所以

00:33:23.100 --> 00:33:28.690
这将在这里，这只是托管

00:33:26.230 --> 00:33:33.250
我在春天下的github仓库

00:33:28.690 --> 00:33:35.110
 Rat Pack 2016存储库，我们

00:33:33.250 --> 00:33:38.500
特别是在“见API”部分

00:33:35.110 --> 00:33:40.690
所以在这里我概述了一些主要的

00:33:38.500 --> 00:33:45.490
您会遇到的组件

00:33:40.690 --> 00:33:48.340
在您的任职期间与大鼠联系

00:33:45.490 --> 00:33:49.660
打包应用程序开发人员，您知道

00:33:48.340 --> 00:33:54.400
我有指向Java文档的链接， 

00:33:49.660 --> 00:33:57.250
一切都应该让我们

00:33:54.400 --> 00:33:59.800
如果我们从顶部开始， 

00:33:57.250 --> 00:34:02.590
称为处理程序的东西

00:33:59.800 --> 00:34:05.470
只是这个界面而已

00:34:02.590 --> 00:34:07.210
无效获得手柄和Praten的作品和

00:34:05.470 --> 00:34:10.000
给出了某种上下文

00:34:07.210 --> 00:34:11.710
上下文是Sam类型的含义

00:34:10.000 --> 00:34:13.899
这是一个单一的抽象方法类型

00:34:11.710 --> 00:34:17.470
表示您可以在其位置使用lambda 

00:34:13.899 --> 00:34:19.720
所以您会看到rat-pack API具有

00:34:17.470 --> 00:34:21.070
这些山姆类型很多

00:34:19.720 --> 00:34:24.610
真的有利于写作

00:34:21.070 --> 00:34:27.100
您可以告诉的简明应用程序

00:34:24.610 --> 00:34:28.780
处理程序一目了然

00:34:27.100 --> 00:34:31.030
也是请求的主要方式

00:34:28.780 --> 00:34:34.840
处理，因此处理程序是实际的

00:34:31.030 --> 00:34:37.120
您知道的一点代码阅读

00:34:34.840 --> 00:34:38.710
从请求中写东西到

00:34:37.120 --> 00:34:42.159
诸如设置cookie或其他任何响应

00:34:38.710 --> 00:34:43.960
并返回赞助商或

00:34:42.159 --> 00:34:45.580
在那时返回响应或

00:34:43.960 --> 00:34:50.500
委托给下一个处理程序

00:34:45.580 --> 00:34:53.710
链子，所以在这个老鼠包中你好

00:34:50.500 --> 00:34:56.740
世界示例处理程序是这个位

00:34:53.710 --> 00:34:58.600
在这里，这是一些lambda 

00:34:56.740 --> 00:35:01.090
表达，所以你知道我们得到了一个

00:34:58.600 --> 00:35:03.820
上下文和上下文具有此渲染

00:35:01.090 --> 00:35:05.200
方法是什么，你就是

00:35:03.820 --> 00:35:08.520
给它一个对象，它将呈现

00:35:05.200 --> 00:35:11.170
在这种情况下返回给用户

00:35:08.520 --> 00:35:13.570
老鼠包里有一种叫做利口酒的东西

00:35:11.170 --> 00:35:15.970
渲染和解析框架

00:35:13.570 --> 00:35:17.410
当您为对象提供支持时

00:35:15.970 --> 00:35:19.240
只需简单地调用render就可以了

00:35:17.410 --> 00:35:22.390
根据您说的方式渲染它

00:35:19.240 --> 00:35:24.460
渲染它，我们对

00:35:22.390 --> 00:35:27.310
护理顺序或显然是因为

00:35:24.460 --> 00:35:30.940
我们在这里打一个字符串，所以让我们

00:35:27.310 --> 00:35:34.000
在我们讨论这个lambda的上下文

00:35:30.940 --> 00:35:36.520
有一个我们作为DTX别名的对象

00:35:34.000 --> 00:35:39.040
这实际上是上下文对象

00:35:36.520 --> 00:35:42.670
上下文对象是

00:35:39.040 --> 00:35:45.100
读取请求和响应对象

00:35:42.670 --> 00:35:47.680
上下文是您如何到达实际

00:35:45.100 --> 00:35:50.500
 HTTP请求和响应对象以及

00:35:47.680 --> 00:35:52.180
只是在这里澄清这些不是

00:35:50.500 --> 00:35:55.690
来自的请求和响应对象

00:35:52.180 --> 00:35:57.490
 servlet API是我们自己的HTTP 

00:35:55.690 --> 00:35:58.960
请求和响应对象，我们仍然

00:35:57.490 --> 00:36:05.100
提供了您想要的一切

00:35:58.960 --> 00:36:05.100
需要标题cookie会话信息

00:36:06.720 --> 00:36:11.940
上下文也是

00:36:09.180 --> 00:36:13.860
处理程序之间的通信以及什么

00:36:11.940 --> 00:36:15.690
这是因为处理程序可以

00:36:13.860 --> 00:36:18.240
委托给更远的处理程序

00:36:15.690 --> 00:36:21.300
下链的地方

00:36:18.240 --> 00:36:25.680
集合实际上是一个链表或

00:36:21.300 --> 00:36:29.610
也许是处理程序图，这是一种方法

00:36:25.680 --> 00:36:31.320
填充这是一种喜欢服用的方式

00:36:29.610 --> 00:36:33.630
信息并将其添加到上下文中

00:36:31.320 --> 00:36:36.840
连锁经营者可以采取行动

00:36:33.630 --> 00:36:39.090
根据该信息上下文

00:36:36.840 --> 00:36:41.370
投诉中包含一个注册表

00:36:39.090 --> 00:36:43.770
应用程序和请求级对象

00:36:41.370 --> 00:36:45.120
所以这些都是

00:36:43.770 --> 00:36:47.730
与执行此操作有关

00:36:45.120 --> 00:36:49.950
请求，然后还提供了简单

00:36:47.730 --> 00:36:52.080
获得老鼠的真正伟大功能

00:36:49.950 --> 00:36:55.350
打包再次解析渲染

00:36:52.080 --> 00:36:56.460
了解HTTP问题和信息

00:36:55.350 --> 00:37:00.750
关于执行

00:36:56.460 --> 00:37:03.960
你目前在，所以我提到

00:37:00.750 --> 00:37:05.340
该联系人是一个注册表很好

00:37:03.960 --> 00:37:09.200
原来注册表实际上也是

00:37:05.340 --> 00:37:09.200
东西和老鼠包应用程序以及

00:37:09.710 --> 00:37:16.650
注册表是这样的，所以在

00:37:14.370 --> 00:37:20.790
大鼠包应用程序我们已经扩展了它

00:37:16.650 --> 00:37:22.650
有点新的东西是这样的

00:37:20.790 --> 00:37:25.680
 servlet规范，我们有一个注册表方法

00:37:22.650 --> 00:37:29.520
当您通过它时，注册表将

00:37:25.680 --> 00:37:32.910
从这个开始每个上下文执行

00:37:29.520 --> 00:37:34.860
注册表作为基础，因此每一个

00:37:32.910 --> 00:37:37.980
您要进入的请求

00:37:34.860 --> 00:37:41.040
有一个我们定义的消息服务

00:37:37.980 --> 00:37:44.430
在这里作为一个单一的方法

00:37:41.040 --> 00:37:46.650
仅有一个字符串的接口，我们

00:37:44.430 --> 00:37:48.150
你知道我们只有我们的实例化

00:37:46.650 --> 00:37:53.070
在这里只返回我的信息

00:37:48.150 --> 00:37:58.080
服务，所以这是一个例子

00:37:53.070 --> 00:38:00.110
注册表企业的例子

00:37:58.080 --> 00:38:02.940
输入处理程序通信是

00:38:00.110 --> 00:38:07.350
在这里演示，所以我已经

00:38:02.940 --> 00:38:10.740
在这里添加了一个全呼，所以这个处理程序

00:38:07.350 --> 00:38:12.090
将针对每个请求执行

00:38:10.740 --> 00:38:14.190
下降的管道，这意味着

00:38:12.090 --> 00:38:17.119
不管是什么样的要求

00:38:14.190 --> 00:38:19.400
不管走哪条路

00:38:17.119 --> 00:38:20.690
你知道像什么HTTP方法

00:38:19.400 --> 00:38:23.210
你给我我想申请

00:38:20.690 --> 00:38:26.599
逻辑，因此您可以将其视为

00:38:23.210 --> 00:38:29.119
类似于我已经完成的servlet过滤器

00:38:26.599 --> 00:38:31.819
听说它以前被称为处理程序

00:38:29.119 --> 00:38:36.859
有点像servlet过滤器，并且

00:38:31.819 --> 00:38:38.480
 servlet组合在一起，但是如您所见

00:38:36.859 --> 00:38:40.700
在这里，我们正在做的是

00:38:38.480 --> 00:38:43.009
委托给下一个上下文

00:38:40.700 --> 00:38:45.440
通过下一个步骤完成的管道

00:38:43.009 --> 00:38:50.930
接下来，我们只添加一个

00:38:45.440 --> 00:38:52.759
注册表与一个即时对象，所以

00:38:50.930 --> 00:38:55.880
最后，当我们达到要求时

00:38:52.759 --> 00:38:58.700
处理我们可以检索这些项目

00:38:55.880 --> 00:39:02.259
我们已经从上下文中注册了

00:38:58.700 --> 00:39:04.700
注册表并添加其他内容

00:39:02.259 --> 00:39:08.660
我们需要从这里开始的计算

00:39:04.700 --> 00:39:11.089
例如，您知道上下文

00:39:08.660 --> 00:39:13.460
得到我们按类型调用，我们本质上

00:39:11.089 --> 00:39:16.279
找回我们添加到的类型

00:39:13.460 --> 00:39:18.230
事先注册表和此消息

00:39:16.279 --> 00:39:20.480
我们在

00:39:18.230 --> 00:39:22.819
 rat-pack服务器的开始

00:39:20.480 --> 00:39:25.369
实例化也被注册在

00:39:22.819 --> 00:39:28.759
上下文并出现，我们可以

00:39:25.369 --> 00:39:30.829
向您发送我们的信息以及

00:39:28.759 --> 00:39:33.009
在这一点上要求

00:39:30.829 --> 00:39:38.390
演示这是什么样子并

00:39:33.009 --> 00:39:41.749
结束我们的应用服务器

00:39:38.390 --> 00:39:44.900
现在运行，如果我们再次去

00:39:41.749 --> 00:39:47.480
针对5050，我们确实确实看到您

00:39:44.900 --> 00:39:51.589
知道我们的实例已注册

00:39:47.480 --> 00:39:53.150
通过所有处理程序，然后我们

00:39:51.589 --> 00:39:56.140
有我们的消息服务消息是

00:39:53.150 --> 00:39:59.900
来自我们定义的此处理程序

00:39:56.140 --> 00:40:03.640
 rat-pack服务器实例化是

00:39:59.900 --> 00:40:05.599
只是有关处理程序的信息， 

00:40:03.640 --> 00:40:12.279
注册表和上下文以及所有这些

00:40:05.599 --> 00:40:15.950
好东西，让我们谈谈

00:40:12.279 --> 00:40:18.859
像现在这样整合

00:40:15.950 --> 00:40:22.130
足够的信息来造成一些损害，以及

00:40:18.859 --> 00:40:23.509
可以这么说，我们将谈论什么

00:40:22.130 --> 00:40:27.170
关于这一点正在整合

00:40:23.509 --> 00:40:29.630
现有的很好整合 spring boot 

00:40:27.170 --> 00:40:31.010
那是与老鼠包一起的

00:40:29.630 --> 00:40:32.870
这一种的两种方法

00:40:31.010 --> 00:40:36.590
是Rat Pack的偏心方法

00:40:32.870 --> 00:40:39.320
您知道使用它会不断发展

00:40:36.590 --> 00:40:42.560
您的应用程序以这种方式以及什么

00:40:39.320 --> 00:40:44.660
你能做的就是你可以束腰

00:40:42.560 --> 00:40:48.590
定义并将其带入折叠

00:40:44.660 --> 00:40:50.540
所以，把它们折叠起来

00:40:48.590 --> 00:40:51.680
特别是将它们添加到此

00:40:50.540 --> 00:40:55.370
在这里注册，以便他们

00:40:51.680 --> 00:40:58.190
如果可以的话，让我们关闭服务器

00:40:55.370 --> 00:41:00.140
我们回到老鼠包配置

00:40:58.190 --> 00:41:03.860
或Gradle配置，您将看到

00:41:00.140 --> 00:41:05.390
我们有一个拉包依赖

00:41:03.860 --> 00:41:07.540
编译Rat Pack依赖项Spring 

00:41:05.390 --> 00:41:10.640
像靴子一样好启动

00:41:07.540 --> 00:41:14.420
用于制鼠包的Gradle插件

00:41:10.640 --> 00:41:17.390
通过此行可用，这里暴露了

00:41:14.420 --> 00:41:20.270
这个老鼠包对象

00:41:17.390 --> 00:41:22.910
调用时的依赖方法

00:41:20.270 --> 00:41:33.960
它与字符串实际上会产生

00:41:22.910 --> 00:41:35.550
相当于这么多

00:41:33.960 --> 00:41:38.550
就像我们如何保持依赖关系

00:41:35.550 --> 00:41:40.950
带有Gradle插件的Spring锁步

00:41:38.550 --> 00:41:45.060
启动同样的机制也

00:41:40.950 --> 00:41:46.410
可在Rat Pack中使用，就像在

00:41:45.060 --> 00:41:47.880
春季食品鼠包有一些

00:41:46.410 --> 00:41:49.580
您带入课堂的模块

00:41:47.880 --> 00:41:53.520
获得其他功能的路径，以及

00:41:49.580 --> 00:41:54.810
所以如果你们刚开始就和你在一起

00:41:53.520 --> 00:41:57.450
知道导入一大堆模块

00:41:54.810 --> 00:41:59.040
以这种方式，这变成了

00:41:57.450 --> 00:42:01.530
像噪音一样，变得很难

00:41:59.040 --> 00:42:05.700
阅读，如果你只是孤立

00:42:01.530 --> 00:42:07.470
更改并执行此操作的部分是

00:42:05.700 --> 00:42:09.119
很好，所以如果您要升级

00:42:07.470 --> 00:42:11.910
说唱包的版本或降级或

00:42:09.119 --> 00:42:14.599
做任何你不会错过的事情

00:42:11.910 --> 00:42:17.310
并具有兼容的二进制文件，所以

00:42:14.599 --> 00:42:19.470
这是机制的坚果，这真的是

00:42:17.310 --> 00:42:22.619
避免冗长的好方法

00:42:19.470 --> 00:42:25.619
并确保所有二进制文件

00:42:22.619 --> 00:42:28.830
彼此兼容，所以如果我们

00:42:25.619 --> 00:42:30.660
看一下以老鼠包为中心的东西

00:42:28.830 --> 00:42:31.440
应用看起来像

00:42:30.660 --> 00:42:33.359
像这样的东西

00:42:31.440 --> 00:42:35.190
所以如果我们回到Acme 

00:42:33.359 --> 00:42:38.040
配置类，作为复习

00:42:35.190 --> 00:42:39.599
我们在这里声明了三种 bean 

00:42:38.040 --> 00:42:43.920
字符串，然后我们有两个服务

00:42:39.599 --> 00:42:46.530
对我们的业务很重要，所以我

00:42:43.920 --> 00:42:49.800
只是想指出这一点

00:42:46.530 --> 00:42:52.230
这个春天融入的时间

00:42:49.800 --> 00:42:55.200
大鼠包，反之亦然

00:42:52.230 --> 00:42:56.970
通过主要通过

00:42:55.200 --> 00:43:00.530
大卫父亲是春天的一部分

00:42:56.970 --> 00:43:03.150
框架团队，这是因为他

00:43:00.530 --> 00:43:05.160
对老鼠包的热情和看到

00:43:03.150 --> 00:43:07.380
我们可以感谢他的潜力

00:43:05.160 --> 00:43:08.869
有这种整合

00:43:07.380 --> 00:43:11.960
今天允许我与您谈谈

00:43:08.869 --> 00:43:15.570
谈论整合春天和

00:43:11.960 --> 00:43:17.550
老鼠打包在一起，所以如果你正在建造

00:43:15.570 --> 00:43:19.589
以鼠王背包为中心的应用程序

00:43:17.550 --> 00:43:23.280
您自己构建或服务器， 

00:43:19.589 --> 00:43:26.790
你知道你定义你的链条和

00:43:23.280 --> 00:43:29.730
您正在建立自己的注册表

00:43:26.790 --> 00:43:33.240
在那个老鼠包春天有货

00:43:29.730 --> 00:43:37.619
春季课及以后的展位库

00:43:33.240 --> 00:43:40.730
它是一个静态方法弹簧，当

00:43:37.619 --> 00:43:40.730
你给它一个配置类

00:43:41.880 --> 00:43:49.570
我们会照顾您的

00:43:46.110 --> 00:43:51.900
 Spring应用程序上下文并添加

00:43:49.570 --> 00:43:54.640
将所有这些bean放入注册表

00:43:51.900 --> 00:43:55.990
我们可以通过运行来证明这一点

00:43:54.640 --> 00:43:59.620
这个例子你可以看到这个消息

00:43:55.990 --> 00:44:03.160
服务，我们没有消息服务

00:43:59.620 --> 00:44:04.810
就像定义在任何地方

00:44:03.160 --> 00:44:07.020
消息服务即将通过

00:44:04.810 --> 00:44:09.280
这个项目级别的依赖

00:44:07.020 --> 00:44:13.450
我们在那个项目上的工件

00:44:09.280 --> 00:44:14.800
创建，以便您可以在此处看到我们

00:44:13.450 --> 00:44:16.990
有我们的消息服务，我们

00:44:14.800 --> 00:44:18.880
期望它返回一个重要的

00:44:16.990 --> 00:44:22.050
信息，但是当我们移动此

00:44:18.880 --> 00:44:26.440
应用程序，然后运行它，我们将看到

00:44:22.050 --> 00:44:28.900
 spring boot 获取检测到服务器

00:44:26.440 --> 00:44:32.680
快速启动，它会创建您的

00:44:28.900 --> 00:44:34.030
生物将它们保存在注册表中，如果

00:44:32.680 --> 00:44:37.690
我们做出一个悬崖我们提出一个要求

00:44:34.030 --> 00:44:41.430
面对50/50，你走了，我们得到了

00:44:37.690 --> 00:44:44.020
重要信息，所以这是非常巨大的

00:44:41.430 --> 00:44:47.650
你会看到你知道你是否

00:44:44.020 --> 00:44:49.630
投资你就知道你的技术思维份额

00:44:47.650 --> 00:44:52.210
和类似的东西到春天，你

00:44:49.630 --> 00:44:53.770
有一些模块化的分离

00:44:52.210 --> 00:44:56.110
像分层架构这样的问题

00:44:53.770 --> 00:44:58.780
设计，您想利用所有

00:44:56.110 --> 00:45:02.260
你内在的那些生物

00:44:58.780 --> 00:45:04.150
您的公司，您可以将它们引入

00:45:02.260 --> 00:45:07.240
如果您使用的是

00:45:04.150 --> 00:45:10.090
基于xml的配置有一种方法

00:45:07.240 --> 00:45:12.220
把它也带进去我鼓励你

00:45:10.090 --> 00:45:15.370
去看一下春天的文档

00:45:12.220 --> 00:45:17.290
集成XML和Java 

00:45:15.370 --> 00:45:19.000
基于弹簧的配置，但它

00:45:17.290 --> 00:45:23.230
可以完成，我正在生产中

00:45:19.000 --> 00:45:26.100
今天结合了Java 

00:45:23.230 --> 00:45:29.440
与他们的配置，你知道春天

00:45:26.100 --> 00:45:34.030
应用程序上下文XML文件

00:45:29.440 --> 00:45:36.130
可能，并且这样做，所以这就是

00:45:34.030 --> 00:45:38.920
它看起来像是从后面来的

00:45:36.130 --> 00:45:40.570
角度，如果我们看看它是什么

00:45:38.920 --> 00:45:44.100
看起来像是来自 spring boot 

00:45:40.570 --> 00:45:47.580
视角是让我们刷新一下

00:45:44.100 --> 00:45:50.320
摇篮的样子

00:45:47.580 --> 00:45:52.300
尊重Gradle配置，这样您就可以

00:45:50.320 --> 00:45:53.849
看到一样，你知道依赖

00:45:52.300 --> 00:45:57.420
组态

00:45:53.849 --> 00:45:58.739
文物，就像我提到的

00:45:57.420 --> 00:46:00.959
早些时候，因为我们实际上不是

00:45:58.739 --> 00:46:03.180
将鼠尾包插头插入此

00:46:00.959 --> 00:46:06.329
应用程序，我们只是将其引入

00:46:03.180 --> 00:46:08.729
手没问题，我们仍然

00:46:06.329 --> 00:46:12.269
使用弹簧展台启动器

00:46:08.729 --> 00:46:14.430
网络现在这意味着我们

00:46:12.269 --> 00:46:17.099
实际上将要启动Tomcat 

00:46:14.430 --> 00:46:19.199
和Rat Pack并排放置，这样我们就可以

00:46:17.099 --> 00:46:21.359
 Tomcat将嵌入式Tomcat绑定到

00:46:19.199 --> 00:46:25.769
端口8080，同时通过支持进行大鼠打包

00:46:21.359 --> 00:46:28.199
 50/50，看起来就像

00:46:25.769 --> 00:46:31.109
因此，如果您还记得回到我们的

00:46:28.199 --> 00:46:33.089
 Rat Pack HelloWorld应用程序我们做什么

00:46:31.109 --> 00:46:36.239
我们要做的是向处理人员提供

00:46:33.089 --> 00:46:38.849
连锁的作用到底是什么

00:46:36.239 --> 00:46:40.650
这个lambda就在这里，所以我们

00:46:38.849 --> 00:46:43.609
说我们有一条链，我们描述了我们如何

00:46:40.650 --> 00:46:49.170
想要回应HTTP要求

00:46:43.609 --> 00:46:51.269
 spring boot 和时尚

00:46:49.170 --> 00:46:52.799
 spring boot 的风格，您需要做的所有事情

00:46:51.269 --> 00:46:55.799
你知道在这里应用注释吗

00:46:52.799 --> 00:47:00.479
应用您的老鼠包启用老鼠包

00:46:55.799 --> 00:47:02.369
注释并仅定义一个组件

00:47:00.479 --> 00:47:05.880
在这种情况下，这是

00:47:02.369 --> 00:47:08.009
链，这个链只是

00:47:05.880 --> 00:47:12.809
您关心正确书写的逻辑

00:47:08.009 --> 00:47:16.199
所以这就是如果我们运行这个

00:47:12.809 --> 00:47:18.569
代码示例在这里，我们将看到它确实

00:47:16.199 --> 00:47:21.029
确实启动，您应该注意

00:47:18.569 --> 00:47:23.910
由于这个注释弹簧和

00:47:21.029 --> 00:47:27.239
鼠包合作打造鼠包

00:47:23.910 --> 00:47:29.819
具有合理默认值的服务器，它将

00:47:27.239 --> 00:47:33.209
被注入服务器将被注入

00:47:29.819 --> 00:47:35.339
这个行动链，它将是

00:47:33.209 --> 00:47:39.299
能够在端口5050上满足此请求

00:47:35.339 --> 00:47:42.209
所以我们从春天就收到了这个消息

00:47:39.299 --> 00:47:44.309
开机，让我们来看看那是什么

00:47:42.209 --> 00:47:46.650
我们期望，的确如此，我们确实得到了

00:47:44.309 --> 00:47:48.539
从 spring boot 向你打招呼只是为了展示

00:47:46.650 --> 00:47:50.489
 Tomcat也正在运行，我们可以发出

00:47:48.539 --> 00:47:52.529
针对端口8080的请求，这是

00:47:50.489 --> 00:47:53.910
正是我们所期望的

00:47:52.529 --> 00:47:57.089
定义任何类型的控制器

00:47:53.910 --> 00:48:00.989
绑定到此处的路由路径，所以404是

00:47:57.089 --> 00:48:04.309
正是我们所期望的，这是善良的

00:48:00.989 --> 00:48:07.380
以 spring boot 为中心的方法

00:48:04.309 --> 00:48:07.650
而不是你知道写和定义

00:48:07.380 --> 00:48:09.540
你的

00:48:07.650 --> 00:48:13.950
服务器并控制什么

00:48:09.540 --> 00:48:15.960
你说你知道我喜欢你知道如何

00:48:13.950 --> 00:48:18.180
给我这样的春天

00:48:15.960 --> 00:48:19.710
只想写我的组件

00:48:18.180 --> 00:48:23.580
关心哪一块是

00:48:19.710 --> 00:48:25.260
处理交通，这就是我的全部

00:48:23.580 --> 00:48:27.300
想要提供和春季食物和老鼠

00:48:25.260 --> 00:48:32.640
 Pack将合作为您提供

00:48:27.300 --> 00:48:33.660
现在您可能遇到的某人的能力可能是

00:48:32.640 --> 00:48:35.640
问像你为什么要使用

00:48:33.660 --> 00:48:36.750
春季展位，像

00:48:35.640 --> 00:48:41.640
嵌入式tomcat和Rat Pack 

00:48:36.750 --> 00:48:43.260
肩并肩好，我的意思是那里

00:48:41.640 --> 00:48:46.710
我可能是很多原因的

00:48:43.260 --> 00:48:51.030
就像音量上的差异一样

00:48:46.710 --> 00:48:53.340
就像如果有，就知道是否需要

00:48:51.030 --> 00:48:55.380
能够处理很多请求

00:48:53.340 --> 00:48:58.470
对于您的一个特定组成部分

00:48:55.380 --> 00:48:59.880
应用程序，也许你的另一面

00:48:58.470 --> 00:49:02.490
该应用程序正在做类似的事情

00:48:59.880 --> 00:49:05.040
他们就像一个粗鲁的管理员之类的

00:49:02.490 --> 00:49:07.080
这样肯定是一个用例

00:49:05.040 --> 00:49:10.350
您想在哪里使用，您知道Rat 

00:49:07.080 --> 00:49:16.440
 Pack和Tomcat并排放置，但这是

00:49:10.350 --> 00:49:18.780
一个例子，你怎么样

00:49:16.440 --> 00:49:20.600
和Tomcat并排运行，让我们

00:49:18.780 --> 00:49:23.010
从春季食物成分开始

00:49:20.600 --> 00:49:24.570
你真的通过

00:49:23.010 --> 00:49:28.380
使用控制器或定型

00:49:24.570 --> 00:49:32.490
注释，我们将两条路径绑定在一起

00:49:28.380 --> 00:49:34.260
是到路线一是拉德打包

00:49:32.490 --> 00:49:37.640
路线随弹簧组返回

00:49:34.260 --> 00:49:39.960
老鼠包会创建一个休息模板， 

00:49:37.640 --> 00:49:42.300
向老鼠包发出请求

00:49:39.960 --> 00:49:44.540
正在运行的服务器并返回

00:49:42.300 --> 00:49:46.980
映射为JSON和

00:49:44.540 --> 00:49:50.580
我们定义的老鼠背包链

00:49:46.980 --> 00:49:53.040
我们添加了两个新的处理程序，其中一个用于

00:49:50.580 --> 00:49:56.100
端点获取JSON，另一个获取

00:49:53.040 --> 00:49:58.620
忘记了启动，所以JSON只是

00:49:56.100 --> 00:50:00.180
创建一个具有日期键的地图，然后

00:49:58.620 --> 00:50:03.530
现在的价值只是

00:50:00.180 --> 00:50:05.820
立即表示为字符串，并且

00:50:03.530 --> 00:50:08.970
再次，我们正在使用，我们正在利用

00:50:05.820 --> 00:50:11.550
 Rat Pack中的渲染框架

00:50:08.970 --> 00:50:13.380
而且我们对JSON具有一流的支持

00:50:11.550 --> 00:50:15.540
当然，这意味着我们可以

00:50:13.380 --> 00:50:19.010
此地图并将其序列化为JSON 

00:50:15.540 --> 00:50:21.030
设置适当的标题和

00:50:19.010 --> 00:50:21.319
您知道诸如内容类型和

00:50:21.030 --> 00:50:25.309
东西

00:50:21.319 --> 00:50:27.890
并将其发送回用户端

00:50:25.309 --> 00:50:30.680
在这里称为启动将抓住

00:50:27.890 --> 00:50:32.469
 HTTP客户端脱离上下文注册表

00:50:30.680 --> 00:50:34.789
从说唱后备服务器提供

00:50:32.469 --> 00:50:36.949
这是一个非阻塞异步

00:50:34.789 --> 00:50:41.059
客户，所以当您发出请求时

00:50:36.949 --> 00:50:43.579
当您的发行人反对时

00:50:41.059 --> 00:50:46.190
美国 spring boot 嵌入式tomcat 

00:50:43.579 --> 00:50:49.729
容器实际上必须喜欢

00:50:46.190 --> 00:50:53.630
转换这些异步结果

00:50:49.729 --> 00:50:56.089
这些异步的一些类型，因为它们

00:50:53.630 --> 00:50:58.219
回来，所以我们要去

00:50:56.089 --> 00:51:00.289
身体，一旦我们得到身体，我们提取

00:50:58.219 --> 00:51:01.880
文字说我们收到了这个

00:51:00.289 --> 00:51:04.579
从春季展位，然后呈现此

00:51:01.880 --> 00:51:06.529
串回给客户，所以只是

00:51:04.579 --> 00:51:11.140
快速展示这些请求

00:51:06.529 --> 00:51:13.999
飞行，我们将启动服务器， 

00:51:11.140 --> 00:51:16.459
我们将经历，使我们

00:51:13.999 --> 00:51:20.660
现在请求，让我们先来看一下

00:51:16.459 --> 00:51:22.190
在俄克拉荷马州80号春季展台上

00:51:20.660 --> 00:51:24.170
是 spring boot 吗，这是

00:51:22.190 --> 00:51:27.109
这里的应用程序让我们看一下

00:51:24.170 --> 00:51:28.819
屋顶对老鼠包的要求现在如此

00:51:27.109 --> 00:51:31.519
这就是我们所期望的

00:51:28.819 --> 00:51:35.119
包装 spring boot ，我们现在要

00:51:31.519 --> 00:51:36.739
看看那只老鼠的终点

00:51:35.119 --> 00:51:39.289
包暴露其余模板

00:51:36.739 --> 00:51:41.900
消费这里只是JSON所以

00:51:39.289 --> 00:51:43.309
这将按预期返回JSON并返回

00:51:41.900 --> 00:51:46.059
证明我们正在设置所有

00:51:43.309 --> 00:51:49.459
标头正确，您可以看到

00:51:46.059 --> 00:51:52.989
内容类型是应用程序JSON，它是

00:51:49.459 --> 00:51:55.999
是您的期望，所以现在如果我们

00:51:52.989 --> 00:51:58.999
对春季食品提出要求

00:51:55.999 --> 00:52:03.739
发出其余模板调用

00:51:58.999 --> 00:52:07.339
 rat pack，我们将看到我们得到了JSON 

00:52:03.739 --> 00:52:10.309
反对，这是伟大的，反之

00:52:07.339 --> 00:52:15.039
反之，我们也可以利用老鼠

00:52:10.309 --> 00:52:15.039
打包呼叫的端点

00:52:15.650 --> 00:52:19.760
嵌入式servlet容器

00:52:17.420 --> 00:52:21.110
监听8080端口的扁平路由， 

00:52:19.760 --> 00:52:26.810
这就是我们得到的

00:52:21.110 --> 00:52:31.490
这就是我们所期望的，所以这是

00:52:26.810 --> 00:52:33.140
几乎只是如何开始的

00:52:31.490 --> 00:52:35.360
你可以很明显地整合这两个

00:52:33.140 --> 00:52:38.510
因为您拥有所有Spring Framework 

00:52:35.360 --> 00:52:40.940
所以您可以使用系统了

00:52:38.510 --> 00:52:42.320
很容易弄清楚是什么样的

00:52:40.940 --> 00:52:45.140
的组件可以为您工作

00:52:42.320 --> 00:52:49.280
在这一点上，我会使用特定的用例

00:52:45.140 --> 00:52:53.600
想分享我的资源清单

00:52:49.280 --> 00:52:55.730
我建议您继续跟进

00:52:53.600 --> 00:52:59.090
你对这种东西感兴趣

00:52:55.730 --> 00:53:01.970
显然，弹簧初始值设定项是

00:52:59.090 --> 00:53:04.100
绝对要去，我有你的链接

00:53:01.970 --> 00:53:06.860
知道说唱回首页吗

00:53:04.100 --> 00:53:09.920
该组织的github存储库

00:53:06.860 --> 00:53:13.160
我们从哪里知道代码示例

00:53:09.920 --> 00:53:15.550
我们在实验室发言的会议

00:53:13.160 --> 00:53:18.200
我们已经做了手工讲习班

00:53:15.550 --> 00:53:21.670
这样的事情，我们没有

00:53:18.200 --> 00:53:24.560
当前或任何种类的Maven示例

00:53:21.670 --> 00:53:26.240
与Maven审核建立

00:53:24.560 --> 00:53:28.220
琐碎的事，只是没有人这样做

00:53:26.240 --> 00:53:30.770
如果有人想发出拉

00:53:28.220 --> 00:53:33.560
建造快速内森的要求

00:53:30.770 --> 00:53:36.440
当然可以肯定，我们有一个

00:53:33.560 --> 00:53:41.840
用户指南我想指出我们的

00:53:36.440 --> 00:53:43.460
频道也很闲，所以我们的社区

00:53:41.840 --> 00:53:45.590
虽然很小，但正在成长， 

00:53:43.460 --> 00:53:48.230
非常活跃，所以如果您只是导航

00:53:45.590 --> 00:53:51.020
在这里，您可以注册并开始

00:53:48.230 --> 00:53:53.840
问问题，我们有一个非常好的

00:53:51.020 --> 00:53:57.110
响应时间也与此有关

00:53:53.840 --> 00:53:58.430
也有专门的老鼠论坛

00:53:57.110 --> 00:54:00.830
打包用户，他们会来问

00:53:58.430 --> 00:54:02.720
问题也在这里，但我确实

00:54:00.830 --> 00:54:05.210
建议转到选择频道

00:54:02.720 --> 00:54:07.070
自从您发布论坛以来，您将

00:54:05.210 --> 00:54:09.440
也从其他人那里受益

00:54:07.070 --> 00:54:10.970
谁可能遇到了你

00:54:09.440 --> 00:54:14.480
试图完成或有答案

00:54:10.970 --> 00:54:16.760
您可能遇到的问题，最后但

00:54:14.480 --> 00:54:18.440
至少是我的丹·伍德的同事

00:54:16.760 --> 00:54:21.590
也是老鼠的核心成员

00:54:18.440 --> 00:54:24.170
打包团队已完成写作

00:54:21.590 --> 00:54:28.200
学习老鼠包，以便做好准备

00:54:24.170 --> 00:54:31.020
去生产了

00:54:28.200 --> 00:54:33.089
它定于五月上市，所以我

00:54:31.020 --> 00:54:34.890
强烈建议您知道自己是否

00:54:33.089 --> 00:54:36.750
对Rat Pack和种类感兴趣

00:54:34.890 --> 00:54:38.910
有兴趣看到你知道是什么

00:54:36.750 --> 00:54:42.900
最佳实践有哪些用例

00:54:38.910 --> 00:54:44.790
我是Dan Woods，有很多很好的例子

00:54:42.900 --> 00:54:46.980
在这里，非常合乎逻辑和清晰

00:54:44.790 --> 00:54:49.470
如何使用Rat Pack和

00:54:46.980 --> 00:54:51.900
我所有的老鼠包都具有很高的功能

00:54:49.470 --> 00:54:54.540
如果您愿意的话，推荐它

00:54:51.900 --> 00:54:58.819
对我喜欢的这类东西感兴趣

00:54:54.540 --> 00:55:04.020
读了整本书，真的很棒

00:54:58.819 --> 00:55:07.710
所以最后但并非最不重要的一点是，我知道我说过

00:55:04.020 --> 00:55:09.540
以前，但实际上，我确实有

00:55:07.710 --> 00:55:11.849
我所有的演示文稿都可用

00:55:09.540 --> 00:55:15.599
在我的github仓库中，在spring rat下

00:55:11.849 --> 00:55:17.940
再次打包2016和所有代码示例

00:55:15.599 --> 00:55:22.410
你今天看到的也是

00:55:17.940 --> 00:55:23.970
可用，这里有我和我的笔记

00:55:22.410 --> 00:55:28.049
也要经历我所经历的一切

00:55:23.970 --> 00:55:31.730
今天和你讨论过，谢谢

00:55:28.049 --> 00:55:31.730
好的，我现在就去提问

00:55:33.950 --> 00:55:40.440
非常感谢丹尼，好吧

00:55:36.630 --> 00:55:42.710
第一个是丹尼尔的，我不是

00:55:40.440 --> 00:55:45.960
将尝试发音这个姓

00:55:42.710 --> 00:55:48.589
所以Daniel问你知道，所以Tomcat是

00:55:45.960 --> 00:55:50.790
您的默认运行权限，例如JBoss 

00:55:48.589 --> 00:55:52.710
但是你知道即使

00:55:50.790 --> 00:55:54.329
需要重新配置我已经

00:55:52.710 --> 00:55:57.240
回答，那么是的，您可以运行

00:55:54.329 --> 00:55:59.250
在欠费，但考虑到需要

00:55:57.240 --> 00:56:01.559
重新配置不会那种依赖

00:55:59.250 --> 00:56:04.020
他们是否做得像嵌入式

00:56:01.559 --> 00:56:06.660
 jar文件或war文件

00:56:04.020 --> 00:56:09.960
部署，或者只是您拥有

00:56:06.660 --> 00:56:12.510
当你知道的时候重新编译你知道的

00:56:09.960 --> 00:56:14.250
是的，就像你是的，我的意思是

00:56:12.510 --> 00:56:15.990
如果您使用的是嵌入式Servlet 

00:56:14.250 --> 00:56:18.660
我会说你很漂亮

00:56:15.990 --> 00:56:20.190
避免换出

00:56:18.660 --> 00:56:24.030
您所使用的实际服务器容器

00:56:20.190 --> 00:56:28.349
使用是Tomcat还是JBoss还是

00:56:24.030 --> 00:56:31.619
跳船或你知道吗，但是如果

00:56:28.349 --> 00:56:34.730
您正在为

00:56:31.619 --> 00:56:37.530
外部独立服务器容器

00:56:34.730 --> 00:56:42.300
然后我们实际上在公司做

00:56:37.530 --> 00:56:45.900
你实际上需要的课程

00:56:42.300 --> 00:56:47.280
通知春季不丹如何互动和

00:56:45.900 --> 00:56:50.940
配置Tomcat应该如何运行

00:56:47.280 --> 00:56:53.580
所以这些是特定于servlet的

00:56:50.940 --> 00:56:56.820
您选择的容器，因此您可能

00:56:53.580 --> 00:57:02.340
将不得不重新编译并更改

00:56:56.820 --> 00:57:03.660
在那里使用的课程是很酷的

00:57:02.340 --> 00:57:06.360
对丹尼尔希望那地址

00:57:03.660 --> 00:57:08.940
你的问题嗯，只有一个

00:57:06.360 --> 00:57:12.350
这次实际上是问问题，所以乡亲们

00:57:08.940 --> 00:57:13.680
如果你还有其他人，那是片刻

00:57:12.350 --> 00:57:17.520
瑞安

00:57:13.680 --> 00:57:23.340
 IO高科技美国公司的沃恩问

00:57:17.520 --> 00:57:24.600
您可以在B动作王中定义多个

00:57:23.340 --> 00:57:28.830
等一下哦，对不起

00:57:24.600 --> 00:57:30.720
角色都变得很时髦

00:57:28.830 --> 00:57:32.670
好吧，我没有扩展，对吧，让我

00:57:30.720 --> 00:57:36.180
重复我的道歉，所以瑞安只是

00:57:32.670 --> 00:57:41.490
要求你找到多个存在的行动

00:57:36.180 --> 00:57:47.070
像NAT这样的链被注解

00:57:41.490 --> 00:57:49.020
然后是动作链，嘿，瑞安

00:57:47.070 --> 00:57:51.119
其实是一个很好的问题

00:57:49.020 --> 00:57:52.380
我没有我不知道为什么我没有

00:57:51.119 --> 00:57:54.570
想到那顶我的头你

00:57:52.380 --> 00:57:56.400
当然可以定义多个光束

00:57:54.570 --> 00:57:58.470
实际春天的条件

00:57:56.400 --> 00:58:00.810
与Rat Pack集成将

00:57:58.470 --> 00:58:04.530
把它拉进去我不确定如何

00:58:00.810 --> 00:58:06.900
发挥出来，但就目前而言

00:58:04.530 --> 00:58:10.380
当然可以定义它们

00:58:06.900 --> 00:58:13.170
诸如此类的影响如何

00:58:10.380 --> 00:58:15.060
行动实际上得到了我的声音

00:58:13.170 --> 00:58:19.619
怕我必须去研究一下

00:58:15.060 --> 00:58:21.869
得到了约翰叔叔，也许那是

00:58:19.619 --> 00:58:23.460
是的，也许很酷

00:58:21.869 --> 00:58:27.450
您也可以选择

00:58:23.460 --> 00:58:29.550
在Twitter上，我相信您拥有了自己的

00:58:27.450 --> 00:58:32.040
 Twitter处理就是您的开始

00:58:29.550 --> 00:58:34.980
演示文稿，所以，那是

00:58:32.040 --> 00:58:38.940
也许你可以拿起瑞安

00:58:34.980 --> 00:58:41.850
和他一起在Twitter的Daniel上

00:58:38.940 --> 00:58:43.740
机架后的纳森森问你知道

00:58:41.850 --> 00:58:47.090
他正在考虑使用机架式鼠尾包

00:58:43.740 --> 00:58:48.960
与春天的云，它想知道如何

00:58:47.090 --> 00:58:51.750
支持诸如服务之类的东西

00:58:48.960 --> 00:58:54.930
在尤里卡类型的东西中注册

00:58:51.750 --> 00:58:56.439
春季云将向工作UM注册

00:58:54.930 --> 00:58:59.019
 Tomcat的端口

00:58:56.439 --> 00:59:01.269
但是使用该服务的客户会

00:58:59.019 --> 00:59:04.619
想要仍然想要使用

00:59:01.269 --> 00:59:07.689
 neti端口正确，那将如何工作

00:59:04.619 --> 00:59:09.279
确定我必须像我一样承认

00:59:07.689 --> 00:59:13.539
与春季云互动非常

00:59:09.279 --> 00:59:14.469
有限，所以我没有

00:59:13.539 --> 00:59:16.469
一个明确的答案

00:59:14.469 --> 00:59:20.140
使用我刚刚展示的内容

00:59:16.469 --> 00:59:22.209
你当然可以有 spring boot 或

00:59:20.140 --> 00:59:25.059
嵌入式Tomcat服务器（如果您是

00:59:22.209 --> 00:59:28.269
使用它将所有请求转发给

00:59:25.059 --> 00:59:29.829
基本的Rat Pack服务器，我的意思是

00:59:28.269 --> 00:59:30.249
您可能不想这样做，但是它将

00:59:29.829 --> 00:59:32.079
工作

00:59:30.249 --> 00:59:33.939
对于用例，另一件事

00:59:32.079 --> 00:59:36.160
是我可能会想

00:59:33.939 --> 00:59:38.289
您可以配置该端口

00:59:36.160 --> 00:59:41.559
实际上通过一个属性文件

00:59:38.289 --> 00:59:44.199
或通过某种形式的价值

00:59:41.559 --> 00:59:46.269
您通过注释，但我

00:59:44.199 --> 00:59:49.199
以为我会去

00:59:46.269 --> 00:59:52.329
堆栈溢出，让我们为Google准备一个

00:59:49.199 --> 00:59:54.509
是的，我知道我希望我有更多

00:59:52.329 --> 00:59:57.160
我想记住的洞察力

00:59:54.509 --> 00:59:59.549
我在Eureka控制台中看到的内容以及

00:59:57.160 --> 01:00:04.209
他们是否通过

00:59:59.549 --> 01:00:09.849
端口号ug中的那些服务

01:00:04.209 --> 01:00:11.949
服务注册，嗯，哦，那是一个

01:00:09.849 --> 01:00:14.529
很好，对不起，丹尼尔

01:00:11.949 --> 01:00:18.309
也许我们可以，也许堆栈溢出

01:00:14.529 --> 01:00:20.559
是个好地方，或者如果您想

01:00:18.309 --> 01:00:22.959
解决在春季云开放时

01:00:20.559 --> 01:00:25.569
源句柄从源头弹出

01:00:22.959 --> 01:00:27.219
我会坚持下去让我继续

01:00:25.569 --> 01:00:29.589
只需将其弹出到控制台中即可

01:00:27.219 --> 01:00:42.189
你不必记住写

01:00:29.589 --> 01:00:44.439
放下手柄好吧，好吧

01:00:42.189 --> 01:00:46.209
让我们在那上面踢一下，我需要我尝试

01:00:44.439 --> 01:00:48.549
发推文，我看看其他人

01:00:46.209 --> 01:00:53.429
春天的云工程师也许可以来

01:00:48.549 --> 01:00:55.929
从那里开始shalash keaney问呃

01:00:53.429 --> 01:00:59.309
丹尼爵士，您有什么建议

01:00:55.929 --> 01:01:02.549
以 spring boot 为中心或以Rat Pack为中心

01:00:59.309 --> 01:01:05.319
有一个问题很多，但是不，嘿

01:01:02.549 --> 01:01:08.009
是的，那是很重的

01:01:05.319 --> 01:01:08.009
在那里提问

01:01:08.060 --> 01:01:11.780
我其实你真的知道

01:01:10.070 --> 01:01:16.160
取决于你来自哪里

01:01:11.780 --> 01:01:18.440
对，所以我会说这下降了

01:01:16.160 --> 01:01:21.200
到您的用例，所以如果您是春天

01:01:18.440 --> 01:01:24.200
我会说面向JBM的商店

01:01:21.200 --> 01:01:27.080
占大多数

01:01:24.200 --> 01:01:30.650
基于Java的商店最有可能

01:01:27.080 --> 01:01:32.900
您很可能已经拥有

01:01:30.650 --> 01:01:35.600
您的Spring bean 配置和

01:01:32.900 --> 01:01:38.690
包装一些不错的罐子吧

01:01:35.600 --> 01:01:40.670
如果是这样，并且您的团队很开放

01:01:38.690 --> 01:01:42.590
尝试和玩耍

01:01:40.670 --> 01:01:46.040
你知道建立实际的老鼠包

01:01:42.590 --> 01:01:48.110
服务器自己，我建议去

01:01:46.040 --> 01:01:51.800
向下拉鼠群，并在春季拉动

01:01:48.110 --> 01:01:53.869
你是一家商店的 spring boot ，你

01:01:51.800 --> 01:01:55.460
也许想玩一个

01:01:53.869 --> 01:01:57.470
 Packer尚未对此作出承诺，但

01:01:55.460 --> 01:01:59.750
你想看看是否喜欢它的外观

01:01:57.470 --> 01:02:03.010
和感觉，我绝对推荐

01:01:59.750 --> 01:02:05.900
做以 spring boot 为中心的方法

01:02:03.010 --> 01:02:07.400
你知道这也像场景

01:02:05.900 --> 01:02:09.740
你已经有一个春天的好地方

01:02:07.400 --> 01:02:11.690
应用程序，但您找到了一个用例

01:02:09.740 --> 01:02:17.210
处理你知道的大量

01:02:11.690 --> 01:02:18.380
入站卷可能对于某些

01:02:17.210 --> 01:02:22.040
您不想切换到的原因

01:02:18.380 --> 01:02:23.060
像nginx或

01:02:22.040 --> 01:02:26.440
在它前面的东西

01:02:23.060 --> 01:02:29.300
可以为您处理

01:02:26.440 --> 01:02:31.640
是的，这取决于您的

01:02:29.300 --> 01:02:34.730
偏好您的冒险程度

01:02:31.640 --> 01:02:36.800
感觉以及您公司的状况

01:02:34.730 --> 01:02:37.790
就喜欢什么而言

01:02:36.800 --> 01:02:39.530
你的文物看起来像你

01:02:37.790 --> 01:02:43.730
生产，你是春季食品

01:02:39.530 --> 01:02:45.650
是的，我认为那是一个漂亮的

01:02:43.730 --> 01:02:49.190
平衡的反应，我的意思是因为那是

01:02:45.650 --> 01:02:51.140
这是一个非常开放的问题，你

01:02:49.190 --> 01:02:53.630
知道是的，你倾向于得到像

01:02:51.140 --> 01:03:00.200
这取决于您何时要求

01:02:53.630 --> 01:03:05.330
烫烫站，呃，再来，但以理

01:03:00.200 --> 01:03:07.040
纳森森（Nathanson）提出了问题

01:03:05.330 --> 01:03:09.200
一秒钟前的春天云正在跟随

01:03:07.040 --> 01:03:10.670
并说嘿是Rat Pack 

01:03:09.200 --> 01:03:12.350
考虑增加对

01:03:10.670 --> 01:03:16.490
分布式跟踪您知道诸如

01:03:12.350 --> 01:03:20.390
捡起之后的流浪剑

01:03:16.490 --> 01:03:22.279
春天的云侦探呃提供这个，但

01:03:20.390 --> 01:03:24.260
你不知道我们不支持

01:03:22.279 --> 01:03:28.819
 Rat Pack进出的种类

01:03:24.260 --> 01:03:30.349
是的，实际上

01:03:28.819 --> 01:03:33.700
好问题，我们确实有一张公开票

01:03:30.349 --> 01:03:37.279
集成分布式跟踪I 

01:03:33.700 --> 01:03:40.339
想想我们有一个问题

01:03:37.279 --> 01:03:42.410
也许看着Zipkin并拉

01:03:40.339 --> 01:03:45.980
进入并获得工作，但嗯

01:03:42.410 --> 01:03:48.440
我的意思是如果您愿意实施

01:03:45.980 --> 01:03:49.880
并添加该功能

01:03:48.440 --> 01:03:51.529
对Rat Pack就像我们会很高兴

01:03:49.880 --> 01:03:53.990
有我认为那是某事

01:03:51.529 --> 01:03:55.880
我们需要我认为

01:03:53.990 --> 01:03:59.809
关于我们的github问题的一些讨论

01:03:55.880 --> 01:04:04.400
追踪器，现在是的，我们很酷

01:03:59.809 --> 01:04:05.720
确实希望在另一个

01:04:04.400 --> 01:04:08.690
顺便评论一下Spring Cloud

01:04:05.720 --> 01:04:11.299
 Daniels Spring Cloud问题中的内容

01:04:08.690 --> 01:04:12.500
他只是在评论是的，你可以吗

01:04:11.299 --> 01:04:14.599
知道有需要更改的配置

01:04:12.500 --> 01:04:16.369
港口，然后进行健康检查， 

01:04:14.599 --> 01:04:18.260
执行器提供的点不是吗

01:04:16.369 --> 01:04:20.470
找到了所有的东西当然

01:04:18.260 --> 01:04:22.400
是的，因为这一切都会得到

01:04:20.470 --> 01:04:25.730
更好，因为那很漂亮

01:04:22.400 --> 01:04:28.400
重要对对对对

01:04:25.730 --> 01:04:30.140
不紧张，它正在注册

01:04:28.400 --> 01:04:31.400
尤里卡，对，就像你

01:04:30.140 --> 01:04:33.559
你在写一个越来越

01:04:31.400 --> 01:04:37.730
在您知道的系统中注册

01:04:33.559 --> 01:04:39.109
您现在知道的执行器螺栓端口

01:04:37.730 --> 01:04:41.089
你可以以某种方式注册那些

01:04:39.109 --> 01:04:43.400
对此的服务可能很奇怪，但嗯

01:04:41.089 --> 01:04:45.559
是的，也许丹尼尔也许会尝试

01:04:43.400 --> 01:04:49.940
Spring Cloud开源的一个句柄

01:04:45.559 --> 01:04:51.440
对于那个，希望你知道

01:04:49.940 --> 01:04:55.180
也许我们甚至可以帮助您确定

01:04:51.440 --> 01:04:58.089
那还是乔希·长星巴克的男人

01:04:55.180 --> 01:05:01.640
不，他对我有一些经验

01:04:58.089 --> 01:05:03.799
知道五秒钟我不知道，所以我知道

01:05:01.640 --> 01:05:07.369
要指出，Rat Pack可以

01:05:03.799 --> 01:05:09.759
指标模块，特别是我们

01:05:07.369 --> 01:05:11.839
与拖放向导指标集成，因此

01:05:09.759 --> 01:05:13.549
但是您报告您可以

01:05:11.839 --> 01:05:16.160
为指标配置端点

01:05:13.549 --> 01:05:18.559
也许您可以指出使用它

01:05:16.160 --> 01:05:21.470
终点而不是执行器，您

01:05:18.559 --> 01:05:23.930
还可以，你也可以转发

01:05:21.470 --> 01:05:25.579
从包装返回到此的请求

01:05:23.930 --> 01:05:26.990
虽然我形成了良好的执行器端点

01:05:25.579 --> 01:05:30.410
不知道那有什么用

01:05:26.990 --> 01:05:32.320
因为执行器也在看servlet 

01:05:30.410 --> 01:05:34.330
统计权

01:05:32.320 --> 01:05:35.770
但对于其他任何事物

01:05:34.330 --> 01:05:38.470
您拥有的自定义指标

01:05:35.770 --> 01:05:40.360
你不知道修剪容器吗

01:05:38.470 --> 01:05:42.820
肯定会从你知道中受益

01:05:40.360 --> 01:05:44.950
通过Rat收到该请求

01:05:42.820 --> 01:05:49.060
打包是

01:05:44.950 --> 01:05:54.580
哦，酷，嗯，这些之一

01:05:49.060 --> 01:05:57.430
马克·帕克特，我想是

01:05:54.580 --> 01:06:02.910
在那里发布了一些代码

01:05:57.430 --> 01:06:05.590
像是一个说唱歌手

01:06:02.910 --> 01:06:07.180
是的，看起来就像这样

01:06:05.590 --> 01:06:10.300
酷哇

01:06:07.180 --> 01:06:13.060
动态哦，是一次网络研讨会

01:06:10.300 --> 01:06:15.880
真的很棒，就像

01:06:13.060 --> 01:06:18.130
十年之内，这个总数才有意义

01:06:15.880 --> 01:06:19.300
太棒了，你刚刚赢得了

01:06:18.130 --> 01:06:22.450
网络研讨会奖状

01:06:19.300 --> 01:06:26.620
标记马克哈哈哈的方法就是这样

01:06:22.450 --> 01:06:28.420
真的很酷，完全可以

01:06:26.620 --> 01:06:30.930
感觉，所以马克在这里显示的是

01:06:28.420 --> 01:06:34.090
那个你可以访问实际的

01:06:30.930 --> 01:06:36.490
执行器端点和所有数据

01:06:34.090 --> 01:06:38.530
与它相关联

01:06:36.490 --> 01:06:41.050
你应该只能够迭代

01:06:38.530 --> 01:06:45.400
通过那看起来你

01:06:41.050 --> 01:06:46.990
在这里使用groovy，但是嗯，是的

01:06:45.400 --> 01:06:48.370
原则上讲，你可以通过

01:06:46.990 --> 01:06:53.080
执行器端点并找到您

01:06:48.370 --> 01:06:55.800
需要，是的，太棒了，是的，我

01:06:53.080 --> 01:07:00.850
是的，你真的是的，你可以编码

01:06:55.800 --> 01:07:01.330
 groovy的食物应用程序也不错

01:07:00.850 --> 01:07:04.630
完全

01:07:01.330 --> 01:07:07.600
非常好，这真是太棒了

01:07:04.630 --> 01:07:10.630
谢谢你，马克，太棒了

01:07:07.600 --> 01:07:13.090
看到好吧，我认为这似乎

01:07:10.630 --> 01:07:14.200
用尽了我的问题队列

01:07:13.090 --> 01:07:16.090
要开始做的只是一点点

01:07:14.200 --> 01:07:18.190
一点家政工作，然后你

01:07:16.090 --> 01:07:23.350
看看问题墙

01:07:18.190 --> 01:07:26.560
因此，我们正在记录这个

01:07:23.350 --> 01:07:30.510
事件将被发布到spring dot 

01:07:26.560 --> 01:07:34.090
 IO /一个视频，也可以播放该IO 

01:07:30.510 --> 01:07:37.440
 / blog通常在大约两周内

01:07:34.090 --> 01:07:39.970
一开始我希望我能喜欢领带

01:07:37.440 --> 01:07:41.710
那就是我们的那种

01:07:39.970 --> 01:07:45.790
一开始的服务水平协议

01:07:41.710 --> 01:07:48.720
和重播和

01:07:45.790 --> 01:07:53.410
通常会切成薄片，但老板

01:07:48.720 --> 01:07:56.080
丹尼在这里做了所有演示和幻灯片

01:07:53.410 --> 01:07:58.090
我们将为您提供该职位

01:07:56.080 --> 01:07:59.800
与您的同事和您分享

01:07:58.090 --> 01:08:01.180
知道去看看是否有什么事

01:07:59.800 --> 01:08:05.560
你错过了要检查的地方

01:08:01.180 --> 01:08:07.570
如果您经常旅行YouTube 

01:08:05.560 --> 01:08:09.760
下载器可能是一种不错的选择

01:08:07.570 --> 01:08:11.740
这些在线研讨会与您一起

01:08:09.760 --> 01:08:12.760
从平板电脑上观看它们或什么

01:08:11.740 --> 01:08:17.170
那你在的时候有什么

01:08:12.760 --> 01:08:19.930
要点，我想如果你是

01:08:17.170 --> 01:08:22.900
寻找您知道的位和软件

01:08:19.930 --> 01:08:24.520
只是意识到我们您知道我们曾经

01:08:22.900 --> 01:08:26.080
在上启用了HTTP下载

01:08:24.520 --> 01:08:28.299
春季网站，我们减少了一些

01:08:26.080 --> 01:08:30.580
几年前，并尝试鼓励

01:08:28.299 --> 01:08:32.740
您可以通过maven或Gradle下载它，如果

01:08:30.580 --> 01:08:35.170
你在军事网络或

01:08:32.740 --> 01:08:36.430
网络封闭或落后200 

01:08:35.170 --> 01:08:38.529
代理服务器和您的来信

01:08:36.430 --> 01:08:41.830
迫切需要一些HTTP下载

01:08:38.529 --> 01:08:44.710
你可以得到他们的原因你可以得到

01:08:41.830 --> 01:08:47.980
回购点的春季展位

01:08:44.710 --> 01:08:50.140
弹簧拨回购或EPO 

01:08:47.980 --> 01:08:53.160
 IO的回购点弹簧，这就是我们的

01:08:50.140 --> 01:08:55.779
人工制品服务于我们的每晚构建

01:08:53.160 --> 01:08:58.690
这是获取HTTP的一种方式

01:08:55.779 --> 01:09:03.400
下载不容易引起您的注意，但是您

01:08:58.690 --> 01:09:04.630
可以让他们嗯，所以嗯嗯，然后

01:09:03.400 --> 01:09:07.720
丹尼（Danny）以什么方式掌握

01:09:04.630 --> 01:09:13.990
区域Rat Pack有点我看到了你的

01:09:07.720 --> 01:09:20.740
 um之前的Gradle示例是

01:09:13.990 --> 01:09:22.980
绝对是的最佳方式

01:09:20.740 --> 01:09:28.779
我们的东西是神器树，并且

01:09:22.980 --> 01:09:30.400
 Nexus对不起，在Maven Central中，如果

01:09:28.779 --> 01:09:33.490
如果您确实需要抓住

01:09:30.400 --> 01:09:36.100
我不确定我们是否托管

01:09:33.490 --> 01:09:38.799
我应该检查的github工件

01:09:36.100 --> 01:09:43.390
那但那可能是死胡同

01:09:38.799 --> 01:09:47.819
哦，是的，通过人工制品

01:09:43.390 --> 01:09:51.490
在J中心和Maven Central 

01:09:47.819 --> 01:09:54.009
嗯，好吧，我想

01:09:51.490 --> 01:09:55.300
就是这样，只是快速评论或

01:09:54.009 --> 01:10:00.090
其实很聪明，这有点

01:09:55.300 --> 01:10:02.710
 Josh Kinney提出的更多问题

01:10:00.090 --> 01:10:05.949
嘿，我们将再举办一次网络研讨会

01:10:02.710 --> 01:10:10.570
像Rx这样更高级的话题是历史

01:10:05.949 --> 01:10:15.909
这是关于

01:10:10.570 --> 01:10:18.670
老鼠装还是一般来说，我们

01:10:15.909 --> 01:10:20.349
假设考虑到

01:10:18.670 --> 01:10:22.810
网络研讨会，但是我敢肯定，如果您

01:10:20.349 --> 01:10:25.659
想要在聊天中澄清一下

01:10:22.810 --> 01:10:31.780
是的，如果有

01:10:25.659 --> 01:10:36.790
我当然很感兴趣

01:10:31.780 --> 01:10:38.590
春季和春季的网络研讨会的数量

01:10:36.790 --> 01:10:40.929
好吧，他确实说过rad pack是的，这是我的

01:10:38.590 --> 01:10:43.929
认为正确，只是检查所以

01:10:40.929 --> 01:10:45.969
丹尼只要你有什么想法

01:10:43.929 --> 01:10:48.940
我有足够的兴趣

01:10:45.969 --> 01:10:50.290
很高兴谈论老鼠包和所有

01:10:48.940 --> 01:10:53.380
我们拥有的各种模块

01:10:50.290 --> 01:10:55.659
很多材料和框架

01:10:53.380 --> 01:10:58.869
也可以从我们的网站进行整合

01:10:55.659 --> 01:11:02.050
有很多事情要做，是的，我会

01:10:58.869 --> 01:11:04.360
很高兴做到这一点

01:11:02.050 --> 01:11:06.159
车轮得到润滑脂，谢谢

01:11:04.360 --> 01:11:07.659
问夏洛特也许和他们在一起

01:11:06.159 --> 01:11:09.520
丹尼（Danny）为什么不想要你，喜欢

01:11:07.659 --> 01:11:11.560
谈论这个，也许我们可以得到

01:11:09.520 --> 01:11:13.570
你书上的东西知道我

01:11:11.560 --> 01:11:16.349
认为你今天做得很好，我

01:11:13.570 --> 01:11:19.510
我很高兴你回来

01:11:16.349 --> 01:11:22.690
是的，让我们来谈谈

01:11:19.510 --> 01:11:23.290
完全是我认为这很酷

01:11:22.690 --> 01:11:25.000
太好了

01:11:23.290 --> 01:11:28.179
感谢您的关注

01:11:25.000 --> 01:11:29.739
对我们来说，然后好吧，我想

01:11:28.179 --> 01:11:31.300
就是这样

01:11:29.739 --> 01:11:32.650
嗯，把它包起来，我们有点

01:11:31.300 --> 01:11:35.590
一小时后抱歉，但是我们

01:11:32.650 --> 01:11:37.330
确实确实尝试腾出更多时间， 

01:11:35.590 --> 01:11:38.889
感谢您所做的丹尼，但我们

01:11:37.330 --> 01:11:40.030
确实总是尝试争取额外的时间

01:11:38.889 --> 01:11:42.040
您的问题，除非它得到

01:11:40.030 --> 01:11:43.480
半个小时你就知道了

01:11:42.040 --> 01:11:48.699
网络研讨会之后，通常我们开始

01:11:43.480 --> 01:11:49.840
切断它，但是嗯，所以丹尼

01:11:48.699 --> 01:11:53.190
您打电话之前要说的话

01:11:49.840 --> 01:11:53.190
我觉得这个很棒

01:11:53.949 --> 01:11:59.199
不，我希望我至少成功

01:11:56.880 --> 01:12:01.869
带您去结帐

01:11:59.199 --> 01:12:03.489
打包一下，看看春季食物和

01:12:01.869 --> 01:12:05.349
 Rat Pack不互相排斥

01:12:03.489 --> 01:12:08.889
你绝对可以一起使用它们

01:12:05.349 --> 01:12:11.429
各种能力都很棒

01:12:08.889 --> 01:12:14.469
我完全同意，非常感谢

01:12:11.429 --> 01:12:16.239
是的，很棒的妈妈，让我们谈谈

01:12:14.469 --> 01:12:17.949
关于我想做的另一个话题

01:12:16.239 --> 01:12:19.239
可能很酷，谢谢大家

01:12:17.949 --> 01:12:21.070
感谢您的时间和关注， 

01:12:19.239 --> 01:12:24.149
您的问题有美好的一天

01:12:21.070 --> 01:12:24.149
并在下一次网络研讨会上与您见面

