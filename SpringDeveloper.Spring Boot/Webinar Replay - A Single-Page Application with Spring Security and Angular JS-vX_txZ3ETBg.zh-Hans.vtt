WEBVTT
Kind: captions
Language: zh-Hans

00:00:10.670 --> 00:00:16.039
你好，你可以听到我的名字吗

00:00:14.070 --> 00:00:18.829
我和约西亚

00:00:16.039 --> 00:00:22.880
我在这里跟你谈一些工作

00:00:18.829 --> 00:00:25.309
我一直在做单身

00:00:22.880 --> 00:00:27.679
具有Spring安全性的页面应用程序

00:00:25.309 --> 00:00:30.859
和JavaScript，我一直在使用

00:00:27.679 --> 00:00:33.890
前端的angularjs有很多功能

00:00:30.859 --> 00:00:36.350
我会说今天真的是关于

00:00:33.890 --> 00:00:38.989
有关实际工具的架构

00:00:36.350 --> 00:00:41.420
我正在使用的堆栈，如果您

00:00:38.989 --> 00:00:43.699
有任何小问题

00:00:41.420 --> 00:00:46.579
我认为我应该能够回答

00:00:43.699 --> 00:00:49.610
继续输入聊天内容即可

00:00:46.579 --> 00:00:53.299
我有来自Spring Security的抢劫犯

00:00:49.610 --> 00:00:55.369
和我的朋友托尔斯滕·施密特（Torsten Schmidt） 

00:00:53.299 --> 00:00:56.750
来自德国的angularjs专家

00:00:55.369 --> 00:00:59.689
线，他们可以回答你

00:00:56.750 --> 00:01:02.210
文字形式的问题，如果有

00:00:59.689 --> 00:01:04.400
任何我们可以保存的真正有趣的东西

00:01:02.210 --> 00:01:08.170
直到最后，但希望我们能拖地

00:01:04.400 --> 00:01:11.450
我们进行很多小查询

00:01:08.170 --> 00:01:15.979
好吧，这就是我的议程

00:01:11.450 --> 00:01:18.590
会尝试覆盖一个非常非常快的

00:01:15.979 --> 00:01:19.850
元素介绍

00:01:18.590 --> 00:01:22.990
我要谈论的堆栈

00:01:19.850 --> 00:01:27.140
Spring Security  Spring 会议和

00:01:22.990 --> 00:01:29.960
 AngularJS也有 Spring 的云和主要

00:01:27.140 --> 00:01:31.580
事情将是尝试着重于什么

00:01:29.960 --> 00:01:33.470
他们需要做的是能够

00:01:31.580 --> 00:01:35.450
互相交流，以便您

00:01:33.470 --> 00:01:39.799
可以最有效地使用它们

00:01:35.450 --> 00:01:41.390
以最安全的方式

00:01:39.799 --> 00:01:43.010
将专注于那些功能， 

00:01:41.390 --> 00:01:46.130
您需要构建单页

00:01:43.010 --> 00:01:48.710
被保护的应用程序

00:01:46.130 --> 00:01:51.860
后端使用spring安全性和很多

00:01:48.710 --> 00:01:53.990
这将与以太有关

00:01:51.860 --> 00:01:57.320
关于微服务，所以它将

00:01:53.990 --> 00:01:59.540
关于分布式系统以及您如何

00:01:57.320 --> 00:02:01.760
会在这种情况下实施安全性

00:01:59.540 --> 00:02:03.890
系统，当您特别是当您

00:02:01.760 --> 00:02:06.740
拥有单页应用程序

00:02:03.890 --> 00:02:11.540
在您系统的前端

00:02:06.740 --> 00:02:13.730
与您互动的用户

00:02:11.540 --> 00:02:15.950
可能知道你是否不是你

00:02:13.730 --> 00:02:18.530
可以关注链接以及我们发布时

00:02:15.950 --> 00:02:20.379
最后的幻灯片，所以有一个博客

00:02:18.530 --> 00:02:24.049
我一直在从事的系列

00:02:20.379 --> 00:02:26.959
字符串点IO，所以Spring 点IO /博客

00:02:24.049 --> 00:02:30.200
您会发现一系列五个博客

00:02:26.959 --> 00:02:32.000
到目前为止，我一直在发表

00:02:30.200 --> 00:02:34.459
我们将看看如何高

00:02:32.000 --> 00:02:36.080
我在一些示例应用程序中的级别

00:02:34.459 --> 00:02:38.870
在该系列中介绍，我们要

00:02:36.080 --> 00:02:40.670
用它们来探索功能

00:02:38.870 --> 00:02:48.099
基本上，如果

00:02:40.670 --> 00:02:51.410
建设，因此Spring Security 是第一

00:02:48.099 --> 00:02:53.000
简介幻灯片，如下所示

00:02:51.410 --> 00:02:54.860
正如我要说的

00:02:53.000 --> 00:02:57.069
Spring Security 是，然后我们将看到

00:02:54.860 --> 00:03:00.980
稍后将使用的一些示例

00:02:57.069 --> 00:03:03.769
所以Spring Security 是其中的一个

00:03:00.980 --> 00:03:06.440
基于服务器的通用

00:03:03.769 --> 00:03:08.360
应用程序基本上是一个过滤器，所以

00:03:06.440 --> 00:03:10.670
如果您是

00:03:08.360 --> 00:03:13.540
 servlet应用程序是其他东西

00:03:10.670 --> 00:03:17.000
其他的东西，它涵盖了

00:03:13.540 --> 00:03:19.900
身份验证即是说

00:03:17.000 --> 00:03:22.190
用户的身份或

00:03:19.900 --> 00:03:25.940
他想使用该系统的主角

00:03:22.190 --> 00:03:29.540
和授权意味着访问

00:03:25.940 --> 00:03:32.720
像您知道的规则做出决定

00:03:29.540 --> 00:03:35.420
用户可以访问此资源（如果他是

00:03:32.720 --> 00:03:39.400
在那种管理员角色中

00:03:35.420 --> 00:03:43.160
规则实施了

00:03:39.400 --> 00:03:44.959
在这里大声喊叫也是因为

00:03:43.160 --> 00:03:47.780
我的Spring 安全模块

00:03:44.959 --> 00:03:49.840
真正让自己运行，这也非常

00:03:47.780 --> 00:03:52.970
对这种系统有用

00:03:49.840 --> 00:03:56.000
特别是如果您确信自己

00:03:52.970 --> 00:03:58.609
需要基于令牌的身份验证，或者

00:03:56.000 --> 00:04:00.049
您需要其他种类的单点登录

00:03:58.609 --> 00:04:03.200
我说过的Spring Security 性功能

00:04:00.049 --> 00:04:05.919
所以去看看网页

00:04:03.200 --> 00:04:10.880
底部，所以您想了解更多

00:04:05.919 --> 00:04:12.470
我想angularjs是将近一半的

00:04:10.880 --> 00:04:13.880
我将在其余部分中使用的技术

00:04:12.470 --> 00:04:16.299
演示文稿是JavaScript 

00:04:13.880 --> 00:04:20.120
框架，如果您以前从未遇到过

00:04:16.299 --> 00:04:22.840
在像这样的人中很受欢迎

00:04:20.120 --> 00:04:25.099
我基本上是Java Enterprise 

00:04:22.840 --> 00:04:29.000
有点害怕的开发人员

00:04:25.099 --> 00:04:32.510
 JavaScript的原因在于它在

00:04:29.000 --> 00:04:35.840
我认为这是一种共鸣的方式

00:04:32.510 --> 00:04:37.550
与我在

00:04:35.840 --> 00:04:39.260
服务器端，所以它确实依赖

00:04:37.550 --> 00:04:43.020
例如注射，它有一种

00:04:39.260 --> 00:04:46.560
 MVC样式模型

00:04:43.020 --> 00:04:49.590
接近网页的方法

00:04:46.560 --> 00:04:52.470
涉及很多魔术，但是一旦

00:04:49.590 --> 00:04:54.420
实际上看到了一些例子，你可以

00:04:52.470 --> 00:04:56.880
复制粘贴并非常有信心

00:04:54.420 --> 00:04:58.470
你知道我们要去工作了

00:04:56.880 --> 00:04:59.850
您期望的方式，所以我认为

00:04:58.470 --> 00:05:03.000
这可能就是为什么它有这么多的原因

00:04:59.850 --> 00:05:05.130
然而，企业的牵引力

00:05:03.000 --> 00:05:06.750
正如我所说的，关于架构的一切

00:05:05.130 --> 00:05:09.090
我在这里显示的应用程序要求

00:05:06.750 --> 00:05:11.760
 angularjs这只是一个相当

00:05:09.090 --> 00:05:13.710
人们的共同选择

00:05:11.760 --> 00:05:17.460
带有Java后端的系统类型

00:05:13.710 --> 00:05:20.190
 Spring 我也应该说所有

00:05:17.460 --> 00:05:22.410
我向您展示的angularjs是因为我

00:05:20.190 --> 00:05:25.110
意味着没有专家会很基础

00:05:22.410 --> 00:05:26.670
用法，但我认为代表我

00:05:25.110 --> 00:05:28.860
认为你基本上可以接受

00:05:26.670 --> 00:05:31.800
展开阅读文档

00:05:28.860 --> 00:05:33.360
通常很好，他会得到

00:05:31.800 --> 00:05:35.640
如果你是一个需要去的地方

00:05:33.360 --> 00:05:39.450
初学者，如果你不希望

00:05:35.640 --> 00:05:42.150
认识下我在做什么

00:05:39.450 --> 00:05:44.250
我想指出的是

00:05:42.150 --> 00:05:46.170
已经有很多功能

00:05:44.250 --> 00:05:47.580
您的浏览器可以帮助您

00:05:46.170 --> 00:05:50.400
这样的事情，所以如果你正在写一个

00:05:47.580 --> 00:05:54.630
应用程序中的Web静态资源

00:05:50.400 --> 00:05:57.720
浏览器中已经有这些东西了

00:05:54.630 --> 00:06:00.180
将为您提供免费的HTTP基本

00:05:57.720 --> 00:06:02.190
基于认证证书

00:06:00.180 --> 00:06:05.940
身份验证有功能

00:06:02.190 --> 00:06:07.620
支持Kerberos还有cookie 

00:06:05.940 --> 00:06:09.270
重要的cookie喊叫，因为

00:06:07.620 --> 00:06:12.360
这就是我将要使用的很多东西

00:06:09.270 --> 00:06:14.580
在我展示的应用中

00:06:12.360 --> 00:06:18.350
导致通用操作资源共享

00:06:14.580 --> 00:06:23.070
这是保护应用程序的一种方式

00:06:18.350 --> 00:06:26.970
从意外加载代码

00:06:23.070 --> 00:06:28.650
另一个网站，你有严格的

00:06:26.970 --> 00:06:31.500
运输安全是一种方法

00:06:28.650 --> 00:06:35.280
强制浏览器使用安全套接字

00:06:31.500 --> 00:06:36.420
层，最后是新兴事物

00:06:35.280 --> 00:06:39.120
你以为这个东西叫做

00:06:36.420 --> 00:06:40.200
内容安全政策以及其中的任何一项

00:06:39.120 --> 00:06:41.490
我将要真正使用的功能

00:06:40.200 --> 00:06:44.670
今天只专注于饼干，但是

00:06:41.490 --> 00:06:47.310
这里的文字是他们都在

00:06:44.670 --> 00:06:48.930
浏览器，它们可靠，免费，并且

00:06:47.310 --> 00:06:51.990
你应该尽可能多地使用它们

00:06:48.930 --> 00:06:55.190
无需尝试就可以建立自己的

00:06:51.990 --> 00:06:59.400
自己解决同样的问题

00:06:55.190 --> 00:07:01.350
好吧，所以我堆栈的下一部分

00:06:59.400 --> 00:07:02.970
将非常重要，如果

00:07:01.350 --> 00:07:05.240
您已经阅读了博客，可以看到

00:07:02.970 --> 00:07:07.860
它适合一些现有的应用程序

00:07:05.240 --> 00:07:10.250
 Spring 会议是一个相对较新的事物

00:07:07.860 --> 00:07:12.930
罗布没有去年就绞尽脑汁

00:07:10.250 --> 00:07:15.690
挠痒痒，我想我们都会

00:07:12.930 --> 00:07:17.790
有，所以我们非常感谢他，这是

00:07:15.690 --> 00:07:20.160
与Spring 安全性无关

00:07:17.790 --> 00:07:21.390
实际上那是

00:07:20.160 --> 00:07:23.160
我们进行的审查过程

00:07:21.390 --> 00:07:25.320
在内部与一些 Spring 会议，我们

00:07:23.160 --> 00:07:27.210
决定需要更多

00:07:25.320 --> 00:07:30.000
一般比Spring Security ，但它确实

00:07:27.210 --> 00:07:31.440
与它一起工作以及您得到的

00:07:30.000 --> 00:07:33.990
基本上真的很容易

00:07:31.440 --> 00:07:35.400
声明式分布式会话和

00:07:33.990 --> 00:07:37.830
分布式会话不是什么

00:07:35.400 --> 00:07:41.040
这不是一个新概念

00:07:37.830 --> 00:07:43.350
你知道汤姆小屋的东西更大

00:07:41.040 --> 00:07:45.480
应用服务机构始终

00:07:43.350 --> 00:07:48.690
支持它就是这样

00:07:45.480 --> 00:07:50.820
真的很容易，并且有一个

00:07:48.690 --> 00:07:53.550
 Redis实现无法实现

00:07:50.820 --> 00:07:55.710
盒子和一个单一的接口

00:07:53.550 --> 00:07:57.630
您必须实施以添加其他

00:07:55.710 --> 00:08:02.940
后端，因此很容易

00:07:57.630 --> 00:08:05.610
一概而论，但我认为最后一张幻灯片

00:08:02.940 --> 00:08:08.430
在我的书架上是关于 Spring 的云

00:08:05.610 --> 00:08:10.320
简而言之，Spring Cloud是一个工具箱

00:08:08.430 --> 00:08:13.770
用于构建微服务和构建

00:08:10.320 --> 00:08:15.780
微服务系统和

00:08:13.770 --> 00:08:18.680
我们实现或实现的模式

00:08:15.780 --> 00:08:21.810
易于实施的是网关还是

00:08:18.680 --> 00:08:24.480
反向微代理，我喜欢这样称呼它

00:08:21.810 --> 00:08:26.190
基本上这是一个反向代理

00:08:24.480 --> 00:08:28.380
您对

00:08:26.190 --> 00:08:30.270
内部逻辑，这相当

00:08:28.380 --> 00:08:32.940
强大的工具

00:08:30.270 --> 00:08:35.550
胸就算不建什么

00:08:32.940 --> 00:08:36.599
您认为您是一个云系统

00:08:35.550 --> 00:08:39.060
建立任何分布式的东西

00:08:36.599 --> 00:08:41.010
然后这个反向微生物代理模式

00:08:39.060 --> 00:08:45.000
实际上非常有用，我想我会

00:08:41.010 --> 00:08:47.370
告诉您今天用于安全用途

00:08:45.000 --> 00:08:49.350
我们正在寻找的情况

00:08:47.370 --> 00:08:51.390
如果您有兴趣，请查看链接

00:08:49.350 --> 00:08:52.830
在下面，您会发现 Spring 的云

00:08:51.390 --> 00:08:54.900
涵盖了类似配置的内容

00:08:52.830 --> 00:08:56.850
管理服务发现负载

00:08:54.900 --> 00:08:59.190
平衡断路器其他

00:08:56.850 --> 00:09:03.620
模式基本上有点沟通

00:08:59.190 --> 00:09:07.430
之间的亚硝酸服务好吗

00:09:03.620 --> 00:09:11.149
在那边看起来有点奇怪的字体

00:09:07.430 --> 00:09:14.210
是带有博客概述的表格

00:09:11.149 --> 00:09:17.180
我一直在做的系列第1部分

00:09:14.210 --> 00:09:20.420
至第6部分第6部分尚未发布

00:09:17.180 --> 00:09:23.480
但是，我一直在努力，所以我们

00:09:20.420 --> 00:09:25.820
经过一段时间的建设

00:09:23.480 --> 00:09:28.250
系统从

00:09:25.820 --> 00:09:30.980
非常简单，直到分布式等等

00:09:28.250 --> 00:09:33.740
非常复杂，因此在第一部分中

00:09:30.980 --> 00:09:37.610
包含所有

00:09:33.740 --> 00:09:40.100
静态和动态资源只有8个

00:09:37.610 --> 00:09:43.490
具有HTTP基本安全性

00:09:40.100 --> 00:09:46.279
然后在第2部分中，我们添加了登录名

00:09:43.490 --> 00:09:50.300
表单，因此其中包含更多HTML 

00:09:46.279 --> 00:09:51.890
第3部分中的Java脚本要多一些

00:09:50.300 --> 00:09:53.839
打破了会议，我打破了

00:09:51.890 --> 00:09:56.120
应用程序分为多个部分

00:09:53.839 --> 00:09:59.959
所以现在我们有一个资源服务器

00:09:56.120 --> 00:10:03.010
以及用户界面和 Spring 会议

00:09:59.959 --> 00:10:05.510
把那些绑在一起

00:10:03.010 --> 00:10:08.420
一起进行身份验证，我们使用了

00:10:05.510 --> 00:10:09.950
会话ID作为身份验证令牌，因此

00:10:08.420 --> 00:10:13.100
 JavaScript必须实际发送

00:10:09.950 --> 00:10:14.570
下一个到资源服务器的令牌

00:10:13.100 --> 00:10:15.890
我将在其中详细说明其中一些

00:10:14.570 --> 00:10:18.680
细节，因为我们只是

00:10:15.890 --> 00:10:21.260
一分钟总结一下

00:10:18.680 --> 00:10:23.450
在处添加了此网关代理传递

00:10:21.260 --> 00:10:25.100
顶部，我将向您展示为什么

00:10:23.450 --> 00:10:29.959
这一点很重要

00:10:25.100 --> 00:10:31.910
分钟，第5部分已添加或外部化

00:10:29.959 --> 00:10:33.980
认证成一个单独的

00:10:31.910 --> 00:10:36.410
服务器，因此我们使用了OAuth 2来完成

00:10:33.980 --> 00:10:40.220
登录，然后在第6部分中，我们将

00:10:36.410 --> 00:10:42.080
要做的是添加进一步完成的UI，因此在

00:10:40.220 --> 00:10:44.060
不只是一个UI，而是多个不同的

00:10:42.080 --> 00:10:48.500
所有应用程序都位于同一个后面

00:10:44.060 --> 00:10:50.839
具有详细规则和访问规则的网关

00:10:48.500 --> 00:10:52.640
由个人后端管理，因此

00:10:50.839 --> 00:10:53.900
那是什么的高级计划

00:10:52.640 --> 00:10:59.029
将在下一部分

00:10:53.900 --> 00:11:01.640
系列，所以图片中的基本

00:10:59.029 --> 00:11:03.829
我们开始这个系列的例子

00:11:01.640 --> 00:11:06.079
像这样生活，他想

00:11:03.829 --> 00:11:09.230
浏览器位于顶部

00:11:06.079 --> 00:11:14.420
来自橙色后端的资源

00:11:09.230 --> 00:11:17.120
同时具有UI和API资源，并且

00:11:14.420 --> 00:11:17.990
幻灯片上有一个链接我必须放在

00:11:17.120 --> 00:11:19.760
一种

00:11:17.990 --> 00:11:24.080
省略它，但这基本上是为了

00:11:19.760 --> 00:11:26.330
 github.com / d fire /Spring Security 

00:11:24.080 --> 00:11:29.110
有角度的，我将向您显示链接

00:11:26.330 --> 00:11:33.260
最后的一切都是第一

00:11:29.110 --> 00:11:34.820
如果可以的话，我会坚持

00:11:33.260 --> 00:11:40.820
双方，我会回来告诉你

00:11:34.820 --> 00:11:43.700
一分钟内，IDE中的代码

00:11:40.820 --> 00:11:45.620
索引的基本构建块

00:11:43.700 --> 00:11:47.959
点HTML正确，因此有一个静态页面

00:11:45.620 --> 00:11:51.520
从那个橙色斑点里拿出来的

00:11:47.959 --> 00:11:54.020
进入浏览器非常简单

00:11:51.520 --> 00:11:56.240
因为我喜欢吃点东西

00:11:54.020 --> 00:11:59.450
可以放在幻灯片上，不是吗

00:11:56.240 --> 00:12:01.250
如果我离开表头，可以放在一边

00:11:59.450 --> 00:12:02.779
出来，但是有头

00:12:01.250 --> 00:12:04.940
还有我把它混在一起的

00:12:02.779 --> 00:12:07.580
为了简洁，这是样式表

00:12:04.940 --> 00:12:14.570
基本上省去了风格

00:12:07.580 --> 00:12:17.570
我的HTML中有一个正文，我的中有一个

00:12:14.570 --> 00:12:20.390
我已经将它链接到一个角度

00:12:17.570 --> 00:12:21.890
应用一个名为hello的模块

00:12:20.390 --> 00:12:24.770
我将向您展示的实现

00:12:21.890 --> 00:12:27.350
在身体的一分钟内，我有一个标题

00:12:24.770 --> 00:12:30.050
我有一个包含一个

00:12:27.350 --> 00:12:32.839
提到另一个有角度的东西，所以

00:12:30.050 --> 00:12:35.180
 NG控制器基本上是一个功能

00:12:32.839 --> 00:12:38.600
负有特殊责任

00:12:35.180 --> 00:12:41.930
一会儿给你看

00:12:38.600 --> 00:12:44.029
关键，这就是这种MVC模式

00:12:41.930 --> 00:12:46.250
所以这是一个控制器叫做家

00:12:44.029 --> 00:12:48.649
并且模型包含一个名为

00:12:46.250 --> 00:12:53.810
问候，然后我正在绑定到

00:12:48.649 --> 00:12:56.750
 div中使用问候ID的UI 

00:12:53.810 --> 00:13:01.940
用这些句柄问候放下内容

00:12:56.750 --> 00:13:03.470
酒吧标记标记，所以这真的是我

00:13:01.940 --> 00:13:04.940
告诉这不是很有效，你

00:13:03.470 --> 00:13:07.940
不应该构建大型应用程序，并且

00:13:04.940 --> 00:13:10.730
这样复杂的逻辑，但事实如此

00:13:07.940 --> 00:13:12.110
即使我能理解也很简单，所以我们

00:13:10.730 --> 00:13:13.310
这样，因为很容易看到

00:13:12.110 --> 00:13:16.100
当我告诉你这是怎么回事

00:13:13.310 --> 00:13:17.540
 JavaScript，它将变得更加容易，然后

00:13:16.100 --> 00:13:20.770
我有两个脚本要加载

00:13:17.540 --> 00:13:23.950
底部，所以其中之一是角

00:13:20.770 --> 00:13:26.420
库本身，我将其与

00:13:23.950 --> 00:13:28.579
一些Twitter牛肉草稿，以便

00:13:26.420 --> 00:13:30.630
我可以做一些样式

00:13:28.579 --> 00:13:32.790
相同的JavaScript 

00:13:30.630 --> 00:13:35.459
而且我有自己的应用程序代码

00:13:32.790 --> 00:13:38.130
上的单独脚本问候点J s 

00:13:35.459 --> 00:13:41.009
下一张幻灯片向您显示hello da je是的

00:13:38.130 --> 00:13:42.540
不尝试做是完全最小的

00:13:41.009 --> 00:13:44.310
这里的任何花哨只是为了展示

00:13:42.540 --> 00:13:46.860
如果你以前没见过角

00:13:44.310 --> 00:13:48.480
实际上并不那么可怕

00:13:46.860 --> 00:13:50.819
任何人都可以理解的东西

00:13:48.480 --> 00:13:53.190
在这里，我声明一个名为

00:13:50.819 --> 00:13:57.389
你好，这就是我所说的

00:13:53.190 --> 00:13:59.610
 HTML包含的我的身体元素

00:13:57.389 --> 00:14:02.670
在这种情况下只有一件事

00:13:59.610 --> 00:14:05.579
名为home的控制器，您定义了一个

00:14:02.670 --> 00:14:09.329
控制器使用功能和

00:14:05.579 --> 00:14:11.579
函数接受哪些参数

00:14:09.329 --> 00:14:13.699
有好看的名字，所以这些好看的

00:14:11.579 --> 00:14:16.680
以美元开头的名称是有角的

00:14:13.699 --> 00:14:18.630
提供服务，这基本上是

00:14:16.680 --> 00:14:21.509
等于依赖注入

00:14:18.630 --> 00:14:23.959
并按名称注入依赖项

00:14:21.509 --> 00:14:31.829
所以有一个叫做范围的东西

00:14:23.959 --> 00:14:34.139
 div中的变量在这里，所以

00:14:31.829 --> 00:14:36.540
由家控制的div 

00:14:34.139 --> 00:14:40.680
控制器内部有变量

00:14:36.540 --> 00:14:46.639
叫问候和问候在这里

00:14:40.680 --> 00:14:49.380
作用域问候语，所以作用域是本地um 

00:14:46.639 --> 00:14:54.089
命名空间基本上用于内部变量

00:14:49.380 --> 00:14:55.709
我的用户界面，直到HTTP是HTTP 

00:14:54.089 --> 00:14:58.110
我所提供的角度服务

00:14:55.709 --> 00:15:02.839
用做得到我将要得到

00:14:58.110 --> 00:15:05.730
路径斜杠资源中的资源和

00:15:02.839 --> 00:15:07.500
如果成功，我将数据

00:15:05.730 --> 00:15:09.329
从响应，我把它变成一个

00:15:07.500 --> 00:15:11.339
问候，所以我从

00:15:09.329 --> 00:15:14.250
该资源基本上为什么我们不

00:15:11.339 --> 00:15:16.529
看看我在行动

00:15:14.250 --> 00:15:20.339
看到你也可以做到这一点

00:15:16.529 --> 00:15:23.910
在github中克隆项目，然后

00:15:20.339 --> 00:15:30.779
全部使用了Maven，因此您可以导入

00:15:23.910 --> 00:15:32.600
进入您最喜欢的IDE，这就是我

00:15:30.779 --> 00:15:36.449
在做

00:15:32.600 --> 00:15:38.430
那对不起云春

00:15:36.449 --> 00:15:41.980
安全角就是

00:15:38.430 --> 00:15:45.740
 github repo，然后有一个基本的

00:15:41.980 --> 00:15:49.699
我可以导入的项目

00:15:45.740 --> 00:15:51.259
这个工作区，我会告诉你多么简单

00:15:49.699 --> 00:15:54.399
真的只是我的代码

00:15:51.259 --> 00:15:56.810
刚刚向您展示了一个index.html 

00:15:54.399 --> 00:15:59.139
我刚刚带你看的东西

00:15:56.810 --> 00:16:04.370
有问候被渲染

00:15:59.139 --> 00:16:08.930
你好杰西，这真的只是

00:16:04.370 --> 00:16:10.730
我刚刚向您显示的代码有一个

00:16:08.930 --> 00:16:12.649
除非你知道这里的小小动物

00:16:10.730 --> 00:16:14.689
哦，这只是说我可以设置

00:16:12.649 --> 00:16:19.459
安全权密码，然后

00:16:14.689 --> 00:16:20.959
有一个Java应用程序

00:16:19.459 --> 00:16:23.329
给你看球，因为我不

00:16:20.959 --> 00:16:25.129
认为我已经把它放在幻灯片上了

00:16:23.329 --> 00:16:26.920
 spring boot 应用程序，所以它说应用程序

00:16:25.129 --> 00:16:29.600
在顶部启动应用程序时

00:16:26.920 --> 00:16:33.379
这是一个地址控制器，因为它是

00:16:29.600 --> 00:16:38.839
提供此资源路径

00:16:33.379 --> 00:16:42.800
资源和重点，所以这

00:16:38.839 --> 00:16:44.689
资源端点返回地图，因此地图

00:16:42.800 --> 00:16:46.309
字符串两个对象的

00:16:44.689 --> 00:16:48.319
问候语，这样问候语有一个ID 

00:16:46.309 --> 00:16:48.920
还有一些内容只是

00:16:48.319 --> 00:16:51.199
六

00:16:48.920 --> 00:16:52.879
你好总是说你好世界，但是它

00:16:51.199 --> 00:16:54.740
用另一种独特的方式说

00:16:52.879 --> 00:16:56.120
每次加载标识符时， 

00:16:54.740 --> 00:16:58.279
这是所有产品的惊人功能

00:16:56.120 --> 00:17:00.860
博客系列中的示例是如此

00:16:58.279 --> 00:17:04.039
他们很容易识别，然后

00:17:00.860 --> 00:17:08.110
我正在使用字符串引导程序主要运行

00:17:04.039 --> 00:17:10.130
项目作为主要项目，所以我只运行

00:17:08.110 --> 00:17:14.539
特工看到我做到了，你做到了吗

00:17:10.130 --> 00:17:21.020
迈克（Mike）用我的键盘如何运作

00:17:14.539 --> 00:17:25.600
在8080端口上运行的Java 

00:17:21.020 --> 00:17:25.600
所以我现在可以进入浏览器

00:17:28.390 --> 00:17:31.669
其实你知道我要去做

00:17:30.289 --> 00:17:35.539
去做聪明的事，我

00:17:31.669 --> 00:17:38.020
如果您要进入新的隐身窗口

00:17:35.539 --> 00:17:40.159
在家做会做同样的事情

00:17:38.020 --> 00:17:43.309
对，这是第一件事

00:17:40.159 --> 00:17:46.010
我是否得到提示，请输入化名

00:17:43.309 --> 00:17:49.400
密码，所以这就是他们所说的HTTP 

00:17:46.010 --> 00:17:54.490
基本身份验证和作为我的应用程序

00:17:49.400 --> 00:17:54.490
说出ID并问好世界

00:17:56.170 --> 00:18:04.910
嗯，我认为这足以

00:18:01.820 --> 00:18:06.530
基本样本实际上还想要一个

00:18:04.910 --> 00:18:09.800
在我关机之前给你看的东西

00:18:06.530 --> 00:18:10.940
 Liam脱离IDE-只是向您展示

00:18:09.800 --> 00:18:14.420
那是多么容易

00:18:10.940 --> 00:18:17.680
我几乎可以完成这个现场编码

00:18:14.420 --> 00:18:21.050
没有时间键入所有HTML 

00:18:17.680 --> 00:18:23.570
因为几乎所有您将看到的东西

00:18:21.050 --> 00:18:27.260
一分钟后从

00:18:23.570 --> 00:18:29.870
依赖项，所以我有一个XML文件

00:18:27.260 --> 00:18:33.320
带有 spring boot 的Palmdale XML 

00:18:29.870 --> 00:18:34.910
黑暗和父母，这使事情变得

00:18:33.320 --> 00:18:36.710
容易一点，因为那我只需要

00:18:34.910 --> 00:18:39.320
我没有定义的版本

00:18:36.710 --> 00:18:41.870
基本上在这里，所以我有安全网

00:18:39.320 --> 00:18:44.830
还有我所有的测试资源

00:18:41.870 --> 00:18:52.430
需要让安全的应用程序正常工作

00:18:44.830 --> 00:18:55.760
令人耳目一新的好吧，这样

00:18:52.430 --> 00:18:58.610
是我的基本应用程序，我添加了一个

00:18:55.760 --> 00:19:00.500
粘牛肉HTTP的基本安全性和我

00:18:58.610 --> 00:19:04.400
向您展示了它的工作原理，我补充说

00:19:00.500 --> 00:19:06.350
就像我告诉你使用依赖

00:19:04.400 --> 00:19:08.330
小错别字我忘了关闭

00:19:06.350 --> 00:19:10.880
 XML正确，但这只是 Spring 

00:19:08.330 --> 00:19:14.060
启动安全性和所有

00:19:10.880 --> 00:19:15.860
入门者要做的是挑选一组

00:19:14.060 --> 00:19:17.450
传递依赖（如果您是

00:19:15.860 --> 00:19:24.020
用dradle做它会非常

00:19:17.450 --> 00:19:27.890
类似的好，所以这是基本示例

00:19:24.020 --> 00:19:30.200
它在浏览器和

00:19:27.890 --> 00:19:32.720
我在那里有HTTP基本资源

00:19:30.200 --> 00:19:37.190
当我从

00:19:32.720 --> 00:19:39.530
服务器浏览器发送相同的HTTP 

00:19:37.190 --> 00:19:41.170
基本身份验证让我告诉你

00:19:39.530 --> 00:19:45.730
在行动

00:19:41.170 --> 00:19:45.730
哎呀

00:19:46.240 --> 00:19:53.330
没关系

00:19:48.260 --> 00:19:56.210
因此，网络，如果我只是重新加载

00:19:53.330 --> 00:19:59.180
该页面，然后是所有请求

00:19:56.210 --> 00:20:01.250
响应正确，于是

00:19:59.180 --> 00:20:02.900
您的300个修改最多的

00:20:01.250 --> 00:20:05.570
有趣的一个是一个-这个

00:20:02.900 --> 00:20:07.880
你好回来的资源

00:20:05.570 --> 00:20:10.910
你可以在那里看到的世界

00:20:07.880 --> 00:20:14.270
标头包括一个基本

00:20:10.910 --> 00:20:15.559
身份验证，以便浏览器知道

00:20:14.270 --> 00:20:17.000
一旦你完成了

00:20:15.559 --> 00:20:19.340
在您输入后进行身份验证

00:20:17.000 --> 00:20:20.900
可以随时发送的用户名和密码

00:20:19.340 --> 00:20:27.260
该标头，您将

00:20:20.900 --> 00:20:28.370
经过身份验证，这真的很棒

00:20:27.260 --> 00:20:38.750
拿东西很有用

00:20:28.370 --> 00:20:41.750
开始很快就可以了

00:20:38.750 --> 00:20:45.200
的人实际上更喜欢

00:20:41.750 --> 00:20:47.990
用户宁愿不要那么有趣

00:20:45.200 --> 00:20:50.330
小小的浏览器灰色对话框，但是

00:20:47.990 --> 00:20:53.360
实际上有一个HTML形式

00:20:50.330 --> 00:20:54.679
可以在和中填写其凭据

00:20:53.360 --> 00:20:56.450
我们可以看到这是因为

00:20:54.679 --> 00:20:58.070
他们喜欢它的外观

00:20:56.450 --> 00:21:00.049
因为你可以扩展它做

00:20:58.070 --> 00:21:02.419
不只是用户名密码，而是

00:21:00.049 --> 00:21:06.500
只是暂时坚持- 

00:21:02.419 --> 00:21:08.809
用户名密码用例我们可以

00:21:06.500 --> 00:21:11.690
向该应用程序添加登录表单

00:21:08.809 --> 00:21:14.419
很容易，我在博客中做到了

00:21:11.690 --> 00:21:16.250
实际上在第二部分

00:21:14.419 --> 00:21:19.700
应该在第二部分的底部说

00:21:16.250 --> 00:21:22.970
幻灯片，要做到这一点，我必须

00:21:19.700 --> 00:21:24.980
引入更多Spring 安全性

00:21:22.970 --> 00:21:27.860
配置，到目前为止我得到了什么

00:21:24.980 --> 00:21:30.669
这就是我从开箱即用中得到的

00:21:27.860 --> 00:21:34.070
 spring boot ，这是一个小食谱

00:21:30.669 --> 00:21:36.770
我如何创建Spring 安全性

00:21:34.070 --> 00:21:39.559
我的应用程序配置类

00:21:36.770 --> 00:21:41.630
应用程序，我让它扩展了网络

00:21:39.559 --> 00:21:43.400
安全配置它的适配器，那是

00:21:41.630 --> 00:21:46.150
基本上从 Spring 开始的回调

00:21:43.400 --> 00:21:49.789
安全性，它告诉我可以配置

00:21:46.150 --> 00:21:52.970
 HTTP安全性以及我的一些东西

00:21:49.789 --> 00:21:56.120
想要做的是我已经拥有的HTTP基础

00:21:52.970 --> 00:22:00.289
一直在同时使用

00:21:56.120 --> 00:22:02.630
我也想说我想创造一些

00:22:00.289 --> 00:22:07.010
可以使用访问规则，所以我要授权

00:22:02.630 --> 00:22:10.460
请求，我想对待静态

00:22:07.010 --> 00:22:12.530
资源index.html等不同

00:22:10.460 --> 00:22:15.890
比这些都重要

00:22:12.530 --> 00:22:18.320
主页基本上是任何登录名， 

00:22:15.890 --> 00:22:20.450
主页资源超出所需

00:22:18.320 --> 00:22:21.530
负载，我要从这一切说

00:22:20.450 --> 00:22:23.810
任何人都可以看

00:22:21.530 --> 00:22:26.570
这些和其他任何东西都必须

00:22:23.810 --> 00:22:31.150
认证，这意味着我

00:22:26.570 --> 00:22:36.140
可以加载主页和登录页面，以及

00:22:31.150 --> 00:22:39.470
将凭据提交回HTTP 

00:22:36.140 --> 00:22:41.450
基本的那些阅读文章的人

00:22:39.470 --> 00:22:44.000
当他们第一次出来时，我实际上

00:22:41.450 --> 00:22:46.010
最初没有使用HTTP Basic 

00:22:44.000 --> 00:22:47.690
我使用表单登录的版本

00:22:46.010 --> 00:22:51.410
Spring Security 性I的不同功能

00:22:47.690 --> 00:22:54.770
切换到HTTP基本，因为它是

00:22:51.410 --> 00:22:56.270
就有关客户而言

00:22:54.770 --> 00:22:58.480
是一样的，实际上是一点点

00:22:56.270 --> 00:23:04.100
在JavaScript方面更容易设置

00:22:58.480 --> 00:23:06.200
因为你不必转换你

00:23:04.100 --> 00:23:08.450
不必将数据转换为表单数据

00:23:06.200 --> 00:23:11.240
来自JSON的角度支持

00:23:08.450 --> 00:23:12.620
所以我切换到了陈旧的HTTP基本

00:23:11.240 --> 00:23:17.780
对我来说似乎更容易实现

00:23:12.620 --> 00:23:20.840
结果在客户端上是这样的

00:23:17.780 --> 00:23:24.650
您在HTML中拥有的一面

00:23:20.840 --> 00:23:25.610
事情，你有一个登录表格，并在

00:23:24.650 --> 00:23:28.820
登录表单

00:23:25.610 --> 00:23:31.190
有一个ng提交，所以说

00:23:28.820 --> 00:23:33.350
角去寻找当你何时

00:23:31.190 --> 00:23:36.350
用户提交此表单以查找我

00:23:33.350 --> 00:23:38.360
一个名为登录并执行该功能的函数

00:23:36.350 --> 00:23:40.960
功能，所以我必须定义

00:23:38.360 --> 00:23:45.770
我在内部执行的登录功能

00:23:40.960 --> 00:23:48.410
角度应用程序的ID在这里

00:23:45.770 --> 00:23:50.480
登录是一种功能，它很枯燥

00:23:48.410 --> 00:23:55.190
描述符登录名，因为此登录名是

00:23:50.480 --> 00:23:57.350
在我的UI内的控制器中，这样

00:23:55.190 --> 00:23:59.390
然后我用另一个定义登录

00:23:57.350 --> 00:24:01.910
实用工具功能

00:23:59.390 --> 00:24:03.410
进行身份验证，然后在某处进行定义

00:24:01.910 --> 00:24:05.150
否则我不需要定义，但是我

00:24:03.410 --> 00:24:08.360
可以在一分钟内显示在用户界面中

00:24:05.150 --> 00:24:11.300
在一分钟内IDE就可以了

00:24:08.360 --> 00:24:15.260
函数发送HTTP基本凭证

00:24:11.300 --> 00:24:16.850
然后检查斜杠用户端点

00:24:15.260 --> 00:24:20.630
我刚刚添加到您的端点中

00:24:16.850 --> 00:24:22.730
该应用程序，所以我确实使用HTTP 

00:24:20.630 --> 00:24:25.430
基本的第一个请求那里是什么

00:24:22.730 --> 00:24:27.680
 Pring安全做为回报

00:24:25.430 --> 00:24:31.790
我退回一个cookie，然后再

00:24:27.680 --> 00:24:34.700
从浏览器到

00:24:31.790 --> 00:24:35.420
应用程序代码由验证

00:24:34.700 --> 00:24:37.490
那个饼干

00:24:35.420 --> 00:24:40.730
暂停的Spring安全性和浏览器

00:24:37.490 --> 00:24:43.610
他们在一起的行为很好玩

00:24:40.730 --> 00:24:46.960
做每个人都做的另一件事

00:24:43.610 --> 00:24:50.480
开箱即用

00:24:46.960 --> 00:24:53.510
可以使用之前再做一件事

00:24:50.480 --> 00:24:55.429
在那里，您还需要调整角度a 

00:24:53.510 --> 00:24:57.280
有点好，所以我在

00:24:55.429 --> 00:24:59.660
初春安全性和棱角分明

00:24:57.280 --> 00:25:00.890
他们都有这些漂亮的功能

00:24:59.660 --> 00:25:02.330
他们讲的不太一样

00:25:00.890 --> 00:25:04.490
语言，你只需要一只狮子

00:25:02.330 --> 00:25:05.990
期望一点，这是其中之一

00:25:04.490 --> 00:25:08.960
你必须要做的事情

00:25:05.990 --> 00:25:10.880
您可以以及

00:25:08.960 --> 00:25:14.559
控制，因为你可以定义配置

00:25:10.880 --> 00:25:19.490
对于整个应用程序是全局的

00:25:14.559 --> 00:25:23.480
在我的配置中，我正在注入HTTP 

00:25:19.490 --> 00:25:26.540
提供程序，在HTTP提供程序中，我可以设置

00:25:23.480 --> 00:25:29.840
所有请求的默认标头，因此所有

00:25:26.540 --> 00:25:32.809
从角度到任何角度的要求

00:25:29.840 --> 00:25:36.679
后端基本上使用美元HTTP 

00:25:32.809 --> 00:25:41.570
服务将被要求

00:25:36.679 --> 00:25:43.490
然后加上特殊值的XML HTTP 

00:25:41.570 --> 00:25:48.350
要求，基本上就是说我是

00:25:43.490 --> 00:25:50.510
老式的1997年Ajax语言和

00:25:48.350 --> 00:25:51.830
我看到了Spring 安全的功能

00:25:50.510 --> 00:25:53.630
曾经是有角度的你的特征

00:25:51.830 --> 00:25:55.880
不必这样做，但是他们接受了

00:25:53.630 --> 00:25:57.860
出来，因为我不认为很多后端

00:25:55.880 --> 00:26:00.230
框架实际上了解这

00:25:57.860 --> 00:26:02.750
手段和Spring 安全性看待它

00:26:00.230 --> 00:26:05.330
说哦，你不只是浏览器

00:26:02.750 --> 00:26:08.570
你是浏览器中的脚本，所以我

00:26:05.330 --> 00:26:09.710
当我发送401时不需要

00:26:08.570 --> 00:26:14.120
回应，因为你不是

00:26:09.710 --> 00:26:16.910
经过验证，我不需要发送www- 

00:26:14.120 --> 00:26:19.580
验证，我将直接发送

00:26:16.910 --> 00:26:21.919
 401一个角度将能够

00:26:19.580 --> 00:26:24.049
解释说浏览器会很好

00:26:21.919 --> 00:26:27.410
然后不弹出与这些对话

00:26:24.049 --> 00:26:31.429
名称密码，我想我可能确实有

00:26:27.410 --> 00:26:34.970
时间只是快点做，所以我会

00:26:31.429 --> 00:26:36.470
保持基本，因为我可能会用它

00:26:34.970 --> 00:26:41.650
一分钟后进行另一个演示，我要去

00:26:36.470 --> 00:26:41.650
导入另一个

00:26:45.929 --> 00:26:58.240
来自博客的另一个项目

00:26:52.540 --> 00:27:00.280
系列这是帕特西，所以我现在感觉不

00:26:58.240 --> 00:27:02.860
只是索引点HTML但我有两个

00:27:00.280 --> 00:27:05.500
片段以及首页和登录点

00:27:02.860 --> 00:27:08.980
将HTML视为模板，因此

00:27:05.500 --> 00:27:12.160
在登录点HTML中，它不是完整的HTML 

00:27:08.980 --> 00:27:15.550
页面只是一个有错误的div 

00:27:12.160 --> 00:27:22.179
消息和表单用户名/密码

00:27:15.550 --> 00:27:25.090
在我将要使用的Java脚本中

00:27:22.179 --> 00:27:27.309
告诉你我有很多东西要

00:27:25.090 --> 00:27:31.350
使用我未描述的路线

00:27:27.309 --> 00:27:38.020
但是我有标题公共标题

00:27:31.350 --> 00:27:39.160
我有身份验证功能

00:27:38.020 --> 00:27:40.630
说那是我想做的主要事情

00:27:39.160 --> 00:27:43.150
在经过身份验证的地方向您展示

00:27:40.630 --> 00:27:45.190
功能需要凭证和

00:27:43.150 --> 00:27:47.440
可选工具，如果

00:27:45.190 --> 00:27:49.630
凭证在那里然后形成它们

00:27:47.440 --> 00:27:51.309
进入基本的身份验证标头

00:27:49.630 --> 00:27:54.580
这是v2，只是

00:27:51.309 --> 00:27:58.120
您拥有的JavaScript原语

00:27:54.580 --> 00:28:02.920
您的浏览器基本上让我

00:27:58.120 --> 00:28:04.179
运行它，因此Java应用程序非常

00:28:02.920 --> 00:28:07.020
与我们已经看到的相似

00:28:04.179 --> 00:28:09.700
除了它也有这个斜杠用户

00:28:07.020 --> 00:28:12.240
终点，有人指出

00:28:09.700 --> 00:28:14.860
博客中的评论说这是一个非常

00:28:12.240 --> 00:28:16.540
这些的愚蠢和基本实现

00:28:14.860 --> 00:28:18.640
在端点上（如果您这样做） 

00:28:16.540 --> 00:28:20.679
真的，你可能不会这样做

00:28:18.640 --> 00:28:22.480
这样你可能会退还

00:28:20.679 --> 00:28:23.920
所以这些不只是整个用户

00:28:22.480 --> 00:28:25.780
因为你不想透露

00:28:23.920 --> 00:28:28.210
关于它的一切，但这对

00:28:25.780 --> 00:28:30.550
开始吧，让我运行

00:28:28.210 --> 00:28:31.330
这次不是明确地代替

00:28:30.550 --> 00:28:34.540
使用键盘

00:28:31.330 --> 00:28:36.280
跑步者申请我会打中

00:28:34.540 --> 00:28:39.850
肯定希望我还没有运行

00:28:36.280 --> 00:28:43.990
我挂着的另一只好别

00:28:39.850 --> 00:28:45.250
就像我能及时到达那里

00:28:43.990 --> 00:28:48.670
没有及时到达

00:28:45.250 --> 00:28:52.179
好吧，如果他们

00:28:48.670 --> 00:28:54.870
会在端口8080上崩溃，所以我必须

00:28:52.179 --> 00:28:54.870
一次跑一个

00:28:57.790 --> 00:29:05.809
那里在端口8080上运行，所以我的

00:29:03.559 --> 00:29:08.030
我的浏览器窗口我不会

00:29:05.809 --> 00:29:11.830
用这个我要聪明

00:29:08.030 --> 00:29:18.820
再说一遍，我要使用一个新的

00:29:11.830 --> 00:29:23.900
隐身窗口好了，现在我有了

00:29:18.820 --> 00:29:26.510
我没有通过身份验证

00:29:23.900 --> 00:29:28.910
应用没有显示任何内容

00:29:26.510 --> 00:29:33.340
有趣的是我必须登录才能看到我的

00:29:28.910 --> 00:29:36.950
问候，我要说出用户密码

00:29:33.340 --> 00:29:38.690
我要打开开发者控制台

00:29:36.950 --> 00:29:41.450
在我这样做之前，有我的问候

00:29:38.690 --> 00:29:43.940
好吧，如果我们看看发生了什么

00:29:41.450 --> 00:29:46.750
有到用户端点的呼叫

00:29:43.940 --> 00:29:49.780
基本上就是那个

00:29:46.750 --> 00:29:54.370
进行身份验证，以便何时返回

00:29:49.780 --> 00:29:54.370
它带有基本凭证

00:29:57.700 --> 00:30:01.490
其实还可以带一个饼干，所以

00:29:59.929 --> 00:30:03.350
您没有看到认证

00:30:01.490 --> 00:30:05.360
他们认为认证核心在哪里

00:30:03.350 --> 00:30:10.580
身份验证工具只是一个电话

00:30:05.360 --> 00:30:12.559
削减用户，然后这很酷

00:30:10.580 --> 00:30:16.870
资源和点与

00:30:12.559 --> 00:30:19.160
基本示例好吧，所以我需要

00:30:16.870 --> 00:30:20.809
所有浏览器中的特殊标头

00:30:19.160 --> 00:30:25.220
要求只是停止对话框

00:30:20.809 --> 00:30:26.450
被浏览器弹出，有一个

00:30:25.220 --> 00:30:28.910
那里发生的事情的摘要

00:30:26.450 --> 00:30:30.950
浏览器第一次发送HTTP基本信息

00:30:28.910 --> 00:30:33.080
进行身份验证并返回Cookie 

00:30:30.950 --> 00:30:35.570
作为回报，然后在随后

00:30:33.080 --> 00:30:36.950
要求它总是发送cookie，为什么

00:30:35.570 --> 00:30:38.870
那是一件好事，因为那是什么

00:30:36.950 --> 00:30:42.320
浏览器是否总是发送Cookie和

00:30:38.870 --> 00:30:44.960
因此您不必编写任何代码，因此

00:30:42.320 --> 00:30:47.480
我的建议是找到一种方法

00:30:44.960 --> 00:30:51.010
基本上可以正常工作，这就是

00:30:47.480 --> 00:30:53.660
我们会处理其余的样本

00:30:51.010 --> 00:30:56.690
关于跨站点请求的简短信息

00:30:53.660 --> 00:30:58.370
伪造另一件事

00:30:56.690 --> 00:31:01.040
重要的是显然您想停止它

00:30:58.370 --> 00:31:03.620
 Spring 学期安全

00:31:01.040 --> 00:31:06.320
 angularjs都对

00:31:03.620 --> 00:31:07.790
跨站点请求伪造保护

00:31:06.320 --> 00:31:09.800
他们不太喜欢Dan 

00:31:07.790 --> 00:31:13.430
这样，这里是他们所做的摘要

00:31:09.800 --> 00:31:15.680
 Spring Security将令牌发送给它

00:31:13.430 --> 00:31:17.960
需要将令牌附加到

00:31:15.680 --> 00:31:20.180
会话，并且该令牌为

00:31:17.960 --> 00:31:22.030
当客户端附加到请求

00:31:20.180 --> 00:31:24.530
发送一个必须附加令牌的请求

00:31:22.030 --> 00:31:27.290
 Spring Security向客户讲述

00:31:24.530 --> 00:31:30.370
请求属性中的令牌

00:31:27.290 --> 00:31:34.010
默认或命名为下划线的Caesars和

00:31:30.370 --> 00:31:35.740
然后从客户的要求中

00:31:34.010 --> 00:31:39.790
需要一个标题

00:31:35.740 --> 00:31:45.640
 X减C冲浪令牌

00:31:39.790 --> 00:31:48.800
而有角度的它喜欢接受

00:31:45.640 --> 00:31:51.710
 cookie令牌值作为cookie 

00:31:48.800 --> 00:31:55.700
他们喜欢将Cookie称为

00:31:51.710 --> 00:31:57.620
过量过量RS不是CSRF，然后何时

00:31:55.700 --> 00:32:01.970
客户端发送标头时，应该

00:31:57.620 --> 00:32:05.270
是X减去X的RF，而不是X减去C SRS，所以

00:32:01.970 --> 00:32:09.440
他们彼此不交谈，但是

00:32:05.270 --> 00:32:11.720
我们可以解决该问题，以便我们可以添加一个

00:32:09.440 --> 00:32:14.690
Spring 的一点点配置

00:32:11.720 --> 00:32:16.190
支持此角度命名的安全性

00:32:14.690 --> 00:32:19.430
约定我更喜欢那样做

00:32:16.190 --> 00:32:21.230
因为我不太了解客户

00:32:19.430 --> 00:32:23.510
一边，所以我希望客户只是工作

00:32:21.230 --> 00:32:25.250
开箱即用，您可以听到另一个

00:32:23.510 --> 00:32:28.100
您可以仅使用Spring Security的方式

00:32:25.250 --> 00:32:30.950
开箱即用，尝试一下

00:32:28.100 --> 00:32:34.550
对此，但涉及Ashley 

00:32:30.950 --> 00:32:36.620
将涉及发送渲染的内容

00:32:34.550 --> 00:32:38.360
从服务器，所以它不是真的

00:32:36.620 --> 00:32:40.250
您将不再需要静态Web应用程序

00:32:38.360 --> 00:32:41.810
需要某种端点

00:32:40.250 --> 00:32:43.970
捕获令牌值

00:32:41.810 --> 00:32:47.780
无论如何，最容易的事至少

00:32:43.970 --> 00:32:49.730
我认为是为了确保Spring Security 

00:32:47.780 --> 00:32:51.050
只是将正确的数据发送到angular 

00:32:49.730 --> 00:32:52.580
在这里，我们在我们的网络安全中

00:32:51.050 --> 00:32:54.740
配置应用程序和相同的东西

00:32:52.580 --> 00:32:56.600
我们之前看过

00:32:54.740 --> 00:32:59.210
当我们完成另一种方法时

00:32:56.600 --> 00:33:01.490
我们授权的东西

00:32:59.210 --> 00:33:05.030
访问规则，然后我们开始配置

00:33:01.490 --> 00:33:07.490
论文和凯撒特色之一是

00:33:05.030 --> 00:33:10.070
您可以添加令牌存储库， 

00:33:07.490 --> 00:33:12.530
令牌存储库与

00:33:10.070 --> 00:33:15.380
默认值，但有一个不同的值

00:33:12.530 --> 00:33:17.870
标头名称，因此已全部处理

00:33:15.380 --> 00:33:20.510
问题的一半，另一半

00:33:17.870 --> 00:33:21.500
问题的事实是

00:33:20.510 --> 00:33:23.600
期待一个cookie 

00:33:21.500 --> 00:33:26.000
在这种情况下，我将使用

00:33:23.600 --> 00:33:28.130
自定义过滤器，所以我要说的是

00:33:26.000 --> 00:33:33.620
Spring Security 应用，请添加过滤器

00:33:28.130 --> 00:33:37.630
海先生过滤器后，请添加此

00:33:33.620 --> 00:33:40.370
自定义过滤器海浪头过滤器和

00:33:37.630 --> 00:33:41.750
那是实现的缺失

00:33:40.370 --> 00:33:45.130
但这基本上是一个过滤器

00:33:41.750 --> 00:33:48.410
如果是的话，发送一个cookie给客户端

00:33:45.130 --> 00:33:51.860
如果简历令牌已更改，那么它

00:33:48.410 --> 00:33:53.270
将发送一个cookie xsrf令牌，这是

00:33:51.860 --> 00:33:55.070
所有你需要使它工作我

00:33:53.270 --> 00:33:57.280
希望我们能与风合作

00:33:55.070 --> 00:34:01.340
这有点多

00:33:57.280 --> 00:34:04.220
声明式的开箱即用

00:34:01.340 --> 00:34:06.110
 Spring Security 4.0，如果您是shirley's 

00:34:04.220 --> 00:34:08.750
至少无论如何，直到 Spring 

00:34:06.110 --> 00:34:10.760
安全3.2，你可以让它像

00:34:08.750 --> 00:34:17.060
这就是样本的方式

00:34:10.760 --> 00:34:20.020
在博客上工作好吧，接下来

00:34:17.060 --> 00:34:22.399
我在博客中所做的就是拆分UI 

00:34:20.020 --> 00:34:24.860
 NCT a--所以我将UI设为静态

00:34:22.399 --> 00:34:25.700
资源和资源服务器

00:34:24.860 --> 00:34:26.990
度假村终点

00:34:25.700 --> 00:34:30.919
我将资源端点放在

00:34:26.990 --> 00:34:34.700
单独的服务器，所以这张照片我

00:34:30.919 --> 00:34:37.310
向您展示的是香草样品

00:34:34.700 --> 00:34:38.690
第三部分中使用的应用程序

00:34:37.310 --> 00:34:42.379
博客系列中实际上有

00:34:38.690 --> 00:34:44.800
第三部分中的两个应用程序，第一个是

00:34:42.379 --> 00:34:48.919
香草，它像这样工作

00:34:44.800 --> 00:34:51.169
 HTTP基本的UI，就像

00:34:48.919 --> 00:34:55.940
我们刚刚附上登录名的那个

00:34:51.169 --> 00:34:57.650
第一页，它还具有HTTP基本功能

00:34:55.940 --> 00:34:59.960
使用相同的资源服务

00:34:57.650 --> 00:35:06.050
凭证主要用于

00:34:59.960 --> 00:35:08.150
后端，还有第三部分

00:35:06.050 --> 00:35:09.920
我们所做的是我们介绍了 Spring 会议

00:35:08.150 --> 00:35:11.480
所以这是一件非常整洁的事情

00:35:09.920 --> 00:35:14.350
做一件你可以做的很整洁的事情

00:35:11.480 --> 00:35:16.880
看到您可以扩大这些应用程序

00:35:14.350 --> 00:35:19.700
在上一个站点中，您可以扩展为

00:35:16.880 --> 00:35:22.390
我曾经有过几种方式

00:35:19.700 --> 00:35:26.630
使用带有粘性会话的负载均衡器

00:35:22.390 --> 00:35:29.180
另一个是分发

00:35:26.630 --> 00:35:31.610
会话数据，所以我们进行分发

00:35:29.180 --> 00:35:33.950
会话日期使用Redis和

00:35:31.610 --> 00:35:35.400
 Spring 会议，就像我在

00:35:33.950 --> 00:35:37.799
 Spring 会议开始

00:35:35.400 --> 00:35:41.880
一个简单的方法可以做到这一点

00:35:37.799 --> 00:35:44.190
注释和只是一个寄存器

00:35:41.880 --> 00:35:48.150
后端，在这种情况下，我们拥有的是

00:35:44.190 --> 00:35:49.799
一个浏览器，它为

00:35:48.150 --> 00:35:51.750
首先请求，然后获取Cookie 

00:35:49.799 --> 00:35:55.440
以及对

00:35:51.750 --> 00:35:58.079
 UI，然后对于资源服务器是什么

00:35:55.440 --> 00:36:00.410
我们所做的就是将每个请求都转化为

00:35:58.079 --> 00:36:02.730
的资源，我们添加了标题

00:36:00.410 --> 00:36:07.230
这是一种身份验证令牌

00:36:02.730 --> 00:36:09.359
令牌值是cookie和

00:36:07.230 --> 00:36:11.700
那个山谷是饼干，所以我们有

00:36:09.359 --> 00:36:14.900
添加，我们必须制作该Cookie 

00:36:11.700 --> 00:36:19.819
可见到有角的，有一些

00:36:14.900 --> 00:36:22.490
编写代码来做到这一点的

00:36:19.819 --> 00:36:25.910
应用程序现在很可爱且可扩展

00:36:22.490 --> 00:36:28.829
但确实有一些

00:36:25.910 --> 00:36:31.260
它要做的皱纹是提取

00:36:28.829 --> 00:36:34.160
 50值并将其变成令牌

00:36:31.260 --> 00:36:36.240
 Spring 会议处理

00:36:34.160 --> 00:36:37.589
存储和分发

00:36:36.240 --> 00:36:41.220
意味着我现在可以扩展一切

00:36:37.589 --> 00:36:42.960
完美，但我做到了

00:36:41.220 --> 00:36:47.099
的认知和维持

00:36:42.960 --> 00:36:49.380
服务器和服务器的开销

00:36:47.099 --> 00:36:51.440
客户我已保存了此应用程序，因此

00:36:49.380 --> 00:36:55.920
有一个基本的 Spring 会议

00:36:51.440 --> 00:37:01.859
样本我在博客中做的下一件事

00:36:55.920 --> 00:37:04.529
在第4部分中，我们介绍了网关

00:37:01.859 --> 00:37:06.240
模式和网关的好处

00:37:04.529 --> 00:37:08.369
你基本上可以看到我坐的模式

00:37:06.240 --> 00:37:11.579
在这两张幻灯片之间

00:37:08.369 --> 00:37:14.220
同一组组件相同

00:37:11.579 --> 00:37:16.319
责任，但架构

00:37:14.220 --> 00:37:17.730
抱歉，错误的方式是

00:37:16.319 --> 00:37:19.500
架构略有不同，所以我

00:37:17.730 --> 00:37:24.089
现在要在它们之间滑动

00:37:19.500 --> 00:37:27.390
不是网关，不是网关， 

00:37:24.089 --> 00:37:28.589
与网关不同的是

00:37:27.390 --> 00:37:30.930
来自浏览器的请求

00:37:28.589 --> 00:37:33.240
通过网关，这就是为什么

00:37:30.930 --> 00:37:36.440
叫做网关，所以你可以做得很好

00:37:33.240 --> 00:37:39.029
我们对登录页面所做的事情

00:37:36.440 --> 00:37:42.390
应用单页应用

00:37:39.029 --> 00:37:43.799
实际上，在第二部分的开头

00:37:42.390 --> 00:37:45.960
可以为

00:37:43.799 --> 00:37:48.910
身份验证，然后使用来自

00:37:45.960 --> 00:37:54.940
然后所有的请求

00:37:48.910 --> 00:37:56.920
网关，所以网关只是奠定

00:37:54.940 --> 00:37:59.590
基本上把它交给

00:37:56.920 --> 00:38:01.900
后端，我只是使用完全相同的

00:37:59.590 --> 00:38:03.340
 Cookie标头基本上是资源

00:38:01.900 --> 00:38:05.440
据他所知，服务器只是

00:38:03.340 --> 00:38:07.900
从浏览器获取cookie 

00:38:05.440 --> 00:38:11.050
碰巧由她来了

00:38:07.900 --> 00:38:17.380
代理以及我们实施的方式

00:38:11.050 --> 00:38:19.840
这是使用 Spring 的云，我想

00:38:17.380 --> 00:38:22.420
我要做的是，我会走路

00:38:19.840 --> 00:38:23.770
通过示例，直到我进入

00:38:22.420 --> 00:38:25.120
我要跳出来做一个

00:38:23.770 --> 00:38:29.580
演示我会告诉你，我会回到

00:38:25.120 --> 00:38:32.110
这个例子好吧，然后再加上五个我

00:38:29.580 --> 00:38:34.060
占用了网关和资源

00:38:32.110 --> 00:38:36.520
基本上从完全相同的模式

00:38:34.060 --> 00:38:38.860
从第四部分开始，我们都在等待

00:38:36.520 --> 00:38:40.690
外部化身份验证

00:38:38.860 --> 00:38:44.050
而不是仅通过HTTP进行身份验证

00:38:40.690 --> 00:38:46.090
基本，这是一个单独的服务器，但

00:38:44.050 --> 00:38:50.260
调用授权服务器

00:38:46.090 --> 00:38:52.120
当时是高贵的两位，并且是Spring Security OAuth 

00:38:50.260 --> 00:38:54.370
 2实施，所以你基本上有

00:38:52.120 --> 00:38:57.160
浏览器中的两个Cookie，一个用于

00:38:54.370 --> 00:38:59.290
都是SSO的两个服务器

00:38:57.160 --> 00:39:01.660
令牌，因此您可以使用该令牌登录

00:38:59.290 --> 00:39:07.300
任何数量的应用程序，我们只是

00:39:01.660 --> 00:39:09.010
使用一个，然后进行身份验证

00:39:07.300 --> 00:39:12.190
流程将为

00:39:09.010 --> 00:39:15.400
网关，然后网关将移交

00:39:12.190 --> 00:39:16.990
一直到那里的资源服务器

00:39:15.400 --> 00:39:18.700
很抱歉，它不会交给

00:39:16.990 --> 00:39:20.200
饼干舞者的资源也是他

00:39:18.700 --> 00:39:21.880
不需要这个字符串会话你

00:39:20.200 --> 00:39:24.130
可以将其用于Cookie，如果您

00:39:21.880 --> 00:39:26.560
想要但在这种情况下的网关

00:39:24.130 --> 00:39:30.210
正在传递oauth2令牌

00:39:26.560 --> 00:39:32.560
我很抱歉进入资源服务器

00:39:30.210 --> 00:39:34.750
好吧，这是我可能会

00:39:32.560 --> 00:39:37.350
进入演示，让我们来

00:39:34.750 --> 00:39:40.390
为了争辩，我们要

00:39:37.350 --> 00:39:41.890
玩略有不同的游戏重排

00:39:40.390 --> 00:39:45.370
事情有点不同，所以

00:39:41.890 --> 00:39:47.980
而不是UI中的网关

00:39:45.370 --> 00:39:49.690
在同一组件中，假设我们要

00:39:47.980 --> 00:39:53.080
将网关分解为单独的

00:39:49.690 --> 00:39:55.960
组件并将后端留在

00:39:53.080 --> 00:39:58.300
此图片是单个单一资源

00:39:55.960 --> 00:39:59.710
但显然您可以尽快开始

00:39:58.300 --> 00:40:01.870
您已经准备好了网关

00:39:59.710 --> 00:40:04.210
然后拆分后端并进行

00:40:01.870 --> 00:40:06.820
不同的方式，我将向您展示

00:40:04.210 --> 00:40:10.570
基本上，我会做

00:40:06.820 --> 00:40:12.280
首先观察到这个UI加上

00:40:10.570 --> 00:40:14.400
底部的资源物

00:40:12.280 --> 00:40:16.480
屏幕的屏幕下方是

00:40:14.400 --> 00:40:18.730
与第一个基本相同

00:40:16.480 --> 00:40:22.510
应用我们曾经骑过最基本的

00:40:18.730 --> 00:40:25.210
所以如果我能接受这个基础

00:40:22.510 --> 00:40:27.640
样本并在其中放置一个非常简单的网关

00:40:25.210 --> 00:40:29.560
在它的前面，我将实现我的

00:40:27.640 --> 00:40:31.660
客观的，让我们看看我将如何

00:40:29.560 --> 00:40:33.520
这样做，所以我要怎么做

00:40:31.660 --> 00:40:37.600
我要使用哎呀，我不会

00:40:33.520 --> 00:40:41.410
使用f12我要使用一个新标签

00:40:37.600 --> 00:40:43.630
将使用一个新的选项卡转到此

00:40:41.410 --> 00:40:44.860
初始化应用程序中的一些

00:40:43.630 --> 00:40:46.750
您可能会看到与可能已经看到

00:40:44.860 --> 00:40:53.860
在此之前一点

00:40:46.750 --> 00:40:55.750
不同，因为它是板簧

00:40:53.860 --> 00:40:58.450
意识到云，所以实际上是 Spring 

00:40:55.750 --> 00:41:02.050
基于云的初始值设定项

00:40:58.450 --> 00:41:04.210
 spring boot ，所以在这里我可以添加所有

00:41:02.050 --> 00:41:07.240
多云的东西云模式和一个

00:41:04.210 --> 00:41:10.090
我想对动物园感兴趣，因为

00:41:07.240 --> 00:41:11.980
他是我不需要添加的网守

00:41:10.090 --> 00:41:14.110
网络，因为它包含在动物园中，但是我

00:41:11.980 --> 00:41:19.810
确实想拥有安全性，所以有一个

00:41:14.110 --> 00:41:21.400
动物园和安全性以及Redis，我会添加

00:41:19.810 --> 00:41:23.830
 Spring 的会议，因为它在这里，但它

00:41:21.400 --> 00:41:26.200
不是，所以我将生成我生成的代码

00:41:23.830 --> 00:41:31.000
这里的一个项目叫Gateway dog 

00:41:26.200 --> 00:41:34.620
拉链打开它，所以这只是一个

00:41:31.000 --> 00:41:42.940
处女处项目

00:41:34.620 --> 00:41:50.820
所以我将其提取出来，然后去

00:41:42.940 --> 00:41:55.450
我的IDE，我将其导入让我看看

00:41:50.820 --> 00:41:57.190
他们不再需要一个，但我

00:41:55.450 --> 00:41:59.580
保持我真正想要的基础

00:41:57.190 --> 00:42:03.280
实际上，我将要使用的基本功能是

00:41:59.580 --> 00:42:07.330
我会复制的，所以我要复制

00:42:03.280 --> 00:42:10.900
基本的，我称之为演示，所以我

00:42:07.330 --> 00:42:13.920
不要搞砸现有的基本

00:42:10.900 --> 00:42:13.920
只需删除基本

00:42:16.520 --> 00:42:22.320
好，所以我有一个新项目叫做

00:42:19.140 --> 00:42:35.310
演示，然后我将导入

00:42:22.320 --> 00:42:41.010
我的下载目录中的网关好

00:42:35.310 --> 00:42:45.090
所以这是我要进入的网关

00:42:41.010 --> 00:42:47.790
字符串会话，所以我需要添加

00:42:45.090 --> 00:42:50.370
依赖我让我的祖尔红了

00:42:47.790 --> 00:43:01.580
安全的东西我已经要

00:42:50.370 --> 00:43:05.970
添加 Spring 会议，我想

00:43:01.580 --> 00:43:11.550
发行版本好，就这样完成了

00:43:05.970 --> 00:43:17.430
然后在我的主要应用程序中

00:43:11.550 --> 00:43:20.850
转到启用工具代理和

00:43:17.430 --> 00:43:25.400
启用Redis HTTP，所以这是字符串

00:43:20.850 --> 00:43:29.970
云事物设置Azul，以便端点和

00:43:25.400 --> 00:43:32.070
这是 Spring 会议的事情

00:43:29.970 --> 00:43:34.550
这就是我所用的Java代码

00:43:32.070 --> 00:43:38.870
完成我实际上要做的就是

00:43:34.550 --> 00:43:41.820
我要重命名这个文件有

00:43:38.870 --> 00:43:45.180
之所以申请llamo，是因为

00:43:41.820 --> 00:43:54.030
更容易合作，所以我要

00:43:45.180 --> 00:43:56.280
添加任何一个密码，所以我

00:43:54.030 --> 00:43:58.440
知道如何登录我要说的

00:43:56.280 --> 00:44:01.140
我认为有关会话创建的一些事情

00:43:58.440 --> 00:44:02.550
永远够了，绝对是我，我是

00:44:01.140 --> 00:44:04.250
孩子也许用另一种来做，但是

00:44:02.550 --> 00:44:06.590
我必须取消默认会话

00:44:04.250 --> 00:44:09.270
创建策略，然后我必须做

00:44:06.590 --> 00:44:16.380
现在在代理中设置路由

00:44:09.270 --> 00:44:25.349
基本上说所有路由都是URI， 

00:44:16.380 --> 00:44:34.410
是HTTP localhost ，我们称之为80 81 

00:44:25.349 --> 00:44:35.910
好吧，嗯，是的，所以我想我

00:44:34.410 --> 00:44:37.859
知道我知道我需要做另一件事

00:44:35.910 --> 00:44:44.999
那个很好，所以我可以运行这个

00:44:37.859 --> 00:44:50.489
端口8080上的应用程序正常，因此可以在 Spring 运行

00:44:44.999 --> 00:44:52.440
做它作为Java应用程序运行的应用程序

00:44:50.489 --> 00:45:04.229
我会做的我都会做的

00:44:52.440 --> 00:45:10.319
要么都好，所以我离

00:45:04.229 --> 00:45:16.190
运行它，我可以告诉你，所以我

00:45:10.319 --> 00:45:20.160
没有什么就没有

00:45:16.190 --> 00:45:21.989
后端，但我可以告诉你它的

00:45:20.160 --> 00:45:24.539
根是有一个端点

00:45:21.989 --> 00:45:27.329
有所谓的根它有基本

00:45:24.539 --> 00:45:29.190
验证框如何，因为

00:45:27.329 --> 00:45:33.150
 Spring 的安全，这是我的根源

00:45:29.190 --> 00:45:34.910
哦，那是错的，然后我将您注销

00:45:33.150 --> 00:45:37.349
你是有原因的

00:45:34.910 --> 00:45:44.930
因为我指定了这个错误

00:45:37.349 --> 00:45:49.190
不知何故，这是所有路线的URL谢谢

00:45:44.930 --> 00:45:49.190
我要重启

00:45:57.960 --> 00:46:11.160
好吧，这又是我的根

00:46:07.380 --> 00:46:15.390
所以现在我发送给/ ui的任何内容

00:46:11.160 --> 00:46:16.410
你我闪过之后会去80 81 

00:46:15.390 --> 00:46:19.230
当然，那里什么都没有

00:46:16.410 --> 00:46:23.400
分钟，所以如果我这样做，我应该得到一个

00:46:19.230 --> 00:46:24.089
箭头是连接被拒绝是因为

00:46:23.400 --> 00:46:25.770
没有一个

00:46:24.089 --> 00:46:28.980
有点难看的错误，但这就是它

00:46:25.770 --> 00:46:30.180
如此便使某物出现在

00:46:28.980 --> 00:46:33.690
端口8081 

00:46:30.180 --> 00:46:37.470
我要把这张单曲

00:46:33.690 --> 00:46:40.910
页面应用程序，我将删除

00:46:37.470 --> 00:46:48.800
默认密码可以，但是我要

00:46:40.910 --> 00:46:48.800
添加会话创建策略和

00:46:49.339 --> 00:46:52.800
服务器端口8081 

00:46:51.540 --> 00:46:55.500
这样事情就可以运行了

00:46:52.800 --> 00:46:59.640
那里我只是要检查一件事

00:46:55.500 --> 00:47:02.250
快速，所以当它去资源

00:46:59.640 --> 00:47:04.140
这是相对资源，而不是绝对资源

00:47:02.250 --> 00:47:08.099
一个很好，因为我想要它

00:47:04.140 --> 00:47:11.099
相对于代理根好吧，所以我

00:47:08.099 --> 00:47:17.960
我基本上只有这个

00:47:11.099 --> 00:47:17.960
添加那个 Spring 会议的东西，所以

00:47:20.210 --> 00:47:32.540
我想要 Spring 证券1 0和

00:47:35.030 --> 00:47:47.400
 spring数据启动器Redis还可以

00:47:41.040 --> 00:47:49.740
我现有的用户界面中的这两件事

00:47:47.400 --> 00:47:51.450
应用程序，我只是这是

00:47:49.740 --> 00:47:55.859
我们在基本版本之前使用的相同版本

00:47:51.450 --> 00:47:58.890
启用Redis HTTP会话，然后如果我

00:47:55.859 --> 00:48:01.250
运行这个程序，每个人都相信他们

00:47:58.890 --> 00:48:01.250
手指

00:48:09.069 --> 00:48:15.980
所以它正在运行，并且与

00:48:12.549 --> 00:48:18.289
 HDTV基本但具有默认安全性

00:48:15.980 --> 00:48:19.910
设置，这是一个随机密码，所以我

00:48:18.289 --> 00:48:22.029
不知道那个密码是我不会

00:48:19.910 --> 00:48:26.900
能够登录该应用程序

00:48:22.029 --> 00:48:28.730
除了通过代理，让我们希望

00:48:26.900 --> 00:48:34.640
这是代理

00:48:28.730 --> 00:48:36.349
身份验证是好的，所以我做了什么

00:48:34.640 --> 00:48:38.210
但是我有我的身份验证

00:48:36.349 --> 00:48:40.519
密码代理和密码

00:48:38.210 --> 00:48:42.349
代理将请求传递回给

00:48:40.519 --> 00:48:44.269
代理记住的后端是

00:48:42.349 --> 00:48:47.660
完全为空，没有HTML或

00:48:44.269 --> 00:48:49.400
可以使用JavaScript，这样就可以了

00:48:47.660 --> 00:48:51.980
基本上告诉你这是多么简单

00:48:49.400 --> 00:48:54.470
设置一个有点

00:48:51.980 --> 00:48:55.789
平凡的网关，但它告诉你

00:48:54.470 --> 00:48:57.260
知道如何打开解锁

00:48:55.789 --> 00:49:00.950
您现在就可以开始添加的潜力

00:48:57.260 --> 00:49:03.079
功能和一件事，你可能会

00:49:00.950 --> 00:49:07.069
要做的第一步是打破

00:49:03.079 --> 00:49:08.960
再次分开后端，因此用户界面可能

00:49:07.069 --> 00:49:10.490
与API位于不同的资源中

00:49:08.960 --> 00:49:15.170
资源，然后您可以乘以

00:49:10.490 --> 00:49:16.490
这些，然后我们也许能够

00:49:15.170 --> 00:49:20.029
达到我们参与其中的地步

00:49:16.490 --> 00:49:21.769
博客中有六个，看起来像

00:49:20.029 --> 00:49:24.470
这个，所以我开始做这个

00:49:21.769 --> 00:49:27.200
已经编码github和想法

00:49:24.470 --> 00:49:30.440
在那后面是一个网关

00:49:27.200 --> 00:49:32.450
不像我刚才那样愚蠢或基本

00:49:30.440 --> 00:49:34.819
显示您实际上有一些HTML 

00:49:32.450 --> 00:49:37.970
因此它具有登录表单，因此您

00:49:34.819 --> 00:49:40.190
可以通过网关登录，然后

00:49:37.970 --> 00:49:43.069
它具有非常基本的导航功能，因此

00:49:40.190 --> 00:49:46.640
导航告诉用户他

00:49:43.069 --> 00:49:49.400
有可用的UI应用程序，或者

00:49:46.640 --> 00:49:51.410
一个以上的UI应用程序

00:49:49.400 --> 00:49:54.680
有一个针对用户的UI应用程序

00:49:51.410 --> 00:49:56.180
以绿色显示，另一个为管理员

00:49:54.680 --> 00:49:58.789
也有一个用户的应用程序

00:49:56.180 --> 00:50:00.710
适用于管理员用户的界面，以及

00:49:58.789 --> 00:50:03.349
管理员用户也分为

00:50:00.710 --> 00:50:08.299
读者和作家，所以在第6部分中

00:50:03.349 --> 00:50:10.730
进入是相当现实的使用

00:50:08.299 --> 00:50:13.130
您拥有访问规则的情况

00:50:10.730 --> 00:50:14.390
非常细致，唯一的地方

00:50:13.130 --> 00:50:17.119
你应该知道的那些

00:50:14.390 --> 00:50:18.230
精细的规则在后端

00:50:17.119 --> 00:50:21.350
组件和

00:50:18.230 --> 00:50:23.690
所以关键是 Spring 

00:50:21.350 --> 00:50:26.680
会话共享认证令牌

00:50:23.690 --> 00:50:28.910
在所有应用程序组件中

00:50:26.680 --> 00:50:31.750
所以他们基本上都共享相同的

00:50:28.910 --> 00:50:34.190
用户数据，他们可以看到自己的角色

00:50:31.750 --> 00:50:36.410
但是他们根据自己的决定

00:50:34.190 --> 00:50:38.990
在角色和现实网关中

00:50:36.410 --> 00:50:41.150
您在这里所拥有的也是

00:50:38.990 --> 00:50:42.980
后端数据库中的用户数据，因此

00:50:41.150 --> 00:50:45.640
你可能有一个活跃的

00:50:42.980 --> 00:50:47.810
目录或关系数据库

00:50:45.640 --> 00:50:50.930
 MongoDB之类的东西

00:50:47.810 --> 00:50:54.740
网关包含用户数据，然后

00:50:50.930 --> 00:50:58.010
将通过

00:50:54.740 --> 00:50:59.540
 Redis缓存基本上是这样

00:50:58.010 --> 00:51:03.050
第六部分

00:50:59.540 --> 00:51:05.810
我不会尝试向您展示所有

00:51:03.050 --> 00:51:08.450
今天的代码，但基本上就是

00:51:05.810 --> 00:51:11.330
从今天的演讲中

00:51:08.450 --> 00:51:15.590
一堆链接，这里是我的幻灯片

00:51:11.330 --> 00:51:18.500
在Prezi sicom中向您展示ha 

00:51:15.590 --> 00:51:20.660
可以在那里找到一个链接，我会得到他们的

00:51:18.500 --> 00:51:21.950
在PDF上并进入扬声器甲板

00:51:20.660 --> 00:51:24.620
点，但我在打印时遇到问题

00:51:21.950 --> 00:51:27.950
他们在那里，所以要小心那些

00:51:24.620 --> 00:51:30.110
几天可能是github 

00:51:27.950 --> 00:51:32.930
所有代码的仓库就是这个

00:51:30.110 --> 00:51:36.350
渴望斯普林斯安全角我

00:51:32.930 --> 00:51:37.670
可能会变成一堆插件

00:51:36.350 --> 00:51:41.990
某些时候，但在一分钟

00:51:37.670 --> 00:51:46.420
示例代码中有spring安全性

00:51:41.990 --> 00:51:49.250
强制在那里我运行的项目

00:51:46.420 --> 00:51:53.690
大量的 Spring Cloud 实际上在云中

00:51:49.250 --> 00:51:55.430
 Spring dot IO实际上认为

00:51:53.690 --> 00:51:57.590
通过单击，URL可能是错误的斜杠

00:51:55.430 --> 00:52:05.600
所以你的手我知道那很好

00:51:57.590 --> 00:52:07.610
可以正常工作，以便 Spring Cloud Netflix 

00:52:05.600 --> 00:52:09.410
还有其他远景 Spring 的云， 

00:52:07.610 --> 00:52:12.080
你可以从那里的根URL 

00:52:09.410 --> 00:52:15.050
 Netflix就是您的去处

00:52:12.080 --> 00:52:16.760
启用Zul代理，因此

00:52:15.050 --> 00:52:18.920
正确地将其包括在内

00:52:16.760 --> 00:52:22.790
你想做我以前开始的事情

00:52:18.920 --> 00:52:25.190
像云一样的 Spring 

00:52:22.790 --> 00:52:29.040
蔚蓝的云

00:52:25.190 --> 00:52:31.080
这是第一个博客的第一个链接， 

00:52:29.040 --> 00:52:33.540
从那里您可以点击进入

00:52:31.080 --> 00:52:35.310
我发表的前五个是我的

00:52:33.540 --> 00:52:37.770
聊天句柄，以防您抱怨

00:52:35.310 --> 00:52:39.960
我，如果你想做一百多个

00:52:37.770 --> 00:52:43.050
然后四十个字符mo吟

00:52:39.960 --> 00:52:53.010
给我发送电子邮件，就是这样，谢谢

00:52:43.050 --> 00:52:56.730
非常嘿，戴夫对不起

00:52:53.010 --> 00:53:01.290
卡在静音那里一秒钟哦，是的

00:52:56.730 --> 00:53:03.420
是的，你得到了我，很好，谢谢你

00:53:01.290 --> 00:53:06.290
这太好了，是的，所有

00:53:03.420 --> 00:53:10.580
后续链接就在那里

00:53:06.290 --> 00:53:13.260
我们只是追逐最后一对

00:53:10.580 --> 00:53:15.810
这里的问题我想我们已经很多了

00:53:13.260 --> 00:53:19.920
我参加了所有人

00:53:15.810 --> 00:53:21.960
最后一个可能是罗伯

00:53:19.920 --> 00:53:24.210
我经常看到的常年问题

00:53:21.960 --> 00:53:31.500
每当提到安全问题时，人们

00:53:24.210 --> 00:53:32.370
询问CAS与Roth的关系，但我没有

00:53:31.500 --> 00:53:34.530
知道那是不是你想要的

00:53:32.370 --> 00:53:36.110
重击，但我看到很多

00:53:34.530 --> 00:53:39.600
Spring Security 相关

00:53:36.110 --> 00:53:43.290
是的，我知道捕捉一个好

00:53:39.600 --> 00:53:45.150
系统测试是单点登录协议

00:53:43.290 --> 00:53:47.730
对于那些不熟悉它的人

00:53:45.150 --> 00:53:50.160
这在学术界很普遍

00:53:47.730 --> 00:53:53.100
这是一个很好的开源项目

00:53:50.160 --> 00:53:57.030
与运行它的人友好，我们

00:53:53.100 --> 00:53:58.500
偶尔尝试雇用他们，是的

00:53:57.030 --> 00:54:03.240
比它早一些的替代方案

00:53:58.500 --> 00:54:04.890
 OAuth 2至少不是这样

00:54:03.240 --> 00:54:07.470
不是标准，它有一些

00:54:04.890 --> 00:54:10.800
不同的功能，但如果您想

00:54:07.470 --> 00:54:12.810
运行一个单一的登录系统，它是

00:54:10.800 --> 00:54:15.990
这是一个有趣的起点

00:54:12.810 --> 00:54:18.900
与Spring 高度集成，因此

00:54:15.990 --> 00:54:22.500
这是一个很好的平台

00:54:18.900 --> 00:54:24.510
 Spring 的应用程序也是我开始

00:54:22.500 --> 00:54:26.370
知道我真的是最近，但是它用过

00:54:24.510 --> 00:54:28.380
因为还有更多

00:54:26.370 --> 00:54:30.840
服务器之间涉及的不休

00:54:28.380 --> 00:54:34.530
组件然后晚饭

00:54:30.840 --> 00:54:36.780
水管基本上是一样的

00:54:34.530 --> 00:54:39.160
具有大致讲代币的功能

00:54:36.780 --> 00:54:41.170
信任和

00:54:39.160 --> 00:54:46.270
单点登录之类的事情

00:54:41.170 --> 00:54:48.430
你出去吧，好吧

00:54:46.270 --> 00:54:51.310
 -似乎很受欢迎，你知道

00:54:48.430 --> 00:54:54.760
社交媒体和一些

00:54:51.310 --> 00:54:58.080
否则CAF哦，是的，这个meta主要是

00:54:54.760 --> 00:54:58.080
在学术界立足

00:54:58.290 --> 00:55:01.570
有趣的是我没意识到

00:55:00.670 --> 00:55:05.290
呵呵有趣

00:55:01.570 --> 00:55:07.900
好吧，嗯，看到伯纳德·奥尼尔问

00:55:05.290 --> 00:55:09.610
对于x.509，您是否会使用相同的过程

00:55:07.900 --> 00:55:12.670
与用于验证这种类型的网关

00:55:09.610 --> 00:55:13.960
我会生成一个cookie的

00:55:12.670 --> 00:55:16.270
因为那实际上是

00:55:13.960 --> 00:55:18.160
配置他不会很棘手

00:55:16.270 --> 00:55:20.980
想要在所有后端中做到这一点

00:55:18.160 --> 00:55:23.650
组件，除非您执行了该例程

00:55:20.980 --> 00:55:25.360
无论如何，但这只是

00:55:23.650 --> 00:55:30.820
控制器现在如此，可能在

00:55:25.360 --> 00:55:33.670
那样拉姆尼什问你好

00:55:30.820 --> 00:55:36.690
请求被路由到UI plus 

00:55:33.670 --> 00:55:40.360
通过网关或UI加上资源

00:55:36.690 --> 00:55:41.740
资源对不起，那是标签

00:55:40.360 --> 00:55:44.790
我是一个标签，贴在其中一个

00:55:41.740 --> 00:55:47.860
盒子是是好的抱歉好的酷

00:55:44.790 --> 00:55:50.650
关键区域，如果请求是

00:55:47.860 --> 00:55:52.420
是的，是的，如果请求是

00:55:50.650 --> 00:55:54.670
路由UI加资源通过

00:55:52.420 --> 00:55:56.680
网关，网关位于端口上

00:55:54.670 --> 00:55:59.190
 8080，并且该应用程序在端口8080上运行

00:55:56.680 --> 00:56:01.810
主要需求之一

00:55:59.190 --> 00:56:03.250
你知道看不到任何我

00:56:01.810 --> 00:56:05.350
意思是如果它来自

00:56:03.250 --> 00:56:08.410
浏览器到端口8081，但没有

00:56:05.350 --> 00:56:11.320
对，它通过代理，所以

00:56:08.410 --> 00:56:13.720
代理基本上意味着您可以控制

00:56:11.320 --> 00:56:16.180
共同的起源

00:56:13.720 --> 00:56:18.190
起源全部通过代理

00:56:16.180 --> 00:56:19.360
所以我没有提到这是一件好事

00:56:18.190 --> 00:56:22.420
我明白了

00:56:19.360 --> 00:56:24.700
除了通过共同的起源

00:56:22.420 --> 00:56:25.900
资源共享的头就像我

00:56:24.700 --> 00:56:28.090
说开始时它在

00:56:25.900 --> 00:56:29.980
浏览器，您应该使用该功能，但是

00:56:28.090 --> 00:56:31.420
实际上在服务器上实现它

00:56:29.980 --> 00:56:33.730
侧面有些棘手， 

00:56:31.420 --> 00:56:35.410
人们总是会出错，所以

00:56:33.730 --> 00:56:37.840
一件好事，如果您不必这样做

00:56:35.410 --> 00:56:39.370
这是主要原因之一

00:56:37.840 --> 00:56:40.510
我快速喜欢此代理的原因， 

00:56:39.370 --> 00:56:41.860
实际上是因为那意味着我没有

00:56:40.510 --> 00:56:43.060
头疼我不用担心

00:56:41.860 --> 00:56:45.430
关于它，我做对了

00:56:43.060 --> 00:56:49.510
我不必明确列出所有

00:56:45.430 --> 00:56:53.840
 API资源，例如

00:56:49.510 --> 00:56:56.960
共同的血统，所以我可以知道

00:56:53.840 --> 00:56:58.850
以任何方式破坏后端

00:56:56.960 --> 00:57:01.240
我喜欢的任何方式，我都不必

00:56:58.850 --> 00:57:07.130
更改原因的配置

00:57:01.240 --> 00:57:10.370
客户端上的过滤器看起来不错

00:57:07.130 --> 00:57:11.900
为...打开水闸

00:57:10.370 --> 00:57:15.200
问题是有一只幼崽手表进来了

00:57:11.900 --> 00:57:17.330
现在，让我们来看看Eli或Ellie 

00:57:15.200 --> 00:57:21.200
取决于他喜欢如何发音

00:57:17.330 --> 00:57:26.660
他的名字问动物园是否支持websocket 

00:57:21.200 --> 00:57:29.270
代理人问我这个不，我

00:57:26.660 --> 00:57:34.180
不要这么认为，因为它基于

00:57:29.270 --> 00:57:37.550
 Servlet API，这是版本1，所以

00:57:34.180 --> 00:57:39.680
网络修复中的所有内容都在下面

00:57:37.550 --> 00:57:45.050
版本2的开发基本上在

00:57:39.680 --> 00:57:46.940
 Zul版本2与服务无关， 

00:57:45.050 --> 00:57:49.370
比较严格，我很漂亮

00:57:46.940 --> 00:57:53.540
确保它不仅支持WebSockets 

00:57:49.370 --> 00:57:55.310
基本上是TCP，所以我们最终将使用

00:57:53.540 --> 00:57:57.070
在某个时候，但还没有准备好

00:57:55.310 --> 00:58:01.160
一分钟，我认为可能是

00:57:57.070 --> 00:58:04.850
 2015年底于2016年投产

00:58:01.160 --> 00:58:06.980
事情还好，那是从

00:58:04.850 --> 00:58:10.190
 Netflix拥有自己的权利

00:58:06.980 --> 00:58:12.500
很好，工作很好，我是说我们很漂亮

00:58:10.190 --> 00:58:15.770
大量参与其中的某些事情

00:58:12.500 --> 00:58:17.840
现在，是的，我想将会有

00:58:15.770 --> 00:58:19.490
女性网络研讨会将于今年晚些时候举行

00:58:17.840 --> 00:58:22.130
关于别人的一些东西

00:58:19.490 --> 00:58:26.930
在那废料中做，但是是的

00:58:22.130 --> 00:58:29.480
 -基本上是一种突破

00:58:26.930 --> 00:58:32.120
考虑到模具

00:58:29.480 --> 00:58:37.550
协议不仅适用于协议

00:58:32.120 --> 00:58:39.320
 API支持很棒，是的，是的

00:58:37.550 --> 00:58:40.700
肯定我一直在闲逛

00:58:39.320 --> 00:58:42.710
围绕着完全相同的思考

00:58:40.700 --> 00:58:44.380
想知道我们是否应该开始

00:58:42.710 --> 00:58:48.350
邀请一些Netflix员工参加

00:58:44.380 --> 00:58:49.090
现在是的，你认为你叫它

00:58:48.350 --> 00:58:53.450
那里

00:58:49.090 --> 00:58:56.240
 Stefan询问是否存在安全隐患

00:58:53.450 --> 00:58:59.120
包含

00:58:56.240 --> 00:59:02.350
这些项目的其余端点与

00:58:59.120 --> 00:59:02.350
经典的网络项目

00:59:05.640 --> 00:59:10.840
好吧，我可以阅读，如果可以，我可以再次阅读

00:59:08.350 --> 00:59:13.420
你不喜欢我是说我只是一个小岛

00:59:10.840 --> 00:59:16.210
对于第二个，也许罗布有一些

00:59:13.420 --> 00:59:22.150
评论更尖锐和或

00:59:16.210 --> 00:59:23.830
有见地和我的，我认为

00:59:22.150 --> 00:59:26.230
水闸基本上是因为

00:59:23.830 --> 00:59:28.020
门肯定有马

00:59:26.230 --> 00:59:30.840
无论如何，因为这些

00:59:28.020 --> 00:59:33.490
单页应用程序就是这样

00:59:30.840 --> 00:59:34.630
无处不在，因为用户喜欢我

00:59:33.490 --> 00:59:36.010
不要以为你能把那个

00:59:34.630 --> 00:59:38.650
精灵回到瓶子里，即使你

00:59:36.010 --> 00:59:41.740
想但是我想

00:59:38.650 --> 00:59:43.330
我的意思是什么问题，但是

00:59:41.740 --> 00:59:45.250
真的，那是常见的

00:59:43.330 --> 00:59:46.960
原始资源共享应该

00:59:45.250 --> 00:59:50.260
地址是不是我的意思是有

00:59:46.960 --> 00:59:54.610
客户涉及的安全风险

00:59:50.260 --> 00:59:57.970
存取您知道的资源

00:59:54.610 --> 00:59:59.620
不是完全静态的，但是如果您想

00:59:57.970 --> 01:00:01.480
您希望用户能够执行任何操作

00:59:59.620 --> 01:00:03.520
不平凡的你让他们去做

01:00:01.480 --> 01:00:08.410
这只是您如何控制的问题

01:00:03.520 --> 01:00:15.490
反应堆的原因是

01:00:08.410 --> 01:00:18.070
问题和身体

01:00:15.490 --> 01:00:20.980
后端资源的位置

01:00:18.070 --> 01:00:22.270
她与客户分享

01:00:20.980 --> 01:00:23.980
你不是真的那是另一回事

01:00:22.270 --> 01:00:27.730
拥有代理的优势不只是

01:00:23.980 --> 01:00:30.220
好吧，我的意思是前端不

01:00:27.730 --> 01:00:32.230
必须知道的结构

01:00:30.220 --> 01:00:36.550
完全可以是后端

01:00:32.230 --> 01:00:39.400
我喜欢并且除了动态

01:00:36.550 --> 01:00:42.430
是安全的，所以我不太清楚

01:00:39.400 --> 01:00:45.190
安全可能是我没想到

01:00:42.430 --> 01:00:49.060
原来的安全隐患

01:00:45.190 --> 01:00:52.390
问题似乎是针对

01:00:49.060 --> 01:00:57.580
是的，我仍然可以考虑

01:00:52.390 --> 01:01:01.150
留兰香的地方无论如何

01:00:57.580 --> 01:01:03.370
担心，嗯，我会让他跳进去

01:01:01.150 --> 01:01:09.540
如果他有什么要

01:01:03.370 --> 01:01:14.640
要添加一些东西，让我们看看还好吧

01:01:09.540 --> 01:01:19.590
我第一次这样做是为了做到这一点

01:01:14.640 --> 01:01:21.330
第二个大卫对不起，我有点迷失了自己

01:01:19.590 --> 01:01:23.150
放一点，好吧，我们去

01:01:21.330 --> 01:01:25.890
嗯

01:01:23.150 --> 01:01:29.280
是的，Rob跳进去了

01:01:25.890 --> 01:01:32.550
来自早期Bernard的CAS问题

01:01:29.280 --> 01:01:34.170
 O'Neil要求使用x.509 

01:01:32.550 --> 01:01:36.600
与网关相同的过程

01:01:34.170 --> 01:01:39.450
验证证书并生成一个

01:01:36.600 --> 01:01:42.450
 cookie，我想你已经问过我

01:01:39.450 --> 01:01:45.119
问题我很抱歉我很抱歉我

01:01:42.450 --> 01:01:48.630
对不起，我确实问过你，我确实问过

01:01:45.119 --> 01:01:53.850
那个我很抱歉，我猜我

01:01:48.630 --> 01:01:56.730
仍然没有失去我的位置好了

01:01:53.850 --> 01:02:00.000
有关ntlm身份验证的问题

01:01:56.730 --> 01:02:02.670
罗布处理了这里，我们去了普拉文·库玛

01:02:00.000 --> 01:02:05.040
请问授权如何支持

01:02:02.670 --> 01:02:06.510
使用Spring Cloud的微服务将

01:02:05.040 --> 01:02:07.590
沿着一个微型的路线

01:02:06.510 --> 01:02:09.869
照顾的服务

01:02:07.590 --> 01:02:13.740
授权和其他微服务

01:02:09.869 --> 01:02:20.760
点击此授权服务

01:02:13.740 --> 01:02:23.340
我那是那张照片，所以你

01:02:20.760 --> 01:02:25.859
可以那样做就可以了

01:02:23.340 --> 01:02:30.090
将所有身份验证构建到

01:02:25.859 --> 01:02:31.619
网关，我认为它真的出局了

01:02:30.090 --> 01:02:33.540
这取决于你，这就是美丽

01:02:31.619 --> 01:02:35.640
模式正确，因为它是完整的

01:02:33.540 --> 01:02:38.810
在网关中加载的Spring应用程序

01:02:35.640 --> 01:02:38.810
你可以在里面做任何你想做的

01:02:39.650 --> 01:02:44.609
是的，我是说你知道我在想什么时候他

01:02:42.810 --> 01:02:47.160
当他说Praveen说的时候去了

01:02:44.609 --> 01:02:49.590
我认为他的问题中的微服务

01:02:47.160 --> 01:02:52.260
那意味着他正在考虑一些

01:02:49.590 --> 01:02:54.540
有点机器让你无头

01:02:52.260 --> 01:02:55.350
知道某种类型的应用程序配置文件，但是

01:02:54.540 --> 01:02:58.109
我认为那真的不会改变

01:02:55.350 --> 01:03:02.020
您的回答正确，我的意思是您可能想要

01:02:58.109 --> 01:03:07.840
要知道，我的意思是，如果这样的话

01:03:02.020 --> 01:03:10.630
是的，那么您可以使用oauth2来获取

01:03:07.840 --> 01:03:12.760
令牌是您可以做的一件事， 

01:03:10.630 --> 01:03:17.290
或者您可以使用您认识的用户

01:03:12.760 --> 01:03:19.590
代表机器的帐户

01:03:17.290 --> 01:03:21.700
的用户，并且只使用普通

01:03:19.590 --> 01:03:24.490
身份验证器其他正常

01:03:21.700 --> 01:03:26.020
身份验证渠道，但通常

01:03:24.490 --> 01:03:28.000
在这些应用程序中发言

01:03:26.020 --> 01:03:30.430
让用户来驱动所有操作

01:03:28.000 --> 01:03:32.260
对，所以即使用户离线

01:03:30.430 --> 01:03:34.050
负责采取的每项行动

01:03:32.260 --> 01:03:38.890
所以你有点想联系

01:03:34.050 --> 01:03:40.900
最初与用户的每个请求

01:03:38.890 --> 01:03:42.340
特别是在这一页中

01:03:40.900 --> 01:03:51.340
应用程序不是我一直在谈论

01:03:42.340 --> 01:03:53.050
关于优秀的全能Alexius我

01:03:51.340 --> 01:03:54.460
不会尝试保存姓氏

01:03:53.050 --> 01:03:56.070
因为我想我真的会得到它

01:03:54.460 --> 01:03:58.780
错了

01:03:56.070 --> 01:04:01.960
 Alexia问我们是否在落后

01:03:58.780 --> 01:04:06.869
负载均衡器（例如NLB） 

01:04:01.960 --> 01:04:06.869
使用Zul时我们可以预期的问题

01:04:11.520 --> 01:04:19.330
任何使用Col的销售利益报价

01:04:16.480 --> 01:04:21.730
再一次，我是说我一直在使用扫罗

01:04:19.330 --> 01:04:23.200
在负载均衡器后面很多

01:04:21.730 --> 01:04:26.550
因为我在Cloud Foundry全部使用它

01:04:23.200 --> 01:04:29.200
我什么都没看见的时候

01:04:26.550 --> 01:04:32.950
很难，但我是说我知道

01:04:29.200 --> 01:04:35.109
代理可能会与HTTP混淆，因此您

01:04:32.950 --> 01:04:37.210
可以赢得任何邪恶的东西

01:04:35.109 --> 01:04:40.240
代理人可以恳求把你搞砸

01:04:37.210 --> 01:04:43.450
可能在某些情况下

01:04:40.240 --> 01:04:45.790
我看不到任何明显的东西

01:04:43.450 --> 01:04:47.800
只要代理很好就会发生

01:04:45.790 --> 01:04:55.270
表现并传递所有标题

01:04:47.800 --> 01:04:57.850
通过这样的事情，是的，我

01:04:55.270 --> 01:04:59.050
意思是我已经广泛使用了它，但是

01:04:57.850 --> 01:05:00.750
我没有发现任何问题

01:04:59.050 --> 01:05:05.680
我只能说

01:05:00.750 --> 01:05:08.080
知道了，可以处理道具

01:05:05.680 --> 01:05:10.330
和她拧在一起，他可以做到

01:05:08.080 --> 01:05:13.510
可能会发生的各种事情

01:05:10.330 --> 01:05:15.530
在作品中扔一个扳手，但我不

01:05:13.510 --> 01:05:18.830
在这里看到任何具体的例子

01:05:15.530 --> 01:05:20.060
我希望你感觉很好

01:05:18.830 --> 01:05:22.220
显然可以与Zoo中的那些东西

01:05:20.060 --> 01:05:24.140
因为它是高度可编程的

01:05:22.220 --> 01:05:26.420
如果你知道你期望什么

01:05:24.140 --> 01:05:28.190
财产，只要你不知道

01:05:26.420 --> 01:05:30.050
删除您无法获取的信息

01:05:28.190 --> 01:05:33.200
那时你可能可以操纵

01:05:30.050 --> 01:05:36.190
事情得到了

01:05:33.200 --> 01:05:38.210
好的，很有趣，所以祖尔是

01:05:36.190 --> 01:05:42.280
也可以以这种方式自定义

01:05:38.210 --> 01:05:46.490
有趣的好吧，让我们看看啊

01:05:42.280 --> 01:05:48.350
后来Reza问嗯我们要如何

01:05:46.490 --> 01:05:51.530
将springs social整合到以后

01:05:48.350 --> 01:05:57.310
单页假定您的意思是

01:05:51.530 --> 01:05:59.480
我想他的意思是

01:05:57.310 --> 01:06:04.400
再次回到那张图片

01:05:59.480 --> 01:06:07.790
在屏幕上现在 Spring 社交将是

01:06:04.400 --> 01:06:09.710
呼唤您知道Facebook或

01:06:07.790 --> 01:06:11.380
 YouTube或旧服务器

01:06:09.710 --> 01:06:15.380
而不是你自己的

01:06:11.380 --> 01:06:16.550
从根本上来说，实现的东西

01:06:15.380 --> 01:06:18.500
意味着它只是改变了你的方式

01:06:16.550 --> 01:06:20.120
在网关中实现安全性

01:06:18.500 --> 01:06:23.870
不会有太大变化，只是

01:06:20.120 --> 01:06:26.500
Spring Security 技巧改变的权利

01:06:23.870 --> 01:06:28.610
身份验证源，有时

01:06:26.500 --> 01:06:30.500
唯一的礼物，唯一的困难

01:06:28.610 --> 01:06:34.310
确实有时候， 

01:06:30.500 --> 01:06:37.640
用户体验可以接受，因为您

01:06:34.310 --> 01:06:39.050
知道用户必须选择是否

01:06:37.640 --> 01:06:40.460
您已获得多个身份验证

01:06:39.050 --> 01:06:42.470
资料来源，您如何变得更容易

01:06:40.460 --> 01:06:45.680
选择您知道使用哪个

01:06:42.470 --> 01:06:47.240
有些人无法信任

01:06:45.680 --> 01:06:48.680
选择一定的身高认证

01:06:47.240 --> 01:06:49.220
例如来源，然后

01:06:48.680 --> 01:06:51.950
一个问题

01:06:49.220 --> 01:06:53.600
但是如果你可以的话，妮娜

01:06:51.950 --> 01:06:55.490
Spring Security ，您可以在一个

01:06:53.600 --> 01:07:00.800
网关，因为这只是 Spring 

01:06:55.490 --> 01:07:02.840
安全应用程序好，所以我们即将

01:07:00.800 --> 01:07:05.630
七点之后，我认为我们有时间

01:07:02.840 --> 01:07:07.690
再问几个问题， 

01:07:05.630 --> 01:07:14.410
幸运的是，看起来就这样

01:07:07.690 --> 01:07:18.890
仍然很不错杰里米

01:07:14.410 --> 01:07:21.800
霍尔特问你好有关的风险

01:07:18.890 --> 01:07:24.040
安全，请稍等，我必须阅读

01:07:21.800 --> 01:07:24.040
再来一次

01:07:24.369 --> 01:07:34.299
哦，男孩，嗯

01:07:28.619 --> 01:07:37.509
好吧好吧

01:07:34.299 --> 01:07:41.559
哦好吧，所以他是他担心的

01:07:37.509 --> 01:07:44.739
拒绝服务攻击的风险

01:07:41.559 --> 01:07:48.339
有人分析了其他服务

01:07:44.739 --> 01:07:51.009
被称为正确，你觉得那是

01:07:48.339 --> 01:07:54.009
厨房评论说可能有

01:07:51.009 --> 01:07:56.979
也许是的，我的意思是如果你打开

01:07:54.009 --> 01:08:00.309
互联网资源，然后

01:07:56.979 --> 01:08:01.779
显然很容易受到这种伤害

01:08:00.309 --> 01:08:04.390
我的意思是我想唯一的一件事

01:08:01.779 --> 01:08:07.450
会说，如果您有网关

01:08:04.390 --> 01:08:09.700
像我们这样的可编程网关

01:08:07.450 --> 01:08:12.549
我刚刚展示的例子，那么你可以

01:08:09.700 --> 01:08:15.880
做限速之类的事情，你

01:08:12.549 --> 01:08:19.509
知道你可以应付一些共同点

01:08:15.880 --> 01:08:22.210
仅仅通过拒绝服务部门

01:08:19.509 --> 01:08:23.589
网关本身

01:08:22.210 --> 01:08:26.849
有趣的绝对是

01:08:23.589 --> 01:08:26.849
它被用于修复

01:08:27.630 --> 01:08:32.619
知道了，我的意思是浏览器需要

01:08:30.580 --> 01:08:34.569
联系浏览器需要的API资源

01:08:32.619 --> 01:08:36.069
与Pheo资源联系，以便您知道

01:08:34.569 --> 01:08:40.690
您只需要以某种方式找到一种方法

01:08:36.069 --> 01:08:42.159
处理那个速率限制是

01:08:40.690 --> 01:08:45.460
其中之一

01:08:42.159 --> 01:08:48.040
人们会不会想到

01:08:45.460 --> 01:08:49.960
作为功​​能框架的一些需求

01:08:48.040 --> 01:08:52.679
提起您实际上可以实施

01:08:49.960 --> 01:08:55.480
真的已经可以了

01:08:52.679 --> 01:08:57.099
我认为这是一个非常常见的用例

01:08:55.480 --> 01:09:03.940
我们可能会在

01:08:57.099 --> 01:09:06.969
如果有很棒的需求

01:09:03.940 --> 01:09:07.719
获取网络研讨会的功能请求集

01:09:06.969 --> 01:09:17.670
参加者

01:09:07.719 --> 01:09:20.859
喜欢它，好吧，让我们看看吧，好吧，嗯

01:09:17.670 --> 01:09:22.569
 Alexius你已经有一个问题我的

01:09:20.859 --> 01:09:25.810
朋友这么久让我确保我得到

01:09:22.569 --> 01:09:27.900
剩下的哦，等等，对不起

01:09:25.810 --> 01:09:30.339
我们做到了，我们确实回答了

01:09:27.900 --> 01:09:36.609
奇怪的东西出现在港口外

01:09:30.339 --> 01:09:37.700
啊，在这里，我们去吧II Eva Eva是啊Eva 

01:09:36.609 --> 01:09:40.190
问

01:09:37.700 --> 01:09:42.200
 IVA Elanco问嗨，什么是最好的

01:09:40.190 --> 01:09:46.970
使用访问控制的策略允许

01:09:42.200 --> 01:09:49.280
我认为带有 Spring 应用程序的原始标头

01:09:46.970 --> 01:09:51.260
 Rob已经实际发布了一个链接到

01:09:49.280 --> 01:09:55.240
聊天，它没有飞过

01:09:51.260 --> 01:09:59.810
 JIRA的 Spring 刊，要做的是

01:09:55.240 --> 01:10:02.470
 Spring 支持常见侵蚀

01:09:59.810 --> 01:10:05.480
你在说的是

01:10:02.470 --> 01:10:07.250
基本上有很多方法

01:10:05.480 --> 01:10:09.110
这些天的人只是写一个过滤器

01:10:07.250 --> 01:10:13.310
他们很安静，你知道的

01:10:09.110 --> 01:10:15.590
有点太钝了

01:10:13.310 --> 01:10:17.540
他们很高兴在

01:10:15.590 --> 01:10:19.910
非常简单的方法，或者实际上是

01:10:17.540 --> 01:10:21.530
更加微妙，我认为与Rob和

01:10:19.910 --> 01:10:23.810
罗素一起工作，我想你会

01:10:21.530 --> 01:10:26.420
看到 Spring 来了

01:10:23.810 --> 01:10:29.060
但希望在 Spring 4.2，如果 Spring 

01:10:26.420 --> 01:10:32.090
安全点的东西

01:10:29.060 --> 01:10:36.470
支持者更多的访问权限

01:10:32.090 --> 01:10:38.420
解决的东西是好的，所以其中之一

01:10:36.470 --> 01:10:39.950
我在博客中所做的样本有一个

01:10:38.420 --> 01:10:42.740
过滤器可以做到这一点，但这非常

01:10:39.950 --> 01:10:48.800
原油，我在上面发出了很大的健康警告

01:10:42.740 --> 01:10:50.510
它没有在生产中使用它

01:10:48.800 --> 01:10:55.880
很抱歉，Rob确实做到了

01:10:50.510 --> 01:11:01.220
回答我的道歉，所以我想我是

01:10:55.880 --> 01:11:02.110
认为我们在，你在这里做了

01:11:01.220 --> 01:11:04.370
今天

01:11:02.110 --> 01:11:08.600
好的，我们要关闭了，实际上有两个

01:11:04.370 --> 01:11:11.240
还有两个问题三个um，但我们

01:11:08.600 --> 01:11:12.680
戴夫几乎没时间了

01:11:11.240 --> 01:11:15.320
还可以再等两分钟

01:11:12.680 --> 01:11:19.160
参加最后两个问题，如此

01:11:15.320 --> 01:11:21.980
好的，好的，太好了，让我们

01:11:19.160 --> 01:11:24.830
在Praveen上看到

01:11:21.980 --> 01:11:26.330
再次Praveen Kumar是，并问如何

01:11:24.830 --> 01:11:28.460
是授权支持微

01:11:26.330 --> 01:11:30.500
使用Spring Cloud的服务会是

01:11:28.460 --> 01:11:33.410
沿线等一下哦

01:11:30.500 --> 01:11:35.300
是的，我想我们做了一个

01:11:33.410 --> 01:11:37.730
好像要出来两次

01:11:35.300 --> 01:11:39.140
这些问题是的，我认为人们是

01:11:37.730 --> 01:11:40.670
只是试图弹出到

01:11:39.140 --> 01:11:43.790
堆，他们正在把他们

01:11:40.670 --> 01:11:46.070
两次就可以了

01:11:43.790 --> 01:11:47.360
如果可能的话，可能只是反应不太快

01:11:46.070 --> 01:11:48.590
有人问一个问题，我不

01:11:47.360 --> 01:11:49.849
立即看到它们，他们可能只会

01:11:48.590 --> 01:11:52.369
再打一遍

01:11:49.849 --> 01:11:57.619
是的，我认为这正是

01:11:52.369 --> 01:11:58.969
发生的一切都很好Abhijit Abhijit问如何

01:11:57.619 --> 01:12:01.969
你通常部署角度

01:11:58.969 --> 01:12:03.739
你知道一个正常的应用程序

01:12:01.969 --> 01:12:06.639
角度动作只会具有静态

01:12:03.739 --> 01:12:09.260
您知道我们真的需要打仗吗

01:12:06.639 --> 01:12:12.699
是的，所以我没有隔离墙

01:12:09.260 --> 01:12:19.130
在我的应用程序中，我只有静态资源

01:12:12.699 --> 01:12:20.389
是的，是的，我是说如果没有

01:12:19.130 --> 01:12:22.730
有一个网关可能会有一些

01:12:20.389 --> 01:12:24.500
保留动态资源的原因

01:12:22.730 --> 01:12:26.570
因为我需要更改URL 

01:12:24.500 --> 01:12:28.780
像这样的后端

01:12:26.570 --> 01:12:31.790
有了网关，实际上没有任何网关

01:12:28.780 --> 01:12:33.710
只是部署静态的任何问题

01:12:31.790 --> 01:12:37.820
 HTML和JavaScript就这样

01:12:33.710 --> 01:12:40.520
在样品中甚至在生产中

01:12:37.820 --> 01:12:42.079
好吧，你说你正在跑步

01:12:40.520 --> 01:12:44.630
戴夫（Dave）的 spring boot 

01:12:42.079 --> 01:12:46.460
我疯了吗，是的，我可以

01:12:44.630 --> 01:12:49.610
如果需要，可以轻松离开我，但我没有

01:12:46.460 --> 01:12:51.349
是的，是的，我记得我

01:12:49.610 --> 01:12:52.730
 spring boot 出来后不久的爱

01:12:51.349 --> 01:12:55.130
我记得看过一篇关于如何

01:12:52.730 --> 01:12:57.050
用启动做静态资源

01:12:55.130 --> 01:13:01.190
我知道那是真的

01:12:57.050 --> 01:13:04.940
我不是，是啊，嗯，我想最后

01:13:01.190 --> 01:13:06.980
然后问题，另一个

01:13:04.940 --> 01:13:11.320
最后一个问题是

01:13:06.980 --> 01:13:14.030
被um bye bye Rob或or处理

01:13:11.320 --> 01:13:15.409
托尔斯滕，我想过的最后一个问题

01:13:14.030 --> 01:13:20.659
我们把它关闭了

01:13:15.409 --> 01:13:22.960
哦，男孩cou Jen Jen说哦，COO Jen kay 

01:13:20.659 --> 01:13:25.010
问你如何整合

01:13:22.960 --> 01:13:27.560
通过Facebook Twitter进行身份验证，例如

01:13:25.010 --> 01:13:29.599
功能已关闭

01:13:27.560 --> 01:13:30.860
在相关的 Spring 社交中实施

01:13:29.599 --> 01:13:32.960
项目我想我们已经回答了这个

01:13:30.860 --> 01:13:34.670
较早的mmm 

01:13:32.960 --> 01:13:36.650
是的，我是说我要

01:13:34.670 --> 01:13:40.730
放在网关中，这样在网关中

01:13:36.650 --> 01:13:44.810
您可以只链接您的Facebook或

01:13:40.730 --> 01:13:47.030
不管你知道用什么资源

01:13:44.810 --> 01:13:50.000
Spring Security 上下文，然后

01:13:47.030 --> 01:13:51.530
你基本上完成了

01:13:50.000 --> 01:13:54.980
已经有一些项目在做

01:13:51.530 --> 01:13:58.579
那个整合了 Spring 社会

01:13:54.980 --> 01:14:02.809
与Spring 安全过滤器叠放

01:13:58.579 --> 01:14:04.250
实际上，Spring Cloud安全性具有

01:14:02.809 --> 01:14:06.880
一些功能也支持

01:14:04.250 --> 01:14:08.989
声明式地在书上出来，但嗯

01:14:06.880 --> 01:14:12.739
这不只是一种实现方法

01:14:08.989 --> 01:14:15.139
在门户好人

01:14:12.739 --> 01:14:17.809
我们会非常感谢您的

01:14:15.139 --> 01:14:19.969
时间问题大家的关注

01:14:17.809 --> 01:14:21.800
戴夫的问题很好，谢谢

01:14:19.969 --> 01:14:24.739
我很清楚这是此博客文章

01:14:21.800 --> 01:14:27.469
系列只是你知道超级

01:14:24.739 --> 01:14:30.440
最近流行，所以在这个梦幻般的我们

01:14:27.469 --> 01:14:33.380
正在录制此会话，它将

01:14:30.440 --> 01:14:37.280
被发布到spring dot IO / video 

01:14:33.380 --> 01:14:39.530
是我们的YouTube频道吗？ 

01:14:37.280 --> 01:14:43.400
如果您订阅原子饲料

01:14:39.530 --> 01:14:45.550
 Spring 的加洛博客，你应该得到你的

01:14:43.400 --> 01:14:47.840
当我们收到通知时，您会收到通知

01:14:45.550 --> 01:14:53.329
当我们发布这个时，我试图插入

01:14:47.840 --> 01:15:00.349
 URL到聊天窗口中

01:14:53.329 --> 01:15:01.790
现在，在那里我们可以了

01:15:00.349 --> 01:15:03.889
因此，如果您滚动到

01:15:01.790 --> 01:15:05.949
聊天窗口中，您将看到两个链接

01:15:03.889 --> 01:15:08.599
 Spring 箭头博客解释我们的视频

01:15:05.949 --> 01:15:09.770
建议您是否要注意

01:15:08.599 --> 01:15:11.420
当它是什么张贴你

01:15:09.770 --> 01:15:12.800
订阅我们博客的原子供稿

01:15:11.420 --> 01:15:16.719
因为那样你也会得到所有

01:15:12.800 --> 01:15:20.000
工程学和

01:15:16.719 --> 01:15:21.650
 Spring 重播，你知道配件

01:15:20.000 --> 01:15:24.230
等等等等很多好东西

01:15:21.650 --> 01:15:26.059
显然如果你去过那里

01:15:24.230 --> 01:15:28.670
订阅您将已经看到

01:15:26.059 --> 01:15:32.480
 Dave的博客，因为它最初是

01:15:28.670 --> 01:15:34.639
在那里发布了，真是太好了，让我们

01:15:32.480 --> 01:15:37.190
看，我想我们很想让你来

01:15:34.639 --> 01:15:39.260
回来哦，是的

01:15:37.190 --> 01:15:41.119
你也可以Alexis就是我们你可以得到

01:15:39.260 --> 01:15:44.030
如果您关注我们，请使用Twitter 

01:15:41.119 --> 01:15:48.050
 Spring 中央，嗯，你也可以看到你

01:15:44.030 --> 01:15:49.969
知道我通常在什么时候发布推文

01:15:48.050 --> 01:15:52.159
重播可用，但如果您要

01:15:49.969 --> 01:15:53.900
我会签约的绝对保证

01:15:52.159 --> 01:15:57.260
偶尔我会写博客

01:15:53.900 --> 01:16:01.340
不要发布有关重播的推文，但这是

01:15:57.260 --> 01:16:04.489
例外而不是那么大的规则

01:16:01.340 --> 01:16:06.610
所以说到网络研讨会，请加入

01:16:04.489 --> 01:16:10.090
如果您喜欢此主题，请再次与我们联系

01:16:06.610 --> 01:16:11.820
我们领域的Scott挖矿将是

01:16:10.090 --> 01:16:14.190
主持另一个

01:16:11.820 --> 01:16:16.889
哇，他深受Dave博客的启发

01:16:14.190 --> 01:16:20.639
他实际上要去的系列

01:16:16.889 --> 01:16:24.030
基本上做了戴夫所做的

01:16:20.639 --> 01:16:25.770
带有聚合物前端，如果

01:16:24.030 --> 01:16:27.480
你知道你进入了另一个世界

01:16:25.770 --> 01:16:30.570
您的单曲的JavaScript前端

01:16:27.480 --> 01:16:33.090
聚合物上的页面应用程序可能会给

01:16:30.570 --> 01:16:36.960
是的，这是最新的网络

01:16:33.090 --> 01:16:40.010
 Google提供的框架，所以我的

01:16:36.960 --> 01:16:42.659
确切地说，我要去那个

01:16:40.010 --> 01:16:45.210
是的，我知道我很好奇

01:16:42.659 --> 01:16:47.190
自己看看差异，是的

01:16:45.210 --> 01:16:49.500
他对那个感到非常兴奋

01:16:47.190 --> 01:16:51.060
也就是2月20日的借口

01:16:49.500 --> 01:16:55.530
我是3月24日

01:16:51.060 --> 01:16:58.230
嗯，请随时加入我们的行列

01:16:55.530 --> 01:17:02.760
我要插入网址

01:16:58.230 --> 01:17:06.560
在聊天窗口中注册为

01:17:02.760 --> 01:17:10.110
那么应该朝着

01:17:06.560 --> 01:17:10.560
底部，让我们看看坚持吧，尝试一下

01:17:10.110 --> 01:17:13.500
再次

01:17:10.560 --> 01:17:16.920
是的，菲利普，我们应该有一个Facebook 

01:17:13.500 --> 01:17:19.290
页面，事实上，您在Facebook上吗

01:17:16.920 --> 01:17:21.119
您寻找Spring 源，您将

01:17:19.290 --> 01:17:25.250
找到一个不是我们发起的小组

01:17:21.119 --> 01:17:28.079
但也由我们部分管理

01:17:25.250 --> 01:17:29.820
然后每当我发布推文

01:17:28.079 --> 01:17:33.810
链接实际上将转到那些

01:17:29.820 --> 01:17:35.760
脸书网页好多了

01:17:33.810 --> 01:17:37.730
即将举行的网络研讨会

01:17:35.760 --> 01:17:41.000
尽管我仍然不同

01:17:37.730 --> 01:17:45.300
有角度的JavaScript前端

01:17:41.000 --> 01:17:47.699
乔什·朗（Josh Long）和朱利安·杜波依（Julian Dubois）将要

01:17:45.300 --> 01:17:51.540
参加，他们将成为

01:17:47.699 --> 01:17:54.510
介绍约曼的J时髦

01:17:51.540 --> 01:17:58.260
用于angularjs和spring的生成器

01:17:54.510 --> 01:17:59.699
 spring boot 非常酷的小应用程序

01:17:58.260 --> 01:18:01.079
发电机，这将继续

01:17:59.699 --> 01:18:04.469
 3月17日

01:18:01.079 --> 01:18:08.340
所以下个星期二所以请加入

01:18:04.469 --> 01:18:12.239
我们试图找到那个

01:18:08.340 --> 01:18:14.219
 URL，以便我可以将其插入窗口

01:18:12.239 --> 01:18:17.030
为你，我以为我有，但我猜

01:18:14.219 --> 01:18:19.530
我实际上是在看博客

01:18:17.030 --> 01:18:21.570
所以啊，我最后要提的是

01:18:19.530 --> 01:18:23.339
通常来说，如果你是

01:18:21.570 --> 01:18:27.569
希望获得

01:18:23.339 --> 01:18:29.280
首先，你知道任何形式的

01:18:27.569 --> 01:18:33.479
 Spring 项目只是意识到我们有

01:18:29.280 --> 01:18:35.159
 Spring 未启用HTTP下载

01:18:33.479 --> 01:18:40.199
爱荷华州的网站，这简直是可怕

01:18:35.159 --> 01:18:42.359
开发人员的经验真的

01:18:40.199 --> 01:18:43.919
使用Maven或Gradle更好，但是

01:18:42.359 --> 01:18:46.019
但是我们知道你们中有些人

01:18:43.919 --> 01:18:50.719
在军事网络或封闭网络上

01:18:46.019 --> 01:18:54.149
或位于50层以下的代理服务器和

01:18:50.719 --> 01:18:57.869
因此，您可以

01:18:54.149 --> 01:19:01.739
各种 Spring 的HTTP下载

01:18:57.869 --> 01:19:04.800
在reap repo spring bio的项目是

01:19:01.739 --> 01:19:07.499
当然不在您知道我们不会尝试

01:19:04.800 --> 01:19:11.519
让我们轻松体验

01:19:07.499 --> 01:19:14.010
但它们可用，所以如果您

01:19:11.519 --> 01:19:16.859
真的真的真的需要HTTP下载

01:19:14.010 --> 01:19:19.409
周末周末在那为你带来乐趣

01:19:16.859 --> 01:19:22.289
那是找到他们的地方，让我们看看

01:19:19.409 --> 01:19:25.169
几乎得到了我的J时髦URL 

01:19:22.289 --> 01:19:26.819
认为这会很有趣， 

01:19:25.169 --> 01:19:28.559
看到您在找到它时遇到一些麻烦

01:19:26.819 --> 01:19:31.169
但是无论如何，如果你环顾四周

01:19:28.559 --> 01:19:33.689
 Spring 现场，您将看到

01:19:31.169 --> 01:19:38.459
网络研讨会下一个应该在下周二举行

01:19:33.689 --> 01:19:40.409
 J时髦所以Dave非常感谢你

01:19:38.459 --> 01:19:42.300
很棒的很棒的演讲非常积极

01:19:40.409 --> 01:19:45.659
聊天中反馈给很多人

01:19:42.300 --> 01:19:46.909
说谢谢和很棒的演讲

01:19:45.659 --> 01:19:49.499
我只想让你知道

01:19:46.909 --> 01:19:51.389
在我们友善之前你想说的任何话

01:19:49.499 --> 01:19:56.459
将其关闭并将其带回家

01:19:51.389 --> 01:19:58.409
谢谢你，美好的一天

01:19:56.459 --> 01:20:01.219
下次大家见面时

01:19:58.409 --> 01:20:01.219
美好的一天再见

