WEBVTT
Kind: captions
Language: zh-Hans

00:00:10.190 --> 00:00:15.590
欢迎来到我在VLC Avis上的演讲

00:00:13.640 --> 00:00:18.650
在一家咨询公司工作

00:00:15.590 --> 00:00:20.900
比利时叫Dina，我去过

00:00:18.650 --> 00:00:23.000
完全为新图书馆做贡献

00:00:20.900 --> 00:00:23.990
好吧，大约一岁或一年， 

00:00:23.000 --> 00:00:27.619
一半

00:00:23.990 --> 00:00:29.450
叫做spring res Docs，所以我的标题是

00:00:27.619 --> 00:00:32.060
写作全面有保证

00:00:29.450 --> 00:00:33.500
最新的REST API文档

00:00:32.060 --> 00:00:34.910
少数几个，但我实际上想

00:00:33.500 --> 00:00:36.770
让它更长一点，我想写

00:00:34.910 --> 00:00:38.930
写作全面有保证

00:00:36.770 --> 00:00:41.780
使用的最新REST API文档

00:00:38.930 --> 00:00:44.000
实际上是一种测试驱动的方法

00:00:41.780 --> 00:00:46.190
非常独特，它真的给你

00:00:44.000 --> 00:00:49.970
写作时有一些不错的好处

00:00:46.190 --> 00:00:53.300
文档，我将尽力解释

00:00:49.970 --> 00:00:54.830
为什么在接下来的几张幻灯片中，当

00:00:53.300 --> 00:00:58.550
我们实际上是开始选择

00:00:54.830 --> 00:01:01.520
编写文档的工具，我们必须

00:00:58.550 --> 00:01:03.980
真正考虑一些概念

00:01:01.520 --> 00:01:05.780
真正帮助我们写作的原则

00:01:03.980 --> 00:01:08.770
良好的文档，不断

00:01:05.780 --> 00:01:11.509
最新，所以最重要的是

00:01:08.770 --> 00:01:13.810
在书面文件中是

00:01:11.509 --> 00:01:16.819
准确，因为我认为

00:01:13.810 --> 00:01:18.159
完全没有文档会更好

00:01:16.819 --> 00:01:21.229
比拥有准确的文档

00:01:18.159 --> 00:01:22.969
人们会感到沮丧

00:01:21.229 --> 00:01:26.509
他们会浪费我们的时间

00:01:22.969 --> 00:01:28.100
去，如果他们感觉像当他们

00:01:26.509 --> 00:01:30.439
获得他们无法信任的文档

00:01:28.100 --> 00:01:32.240
所以基本上他们要

00:01:30.439 --> 00:01:34.819
忽略它，然后你只有一堆

00:01:32.240 --> 00:01:37.700
您无法真正了解的文档

00:01:34.819 --> 00:01:39.950
做任何事情，所以你必须

00:01:37.700 --> 00:01:43.329
该工具中的某些方法可让您选择

00:01:39.950 --> 00:01:45.999
保证我们

00:01:43.329 --> 00:01:48.770
文档将是最新的，并且

00:01:45.999 --> 00:01:51.319
我认为使用测试驱动的方法

00:01:48.770 --> 00:01:53.420
可以实现这一目标，因为您的测试将

00:01:51.319 --> 00:01:55.939
真的失败了，以防您的文档

00:01:53.420 --> 00:01:59.770
已经不最新了，我将显示

00:01:55.939 --> 00:02:01.939
它如何工作，然后

00:01:59.770 --> 00:02:03.649
正确也是一件重要的事情

00:02:01.939 --> 00:02:07.549
使用您选择的工具

00:02:03.649 --> 00:02:09.920
文档可能在正确的位置

00:02:07.549 --> 00:02:13.220
有点抽象，所以基本上当你

00:02:09.920 --> 00:02:15.440
当您拥有传统的春季MVC时

00:02:13.220 --> 00:02:18.890
流，你基本上有一个领域模型

00:02:15.440 --> 00:02:21.470
 POJO然后由控制器处理

00:02:18.890 --> 00:02:23.780
控制器方法基本上有一个

00:02:21.470 --> 00:02:23.990
请求映射并接受pocho和

00:02:23.780 --> 00:02:26.510
然后

00:02:23.990 --> 00:02:28.070
最终将其翻译成杰森，但

00:02:26.510 --> 00:02:30.650
实际运作方式是

00:02:28.070 --> 00:02:34.960
使用响应实体，每个人都是

00:02:30.650 --> 00:02:37.430
熟悉Spring MVC是的

00:02:34.960 --> 00:02:38.210
然后有一些杰克逊继续

00:02:37.430 --> 00:02:40.760
如果您使用杰森

00:02:38.210 --> 00:02:43.370
所以这是做一些自定义的东西

00:02:40.760 --> 00:02:45.590
实例化一些序列化您的一些

00:02:43.370 --> 00:02:47.840
自定义序列化程序，它看起来有些

00:02:45.590 --> 00:02:50.240
您的域模型上的注释

00:02:47.840 --> 00:02:53.090
然后最终您有了HTTP 

00:02:50.240 --> 00:02:54.530
可以，所以如果您使用类似

00:02:53.090 --> 00:02:56.570
昂首阔步

00:02:54.530 --> 00:02:59.390
它实际上看着您的控制器， 

00:02:56.570 --> 00:03:02.780
在其中添加一些注释，然后尝试

00:02:59.390 --> 00:03:05.900
通过静态扣除信息

00:03:02.780 --> 00:03:07.370
分析您的代码，但基本上是什么

00:03:05.900 --> 00:03:09.470
该系统的缺点是

00:03:07.370 --> 00:03:12.170
实际上在错误的地方，因为你

00:03:09.470 --> 00:03:14.480
应该真的在记录HTTP 

00:03:12.170 --> 00:03:16.580
反应，因为我会大张旗鼓

00:03:14.480 --> 00:03:19.340
弄清楚杰克逊是什么

00:03:16.580 --> 00:03:22.040
这样做是通过尝试扣除

00:03:19.340 --> 00:03:24.320
但这最终将永远失败

00:03:22.040 --> 00:03:27.800
我的意思是在某些情况下失败了

00:03:24.320 --> 00:03:29.480
所以最好有一个工具

00:03:27.800 --> 00:03:32.270
查看您的HTTP响应， 

00:03:29.480 --> 00:03:35.090
您的HP请求实际上是

00:03:32.270 --> 00:03:36.800
可以保证的地方

00:03:35.090 --> 00:03:38.330
那就是你的客户要

00:03:36.800 --> 00:03:41.570
接收和客户端将要做什么

00:03:38.330 --> 00:03:44.090
发送，所以应该是可以的地方

00:03:41.570 --> 00:03:45.800
春天的红袜实际上正在寻找

00:03:44.090 --> 00:03:49.010
在那个时候好吧，那是

00:03:45.800 --> 00:03:52.130
你必须保持干燥的差异，所以

00:03:49.010 --> 00:03:53.360
您的控制器必须

00:03:52.130 --> 00:03:55.400
在控制器中与自己矛盾

00:03:53.360 --> 00:03:57.620
因为如果这样做，那么您将

00:03:55.400 --> 00:03:59.000
失去同步，您的文档

00:03:57.620 --> 00:04:03.160
不会再更新了

00:03:59.000 --> 00:04:05.810
所以在这里你有一个创造和

00:04:03.160 --> 00:04:08.210
最终是一个异常处理程序， 

00:04:05.810 --> 00:04:10.970
创造者将要返回

00:04:08.210 --> 00:04:14.810
已创建响应状态，因此，如果您只是

00:04:10.970 --> 00:04:16.430
看看它创造的两种饮料

00:04:14.810 --> 00:04:19.220
方法您将其发送给喜欢的方法

00:04:16.430 --> 00:04:22.730
招摇是用一些注释

00:04:19.220 --> 00:04:25.400
文档注释，所以在这里我们

00:04:22.730 --> 00:04:29.300
实际提到回应

00:04:25.400 --> 00:04:30.680
可以是400或201，这样就可以看到

00:04:29.300 --> 00:04:34.340
在这里有应用程序，如果您

00:04:30.680 --> 00:04:36.140
更改您的错误请求或将其创建为

00:04:34.340 --> 00:04:37.160
还有其他事情，你必须记住

00:04:36.140 --> 00:04:39.710
更新

00:04:37.160 --> 00:04:41.120
注释，这就是

00:04:39.710 --> 00:04:45.710
可能很快就会变得不同步

00:04:41.120 --> 00:04:46.790
很快，所以那里也有一些缺陷， 

00:04:45.710 --> 00:04:49.460
实际上当我们在写作时

00:04:46.790 --> 00:04:51.230
文档不是我的意见

00:04:49.460 --> 00:04:53.750
足以拥有东西

00:04:51.230 --> 00:04:56.600
发电机，你也想写一些

00:04:53.750 --> 00:04:59.690
某些真实文本起作用的东西

00:04:56.600 --> 00:05:02.000
帮助客户的消费者

00:04:59.690 --> 00:05:04.490
您的服务要基本了解

00:05:02.000 --> 00:05:07.400
服务更好，所以当你做的时候

00:05:04.490 --> 00:05:09.680
写那是一个好主意

00:05:07.400 --> 00:05:12.190
在一个实际上是

00:05:09.680 --> 00:05:15.110
设计用于编写文档和

00:05:12.190 --> 00:05:18.530
 markdown或asciidoc我想我们都知道

00:05:15.110 --> 00:05:21.920
两者中的任何一个都很棒

00:05:18.530 --> 00:05:24.350
编写文档纯文本的方式

00:05:21.920 --> 00:05:26.030
或者更复杂的语法，例如

00:05:24.350 --> 00:05:28.220
桌子和东西实际上是

00:05:26.030 --> 00:05:29.870
真的很简单，如果

00:05:28.220 --> 00:05:32.150
想用别的东西做

00:05:29.870 --> 00:05:33.560
这不是，不是真的

00:05:32.150 --> 00:05:38.720
为您设计的

00:05:33.560 --> 00:05:41.300
很难，所以这些很重要

00:05:38.720 --> 00:05:42.860
正确的事情和春天的草

00:05:41.300 --> 00:05:45.110
会谈使用测试驱动方法

00:05:42.860 --> 00:05:47.470
实现这些事情，所以让我们来

00:05:45.110 --> 00:05:50.330
首先看看它是如何工作的

00:05:47.470 --> 00:05:53.630
基本上写集成测试

00:05:50.330 --> 00:05:56.240
在这些整合中不断执行

00:05:53.630 --> 00:05:58.340
测试您可以添加一个钩子，您可以

00:05:56.240 --> 00:06:00.410
发现它实际执行时

00:05:58.340 --> 00:06:02.810
请求和响应，但它使用

00:06:00.410 --> 00:06:06.680
从中获得的信息

00:06:02.810 --> 00:06:09.140
来证明我会得到的东西

00:06:06.680 --> 00:06:11.120
以后也一样，一旦

00:06:09.140 --> 00:06:14.720
这些集成测试可以

00:06:11.120 --> 00:06:17.240
根据以下信息生成信息摘要

00:06:14.720 --> 00:06:19.250
从运行中获取的任何III 

00:06:17.240 --> 00:06:22.730
然后可以测试这些片段

00:06:19.250 --> 00:06:25.280
在asciidoc或markdown文件中使用

00:06:22.730 --> 00:06:28.670
你在其中包括那是真的

00:06:25.280 --> 00:06:30.170
简单，然后您实际上就在

00:06:28.670 --> 00:06:31.790
您编写的模板

00:06:30.170 --> 00:06:33.200
改变不会改变

00:06:31.790 --> 00:06:35.630
但这给了我更多的见解

00:06:33.200 --> 00:06:38.480
 API和通常的东西

00:06:35.630 --> 00:06:40.400
变化是自动产生的

00:06:38.480 --> 00:06:42.500
测试，所以这是一个很好的组合， 

00:06:40.400 --> 00:06:44.800
然后最终您将其编译为

00:06:42.500 --> 00:06:46.970
我们也在PDF或其他格式中使用HTML 

00:06:44.800 --> 00:06:48.560
这最终将是你

00:06:46.970 --> 00:06:49.690
文档，这就是休息的方式

00:06:48.560 --> 00:06:51.450
 Doc的作品

00:06:49.690 --> 00:06:53.530
这实际上是一种测试驱动的方法

00:06:51.450 --> 00:06:56.560
让我们来看看我们每个

00:06:53.530 --> 00:06:58.750
个人分阶段如何

00:06:56.560 --> 00:07:03.340
看起来像在代码中，所以如果在这里

00:06:58.750 --> 00:07:04.780
有一个传统的莫，我们可以看到电话是

00:07:03.340 --> 00:07:07.720
每个熟悉莫的人都能看到

00:07:04.780 --> 00:07:11.410
我可以展示一下让你的手好吗

00:07:07.720 --> 00:07:12.640
是的，几乎每个人都这样

00:07:11.410 --> 00:07:14.230
所以基本上这很漂亮

00:07:12.640 --> 00:07:17.170
很简单，你只是继续

00:07:14.230 --> 00:07:20.190
你尝试在这里买第一辆车， 

00:07:17.170 --> 00:07:22.270
然后去断言那是

00:07:20.190 --> 00:07:24.370
这总是你要去的东西

00:07:22.270 --> 00:07:27.160
在进行集成测试时

00:07:24.370 --> 00:07:28.810
只是检查状态是否正常，然后

00:07:27.160 --> 00:07:31.360
 Doc在做什么，实际上是

00:07:28.810 --> 00:07:33.700
调姑妈做嘲笑的方法

00:07:31.360 --> 00:07:36.460
莱西添加一个钩子来生成一些

00:07:33.700 --> 00:07:38.680
文档，您可以

00:07:36.460 --> 00:07:41.650
实际上开始提供一些

00:07:38.680 --> 00:07:45.100
说明文件

00:07:41.650 --> 00:07:49.660
例如带有名称的参数

00:07:45.100 --> 00:07:51.280
汽车ID或响应字段，因此

00:07:49.660 --> 00:07:54.100
实例您返回响应字段

00:07:51.280 --> 00:07:55.900
您可以在这里实际使用的品牌

00:07:54.100 --> 00:07:57.160
这个地方你可以描述它而不是

00:07:55.900 --> 00:07:58.330
在生产代码中

00:07:57.160 --> 00:08:01.590
使用您将有代码的注释

00:07:58.330 --> 00:08:04.390
血液，所以也有可能

00:08:01.590 --> 00:08:06.370
重用常见字段的文档

00:08:04.390 --> 00:08:09.130
总是在每个请求中回来

00:08:06.370 --> 00:08:11.290
和回应，而更多的是

00:08:09.130 --> 00:08:12.790
我稍后会介绍的方式

00:08:11.290 --> 00:08:15.370
这就是整合中得到的

00:08:12.790 --> 00:08:17.860
测试然后生成片段

00:08:15.370 --> 00:08:20.440
所以在这种情况下，这些东西是

00:08:17.860 --> 00:08:22.030
 asciidoc也可以被嘲笑

00:08:20.440 --> 00:08:23.800
收到一个抓取请求，然后您就可以

00:08:22.030 --> 00:08:26.290
显示在您的文档中，以便人们

00:08:23.800 --> 00:08:29.230
可以测试它，也可以使用HTTP I 

00:08:26.290 --> 00:08:31.419
卷曲更复杂

00:08:29.230 --> 00:08:34.479
基本上也有一些着色

00:08:31.419 --> 00:08:35.860
回应和要求机构，以及

00:08:34.479 --> 00:08:38.740
这是新的，我一一与

00:08:35.860 --> 00:08:42.370
方式，也只有传统的HTTP 

00:08:38.740 --> 00:08:44.380
请求注释，以便您收到请求

00:08:42.370 --> 00:08:46.210
您也可以执行请求的代码段

00:08:44.380 --> 00:08:48.670
两个参数片段

00:08:46.210 --> 00:08:50.620
记录自动生成的表

00:08:48.670 --> 00:08:52.690
参数名称和

00:08:50.620 --> 00:08:53.890
说明，然后是

00:08:52.690 --> 00:08:56.650
您输入的课程

00:08:53.890 --> 00:08:58.990
然后测试响应片段

00:08:56.650 --> 00:09:00.580
也将与

00:08:58.990 --> 00:09:02.350
请求片段，您可以在其中查看

00:09:00.580 --> 00:09:03.990
响应主体是否存在

00:09:02.350 --> 00:09:07.300
您可以对请求正文进行相同的操作

00:09:03.990 --> 00:09:08.350
我的意思是有一堆

00:09:07.300 --> 00:09:10.390
自动摘录

00:09:08.350 --> 00:09:11.890
生成的，所以在这里您可以看到

00:09:10.390 --> 00:09:16.660
我们已经讨论过请求女孩

00:09:11.890 --> 00:09:18.760
 HTTP HTTP by request字段，因为两者

00:09:16.660 --> 00:09:21.850
通过remiel参数和请求计时器

00:09:18.760 --> 00:09:25.300
参数也很遗憾标题

00:09:21.850 --> 00:09:28.030
也可以生成并请求零件

00:09:25.300 --> 00:09:29.890
您有一个多部分的请求，它也是

00:09:28.030 --> 00:09:31.750
可能为生成文档

00:09:29.890 --> 00:09:34.110
在回应方面，你有

00:09:31.750 --> 00:09:36.460
响应字段超媒体链接

00:09:34.110 --> 00:09:38.080
响应标头和响应字段I 

00:09:36.460 --> 00:09:40.420
意思是我只想得到一点

00:09:38.080 --> 00:09:44.220
进入它正在使用的超媒体链接

00:09:40.420 --> 00:09:46.960
超媒体或了解超媒体

00:09:44.220 --> 00:09:49.240
好，所以没有那么多超媒体

00:09:46.960 --> 00:09:51.400
基本上可以让您从一个链接

00:09:49.240 --> 00:09:54.280
资源给另一个，这样你就不会

00:09:51.400 --> 00:09:56.140
必须标记所有的眼睛

00:09:54.280 --> 00:09:58.930
所有资源中，所以

00:09:56.140 --> 00:10:00.640
去耦，实际上很漂亮

00:09:58.930 --> 00:10:02.290
很难记录下来，因为你

00:10:00.640 --> 00:10:04.560
真的必须调查响应

00:10:02.290 --> 00:10:08.410
 Jason中有链接的身体

00:10:04.560 --> 00:10:11.110
例如，然后为您提供

00:10:08.410 --> 00:10:13.120
给你我的其他资源，如果

00:10:11.110 --> 00:10:14.500
您正在采取以欧洲为中心的方法

00:10:13.120 --> 00:10:17.320
您的文档，如果您要

00:10:14.500 --> 00:10:19.450
像招摇摇晃地带你的例子

00:10:17.320 --> 00:10:21.640
显示您的整个眼睛列表

00:10:19.450 --> 00:10:23.500
您的API人员有空

00:10:21.640 --> 00:10:24.940
将添加书签，那就是

00:10:23.500 --> 00:10:28.180
您想要避免使用hyper 

00:10:24.940 --> 00:10:31.000
媒体，因此您基本上可以通过这种方式

00:10:28.180 --> 00:10:32.500
在您的表格中获取超媒体链接

00:10:31.000 --> 00:10:34.690
文档中，我还将在

00:10:32.500 --> 00:10:37.630
稍后进行演示，因此您可以

00:10:34.690 --> 00:10:40.560
解耦很多，并强制解耦为

00:10:37.630 --> 00:10:44.770
好，所以开箱即用

00:10:40.560 --> 00:10:46.810
好吧，这些是片段，然后

00:10:44.770 --> 00:10:49.450
让我们看一下文档

00:10:46.810 --> 00:10:52.450
您必须在其中编写的模板

00:10:49.450 --> 00:10:55.780
滑雪谈话或降价促销，这样您就可以看到

00:10:52.450 --> 00:10:57.550
这很容易写给你

00:10:55.780 --> 00:11:00.270
不想在那里写东西

00:10:57.550 --> 00:11:03.700
这将改变很多，只是一些

00:11:00.270 --> 00:11:05.920
一些功能信息，以帮助

00:11:03.700 --> 00:11:10.720
客户开发人员更好地了解它

00:11:05.920 --> 00:11:13.180
然后您基本上将

00:11:10.720 --> 00:11:15.740
在那里的片段，您可以看到路径栏

00:11:13.180 --> 00:11:17.900
磨损参数和卷曲请求

00:11:15.740 --> 00:11:20.480
像那样被包括在内

00:11:17.900 --> 00:11:21.740
直截了当好吧，所以一旦你

00:11:20.480 --> 00:11:25.160
得到了模板，得到了摘录

00:11:21.740 --> 00:11:27.590
您可以生成HTML，看起来

00:11:25.160 --> 00:11:30.230
基本上整齐，基本上是格式

00:11:27.590 --> 00:11:32.090
为您准备的一切，包括

00:11:30.230 --> 00:11:34.820
您生成的片段好吗

00:11:32.090 --> 00:11:39.260
这基本上是最重要的部分

00:11:34.820 --> 00:11:46.330
其余Doc的工作原理还不错，所以让

00:11:39.260 --> 00:11:52.910
我演示一个快速演示然后好吧

00:11:46.330 --> 00:11:54.940
如果必须克隆则看不到

00:11:52.910 --> 00:11:54.940
那

00:11:59.420 --> 00:12:06.280
好吧

00:12:01.990 --> 00:12:10.350
是的，好的，哦，等待错误的屏幕，好吗

00:12:06.280 --> 00:12:13.090
这个好吧，所以我们有

00:12:10.350 --> 00:12:15.310
基本上是一个非常简单的应用程序

00:12:13.090 --> 00:12:16.600
而且非常简单，可能是

00:12:15.310 --> 00:12:20.110
您将要进行的最简单的演示

00:12:16.600 --> 00:12:21.490
在这次会议上看到这一点，所以我们

00:12:20.110 --> 00:12:24.400
有汽车管理员，我们有汽车

00:12:21.490 --> 00:12:28.690
和司机，所以汽车基本上是

00:12:24.400 --> 00:12:32.410
一个ID，一个品牌和门，然后

00:12:28.690 --> 00:12:39.070
有了一个汽车控制器，基本上

00:12:32.410 --> 00:12:42.490
把它作为API返回汽车

00:12:39.070 --> 00:12:46.750
使用您的I汽车斜线ID，因此

00:12:42.490 --> 00:12:48.520
非常简单，实际上并没有使用

00:12:46.750 --> 00:12:52.480
后端或我刚刚返回的任何内容

00:12:48.520 --> 00:12:55.150
它是静态的，但是好吧，基本上是

00:12:52.480 --> 00:12:58.030
在那里展示什么测试驱动

00:12:55.150 --> 00:13:01.120
方法看起来像这样的车

00:12:58.030 --> 00:13:05.230
控制器基本上是回车的

00:13:01.120 --> 00:13:11.560
我有一个演示应用程序在这里等待

00:13:05.230 --> 00:13:13.150
在这里测试不好意思，所以可以测试

00:13:11.560 --> 00:13:15.790
这基本上就是我去过的

00:13:13.150 --> 00:13:17.500
在幻灯片中显示，这样您就可以

00:13:15.790 --> 00:13:20.140
在这里模拟MVC调用

00:13:17.500 --> 00:13:22.900
表演只是赶车，它确实

00:13:20.140 --> 00:13:25.210
 N期望这是可以的，所以

00:13:22.900 --> 00:13:27.850
非常简单，然后我们已经

00:13:25.210 --> 00:13:31.180
完成了可以记录

00:13:27.850 --> 00:13:34.840
汽车和获取资源的一部分

00:13:31.180 --> 00:13:38.050
在那里进行预处理响应

00:13:34.840 --> 00:13:40.330
基本上是什么时候

00:13:38.050 --> 00:13:42.700
要求已在模拟使馆内回复

00:13:40.330 --> 00:13:45.310
在将其放入片段之前，您可以

00:13:42.700 --> 00:13:47.890
实际上在这方面做了一些事情

00:13:45.310 --> 00:13:49.420
外壳要漂亮地印刷，以便看起来

00:13:47.890 --> 00:13:50.980
在文档中不错，您可以

00:13:49.420 --> 00:13:53.200
很多东西，你在做什么

00:13:50.980 --> 00:13:54.970
想着你可以想一想

00:13:53.200 --> 00:13:57.760
那么我们有链接，所以链接

00:13:54.970 --> 00:13:59.830
这是我们可以做的超媒体部分

00:13:57.760 --> 00:14:02.290
其实说好吧

00:13:59.830 --> 00:14:05.260
您找回司机的汽车资源

00:14:02.290 --> 00:14:07.330
资源也是一个链接，因为每个

00:14:05.260 --> 00:14:08.680
汽车将有一个好的司机，然后你

00:14:07.330 --> 00:14:09.820
可以记录该链接的实际内容

00:14:08.680 --> 00:14:12.430
我的意思是这很漂亮

00:14:09.820 --> 00:14:13.840
简单明了的东西，但是你可以

00:14:12.430 --> 00:14:15.670
在这方面变得非常复杂

00:14:13.840 --> 00:14:18.960
然后是路径参数

00:14:15.670 --> 00:14:23.160
 ID和响应字段可以

00:14:18.960 --> 00:14:26.800
很简单，让我们运行这个

00:14:23.160 --> 00:14:31.600
好吧，让我们去做，甚至可以做到

00:14:26.800 --> 00:14:34.570
以及哪个单位还可以

00:14:31.600 --> 00:14:38.790
成功是好的，实际上是什么

00:14:34.570 --> 00:14:42.040
确实在这里的目标，它给你一个

00:14:38.790 --> 00:14:43.930
它给您带来巨大的收益

00:14:42.040 --> 00:14:47.350
片段，以便您在该文件夹中

00:14:43.930 --> 00:14:49.240
在这里提到你会得到一些

00:14:47.350 --> 00:14:52.090
这些已经摘要的doc文件

00:14:49.240 --> 00:14:54.070
因此，如果我们看一下这些片段， 

00:14:52.090 --> 00:14:57.160
只是我们在幻灯片中，所以

00:14:54.070 --> 00:15:00.670
卷曲，然后通过链接获得

00:14:57.160 --> 00:15:04.240
就像响应字段一样

00:15:00.670 --> 00:15:06.850
或要求所有内容的高清字段是

00:15:04.240 --> 00:15:09.400
好的，所以您有这些摘要

00:15:06.850 --> 00:15:11.200
现在您想将其生成为

00:15:09.400 --> 00:15:13.210
 HTML，以便我们实际上可以公开

00:15:11.200 --> 00:15:15.640
作为文档，所以您可以做什么

00:15:13.210 --> 00:15:18.100
您必须在API指南中编写

00:15:15.640 --> 00:15:22.480
或某些ASCII文档文件或某些减价

00:15:18.100 --> 00:15:26.290
这样的文件，所以在这里您可以看到

00:15:22.480 --> 00:15:28.900
你有很多东西

00:15:26.290 --> 00:15:30.400
就像doctype一样

00:15:28.900 --> 00:15:33.190
在这种情况下预订，但您也可以

00:15:30.400 --> 00:15:37.510
它是PDF还是其他任何后端

00:15:33.190 --> 00:15:39.730
 ASCII doc howdy：您也可以

00:15:37.510 --> 00:15:41.230
突出显示这很整洁，所以如果

00:15:39.730 --> 00:15:44.500
你有杰森，那就很好

00:15:41.230 --> 00:15:46.990
最终在中突出显示

00:15:44.500 --> 00:15:50.230
文档，你也可以做一个表

00:15:46.990 --> 00:15:52.150
内容，所以这是免费的，您不会

00:15:50.230 --> 00:15:55.090
必须写你自己asciidoc 

00:15:52.150 --> 00:15:57.160
提供这个让客户

00:15:55.090 --> 00:15:59.980
开发人员基本上可以轻松导航

00:15:57.160 --> 00:16:02.080
通过您的大型文档，然后

00:15:59.980 --> 00:16:04.900
你有很多东西可以

00:16:02.080 --> 00:16:09.240
可以提到哪个可能不会

00:16:04.900 --> 00:16:12.130
改变很多，只是一些易于编写

00:16:09.240 --> 00:16:14.800
文档，然后进入

00:16:12.130 --> 00:16:19.030
我们拥有这些的实际资源

00:16:14.800 --> 00:16:20.740
内含物好，所以这些是

00:16:19.030 --> 00:16:22.930
我们刚刚在文件夹中看到的片段

00:16:20.740 --> 00:16:24.580
以及目标文件夹及其状态

00:16:22.930 --> 00:16:26.770
实际上是因为我跑了而产生的

00:16:24.580 --> 00:16:28.280
测试我的Maven安装

00:16:26.770 --> 00:16:30.860
文档

00:16:28.280 --> 00:16:35.150
在生成的狗中，所以在这里你

00:16:30.860 --> 00:16:38.960
只要打开HTML就可以了

00:16:35.150 --> 00:16:42.350
可以显示出来，所以基本上

00:16:38.960 --> 00:16:45.410
在哪里可以生成它，看起来

00:16:42.350 --> 00:16:47.900
很好，你很容易

00:16:45.410 --> 00:16:49.940
这些这些都是这些

00:16:47.900 --> 00:16:51.770
片段，您可以做什么

00:16:49.940 --> 00:16:55.520
您希望与他们一起在asciidoc文件中

00:16:51.770 --> 00:16:57.590
或您的markdown文件好了，基本上

00:16:55.520 --> 00:17:01.580
那就是你想要得到的，而你的

00:16:57.590 --> 00:17:04.940
测试真的很容易，所以让我

00:17:01.580 --> 00:17:10.130
向您展示如何保证它的

00:17:04.940 --> 00:17:13.130
是最新的，因此在这种情况下

00:17:10.130 --> 00:17:14.960
我们的测试，尽管让我们去

00:17:13.130 --> 00:17:17.690
核心控制器中的生产代码

00:17:14.960 --> 00:17:19.790
你看到我们有门

00:17:17.690 --> 00:17:22.190
所以在车上我们有门，说我

00:17:19.790 --> 00:17:24.890
重构代码，我移开了门

00:17:22.190 --> 00:17:28.070
门不再受支持，所以

00:17:24.890 --> 00:17:32.660
这很容易，所以当然会发生什么

00:17:28.070 --> 00:17:34.280
这里休息一下，现在实际上是我的

00:17:32.660 --> 00:17:36.380
文档不再不再

00:17:34.280 --> 00:17:37.730
到目前为止，它与

00:17:36.380 --> 00:17:39.050
生产代码，因为它将

00:17:37.730 --> 00:17:41.240
文档将有一个

00:17:39.050 --> 00:17:43.280
离婚领域和回应以及

00:17:41.240 --> 00:17:45.440
客户实际上可能会指望如此

00:17:43.280 --> 00:17:47.510
这是您要提出的问题

00:17:45.440 --> 00:17:48.950
确保现在，如果我们尝试部署此

00:17:47.510 --> 00:17:54.130
如果您尝试构建它，即使它是

00:17:48.950 --> 00:17:54.130
将会失败，所以如果我那样做

00:17:56.840 --> 00:18:07.620
不，它失败了，所以这里基本上

00:18:02.130 --> 00:18:09.960
说有测试错误， 

00:18:07.620 --> 00:18:11.600
包含以下内容的摘要字段

00:18:09.960 --> 00:18:15.630
这种情况下并没有很好地显示

00:18:11.600 --> 00:18:17.250
是的，所以片段摘要的感觉

00:18:15.630 --> 00:18:19.740
具有以下路径或在以下位置找不到

00:18:17.250 --> 00:18:22.110
负载门，所以我们把门弄糟了

00:18:19.740 --> 00:18:24.390
在有效负载中，因此文档

00:18:22.110 --> 00:18:26.340
有，但有效载荷不存在

00:18:24.390 --> 00:18:28.950
显示它，所以那是出于

00:18:26.340 --> 00:18:31.860
数据问题基本上有什么解决办法

00:18:28.950 --> 00:18:33.240
就是改变你的测试

00:18:31.860 --> 00:18:36.210
可以以另一种方式做到这一点

00:18:33.240 --> 00:18:38.160
好吧，嗯，在这里，我们只是

00:18:36.210 --> 00:18:39.720
删除门的描述和

00:18:38.160 --> 00:18:42.420
那当然如果我们要写

00:18:39.720 --> 00:18:44.630
它会再次工作，然后我们

00:18:42.420 --> 00:18:53.300
可以再看看我们的文档

00:18:44.630 --> 00:18:53.300
好的，所以差不多完成了，可以工作

00:18:54.410 --> 00:18:59.550
让我们再次检查一下，在这里你

00:18:57.090 --> 00:19:01.860
可以看到现在没有门了

00:18:59.550 --> 00:19:03.420
在响应结构中，所以这是

00:19:01.860 --> 00:19:07.410
保证最新

00:19:03.420 --> 00:19:10.190
春天休息的性质Docs好吗，所以我

00:19:07.410 --> 00:19:12.840
谈到了spring res Docs的工作方式

00:19:10.190 --> 00:19:14.370
现在让我们看看其他

00:19:12.840 --> 00:19:19.410
 Spring Docs可以提供的功能

00:19:14.370 --> 00:19:21.600
提供，所以我们已经看到您有这个

00:19:19.410 --> 00:19:23.220
生成了HTML，并且非常容易

00:19:21.600 --> 00:19:24.540
在您的应用程序中打包

00:19:23.220 --> 00:19:25.890
当然在目标文件夹中

00:19:24.540 --> 00:19:28.020
已经，但是你可以放任何来源

00:19:25.890 --> 00:19:31.380
主要资源有一些春季靴子

00:19:28.020 --> 00:19:33.630
也可以自动用于

00:19:31.380 --> 00:19:36.030
您的消费者在同一应用程序上

00:19:33.630 --> 00:19:39.390
相同的端口和主机，所以实际上

00:19:36.030 --> 00:19:40.530
简单，也很容易自定义

00:19:39.390 --> 00:19:41.640
要求回复之前

00:19:40.530 --> 00:19:43.760
记录下来，我们已经看到了这一点

00:19:41.640 --> 00:19:47.700
漂亮的照片预处理

00:19:43.760 --> 00:19:50.790
你可以做任何事情，所以

00:19:47.700 --> 00:19:52.910
真的很简单，也有支持

00:19:50.790 --> 00:19:55.080
重用通用文档

00:19:52.910 --> 00:19:57.990
我们在其中一张幻灯片中看到

00:19:55.080 --> 00:20:00.810
可以有一些总是

00:19:57.990 --> 00:20:01.830
在每个呼叫中​​重复出现的每个呼叫

00:20:00.810 --> 00:20:04.860
你正在做的一切

00:20:01.830 --> 00:20:06.570
想要成为你的魔法文件

00:20:04.860 --> 00:20:08.380
易于重用，因此您不必

00:20:06.570 --> 00:20:11.390
无休止地重复自己

00:20:08.380 --> 00:20:13.310
然后您还可以添加其他信息

00:20:11.390 --> 00:20:15.560
到片段，因此片段是

00:20:13.310 --> 00:20:16.820
默认生成，但可以

00:20:15.560 --> 00:20:18.730
改变你可以改变方式

00:20:16.820 --> 00:20:21.410
它们是生成的，您可以添加额外的

00:20:18.730 --> 00:20:22.640
这些表的额外列

00:20:21.410 --> 00:20:24.260
实例，如果您想记录

00:20:22.640 --> 00:20:26.120
我以后会遇到的限制

00:20:24.260 --> 00:20:28.250
可以只添加一列，然后添加一些

00:20:26.120 --> 00:20:30.500
额外的字段或动作，让我们添加一些

00:20:28.250 --> 00:20:31.790
额外的信息也可以在

00:20:30.500 --> 00:20:34.310
我们在

00:20:31.790 --> 00:20:36.110
集成测试，因此约束是

00:20:34.310 --> 00:20:40.340
用这种方法很容易记录下来，但是

00:20:36.110 --> 00:20:43.970
你也可以使用内省

00:20:40.340 --> 00:20:47.360
放入您的注释中

00:20:43.970 --> 00:20:48.920
可能会说为nonno或

00:20:47.360 --> 00:20:50.990
诸如此类或最小值或

00:20:48.920 --> 00:20:53.870
最大，尽管我们已经看到了

00:20:50.990 --> 00:20:55.100
您要还原的方法

00:20:53.870 --> 00:20:56.810
有点招摇的方法在哪里

00:20:55.100 --> 00:20:59.060
您正在尝试扣除信息，以便

00:20:56.810 --> 00:21:01.850
对此要小心，但显然是

00:20:59.060 --> 00:21:03.590
也可以手动进行

00:21:01.850 --> 00:21:04.880
那么您也可以忽略部分

00:21:03.590 --> 00:21:07.760
请求或响应期间

00:21:04.880 --> 00:21:10.190
文档，因此当您实际上

00:21:07.760 --> 00:21:12.080
当您收到回复时， 

00:21:10.190 --> 00:21:14.090
有效载荷返回给您，然后您

00:21:12.080 --> 00:21:15.650
可能不想记录所有内容，所以

00:21:14.090 --> 00:21:18.080
您可以忽略某些

00:21:15.650 --> 00:21:20.180
被归还给你，因为

00:21:18.080 --> 00:21:22.010
您还可以进行预处理，以便您

00:21:20.180 --> 00:21:24.080
可以确保它甚至没有显示

00:21:22.010 --> 00:21:26.480
在文档中，您还可以

00:21:24.080 --> 00:21:28.820
关闭所有一起失败，所以

00:21:26.480 --> 00:21:30.500
假设您的有效载荷为100 

00:21:28.820 --> 00:21:33.170
正确的字段，而您只想

00:21:30.500 --> 00:21:34.940
然后记录两个字段以确保

00:21:33.170 --> 00:21:36.560
该文档不会失败

00:21:34.940 --> 00:21:38.270
它在有效载荷中发现的字段

00:21:36.560 --> 00:21:41.450
而且在中找不到

00:21:38.270 --> 00:21:43.870
基本上需要的文件

00:21:41.450 --> 00:21:46.760
必须明确地忽略九十八

00:21:43.870 --> 00:21:48.050
集成测试中的哪些字段

00:21:46.760 --> 00:21:49.790
将是奶奶，所以你可以切换

00:21:48.050 --> 00:21:52.610
如果你有失败的话

00:21:49.790 --> 00:21:54.050
您还可以标记特定场景

00:21:52.610 --> 00:21:56.510
部分要求的回复

00:21:54.050 --> 00:21:57.860
可选的，以便您记录它们

00:21:56.510 --> 00:21:59.420
他们并不总是回来

00:21:57.860 --> 00:22:01.490
因为你有很多不同

00:21:59.420 --> 00:22:03.170
您想要记录的案例，那么您可以

00:22:01.490 --> 00:22:04.880
说好吧，这是可选的，我不去

00:22:03.170 --> 00:22:07.130
如果此字段不是

00:22:04.880 --> 00:22:09.950
在特定情况下还可以，所以这

00:22:07.130 --> 00:22:11.810
这绝对保证您的

00:22:09.950 --> 00:22:14.510
文档将在

00:22:11.810 --> 00:22:17.810
与您的有效负载或您的同步

00:22:14.510 --> 00:22:18.260
您无法做的实际要求和回应

00:22:17.810 --> 00:22:20.390
那

00:22:18.260 --> 00:22:24.809
所以这不是绝对的

00:22:20.390 --> 00:22:28.910
那么我们基本上都支持

00:22:24.809 --> 00:22:31.020
 Jason和XML，所以我们已经看过Jason 

00:22:28.910 --> 00:22:33.870
例子，但是效果很好

00:22:31.020 --> 00:22:36.299
 XML，因此可以直接使用

00:22:33.870 --> 00:22:40.440
好吧，现在我们对

00:22:36.299 --> 00:22:43.350
放心，因为1.1所以休息

00:22:40.440 --> 00:22:46.080
放心基本上是

00:22:43.350 --> 00:22:48.450
加价麦肯省，但受益匪浅

00:22:46.080 --> 00:22:50.880
这是你不需要

00:22:48.450 --> 00:22:53.789
春天来运行春天休息文档，因为

00:22:50.880 --> 00:22:56.010
您可以放心使用，这样就可以了

00:22:53.789 --> 00:22:58.850
与maken BC相结合，所以您

00:22:56.010 --> 00:23:03.600
需要使用马卡需要使用弹簧

00:22:58.850 --> 00:23:05.760
 MBC但用黄铜这件衬衫是

00:23:03.600 --> 00:23:09.360
不再需要休息的人

00:23:05.760 --> 00:23:11.780
放心，好吧，所以一对夫妇

00:23:09.360 --> 00:23:17.400
对，所以您现在可以使用春季红袜

00:23:11.780 --> 00:23:19.830
开箱即用

00:23:17.400 --> 00:23:23.100
有趣的是您可以使用这些

00:23:19.830 --> 00:23:24.240
您用于存根的摘要

00:23:23.100 --> 00:23:25.909
有这些集成测试，他们

00:23:24.240 --> 00:23:29.510
生成请求和响应

00:23:25.909 --> 00:23:32.789
信息，这东西基本上是

00:23:29.510 --> 00:23:35.940
停止的好人选

00:23:32.789 --> 00:23:38.460
嗯，但棕地，因为你先

00:23:35.940 --> 00:23:40.559
必须编写您的API然后进行测试

00:23:38.460 --> 00:23:41.789
您的集成测试之前

00:23:40.559 --> 00:23:44.490
实际上开始生成这些片段

00:23:41.789 --> 00:23:46.440
所以如果你想存根

00:23:44.490 --> 00:23:48.780
对于一个新建项目

00:23:46.440 --> 00:23:49.919
并没有真正创建它

00:23:48.780 --> 00:23:52.860
将无法使用这种方法

00:23:49.919 --> 00:23:55.289
但是如果有的话

00:23:52.860 --> 00:23:56.520
已经有一个API可以使用它，然后您

00:23:55.289 --> 00:23:58.640
可以拿这些片段

00:23:56.520 --> 00:24:01.440
把它们放在例如电线模拟和

00:23:58.640 --> 00:24:03.360
也为消费者服务

00:24:01.440 --> 00:24:06.650
这也将得到保证

00:24:03.360 --> 00:24:10.950
日期还可以，所以很整洁吧

00:24:06.650 --> 00:24:13.350
好吧，基本上这是一个简短的

00:24:10.950 --> 00:24:16.470
简介只有20分钟30 

00:24:13.350 --> 00:24:20.490
分钟，所以一定要看看

00:24:16.470 --> 00:24:22.260
回购，作为贡献者，我可以说

00:24:20.490 --> 00:24:25.110
真的，如果你对此有所贡献

00:24:22.260 --> 00:24:26.460
仓库真的很棒

00:24:25.110 --> 00:24:29.309
让Andy Wilkinson担任项目负责人

00:24:26.460 --> 00:24:32.010
查看您的代码给了我一些很棒的东西

00:24:29.309 --> 00:24:33.070
很棒的见解，所以至今仍然

00:24:32.010 --> 00:24:34.539
建造

00:24:33.070 --> 00:24:37.029
但是已经有东西了

00:24:34.539 --> 00:24:40.000
重用我们的钱非常有用

00:24:37.029 --> 00:24:42.070
客户，他们都非常满意

00:24:40.000 --> 00:24:46.210
这是一个不错的选择

00:24:42.070 --> 00:24:47.799
摇摇欲坠的替代方案，如果你是

00:24:46.210 --> 00:24:50.799
寻找一个特别的工具

00:24:47.799 --> 00:24:53.620
超媒体的目的，这很好，但是

00:24:50.799 --> 00:24:55.210
以及您需要的任何其他IPI 

00:24:53.620 --> 00:24:57.039
保证最新

00:24:55.210 --> 00:24:59.139
而不会干扰您的代码

00:24:57.039 --> 00:25:01.830
然后带有注释的生产代码

00:24:59.139 --> 00:25:07.289
绝对可以尝试春季红袜

00:25:01.830 --> 00:25:07.289
好吧，还有时间吗？ 

00:25:12.660 --> 00:25:21.660
是的，我可以向您展示，以便添加

00:25:16.800 --> 00:25:25.950
属性，我可以快速证明这一点

00:25:21.660 --> 00:25:37.710
实例你有你的车什么财产

00:25:25.950 --> 00:25:42.270
你想添加所有的窗口吗

00:25:37.710 --> 00:25:45.120
对，所以你就把窗户弄好了

00:25:42.270 --> 00:25:47.760
现在我当然会用它

00:25:45.120 --> 00:25:51.630
基本上只是相反

00:25:47.760 --> 00:25:57.300
效果很好，有多少

00:25:51.630 --> 00:25:59.190
 Windows六，我不知道五，所以现在

00:25:57.300 --> 00:26:01.230
如果我运行它，那应该失败

00:25:59.190 --> 00:26:03.330
再次正确，所以在这种方法中

00:26:01.230 --> 00:26:05.070
完全会像那样发生

00:26:03.330 --> 00:26:08.100
会失败，因为你基本上是

00:26:05.070 --> 00:26:09.660
文档中缺少字段，并且

00:26:08.100 --> 00:26:11.610
也是这样说

00:26:09.660 --> 00:26:13.320
以简单的方式，所以以下

00:26:11.610 --> 00:26:15.690
有效负载的一部分不是文档

00:26:13.320 --> 00:26:18.720
然后您实际上得到了

00:26:15.690 --> 00:26:19.920
你忘记的有效载荷，所以你

00:26:18.720 --> 00:26:24.510
只需将其添加到您的

00:26:19.920 --> 00:26:26.220
文档，并且您工作得非常好

00:26:24.510 --> 00:26:34.110
也是简单的方法

00:26:26.220 --> 00:26:37.200
所以Windows这个窗口的数量

00:26:34.110 --> 00:26:41.690
车正确，然后我们就运行这个

00:26:37.200 --> 00:26:45.300
现在再次希望它不会让你失望

00:26:41.690 --> 00:26:47.430
很有信心

00:26:45.300 --> 00:26:49.200
现在，如果我仍然打开Chrome 

00:26:47.430 --> 00:26:52.620
某处不

00:26:49.200 --> 00:26:54.240
好的，让我们现在查看API指南

00:26:52.620 --> 00:26:57.330
这将显示为一个额外的

00:26:54.240 --> 00:27:02.460
表格中的字段会自动好吗

00:26:57.330 --> 00:27:04.170
所以在这里窗户在那里

00:27:02.460 --> 00:27:06.780
基本上是一个数字，他们不是

00:27:04.170 --> 00:27:08.070
 int因为在Jason中这个数字还可以

00:27:06.780 --> 00:27:11.370
所以你有几种Jason类型

00:27:08.070 --> 00:27:14.370
有

00:27:11.370 --> 00:27:14.370
是

00:27:27.830 --> 00:27:32.799
可以离开这里

00:27:30.640 --> 00:27:35.440
是的，但是你还好吗，问题是

00:27:32.799 --> 00:27:37.330
我们可以把这个描述排除在外吗？ 

00:27:35.440 --> 00:27:40.960
测试使测试更加冗长

00:27:37.330 --> 00:27:43.150
并把它作为一个

00:27:40.960 --> 00:27:48.150
注释在那里作为描述

00:27:43.150 --> 00:27:48.150
该字段的注释是的，我的意思是

00:27:48.179 --> 00:27:54.610
是的，这将是一种有效的方法

00:27:50.440 --> 00:27:56.559
虽然它基本上只是一个

00:27:54.610 --> 00:27:59.080
你想在哪里做什么的问题

00:27:56.559 --> 00:28:01.690
你想基本上污染代码，我

00:27:59.080 --> 00:28:03.250
会认为生产代码是

00:28:01.690 --> 00:28:04.990
已经充满注解了

00:28:03.250 --> 00:28:06.669
你已经足够复杂了

00:28:04.990 --> 00:28:08.650
我不想把它放在那里

00:28:06.669 --> 00:28:10.630
表示它不支持它，因为它

00:28:08.650 --> 00:28:12.250
真的，它想摆脱

00:28:10.630 --> 00:28:15.460
放荡的方法，你把你的

00:28:12.250 --> 00:28:18.280
生产代码充满注解，因此

00:28:15.460 --> 00:28:20.919
尝试不这样做

00:28:18.280 --> 00:28:23.049
虽然我的意思是如果你用招摇

00:28:20.919 --> 00:28:24.309
可能去那里的方式，因为

00:28:23.049 --> 00:28:27.130
那也在你的项目中

00:28:24.309 --> 00:28:29.620
想注释东西，但是我的意思是

00:28:27.130 --> 00:28:32.350
有时会有更多的注释

00:28:29.620 --> 00:28:35.380
比实际生产规范大张旗鼓

00:28:32.350 --> 00:28:37.780
代码，所以可能是可以的

00:28:35.380 --> 00:28:40.120
您可能会在

00:28:37.780 --> 00:28:42.370
 github仓库，看看安迪告诉我们什么

00:28:40.120 --> 00:28:44.470
关于这个，但我认为这有点像

00:28:42.370 --> 00:28:47.559
连贯的方式，因为它是流利的API 

00:28:44.470 --> 00:28:51.760
以及它实际上形成了一个很好的

00:28:47.559 --> 00:28:53.710
集成测试中的漏洞

00:28:51.760 --> 00:28:55.600
如果肯定还有更多问题

00:28:53.710 --> 00:28:57.730
来找我，我要在外面， 

00:28:55.600 --> 00:29:00.210
在这里走来走去，谢谢你

00:28:57.730 --> 00:29:00.210
注意人

