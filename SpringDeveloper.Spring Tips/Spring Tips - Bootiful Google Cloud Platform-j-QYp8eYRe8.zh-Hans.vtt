WEBVTT
Kind: captions
Language: zh-Hans

00:00:25.520 --> 00:00:30.539
嗨，春季粉丝们欢迎来到另一个

00:00:28.380 --> 00:00:32.120
在此安装Spring 提示

00:00:30.539 --> 00:00:35.250
我们将要看的分期付款

00:00:32.120 --> 00:00:37.110
谷歌云并获得谷歌云

00:00:35.250 --> 00:00:39.660
平台和Spring 支持

00:00:37.110 --> 00:00:42.110
云与 Spring Integration 

00:00:39.660 --> 00:00:46.620
云和谷歌云现在所有警察

00:00:42.110 --> 00:00:48.059
我们将照常通过建立

00:00:46.620 --> 00:00:49.850
一些我们要看谷歌的软件

00:00:48.059 --> 00:00:51.570
云就是其中之一

00:00:49.850 --> 00:00:53.370
服务平台的基础架构

00:00:51.570 --> 00:00:55.980
我变得非常引人注目

00:00:53.370 --> 00:00:57.930
确保您毫无疑问听说过

00:00:55.980 --> 00:01:00.450
您已经看到了一些惊人的消息

00:00:57.930 --> 00:01:02.489
与之相关的案例很多

00:01:00.450 --> 00:01:04.559
用例第一次出现的时候是

00:01:02.489 --> 00:01:06.420
比AWS便宜，真的

00:01:04.559 --> 00:01:07.890
引人注目，因为它是如此便宜，但

00:01:06.420 --> 00:01:09.180
现在它已经成为功能齐全的

00:01:07.890 --> 00:01:11.310
就其本身而言， 

00:01:09.180 --> 00:01:12.420
令人信服的东西是什么

00:01:11.310 --> 00:01:13.619
我认为有趣的是

00:01:12.420 --> 00:01:18.479
 Google Cloud是很多东西

00:01:13.619 --> 00:01:21.470
它确实提供了最初的排序

00:01:18.479 --> 00:01:24.840
你们知道白色标签的那种

00:01:21.470 --> 00:01:27.479
更名的基础架构

00:01:24.840 --> 00:01:30.020
最初用于Google及其发展

00:01:27.479 --> 00:01:34.550
有很多这样的精明

00:01:30.020 --> 00:01:37.170
意识到内置技能

00:01:34.550 --> 00:01:38.340
你知道它仍然在那里，但是

00:01:37.170 --> 00:01:40.470
现在有一堆东西

00:01:38.340 --> 00:01:42.090
专为

00:01:40.470 --> 00:01:44.550
客户以外的客户

00:01:42.090 --> 00:01:46.440
 Google Cloud就在Google和

00:01:44.550 --> 00:01:47.729
所以这不只是重新包装

00:01:46.440 --> 00:01:49.229
他们在其中使用的现有事物

00:01:47.729 --> 00:01:51.690
 Google，但也有我们

00:01:49.229 --> 00:01:53.489
昂贵的功能，我认为

00:01:51.690 --> 00:01:56.610
这真是一个令人信服的人

00:01:53.489 --> 00:01:58.369
知道那种威利旺卡巧克力

00:01:56.610 --> 00:02:05.550
工厂的权利，你有这个惊人的

00:01:58.369 --> 00:02:07.410
引人入胜的独特事物组合

00:02:05.550 --> 00:02:09.599
给Google以及更多

00:02:07.410 --> 00:02:13.800
进取更传统更排序

00:02:09.599 --> 00:02:15.900
常见的解决方案，这是一个很好的

00:02:13.800 --> 00:02:17.700
拥有正确的混音，您还可以运行

00:02:15.900 --> 00:02:19.260
这里的工作量，当然如果使用

00:02:17.700 --> 00:02:21.209
云铸造或kubernetes平台

00:02:19.260 --> 00:02:23.190
这些都是可以很好地运行的东西

00:02:21.209 --> 00:02:25.470
谷歌云，所以我们已经看到

00:02:23.190 --> 00:02:27.530
我们享有很好的合作伙伴关系

00:02:25.470 --> 00:02:30.239
与Google Cloud相比至关重要，因为

00:02:27.530 --> 00:02:37.920
我们大量的客户使用Cloud Foundry 

00:02:30.239 --> 00:02:40.800
在Google云端上，所以我们在这里

00:02:37.920 --> 00:02:42.630
我们有存储选项，他们有一些

00:02:40.800 --> 00:02:46.040
 Google独有的一些常识

00:02:42.630 --> 00:02:48.480
常见的BigTable数据存储火灾存储

00:02:46.040 --> 00:02:50.790
续集所有这些东西我们

00:02:48.480 --> 00:02:52.440
有不同种类的网络

00:02:50.790 --> 00:02:55.530
不同种类的操作工具

00:02:52.440 --> 00:02:58.830
不同种类的开发工具

00:02:55.530 --> 00:03:01.500
权利和运行时设施，我们拥有庞大的

00:02:58.830 --> 00:03:04.230
数据引擎，我的意思是各种各样的

00:03:01.500 --> 00:03:07.500
有趣的事情在这里，我们可以

00:03:04.230 --> 00:03:09.540
从门户网站管理所有这些

00:03:07.500 --> 00:03:11.010
当然，或者我们可以使用外壳和

00:03:09.540 --> 00:03:14.280
您可以在本地安装外壳

00:03:11.010 --> 00:03:19.290
当然可以，但也有可能

00:03:14.280 --> 00:03:21.900
使用此云外壳对其进行配置

00:03:19.290 --> 00:03:24.540
它会在浏览器中启动，所以您

00:03:21.900 --> 00:03:27.870
可以看到我已经登录

00:03:24.540 --> 00:03:29.370
它连接到我的会话，如果您

00:03:27.870 --> 00:03:32.010
想要在本地计算机上使用

00:03:29.370 --> 00:03:34.850
并且您有了g-cloud命令行

00:03:32.010 --> 00:03:40.230
预装的你可以说g-cloud 

00:03:34.850 --> 00:03:45.510
这样，然后登录好， 

00:03:40.230 --> 00:03:51.030
它会提示您登录，您需要

00:03:45.510 --> 00:04:01.109
在这里登录到特定的东西

00:03:51.030 --> 00:04:03.480
云，也许这都是让我明白的

00:04:01.109 --> 00:04:05.970
好吧，好吗？ 

00:04:03.480 --> 00:04:08.070
登录，这会将您重定向到

00:04:05.970 --> 00:04:11.130
登录屏幕在这里，我要登录

00:04:08.070 --> 00:04:14.880
我和我会确认所有平常的事情

00:04:11.130 --> 00:04:17.789
现在我们走了，我回来了，我回来了

00:04:14.880 --> 00:04:20.789
到我以前的位置，但我已经登录

00:04:17.789 --> 00:04:21.930
就在那，你知道G云吗

00:04:20.789 --> 00:04:24.930
给了我一些信息

00:04:21.930 --> 00:04:27.539
说我可以设置我的配置

00:04:24.930 --> 00:04:30.360
当前项目是这个，我可以更改它

00:04:27.539 --> 00:04:31.710
通过说除项目外的GG云配置

00:04:30.360 --> 00:04:34.860
 ID，然后一旦完成

00:04:31.710 --> 00:04:37.260
实际上在您的计算机中安装了一个配置文件

00:04:34.860 --> 00:04:41.039
您的G Cloud API的主目录

00:04:37.260 --> 00:04:43.410
与Google通话时将使用

00:04:41.039 --> 00:04:45.389
云，这有点像你有一个

00:04:43.410 --> 00:04:46.979
工作项目和您所做的所有事情

00:04:45.389 --> 00:04:48.960
你知道你的操作系统会

00:04:46.979 --> 00:04:50.189
除非您反对该项目

00:04:48.960 --> 00:04:53.759
切换它

00:04:50.189 --> 00:04:56.219
同样的事情也适用

00:04:53.759 --> 00:04:59.550
当您使用api的权利时，我们将

00:04:56.219 --> 00:05:02.099
使用G cloud API Google cloud API 

00:04:59.550 --> 00:05:05.069
这些api都假定存在

00:05:02.099 --> 00:05:08.519
认证文件的种类

00:05:05.069 --> 00:05:12.330
这不是一个证书

00:05:08.519 --> 00:05:14.969
橡树是它是一个文件

00:05:12.330 --> 00:05:17.580
里面有一些数据，你可以

00:05:14.969 --> 00:05:18.749
有了春天的云，你实际上可以得到

00:05:17.580 --> 00:05:20.129
这些东西你可以从一个

00:05:18.749 --> 00:05:21.869
环境变量，如果您想

00:05:20.129 --> 00:05:24.240
无论您需要做什么， 

00:05:21.869 --> 00:05:25.709
可用，然后一旦完成

00:05:24.240 --> 00:05:27.269
您已通过身份验证，所以没有

00:05:25.709 --> 00:05:29.580
每个服务或其他任何不同的密钥

00:05:27.269 --> 00:05:31.469
就像你只有Google Cloud 

00:05:29.580 --> 00:05:33.539
认证和配置

00:05:31.469 --> 00:05:35.610
您已经做好了使工作正常的一切

00:05:33.539 --> 00:05:39.149
有了这个非常简单的

00:05:35.610 --> 00:05:42.029
想通了我应该警告

00:05:39.149 --> 00:05:43.619
那是很大的准备，所以

00:05:42.029 --> 00:05:45.479
我们现在有了Google Cloud 

00:05:43.619 --> 00:05:47.749
我们已经看到你有这个漂亮的贝壳了

00:05:45.479 --> 00:05:50.129
有很多我想做的事情

00:05:47.749 --> 00:05:51.659
今天在我们的小例子中，我们

00:05:50.129 --> 00:05:53.610
将使用一些具有

00:05:51.659 --> 00:05:57.569
在这里配置，让我们开始

00:05:53.610 --> 00:06:01.279
简朴的东西，我们

00:05:57.569 --> 00:06:03.389
将使用续集数据库和

00:06:01.279 --> 00:06:04.529
在这里您可以轻松创建许多

00:06:03.389 --> 00:06:08.459
不同类型的续集数据库

00:06:04.529 --> 00:06:11.009
你有我的续集并张贴家伙好

00:06:08.459 --> 00:06:15.419
我这里有续集实例，所以我

00:06:11.009 --> 00:06:17.819
要回到我的外壳在这里我的门户

00:06:15.419 --> 00:06:19.949
我会选择续集，在那里我可以看到

00:06:17.819 --> 00:06:23.129
我有一个名为的续集数据库

00:06:19.949 --> 00:06:26.789
保留在美国中部

00:06:23.129 --> 00:06:28.889
预订数据库有一个公共的

00:06:26.789 --> 00:06:31.050
 IP地址和实例连接

00:06:28.889 --> 00:06:33.929
名称和数据库名称是

00:06:31.050 --> 00:06:35.519
叫预订，所以我

00:06:33.929 --> 00:06:37.439
可以查看概述

00:06:35.519 --> 00:06:41.279
数据库，我可以看到

00:06:37.439 --> 00:06:44.519
数据库，如果我启动外壳正确

00:06:41.279 --> 00:06:47.550
如果我在这里启动外壳连接使用

00:06:44.519 --> 00:06:50.939
我实际上可以丢弃的云壳

00:06:47.550 --> 00:06:53.699
按照我的顺序，我要打

00:06:50.939 --> 00:06:56.159
输入g-cloud续集连接

00:06:53.699 --> 00:06:57.809
保留用户root等于

00:06:56.159 --> 00:07:01.589
它会在

00:06:57.809 --> 00:07:03.680
平台，让我让我实际工作

00:07:01.589 --> 00:07:05.360
那边的孩子

00:07:03.680 --> 00:07:07.130
我认为真的很酷的序列

00:07:05.360 --> 00:07:08.330
就是说这很方便

00:07:07.130 --> 00:07:09.620
您实际上可以访问

00:07:08.330 --> 00:07:11.960
实际配置防火墙，并且

00:07:09.620 --> 00:07:14.000
如果愿意，可以从外面和它说话

00:07:11.960 --> 00:07:15.979
但是我真的很引人注目

00:07:14.000 --> 00:07:17.000
可以从门户网站内部进行操作

00:07:15.979 --> 00:07:21.650
这是我认为的一件事

00:07:17.000 --> 00:07:23.000
您会发现适用于Google 

00:07:21.650 --> 00:07:25.280
云计算和Microsoft解散了

00:07:23.000 --> 00:07:26.470
使用门户网站非常有效

00:07:25.280 --> 00:07:29.720
对，你可以完成很多工作

00:07:26.470 --> 00:07:35.870
在那里，所以我不会建立品牌

00:07:29.720 --> 00:07:37.460
我的续集的新实例，因为

00:07:35.870 --> 00:07:39.110
我永远不会理解的原因

00:07:37.460 --> 00:07:40.430
分钟需要几分钟

00:07:39.110 --> 00:07:42.830
创建一个全新的邮政编码实例

00:07:40.430 --> 00:07:44.030
或我的续集，这只是一个

00:07:42.830 --> 00:07:46.160
你知道这只是一个简单的例子

00:07:44.030 --> 00:07:49.930
请注意，但是如果我想使用高度

00:07:46.160 --> 00:07:49.930
可用的高度一致的多租户

00:07:54.070 --> 00:07:58.419
抓到你知道扳手数据库

00:07:58.449 --> 00:08:03.139
那根本就不需要时间

00:08:01.400 --> 00:08:04.580
这是一种很奇怪的权利

00:08:03.139 --> 00:08:06.800
有趣的是，你知道他们会

00:08:04.580 --> 00:08:08.960
遇到一些麻烦

00:08:06.800 --> 00:08:11.150
作为我的续集数据库是无害的，但我

00:08:08.960 --> 00:08:12.620
猜猜这也许就是这样

00:08:11.150 --> 00:08:14.419
设计不是多租户，我不知道

00:08:12.620 --> 00:08:16.010
我们永远都不会知道

00:08:14.419 --> 00:08:18.710
它已经预先配置好了，我不是

00:08:16.010 --> 00:08:19.639
我要再做一次

00:08:18.710 --> 00:08:21.440
所以我们继续构建一个新的

00:08:19.639 --> 00:08:26.539
应用程序将在这里完成

00:08:21.440 --> 00:08:29.510
将此应用称为美丽的GC P 

00:08:26.539 --> 00:08:33.260
我将使用GCP支持或带来

00:08:29.510 --> 00:08:34.599
在TCP消息传递中的GCP存储

00:08:33.260 --> 00:08:37.969
将使用鲍姆巴赫，我们将使用

00:08:34.599 --> 00:08:41.300
执行器，当您使用JBC时，我们将

00:08:37.969 --> 00:08:43.640
用我的续集，我们要用别的

00:08:41.300 --> 00:08:47.329
我们是否想让网络支持我

00:08:43.640 --> 00:08:49.370
猜我们想要侦探，仅此而已

00:08:47.329 --> 00:08:51.260
我想大概就是这样

00:08:49.370 --> 00:08:54.470
我们需要的一切

00:08:51.260 --> 00:08:56.870
我不知道我是否需要续集

00:08:54.470 --> 00:08:59.000
真的不需要那个权利，那是

00:08:56.870 --> 00:08:59.570
足以让我们得到

00:08:59.000 --> 00:09:04.570
开始了

00:08:59.570 --> 00:09:13.240
我认为好吧，我们继续吧

00:09:04.570 --> 00:09:13.240
所以没有下载您想打开它

00:09:31.720 --> 00:09:37.480
首先我们要建立

00:09:33.820 --> 00:09:39.610
与我的我说话的应用程序

00:09:37.480 --> 00:09:40.990
续集数据库，所以我们需要一些

00:09:39.610 --> 00:09:43.540
我们将开始的配置

00:09:40.990 --> 00:09:49.690
在属性文件中，我们要

00:09:43.540 --> 00:09:51.400
说一个然后GCP，你知道你只是

00:09:49.690 --> 00:09:53.590
被数据库命名为实例连接

00:09:51.400 --> 00:09:54.600
名称，因此实例连接名称和

00:09:53.590 --> 00:09:57.060
数据库名称

00:09:54.600 --> 00:09:59.740
我们在前面就在我们前面，所以

00:09:57.060 --> 00:10:03.490
让我们获取数据库名称

00:09:59.740 --> 00:10:08.050
是预订和连接名称

00:10:03.490 --> 00:10:09.820
在这里，所以我们把它放在哪里

00:10:08.050 --> 00:10:11.440
就在那里，实际上只是复制并

00:10:09.820 --> 00:10:15.040
粘贴好谢谢

00:10:11.440 --> 00:10:16.840
好吧，有我的续集，我是

00:10:15.040 --> 00:10:19.660
要去我们美丽的GCP 

00:10:16.840 --> 00:10:21.700
应用程序并编写一些代码来编写

00:10:19.660 --> 00:10:23.680
一些数据到该数据库获取数据

00:10:21.700 --> 00:10:25.960
从续集表中，让我们看一下

00:10:23.680 --> 00:10:27.600
那时我们在

00:10:25.960 --> 00:10:31.980
在这里显示让我们看看我们会说

00:10:27.600 --> 00:10:36.720
首先，我说要显示表格

00:10:31.980 --> 00:10:42.730
这就是我显示基础可以使用的方式

00:10:36.720 --> 00:10:47.500
保留，然后会有

00:10:42.730 --> 00:10:53.200
显示表格的能力选择

00:10:47.500 --> 00:10:58.180
全部来自预订，然后我们去了

00:10:53.200 --> 00:11:00.940
在应用程序中有一些数据，您

00:10:58.180 --> 00:11:02.680
知道ID列和名称列，所以

00:11:00.940 --> 00:11:04.330
让我们回到我们的应用程序中

00:11:02.680 --> 00:11:10.150
打实体来管理该实体的数据

00:11:04.330 --> 00:11:12.070
输入正确的数据

00:11:10.150 --> 00:11:15.430
构造函数，知道我们在哪里

00:11:12.070 --> 00:11:20.470
构造函数，这里我只是

00:11:15.430 --> 00:11:24.130
创建一个长ID和一个字符串名称字段

00:11:20.470 --> 00:11:25.660
好的，所以私有字符串名称就是

00:11:24.130 --> 00:11:28.420
如果我想表达的本质

00:11:25.660 --> 00:11:29.800
当然就是我简单的一点

00:11:28.420 --> 00:11:34.510
详细信息，我们将在此处创建一个演示

00:11:29.800 --> 00:11:36.310
我的续集演示课上，只有一个

00:11:34.510 --> 00:11:42.660
当

00:11:36.310 --> 00:11:42.660
应用程序像公共一样启动

00:11:43.139 --> 00:11:52.799
演示开始，它将是反叛者

00:11:50.319 --> 00:11:55.509
春天绿色春天组成兄弟

00:11:52.799 --> 00:11:57.279
而我们要做的就是当我们使用

00:11:55.509 --> 00:12:00.429
 JDBC模板的春季形式还可以

00:11:57.279 --> 00:12:04.230
尝试过的JDBC模板

00:12:00.429 --> 00:12:04.230
他们，所以有

00:12:05.279 --> 00:12:17.889
好吧，我要说蒸汽停靠你

00:12:11.110 --> 00:12:19.209
知道射线就是我们要查询的东西

00:12:17.889 --> 00:12:22.660
数据将变得更加容易，让我们

00:12:19.209 --> 00:12:29.970
只是说JDBC模板点查询选择

00:12:22.660 --> 00:12:29.970
全部来自预订新角色映射器

00:12:29.999 --> 00:12:39.699
好的，有预订，我们在那里

00:12:37.600 --> 00:12:43.420
去，有我们要去的细节

00:12:39.699 --> 00:12:49.649
把这些变成真实的映射器说是的

00:12:43.420 --> 00:12:55.350
 RS-获取长ID自动停止获取字符串

00:12:49.649 --> 00:12:59.949
名称已经用lambda替换了

00:12:55.350 --> 00:13:01.209
然后我们可以了，现在我想

00:12:59.949 --> 00:13:03.160
做一些只是访问那些

00:13:01.209 --> 00:13:05.679
我将其注销并输入以进行登录

00:13:03.160 --> 00:13:09.549
我将使用龙目岛的记录仪

00:13:05.679 --> 00:13:13.110
 log4j-然后访问每个

00:13:09.549 --> 00:13:17.189
每个日志信息都可以返回

00:13:13.110 --> 00:13:17.189
运行这个让我们看看我们得到了什么

00:13:22.480 --> 00:13:26.090
现在它将开始，但是在

00:13:25.010 --> 00:13:30.160
同时你知道我想我喜欢什么

00:13:26.090 --> 00:13:38.140
这在类中，所以它的范围

00:13:30.160 --> 00:13:38.140
私人静电

00:13:40.460 --> 00:13:45.200
所以让我们来看看UM是否要我配置

00:13:44.210 --> 00:13:50.149
网址

00:13:45.200 --> 00:13:50.600
我是否必须做我所做的一切

00:13:50.149 --> 00:13:55.190
需要

00:13:50.600 --> 00:13:57.470
哦，我需要实际添加它们

00:13:55.190 --> 00:13:58.850
完全可以的入门者，还可以

00:13:57.470 --> 00:14:01.520
所以告诉我在那里

00:13:58.850 --> 00:14:04.750
它想要什么，我正坐在那里

00:14:01.520 --> 00:14:13.160
当丹走一次时盯着它

00:14:04.750 --> 00:14:16.190
所以春天的云GCP会开始续集

00:14:13.160 --> 00:14:19.930
我的续集，我们可能就是

00:14:16.190 --> 00:14:19.930
现在我们可以重新启动应用程序

00:14:34.070 --> 00:14:44.260
它已经打开了，什么是

00:14:40.460 --> 00:14:44.260
现在的问题

00:14:46.780 --> 00:14:52.100
保留到我的查询保留

00:14:50.210 --> 00:14:54.800
而且你知道我刚意识到

00:14:52.100 --> 00:14:56.330
在这里，我有一个连接池

00:14:54.800 --> 00:14:58.100
应该大概在乎，我可以做

00:14:56.330 --> 00:14:59.750
用我会做的同样的方式

00:14:58.100 --> 00:15:01.970
我实际上可以连接的任何其他连接池

00:14:59.750 --> 00:15:03.590
配置例如接车，这是

00:15:01.970 --> 00:15:06.680
今天实际上是一件事情

00:15:03.590 --> 00:15:08.240
只是一个常规的续集连接

00:15:06.680 --> 00:15:09.920
首先要为我们配置

00:15:08.240 --> 00:15:11.840
 Google Cloud和Spring Cloud创新

00:15:09.920 --> 00:15:12.890
对于谷歌云，但那只是一个

00:15:11.840 --> 00:15:17.080
我们可以实际使用的数据源

00:15:12.890 --> 00:15:17.080
像其他任何东西一样配置

00:15:25.480 --> 00:15:31.179
好的，看看我们的数据

00:15:28.379 --> 00:15:34.299
启动Violetta我自己充电

00:15:31.179 --> 00:15:37.149
 Marcin Olga医生叹息右唱

00:15:34.299 --> 00:15:39.970
我在Google的朋友，所以我们现在

00:15:37.149 --> 00:15:41.980
只是数据现在非常容易做到

00:15:39.970 --> 00:15:43.989
当然你可能想知道你知道我

00:15:41.980 --> 00:15:45.549
可以把我的序列吐到任何地方

00:15:43.989 --> 00:15:47.199
如果你认识我，你知道我很大

00:15:45.549 --> 00:15:48.549
使用差异化的粉丝

00:15:47.199 --> 00:15:51.160
每个服务都可用

00:15:48.549 --> 00:15:53.230
您知道这些平台可移植

00:15:51.160 --> 00:15:55.720
否则，您知道使用云

00:15:53.230 --> 00:15:56.949
代工厂将kubernetes用于您的应用

00:15:55.720 --> 00:15:59.049
常规业务应用程序

00:15:56.949 --> 00:16:00.160
常规应用，确实​​没有

00:15:59.049 --> 00:16:02.019
将自己绑定到平台的原因

00:16:00.160 --> 00:16:05.049
当您现在可以从技术上做到这一点时

00:16:02.019 --> 00:16:07.419
更容易了解，成本更低

00:16:05.049 --> 00:16:09.879
但是如果你在路上，那应该

00:16:07.419 --> 00:16:11.709
绝对如果您需要利用

00:16:09.879 --> 00:16:14.769
令人信服的事情

00:16:11.709 --> 00:16:16.059
平台充分利用了它，所以我的

00:16:14.769 --> 00:16:17.379
续集很有趣，但我可以运行

00:16:16.059 --> 00:16:19.029
多种不同的续集

00:16:17.379 --> 00:16:20.559
种方式，我什至可以做到

00:16:19.029 --> 00:16:22.389
高层次的方式，这不一定

00:16:20.559 --> 00:16:23.829
运行我的续集的最好方法是

00:16:22.389 --> 00:16:27.519
曾经被创造

00:16:23.829 --> 00:16:28.449
而是当我去Google Cloud时， 

00:16:27.519 --> 00:16:31.869
我想利用的东西

00:16:28.449 --> 00:16:33.759
现在他的旗帜是aaa 

00:16:31.869 --> 00:16:36.549
所谓的没有续集数据存储

00:16:33.759 --> 00:16:39.100
发达，并悄悄宣布

00:16:36.549 --> 00:16:42.069
在2012年宣布了其他事情

00:16:39.100 --> 00:16:42.910
由Google扳手内部使用

00:16:42.069 --> 00:16:46.959
 Google的不同

00:16:42.910 --> 00:16:49.660
项目，它诞生了，我想阅读

00:16:46.959 --> 00:16:52.959
关于它的某种文学诞生于

00:16:49.660 --> 00:16:54.850
他们是某种结果或某种

00:16:52.959 --> 00:16:56.649
对他们有什么反应

00:16:54.850 --> 00:16:58.600
在Google内被发现

00:16:56.649 --> 00:17:00.509
这是很多大型网站

00:16:58.600 --> 00:17:03.850
 Google中的许多不同项目

00:17:00.509 --> 00:17:05.380
需要规模，他们需要那种大

00:17:03.850 --> 00:17:08.289
像秤这样的桌子，他们没有

00:17:05.380 --> 00:17:10.799
曾经在Google遇到过，但他们

00:17:08.289 --> 00:17:13.839
不想重塑

00:17:10.799 --> 00:17:15.279
支持一致性事物的原语

00:17:13.839 --> 00:17:17.110
喜欢交易，他们没有

00:17:15.279 --> 00:17:19.089
我必须重塑所有这些原始元素

00:17:17.110 --> 00:17:20.470
得到那个，但他们确实想要高

00:17:19.089 --> 00:17:22.059
可用性，他们不想要规模

00:17:20.470 --> 00:17:25.449
所以他们有一个叫做大型商店的东西

00:17:22.059 --> 00:17:30.279
大型商店，虽然它服务了很多

00:17:25.449 --> 00:17:32.889
人们在Google中使用的用例

00:17:30.279 --> 00:17:34.659
对于他们的双重用例，它没有

00:17:32.889 --> 00:17:35.880
提供几乎相同的规模，但

00:17:34.659 --> 00:17:38.340
没关系，这很好

00:17:35.880 --> 00:17:41.220
即使对于Google来说也足够

00:17:38.340 --> 00:17:44.370
选择了看似劣质的技术

00:17:41.220 --> 00:17:46.980
因为它使开发人员可以帮助您

00:17:44.370 --> 00:17:48.330
知道有趣的工作而不是

00:17:46.980 --> 00:17:50.460
花所有的时间重塑所有

00:17:48.330 --> 00:17:52.320
 BigTable上的这些基本女权主义者

00:17:50.460 --> 00:17:54.570
因此，我想他们

00:17:52.320 --> 00:17:56.430
最终决定好，我们需要你

00:17:54.570 --> 00:17:59.610
知道有一些东西会很好

00:17:56.430 --> 00:18:05.460
提供所有这些东西，所以扳手是

00:17:59.610 --> 00:18:09.300
全球可用的一致和

00:18:05.460 --> 00:18:12.330
分布式复制数据存储现在您

00:18:09.300 --> 00:18:14.280
知道听到我只是说不是

00:18:12.330 --> 00:18:16.200
我只是说不只是

00:18:14.280 --> 00:18:17.850
你不是只是说乔希那是一个

00:18:16.200 --> 00:18:19.530
解决一致性的数据库

00:18:17.850 --> 00:18:20.820
可用性和分区能力是

00:18:19.530 --> 00:18:21.060
你确定你了解自己

00:18:20.820 --> 00:18:23.940
说

00:18:21.060 --> 00:18:26.880
是的，我有点挠头

00:18:23.940 --> 00:18:28.500
起初似乎也确实是

00:18:26.880 --> 00:18:30.540
有点困惑如何解决

00:18:28.500 --> 00:18:32.850
猫的问题，答案是

00:18:30.540 --> 00:18:35.580
这是不对的，并不能真正解决

00:18:32.850 --> 00:18:38.310
上限问题实际上并没有

00:18:35.580 --> 00:18:40.190
不知何故三分之三

00:18:38.310 --> 00:18:43.470
它的确是利用了

00:18:40.190 --> 00:18:45.690
不可思议，你知道太空时代

00:18:43.470 --> 00:18:50.010
 Google的数据技术意识

00:18:45.690 --> 00:18:53.640
之间有着不可思议的连通性

00:18:50.010 --> 00:19:00.060
您知道光纤连接的数据中心

00:18:53.640 --> 00:19:01.590
在数据中心之间，它使用日志

00:19:00.060 --> 00:19:03.690
根据时间调和事物

00:19:01.590 --> 00:19:06.210
步骤和那些时间戳记

00:19:03.690 --> 00:19:10.140
是非常准确的，它们基于

00:19:06.210 --> 00:19:12.900
原子钟，GPS时间和GPS您

00:19:10.140 --> 00:19:14.550
知道信号，我的意思是各种各样的

00:19:12.900 --> 00:19:16.350
有趣的东西，你就是你

00:19:14.550 --> 00:19:19.620
不会有库存商品数据

00:19:16.350 --> 00:19:22.500
集中这些东西是允许的

00:19:19.620 --> 00:19:24.990
 Google有点作弊

00:19:22.500 --> 00:19:27.840
忽悠你知道它得到了全部三个

00:19:24.990 --> 00:19:29.910
这些东西，因为它足够快

00:19:27.840 --> 00:19:31.560
它有效地贯穿了所有人

00:19:29.910 --> 00:19:33.960
那三件事对了

00:19:31.560 --> 00:19:35.250
并没有真正解决问题

00:19:33.960 --> 00:19:37.950
但关键是它足够好

00:19:35.250 --> 00:19:39.150
感觉像是对的，这是

00:19:37.950 --> 00:19:41.670
这些只是其中之一

00:19:39.150 --> 00:19:43.920
直线上升，我不会有

00:19:41.670 --> 00:19:45.390
即使在我们的团队中也可以运行扳手

00:19:43.920 --> 00:19:47.490
数据中心，即使我们拥有软件

00:19:45.390 --> 00:19:49.280
即使Google给了我们软件

00:19:47.490 --> 00:19:50.660
你不会得到相同的效果

00:19:49.280 --> 00:19:51.950
这是你其中的一件事

00:19:50.660 --> 00:19:53.150
应该让Google去做

00:19:51.950 --> 00:19:55.070
擅长他们有

00:19:53.150 --> 00:19:57.050
基础设施，他们可以在

00:19:55.070 --> 00:19:59.060
他们需要运行它的水​​平

00:19:57.050 --> 00:20:00.410
能够使用和使其值得

00:19:59.060 --> 00:20:02.450
那只是其中一种

00:20:00.410 --> 00:20:04.160
通过建设获得的创新

00:20:02.450 --> 00:20:07.940
在那个平台上，让我们做到这一点，让我们

00:20:04.160 --> 00:20:12.530
在这里使用横幅，我们将使用

00:20:07.940 --> 00:20:14.810
 Spring Cloud GCP入门扳手

00:20:12.530 --> 00:20:24.880
也许春天开始了数据微调器

00:20:14.810 --> 00:20:24.880
好的，无论哪种方式，我们都会说好的， 

00:20:25.480 --> 00:20:39.920
这个，但是我们确实想要数据扳手

00:20:31.610 --> 00:20:43.790
好吧好吧，这取决于我的扳手

00:20:39.920 --> 00:20:46.760
你知道让我们看一下扳手好吗

00:20:43.790 --> 00:20:49.850
我的门户中也有扳手

00:20:46.760 --> 00:20:52.520
在你去这里之前，你可以看到它说

00:20:49.850 --> 00:20:56.870
好吧，它说扳手，当你去

00:20:52.520 --> 00:21:00.280
扳手，你会看到有一个扳手

00:20:56.870 --> 00:21:02.270
数据库，名为reservation demo和

00:21:00.280 --> 00:21:06.140
当我去那里我可以点击

00:21:02.270 --> 00:21:08.960
保留，当我去这里时说

00:21:06.140 --> 00:21:12.980
预订单击，它显示

00:21:08.960 --> 00:21:14.900
我有一张你知道的桌子

00:21:12.980 --> 00:21:16.520
我可以看一下DDL的ID和名称

00:21:14.900 --> 00:21:18.020
甚至还有续集之类的语言

00:21:16.520 --> 00:21:21.590
您可以使用此功能非常类似于

00:21:18.020 --> 00:21:25.460
续集，这是ID和名称正确

00:21:21.590 --> 00:21:27.080
这很简单，很简单

00:21:25.460 --> 00:21:29.150
您实际上也可以查询它

00:21:27.080 --> 00:21:31.070
它支持续集查询，所以我

00:21:29.150 --> 00:21:34.970
可以说从预订运行中全选

00:21:31.070 --> 00:21:38.960
查询我得到这些记录正确

00:21:34.970 --> 00:21:41.510
所以很酷，但不支持

00:21:38.960 --> 00:21:43.760
续集租金的权利查询

00:21:41.510 --> 00:21:46.790
仅用于杂草的物品，但通常是

00:21:43.760 --> 00:21:50.920
足够的权利通常就足够了，所以我们

00:21:46.790 --> 00:21:57.520
实际上可以复制并粘贴所有

00:21:50.920 --> 00:21:57.520
然后删除此预订

00:21:59.840 --> 00:22:08.870
好，删除所有这一个

00:22:16.180 --> 00:22:30.360
不，不，我删除，好吧

00:22:32.610 --> 00:22:40.530
再点击一次，我们可以创建一个

00:22:35.250 --> 00:22:47.580
表并粘贴创建的文本

00:22:40.530 --> 00:22:49.620
回到我们开始的地方，所以在那里

00:22:47.580 --> 00:22:51.030
去有我们要去的数据

00:22:49.620 --> 00:22:53.580
创建它，现在我们可以实际交谈了

00:22:51.030 --> 00:22:55.799
从我们的应用程序中

00:22:53.580 --> 00:22:57.450
从我们的应用程序谈起

00:22:55.799 --> 00:22:59.750
像以前一样需要一些配置

00:22:57.450 --> 00:23:05.270
所以我们回到属性文件

00:22:59.750 --> 00:23:06.419
扳手，我们将使用扳手

00:23:05.270 --> 00:23:10.620
哎呀

00:23:06.419 --> 00:23:15.210
扳手实例ID并获取

00:23:10.620 --> 00:23:18.600
实例ID，我们可以去这里

00:23:15.210 --> 00:23:23.309
实例ID是预订演示

00:23:18.600 --> 00:23:25.910
就在这里，所以预订演示

00:23:23.309 --> 00:23:33.559
最后我们需要数据库

00:23:25.910 --> 00:23:33.559
扳手数据库等于保留量

00:23:34.429 --> 00:23:38.700
好吧，所以我们有

00:23:36.780 --> 00:23:42.150
扳手的配置，现在

00:23:38.700 --> 00:23:46.080
这样就可以创建一个文档

00:23:42.150 --> 00:23:49.850
使用spring数据来管理我们的数据

00:23:46.080 --> 00:23:53.100
所以在这里给它一个叫ID的字段

00:23:49.850 --> 00:23:54.299
名为名称的字段，这将

00:23:53.100 --> 00:23:56.100
是一个字符串，原因是

00:23:54.299 --> 00:23:59.790
我们正在使用高度分散的

00:23:56.100 --> 00:24:03.419
高可用性数据存储，因此

00:23:59.790 --> 00:24:05.340
单调递增整数或

00:24:03.419 --> 00:24:07.320
他们沿着这些东西编号

00:24:05.340 --> 00:24:08.610
在这种情况下真的不能很好地工作

00:24:07.320 --> 00:24:10.500
环境，所以我们需要提供一个

00:24:08.610 --> 00:24:13.020
唯一ID，我们将使用

00:24:10.500 --> 00:24:14.970
一个UUID，它是一个字符串，因此它将是

00:24:13.020 --> 00:24:18.419
我们要映射到一个东西

00:24:14.970 --> 00:24:23.280
桌子上有个名字叫

00:24:18.419 --> 00:24:25.410
像这样的预订使用

00:24:23.280 --> 00:24:28.890
 Nords的所有弧线构造函数

00:24:25.410 --> 00:24:31.610
构造函数，然后我们将创建

00:24:28.890 --> 00:24:35.540
一如既往的存储库

00:24:31.610 --> 00:24:35.540
此数据的实例到数据库

00:24:35.750 --> 00:24:42.420
好，我们要用扳手

00:24:39.530 --> 00:24:45.760
资料库

00:24:42.420 --> 00:24:47.500
除了预订，我们还可以

00:24:45.760 --> 00:24:48.730
是我的字符串类型的键，现在我

00:24:47.500 --> 00:24:53.910
想要将一些数据保存到数据库

00:24:48.730 --> 00:24:59.310
这样的扳手演示，您可以收听

00:24:53.910 --> 00:24:59.310
应用程序就绪事件公共无效

00:24:59.970 --> 00:25:08.470
和数据我很抱歉这将是一个

00:25:04.060 --> 00:25:11.200
组件以及我要做的事情

00:25:08.470 --> 00:25:14.380
要写跳舞，所以我们要

00:25:11.200 --> 00:25:19.500
需要注入我们的扳手库

00:25:14.380 --> 00:25:21.550
这里有一个确定的构造函数， 

00:25:19.500 --> 00:25:24.910
首先，我想删除一些

00:25:21.550 --> 00:25:26.170
数据，这样就删除所有然后

00:25:24.910 --> 00:25:46.180
最后，当我们写数据时

00:25:26.170 --> 00:25:48.310
所以我们说流雷很好，所以

00:25:46.180 --> 00:25:50.890
有几个人，我要

00:25:48.310 --> 00:25:58.300
我要做的是将每个映射到一个新的

00:25:50.890 --> 00:26:02.130
保留没有名字，并且每个

00:25:58.300 --> 00:26:07.180
她将记录在数据库中的那些

00:26:02.130 --> 00:26:08.800
好吧，我只想参观

00:26:07.180 --> 00:26:11.110
我所做的每一件事，我都会去

00:26:08.800 --> 00:26:15.790
只需使用记录器进行确认

00:26:11.110 --> 00:26:21.900
所以我会说在log4j可以

00:26:15.790 --> 00:26:24.390
日志：信息是的，但是还可以

00:26:21.900 --> 00:26:33.000
 [音乐] 

00:26:24.390 --> 00:26:33.000
我们要开始

00:26:57.450 --> 00:27:00.479
我的续集大叫什么

00:26:59.820 --> 00:27:03.899
发生了

00:27:00.479 --> 00:27:07.070
 ID必须是按钮B不知道啊哈我

00:27:03.899 --> 00:27:09.359
做错了是我忘了提供UUID 

00:27:07.070 --> 00:27:13.169
我什至拿起发生了什么事， 

00:27:09.359 --> 00:27:14.879
我忘了采取行动，所以我们开始了

00:27:13.169 --> 00:27:17.029
很抱歉，这是一个愚蠢的错误

00:27:14.879 --> 00:27:17.029
关于那个

00:27:39.880 --> 00:27:45.700
好，那里有我的海鸥东西

00:27:43.300 --> 00:27:47.680
没有跨度或数据权，我们可以

00:27:45.700 --> 00:27:55.600
实际上通过去这里确认

00:27:47.680 --> 00:27:55.960
并执行查询在那里运行查询

00:27:55.600 --> 00:27:58.750
它是

00:27:55.960 --> 00:28:01.840
约会杀人犯维奥莱塔（Voletta）马克·奥尔加（嘿） 

00:27:58.750 --> 00:28:03.040
 Andy draconian等，好的，我们去了

00:28:01.840 --> 00:28:05.050
不错，我们如何从中获取一些数据

00:28:03.040 --> 00:28:06.760
现在数据库只是我不会的数据

00:28:05.050 --> 00:28:10.360
介意我们我想将一些数据存储为

00:28:06.760 --> 00:28:15.220
好，所以你知道我们可以在这里做什么

00:28:10.360 --> 00:28:17.680
好吧，我想我们可以使用还原

00:28:15.220 --> 00:28:22.570
像二进制数据这样的图像数据等等

00:28:17.680 --> 00:28:25.720
一种方法是使用存储

00:28:22.570 --> 00:28:27.510
在Google Cloud中提供服务

00:28:25.720 --> 00:28:31.630
所以我认为我们应该按照您的意愿去做

00:28:27.510 --> 00:28:38.140
我们可以存储已经拥有的数据

00:28:31.630 --> 00:28:40.590
存储服务在这里，我们可以

00:28:38.140 --> 00:28:40.590
储存它

00:28:42.630 --> 00:28:48.800
在下面让我们看到骄傲

00:28:54.260 --> 00:29:01.580
我认为这个

00:28:57.260 --> 00:29:03.200
我们那里有猫的形象，所以我们

00:29:01.580 --> 00:29:09.019
可以稍后再使用

00:29:03.200 --> 00:29:11.330
从我们的Java代码中公平地引用

00:29:09.019 --> 00:29:15.260
轻松使用资源抽象

00:29:11.330 --> 00:29:17.059
这也是我们可能成为的原因之一

00:29:15.260 --> 00:29:20.149
能够使用这个是要

00:29:17.059 --> 00:29:22.010
其他一些服务的优势

00:29:20.149 --> 00:29:23.510
在Google云中

00:29:22.010 --> 00:29:26.720
 Google云中的其他服务是

00:29:23.510 --> 00:29:29.120
 Google视觉API很好

00:29:26.720 --> 00:29:31.159
 API真的很聪明，您可以给它一个

00:29:29.120 --> 00:29:33.559
图片，我们将确定某些事实

00:29:31.159 --> 00:29:35.210
关于那个图像，所以我们有这只猫

00:29:33.559 --> 00:29:38.690
我已经管理过的图片

00:29:35.210 --> 00:29:43.700
这里上传的是猫的照片

00:29:38.690 --> 00:29:45.799
猫，我们可以使用Google视觉API 

00:29:43.700 --> 00:29:48.200
使用存储拉下这些数据

00:29:45.799 --> 00:29:53.210
 API，因此我们实际上可以创建一个愿景

00:29:48.200 --> 00:29:55.850
演示好吧，在这里销毁这个

00:29:53.210 --> 00:30:00.730
组件，让我们在活动中说

00:29:55.850 --> 00:30:08.570
侦听器应用程序就绪事件公共

00:30:00.730 --> 00:30:13.149
无效的演示好了，这里没有

00:30:08.570 --> 00:30:15.470
预配置的自动配置的

00:30:13.149 --> 00:30:17.630
我们必须做的视觉API 

00:30:15.470 --> 00:30:20.240
这项工作我们自己做，但是没关系

00:30:17.630 --> 00:30:21.529
因为这是其中之一

00:30:20.240 --> 00:30:22.990
鉴于我们

00:30:21.529 --> 00:30:25.130
使用Spring Cloud和GCP 

00:30:22.990 --> 00:30:26.980
整合Spring Cloud 

00:30:25.130 --> 00:30:30.559
认证就是认证

00:30:26.980 --> 00:30:34.429
自动配置已经导致我们

00:30:30.559 --> 00:30:36.440
得到一个我们可以的凭证对象

00:30:34.429 --> 00:30:38.539
然后用于向其他Google进行身份验证

00:30:36.440 --> 00:30:40.820
即使这些API没有提供Cloud API， 

00:30:38.539 --> 00:30:43.340
本身与Auto集成

00:30:40.820 --> 00:30:45.889
在旋转云gzq中进行配置

00:30:43.340 --> 00:30:50.419
项目，所以我们要做的是

00:30:45.889 --> 00:30:52.490
首先要定义一个类型的梁

00:30:50.419 --> 00:30:54.019
图像注释器

00:30:52.490 --> 00:31:01.010
客户我真正需要的是我需要的

00:30:54.019 --> 00:31:01.940
首先是视觉API，所以我认为

00:31:01.010 --> 00:31:07.250
没关系

00:31:01.940 --> 00:31:08.240
我想相信那是对的

00:31:07.250 --> 00:31:09.550
我要去做的就是

00:31:08.240 --> 00:31:11.260
留在里面或留在里面

00:31:09.550 --> 00:31:13.660
可能很好，所以可能很好

00:31:11.260 --> 00:31:19.900
我们不会创建光束类型的图像， 

00:31:13.660 --> 00:31:23.080
 Cato客户程序，然后注入

00:31:19.900 --> 00:31:26.380
凭证提供者确保您得到

00:31:23.080 --> 00:31:30.930
合适的那个，我们要说

00:31:26.380 --> 00:31:40.180
返回图像和Cato客户端使用该图像

00:31:30.930 --> 00:31:44.800
并用鸭嘴不给你珍妮脚趾

00:31:40.180 --> 00:31:46.920
客户点创建，当我回到

00:31:44.800 --> 00:31:46.920
这个

00:31:51.510 --> 00:31:57.950
是的，应该这样，所以我们需要

00:31:54.120 --> 00:32:02.790
我们要说这需要一个

00:31:57.950 --> 00:32:10.710
图像注释器设置和注释器

00:32:02.790 --> 00:32:18.380
设置Doc的noob生成器模具集

00:32:10.710 --> 00:32:23.750
凭证提供者CP doc旧的还可以

00:32:18.380 --> 00:32:28.440
并在需要时查找例外

00:32:23.750 --> 00:32:30.480
摆脱任何红色的曲线

00:32:28.440 --> 00:32:32.250
好了，我们走了，所以有我的形象

00:32:30.480 --> 00:32:34.710
带注释的计划，我正在得到这个

00:32:32.250 --> 00:32:36.570
从春季开始的凭证提供者

00:32:34.710 --> 00:32:39.480
云集成现在此图像

00:32:36.570 --> 00:32:42.240
注释者客户端相当嘿

00:32:39.480 --> 00:32:43.950
有状态的，我实际上有些沉重

00:32:42.240 --> 00:32:45.840
我之所以把床缩了一下

00:32:43.950 --> 00:32:48.060
留下来，沉重，是的，我同意

00:32:45.840 --> 00:32:50.850
有点沉重和可恨

00:32:48.060 --> 00:32:52.950
嗯，我们有这个图像注释器客户端

00:32:50.850 --> 00:32:53.910
有状态又沉重，不是其中之一

00:32:52.950 --> 00:32:54.510
你想保留的那些东西

00:32:53.910 --> 00:32:56.720
永远

00:32:54.510 --> 00:32:59.220
你绝对应该让这个春天

00:32:56.720 --> 00:33:00.930
应用程序上下文做正确的事

00:32:59.220 --> 00:33:02.790
并帮助您处理它

00:33:00.930 --> 00:33:04.530
它实现了自动关闭

00:33:02.790 --> 00:33:05.490
春天看到正在受到影响

00:33:04.530 --> 00:33:07.380
这个介面

00:33:05.490 --> 00:33:09.540
它会自动销毁它，或者

00:33:07.380 --> 00:33:11.040
正确处理它会叫

00:33:09.540 --> 00:33:13.830
完成申请后的衣服

00:33:11.040 --> 00:33:15.420
这很棒，例如

00:33:13.830 --> 00:33:19.620
因为你知道尝试资源

00:33:15.420 --> 00:33:20.820
那种东西，在春天点燃你

00:33:19.620 --> 00:33:23.390
知道它以相同的方式理解

00:33:20.820 --> 00:33:27.240
它了解预毁权

00:33:23.390 --> 00:33:30.180
或一次性光束，我们将使用

00:33:27.240 --> 00:33:34.200
当他们还使用静音注释时

00:33:30.180 --> 00:33:38.130
或声明私有图像注释者客户端

00:33:34.200 --> 00:33:41.100
您将其添加到此以及我们只是

00:33:38.130 --> 00:33:44.940
希望在我们的视觉演示中注入我们

00:33:41.100 --> 00:33:48.420
我们将从

00:33:44.940 --> 00:33:50.460
来自云端的应用程序

00:33:48.420 --> 00:33:55.350
春天的力量，所以我要说我们

00:33:50.460 --> 00:34:02.900
想跟你知道的GS说话

00:33:55.350 --> 00:34:02.900
同样的斗帽jpg那只猫

00:34:05.930 --> 00:34:11.010
没关系，所以我们实际上

00:34:08.060 --> 00:34:13.020
注入猫，我们得到了图像

00:34:11.010 --> 00:34:15.450
带注释的客户以及我们要做什么

00:34:13.020 --> 00:34:18.480
这里要做的是我们将要使用图像

00:34:15.450 --> 00:34:23.220
注释器api，但首先我们需要

00:34:18.480 --> 00:34:27.510
猫的字节数等于文件副本

00:34:23.220 --> 00:34:30.660
 utils点复制字节来排列猫

00:34:27.510 --> 00:34:32.220
得到输入流，对不起

00:34:30.660 --> 00:34:34.830
这次我们对输入流进行了分类

00:34:32.220 --> 00:34:36.750
好吧，这是我的字节，还有我的

00:34:34.830 --> 00:34:38.190
想做的就是与之合作

00:34:36.750 --> 00:34:47.120
字节数组，所以我要使用蝙蝠

00:34:38.190 --> 00:34:49.940
注释图像响应响应等于

00:34:47.120 --> 00:34:54.570
这个库存图像注释的客户点

00:34:49.940 --> 00:34:57.750
返回注释图像，然后我们做了一个

00:34:54.570 --> 00:35:02.280
要求这需要收集

00:34:57.750 --> 00:35:08.730
请求，让我们看看

00:35:02.280 --> 00:35:15.120
这将是一个带注释的图像请求

00:35:08.730 --> 00:35:16.500
点新的构建器添加功能以及什么

00:35:15.120 --> 00:35:19.680
我们试图做的是何时描述

00:35:16.500 --> 00:35:27.810
我们想在哪些事情上认识

00:35:19.680 --> 00:35:30.410
在图像中，不是那种海军

00:35:27.810 --> 00:35:30.410
检测

00:35:33.079 --> 00:35:39.359
而您希望这是

00:35:36.930 --> 00:35:43.619
来自这里的字节，所以图像

00:35:39.359 --> 00:35:45.869
新的构建者完成了设置内容，而我

00:35:43.619 --> 00:35:46.680
从其点创建一个字节字符串以

00:35:45.869 --> 00:35:53.069
复制自

00:35:46.680 --> 00:35:54.599
对，对，对，对，对，好，好，好

00:35:53.069 --> 00:35:59.329
所以我们该怎么办

00:35:54.599 --> 00:36:01.619
在这里，让我们看看让我们存储所有

00:35:59.329 --> 00:36:16.140
有我只想要的图像数据

00:36:01.619 --> 00:36:18.960
建立是的，建立好旧的当我说

00:36:16.140 --> 00:36:20.339
建立好吧，我不会收集

00:36:18.960 --> 00:36:24.480
这些告诉我，所以收藏点

00:36:20.339 --> 00:36:25.589
单身人士，我们去那里建立

00:36:24.480 --> 00:36:28.680
那在哪里给我们，给我们一个

00:36:25.589 --> 00:36:30.269
回应，我要做的就是

00:36:28.680 --> 00:36:33.240
在那里注销结果，所以我会说

00:36:30.269 --> 00:36:34.619
记录我们当然没有的信息

00:36:33.240 --> 00:36:43.619
记录器，所以只是没有检查

00:36:34.619 --> 00:36:48.690
这是最新的-好的信息日志

00:36:43.619 --> 00:36:50.900
结果出来，好吧，所以我们

00:36:48.690 --> 00:36:50.900
数据

00:36:53.079 --> 00:36:56.770
今天好吗

00:37:00.630 --> 00:37:07.760
好东西，现在让我们来看看吧

00:37:03.900 --> 00:37:07.760
看看我们得到的还款

00:37:39.880 --> 00:37:45.280
看它已经意识到

00:37:42.400 --> 00:37:47.950
是苏格兰人，这是与

00:37:45.280 --> 00:37:50.970
它说这是英国人

00:37:47.950 --> 00:37:54.520
半长发，百分之七十五

00:37:50.970 --> 00:37:57.460
这是一张图片的概率

00:37:54.520 --> 00:37:59.590
那不是猫，鼻子是鼻子

00:37:57.460 --> 00:38:02.860
在动物群的背景中有草

00:37:59.590 --> 00:38:04.630
这是像猫一样的哺乳动物，肯定是

00:38:02.860 --> 00:38:06.520
一只中小型猫，虽然我

00:38:04.630 --> 00:38:08.200
我不知道我是否会

00:38:06.520 --> 00:38:11.260
同意，我认为这是一个漂亮的

00:38:08.200 --> 00:38:14.470
喂饱了完美的时光，我们有了哺乳动物

00:38:11.260 --> 00:38:16.360
检查胡须，也有一个

00:38:14.470 --> 00:38:18.910
猫对的好东西，所以似乎有

00:38:16.360 --> 00:38:25.180
对这只猫有99％的信心

00:38:18.910 --> 00:38:28.120
你知道那公平吗我们不公平

00:38:25.180 --> 00:38:29.290
你知道我的腿很像我很漂亮

00:38:28.120 --> 00:38:32.380
我对自己的自信印象深刻

00:38:29.290 --> 00:38:34.900
被赋予它没有四肢

00:38:32.380 --> 00:38:36.490
这只是一个飞毛绒球，所以

00:38:34.900 --> 00:38:41.020
 Google令人印象深刻的好东西

00:38:36.490 --> 00:38:43.120
真令人印象深刻，现在我们已经节省了一些

00:38:41.020 --> 00:38:46.480
我们使用资源抽象的数据

00:38:43.120 --> 00:38:47.980
在这里从Google提取数据

00:38:46.480 --> 00:38:49.360
云存储服务就在您哪里

00:38:47.980 --> 00:38:52.270
必须做一些特别的事情才能得到

00:38:49.360 --> 00:38:53.500
工作，那很酷，我喜欢

00:38:52.270 --> 00:38:55.030
你知道还有很多其他的事情

00:38:53.500 --> 00:38:57.030
我们可以做到，我可以猜到

00:38:55.030 --> 00:38:59.260
接下来我们要看的是

00:38:57.030 --> 00:39:01.270
信息插管，让我们做到这一点

00:38:59.260 --> 00:39:04.000
对，所以您知道这很容易

00:39:01.270 --> 00:39:06.760
连接服务或与Google Cloud 

00:39:04.000 --> 00:39:08.680
因为那个Google云端发布/订阅所以我们

00:39:06.760 --> 00:39:10.840
实际上可以利用这一点

00:39:08.680 --> 00:39:13.720
只要我们添加正确的依赖关系

00:39:10.840 --> 00:39:15.400
春天我们需要谷歌云

00:39:13.720 --> 00:39:22.600
云曾经被启动了

00:39:15.400 --> 00:39:25.420
所以春季GCP入门者会弹出

00:39:22.600 --> 00:39:31.630
再见，我们需要一些

00:39:25.420 --> 00:39:33.490
属性配置，我们没有

00:39:31.630 --> 00:39:35.800
我们在这里需要做的任何事情

00:39:33.490 --> 00:39:39.930
这样我们就很好了，现在让我们开始吧

00:39:35.800 --> 00:39:44.650
提前建立一个应用程序发布/订阅

00:39:39.930 --> 00:39:48.320
演示事件监听器

00:39:44.650 --> 00:39:55.310
应用就绪事件类公共

00:39:48.320 --> 00:40:02.140
无效的演示引发异常和河

00:39:55.310 --> 00:40:02.140
带有八个酒吧子的Spring 梁

00:40:02.380 --> 00:40:14.740
订阅子发布者模板

00:40:08.830 --> 00:40:19.450
出版商私人最终发布子

00:40:14.740 --> 00:40:22.220
订阅模板订阅黄油

00:40:19.450 --> 00:40:22.880
好吧，将它们注入

00:40:22.220 --> 00:40:26.980
建设者

00:40:22.880 --> 00:40:30.530
我想当它第一次注册时

00:40:26.980 --> 00:40:35.020
订户，我们将要

00:40:30.530 --> 00:40:39.170
想要使用预先设置的

00:40:35.020 --> 00:40:43.609
订阅和主题

00:40:39.170 --> 00:40:46.099
在Google Cloud中，让我们看看

00:40:43.609 --> 00:40:47.540
我们到了这里，我的酒吧在哪里

00:40:46.099 --> 00:40:48.920
子还好

00:40:47.540 --> 00:40:50.720
搜索您知道这是其中之一

00:40:48.920 --> 00:40:53.270
与我们一起成长很好的搜索，所以

00:40:50.720 --> 00:40:55.190
让我们来做，当我去

00:40:53.270 --> 00:40:59.480
 pub子部分，我看到

00:40:55.190 --> 00:41:03.740
三个真的三个不同的你知道

00:40:59.480 --> 00:41:07.160
感兴趣的事物

00:41:03.740 --> 00:41:09.550
有正确的主题，让我们回去

00:41:07.160 --> 00:41:09.550
实际上在这里

00:41:12.050 --> 00:41:15.229
 [掌声] 

00:41:30.420 --> 00:41:37.160
 pub / sub那里，你走不回这里

00:41:38.000 --> 00:41:46.170
那里的酒吧/预订看到了我猜的热门话题

00:41:43.380 --> 00:41:49.920
这是GM主题，然后您可以创建

00:41:46.170 --> 00:41:52.040
这么简单的话题就给它

00:41:49.920 --> 00:41:53.910
我有一个名字叫保留

00:41:52.040 --> 00:41:55.590
点击这个，然后你有一个

00:41:53.910 --> 00:41:57.120
另一个订阅

00:41:55.590 --> 00:42:00.750
它的侧面，订阅是

00:41:57.120 --> 00:42:02.850
消费者连接一次的事物

00:42:00.750 --> 00:42:05.250
您有一个要发送的主题

00:42:02.850 --> 00:42:06.540
消息和订阅

00:42:05.250 --> 00:42:08.880
您使用邮件，如果您想

00:42:06.540 --> 00:42:10.470
您是否了解每个客户的详细信息

00:42:08.880 --> 00:42:12.270
它自己的方案，那么你可以有两个

00:42:10.470 --> 00:42:14.610
如果需要，可以使用其他订阅

00:42:12.270 --> 00:42:16.410
全部耗尽同一个队列，那么您可以

00:42:14.610 --> 00:42:17.340
那你就可以全部

00:42:16.410 --> 00:42:18.690
客户可以同一个谈话

00:42:17.340 --> 00:42:20.520
订阅我的意思是你可以做各种事情

00:42:18.690 --> 00:42:22.410
基于他们有趣的模式

00:42:20.520 --> 00:42:25.590
在这里使用订阅，所以我已经

00:42:22.410 --> 00:42:32.640
一个订阅有一个主题

00:42:25.590 --> 00:42:40.890
是叫保留对不起的话题

00:42:32.640 --> 00:42:43.770
这是Todd的预订订阅， 

00:42:40.890 --> 00:42:46.290
这将是一个新的消费者

00:42:43.770 --> 00:42:50.310
一个lambda，我们必须明确地

00:42:46.290 --> 00:42:57.930
确认消息，好吧

00:42:50.310 --> 00:42:59.340
我们说消息黑AK很棒，我们可以

00:42:57.930 --> 00:43:01.860
记录消息，我要做的是

00:42:59.340 --> 00:43:07.680
我要带消息去酒吧

00:43:01.860 --> 00:43:14.210
子消息获取数据并打开

00:43:07.680 --> 00:43:14.210
数据变成这样的字符串

00:43:17.740 --> 00:43:32.329
好吧，我要注销，也许那是

00:43:21.619 --> 00:43:35.720
像通常的消息字符串utf-8一样长

00:43:32.329 --> 00:43:37.789
好东西，所以我们就在这里

00:43:35.720 --> 00:43:40.039
只是记录消息的接收

00:43:37.789 --> 00:43:41.359
这当然很适合

00:43:40.039 --> 00:43:43.970
 lambda很酷

00:43:41.359 --> 00:43:45.619
更清洁，所以我们正在订阅

00:43:43.970 --> 00:43:47.539
现在，让我们实际发送

00:43:45.619 --> 00:43:50.210
消息，所以这次要说发布者

00:43:47.539 --> 00:43:54.440
点发布，我们将发送给

00:43:50.210 --> 00:43:59.630
订阅主题和消息

00:43:54.440 --> 00:44:02.630
现在只是一个字符串即时点

00:43:59.630 --> 00:44:06.829
串好每个人，所以我要发送

00:44:02.630 --> 00:44:09.920
消息得到这个订户和

00:44:06.829 --> 00:44:11.750
就是这样，这就是

00:44:09.920 --> 00:44:14.210
演示这显然是一个非常简单的演示

00:44:11.750 --> 00:44:16.190
你知道真正的分布式系统

00:44:14.210 --> 00:44:18.369
有一个向另一个发送消息

00:44:16.190 --> 00:44:20.510
但在这里我只是选择

00:44:18.369 --> 00:44:22.759
展示同一内容

00:44:20.510 --> 00:44:25.009
我认为可以正常工作的JVM进程

00:44:22.759 --> 00:44:27.220
很好，但是有点不典型

00:44:25.009 --> 00:44:27.220
足够

00:44:41.119 --> 00:44:47.380
资源等于订阅发布者

00:44:48.069 --> 00:44:54.619
保留，让我复制并

00:44:52.039 --> 00:44:57.940
贴上，我们的状况更好

00:44:54.619 --> 00:44:57.940
复制和粘贴谁知道

00:45:12.700 --> 00:45:15.630
好的

00:45:16.030 --> 00:45:21.340
消息你好，我们收到消息， 

00:45:19.390 --> 00:45:24.340
那里还可以

00:45:21.340 --> 00:45:25.810
现在您知道我们有一个应用程序

00:45:24.340 --> 00:45:27.490
谈到两个不同的数据存储

00:45:25.810 --> 00:45:29.980
能够上传图片，我们

00:45:27.490 --> 00:45:32.490
能够读取图像，能够做到

00:45:29.980 --> 00:45:34.690
图像分析能够做到

00:45:32.490 --> 00:45:37.150
插管和消息传递，我的意思是我们可以

00:45:34.690 --> 00:45:39.040
做各种各样有趣的事情

00:45:37.150 --> 00:45:41.790
谷歌云，你可以看到它相当

00:45:39.040 --> 00:45:43.960
琐碎的把这些东西放在一起

00:45:41.790 --> 00:45:45.040
在这一点上通常会说

00:45:43.960 --> 00:45:48.520
我们准备出发了

00:45:45.040 --> 00:45:51.520
制作人，但是你知道那是

00:45:48.520 --> 00:45:54.040
并非总是如此吗？ 

00:45:51.520 --> 00:45:56.170
知道冷完是不一样的

00:45:54.040 --> 00:45:58.930
作为值得生产的我们当然

00:45:56.170 --> 00:46:00.580
不在乎可观察性等等

00:45:58.930 --> 00:46:03.550
我想做的一件事就是让你

00:46:00.580 --> 00:46:06.490
所有人都知道这种行为

00:46:03.550 --> 00:46:12.130
应用程序，做到这一点的一种方法是

00:46:06.490 --> 00:46:14.890
支持堆栈驱动程序排序套件

00:46:12.130 --> 00:46:18.490
谷歌云的可观察性工具

00:46:14.890 --> 00:46:20.590
提供，所以，如果你下去这里有

00:46:18.490 --> 00:46:21.910
一堆很好的工具，我们

00:46:20.590 --> 00:46:23.530
可以看看，让我们做到这一点，让我们

00:46:21.910 --> 00:46:26.020
实际上带来了两种不同

00:46:23.530 --> 00:46:33.790
这里的依赖是春天云

00:46:26.020 --> 00:46:36.600
只是入门，好吧，哦， 

00:46:33.790 --> 00:46:36.600
很大声

00:46:38.520 --> 00:46:49.200
好吧，另一个是

00:46:44.210 --> 00:46:51.780
春季GCP开始记录一切正常

00:46:49.200 --> 00:46:54.390
所以这些人要做的是

00:46:51.780 --> 00:46:55.860
将自动发送信息

00:46:54.390 --> 00:46:57.660
我到分布式跟踪平台

00:46:55.860 --> 00:47:01.950
现在我要做的是追踪

00:46:57.660 --> 00:47:03.750
申请中的信息和

00:47:01.950 --> 00:47:05.670
通常你知道我会怎么做

00:47:03.750 --> 00:47:08.550
在这种情况下，我要做的是Spring 

00:47:05.670 --> 00:47:11.010
云套和Zipkin拉链

00:47:08.550 --> 00:47:13.770
将分布式跟踪模式作为

00:47:11.010 --> 00:47:16.470
我们来自Twitter的平台

00:47:13.770 --> 00:47:19.130
足够有特权

00:47:16.470 --> 00:47:21.300
有机会为我们做贡献

00:47:19.130 --> 00:47:24.720
赞助了它的一些开发权

00:47:21.300 --> 00:47:26.550
如果您觉得有趣，我们也可以使用

00:47:24.720 --> 00:47:31.890
你知道那是通用的

00:47:26.550 --> 00:47:36.330
 Zipkin是一个抽象

00:47:31.890 --> 00:47:38.270
令人信服的实施Zipkin是

00:47:36.330 --> 00:47:40.500
灵感来自Google精巧的论文

00:47:38.270 --> 00:47:43.830
是的，所以Google员工论文

00:47:40.500 --> 00:47:45.030
实际上在运动中说Zipkin，我们

00:47:43.830 --> 00:47:47.310
可以利用相同的优势

00:47:45.030 --> 00:47:50.160
学习是导致那种

00:47:47.310 --> 00:47:52.020
小巧的进化

00:47:50.160 --> 00:47:54.720
您可以想象的地方在Google 

00:47:52.020 --> 00:47:56.940
知道将近八九十年

00:47:54.720 --> 00:47:59.400
所以我们要在这里使用它的是

00:47:56.940 --> 00:48:00.750
 ok堆栈驱动程序跟踪的后继者

00:47:59.400 --> 00:48:02.670
所以你需要做的一件事

00:48:00.750 --> 00:48:05.280
采样，但使用时要平滑

00:48:02.670 --> 00:48:07.890
配置百分之几

00:48:05.280 --> 00:48:09.150
要求您要跟踪，所以我是

00:48:07.890 --> 00:48:11.430
我要做的是建立一个简单的

00:48:09.150 --> 00:48:12.450
小终点再次很简单我

00:48:11.430 --> 00:48:14.670
将要建立一个调用

00:48:12.450 --> 00:48:17.040
本身只是为了吸引一些流量

00:48:14.670 --> 00:48:22.440
让我们创建一个简单的问候食谱

00:48:17.040 --> 00:48:24.480
好吧，这只是休息

00:48:22.440 --> 00:48:26.190
我们要去的控制器

00:48:24.480 --> 00:48:28.380
仪器，它将要使用休息

00:48:26.190 --> 00:48:31.880
将要检测的模板

00:48:28.380 --> 00:48:40.430
到春天云朵敬礼，所以我们去这里

00:48:31.880 --> 00:48:40.430
在bean列表模板返回

00:48:44.200 --> 00:48:50.020
模板好，所以我剩下的

00:48:48.220 --> 00:48:51.579
它和春天的云侦探会

00:48:50.020 --> 00:48:53.920
自动配置拦截器

00:48:51.579 --> 00:48:57.010
现在永久保留跟踪信息

00:48:53.920 --> 00:48:58.750
在公开的侦探中

00:48:57.010 --> 00:49:00.609
追踪说法，您已经追踪

00:48:58.750 --> 00:49:04.720
这是从A到Z的玛瑙之旅

00:49:00.609 --> 00:49:06.069
而且你每个人都有

00:49:04.720 --> 00:49:07.780
从一个节点到另一个节点的方式

00:49:06.069 --> 00:49:08.200
一个逻辑组件边界

00:49:07.780 --> 00:49:10.540
另一个

00:49:08.200 --> 00:49:12.220
这是一个称为跨度的电话

00:49:10.540 --> 00:49:14.980
我有一个休息模板，我要

00:49:12.220 --> 00:49:16.510
将其配置为永久跟踪并

00:49:14.980 --> 00:49:19.240
跨越信息实际上只是

00:49:16.510 --> 00:49:20.799
将使标头uu ID永久存在

00:49:19.240 --> 00:49:23.020
对应于此，然后得到

00:49:20.799 --> 00:49:24.849
带外发布的东西

00:49:23.020 --> 00:49:26.470
然后将所有这些都变成一个大

00:49:24.849 --> 00:49:28.089
在Zipkin世界中很好地描绘出

00:49:26.470 --> 00:49:30.339
可能是Zipkin，它跑到了

00:49:28.089 --> 00:49:32.740
通过经纪人在这边连接

00:49:30.339 --> 00:49:34.720
如果不是Zipkin，它将

00:49:32.740 --> 00:49:37.720
成为堆栈驱动程序跟踪，以便我们

00:49:34.720 --> 00:49:45.609
使用想要创建一个简单的端点

00:49:37.720 --> 00:49:49.210
这里叫同一个客户

00:49:45.609 --> 00:49:50.680
我们的客户代码只是要调用

00:49:49.210 --> 00:49:53.950
自己，当我们要有一个简单的

00:49:50.680 --> 00:49:55.780
导致一些流量的端点，所以我

00:49:53.950 --> 00:50:01.380
要说实际上他们将是多个

00:49:55.780 --> 00:50:30.640
回应让我们做得到

00:50:01.380 --> 00:50:33.160
流吧，哦，雷，好吧，所以有一个

00:50:30.640 --> 00:50:36.460
几个名字，我要做的是

00:50:33.160 --> 00:50:38.079
我将每个名称映射到一个

00:50:36.460 --> 00:50:41.410
请求将通过

00:50:38.079 --> 00:50:46.829
连线到我自己，可以到达另一个终点

00:50:41.410 --> 00:50:50.339
在同一个班级，所以虽然V 

00:50:46.829 --> 00:50:50.339
给它起个名字

00:50:51.309 --> 00:51:05.270
可变字符串名称你好女士好

00:51:02.539 --> 00:51:09.369
我们要在这里写一张唱片

00:51:05.270 --> 00:51:18.619
我们只是创建一个创纪录的私人决赛

00:51:09.369 --> 00:51:20.650
字符串调用字符串名称，我们需要

00:51:18.619 --> 00:51:26.390
剩下的问题如此私密

00:51:20.650 --> 00:51:29.900
最终的最佳模板，那就是

00:51:26.390 --> 00:51:32.900
构造函数，在这里我们说这个点

00:51:29.900 --> 00:51:45.170
其余模板点您的实体HTTP 

00:51:32.900 --> 00:51:48.069
看起来像localhost 8080的好名字

00:51:45.170 --> 00:51:54.260
好像还可以，当你得到身体时

00:51:48.069 --> 00:52:03.549
还好吧，让我说呼吁

00:51:54.260 --> 00:52:03.549
名称，然后我们要做的就是收集

00:52:03.579 --> 00:52:06.880
两张清单

00:52:07.200 --> 00:52:11.319
好吧，我只是打个名字

00:52:09.999 --> 00:52:13.150
我实际上是在称自己为

00:52:11.319 --> 00:52:14.650
每次都带来一些流量

00:52:13.150 --> 00:52:16.630
打电话给我开车的客户

00:52:14.650 --> 00:52:18.819
您知道每个现在有X个记录

00:52:16.630 --> 00:52:21.309
我想记录的发生时间

00:52:18.819 --> 00:52:23.680
一些信息发送到控制台，所以

00:52:21.309 --> 00:52:26.640
我将继续记录该信息，并准备就绪

00:52:23.680 --> 00:52:26.640
也是一天的博客

00:52:27.220 --> 00:52:33.559
 [掌声] 

00:52:37.549 --> 00:52:42.539
好，那是我的简单配置

00:52:40.559 --> 00:52:44.670
为了使它正常工作，我现在需要

00:52:42.539 --> 00:52:46.650
配置log4j以了解最新情况

00:52:44.670 --> 00:52:48.000
好吧，实际上是一点点

00:52:46.650 --> 00:52:50.640
应该是最痛苦的代码

00:52:48.000 --> 00:52:52.880
我们今天要写，因为

00:52:50.640 --> 00:52:55.440
 XML，您知道我有多爱XML 

00:52:52.880 --> 00:52:58.829
不是我不是很正确，所以让我们看看

00:52:55.440 --> 00:53:07.319
我，我们要去玩玩

00:52:58.829 --> 00:53:16.880
一个叫我的文件哇容易容易

00:53:07.319 --> 00:53:21.650
此处的文件称为Logged Back Springs XML 

00:53:16.880 --> 00:53:21.650
我们有豌 bean 配置

00:53:35.050 --> 00:53:59.540
包括每个来源可能更容易

00:53:46.820 --> 00:54:06.790
只需复制并粘贴此一个，这样我

00:53:59.540 --> 00:54:06.790
资源还可以

00:54:12.640 --> 00:54:16.160
我确定我们有一口井，所以我能

00:54:15.650 --> 00:54:19.690
得到它

00:54:16.160 --> 00:54:33.010
与我们的学生用手或

00:54:19.690 --> 00:54:41.170
包括资源等于或Spring 一

00:54:33.010 --> 00:54:48.070
启动登录重新登录，而不是XML Wow 

00:54:41.170 --> 00:54:48.070
好吧，容易，我想是从云而来的春天

00:54:49.270 --> 00:55:06.140
 GCP自动配置日志记录已久

00:55:03.160 --> 00:55:08.990
好吧，我就是这个

00:55:06.140 --> 00:55:10.940
不在某处的文档

00:55:08.990 --> 00:55:12.110
令人愉快，但它不起作用，只是

00:55:10.940 --> 00:55:18.320
这些事情之一，你必须

00:55:12.110 --> 00:55:23.180
一次做对，然后你就好了， 

00:55:18.320 --> 00:55:29.930
你等于左控制台了吗

00:55:23.180 --> 00:55:33.280
然后堆栈转移了什么

00:55:29.930 --> 00:55:33.280
对我来说很好

00:55:39.000 --> 00:55:46.610
是的，只是继续前进， 

00:55:42.630 --> 00:55:46.610
试试我们开始

00:55:55.920 --> 00:56:00.430
哎呀

00:55:58.360 --> 00:56:02.890
哦，这是记录的例程，所以

00:56:00.430 --> 00:56:10.830
这是一个例外，我们现在在那里

00:56:02.890 --> 00:56:10.830
去吧，应该现在就去

00:56:20.220 --> 00:56:26.579
对吧，忘了你可以看到它说

00:56:23.460 --> 00:56:28.619
 Holloway你好Dave你好Bob你好Paul 

00:56:26.579 --> 00:56:30.210
好吧，我们得到了一堆名字

00:56:28.619 --> 00:56:33.780
回来，我们可以看到它的踪迹

00:56:30.210 --> 00:56:35.130
和跨度上下文和指示

00:56:33.780 --> 00:56:37.560
该请求是否已被跟踪或

00:56:35.130 --> 00:56:40.560
设置一个点的概率不正确

00:56:37.560 --> 00:56:43.170
 o是100％表示事实

00:56:40.560 --> 00:56:46.190
这是要求的痕迹，我们

00:56:43.170 --> 00:56:52.770
现在可以去这里去追踪

00:56:46.190 --> 00:56:59.490
概述，我们可以看到最近的痕迹

00:56:52.770 --> 00:57:01.650
穿上这个，我们走了，如果我

00:56:59.490 --> 00:57:03.599
点击这个我可以看到我打招呼

00:57:01.650 --> 00:57:05.420
雷，然后我向其他人打招呼

00:57:03.599 --> 00:57:09.450
我可以看到请求和响应

00:57:05.420 --> 00:57:11.460
请求响应请求响应权

00:57:09.450 --> 00:57:14.339
甚至更好，因为我们有

00:57:11.460 --> 00:57:17.130
为stackdriver trace I记录启动程序

00:57:14.339 --> 00:57:18.720
可以实际点击显示日志，现在

00:57:17.130 --> 00:57:20.940
我可以看到与之相关的日志

00:57:18.720 --> 00:57:25.319
这些消息被追踪的时间

00:57:20.940 --> 00:57:28.470
正确的问候雷·格林的戴夫读书

00:57:25.319 --> 00:57:31.500
鲍勃读保罗·格林峡谷·格林·金

00:57:28.470 --> 00:57:33.780
否定等等不是很酷

00:57:31.500 --> 00:57:35.069
真的很好，我已经

00:57:33.780 --> 00:57:38.069
与每个请求关联的上下文

00:57:35.069 --> 00:57:39.960
在这里也这样做

00:57:38.069 --> 00:57:41.910
哦，那很好-看，我想我

00:57:39.960 --> 00:57:45.869
更喜欢另一种方式

00:57:41.910 --> 00:57:47.550
太酷了，所以我看过我的朋友

00:57:45.869 --> 00:57:48.480
您可以做的几件事就可以做

00:57:47.550 --> 00:57:50.160
使用Google Cloud 

00:57:48.480 --> 00:57:52.050
我当然只是开始抓

00:57:50.160 --> 00:57:55.140
表面上我们看着无聊的东西

00:57:52.050 --> 00:58:00.000
我的续集，您知道独特的Google规模

00:57:55.140 --> 00:58:02.730
像扳手一样的东西，我们看了api的

00:58:00.000 --> 00:58:04.920
没有Spring 直接支撑

00:58:02.730 --> 00:58:07.020
但很有趣并且可以访问

00:58:04.920 --> 00:58:08.640
现在那里现在

00:58:07.020 --> 00:58:10.410
身份验证在

00:58:08.640 --> 00:58:14.550
像Google这样的便捷方式

00:58:10.410 --> 00:58:16.460
视觉API，我们研究了集成和

00:58:14.550 --> 00:58:18.359
消息，然后我们看了看

00:58:16.460 --> 00:58:21.510
可观察性及其支持方式

00:58:18.359 --> 00:58:24.630
由工具中的堆栈驱动程序套件

00:58:21.510 --> 00:58:26.160
 Google Cloud让您知道很多好处

00:58:24.630 --> 00:58:29.339
这里的东西很多

00:58:26.160 --> 00:58:30.900
 Google的 Spring Integration 

00:58:29.339 --> 00:58:32.770
云，当然还有更多

00:58:30.900 --> 00:58:34.600
方式

00:58:32.770 --> 00:58:35.980
我当然认为这些事情是

00:58:34.600 --> 00:58:37.690
引人注目的，显然他们使

00:58:35.980 --> 00:58:39.640
与诸如

00:58:37.690 --> 00:58:41.170
 Cloud Foundry，因为您可以在那里运行

00:58:39.640 --> 00:58:43.060
您的应用程序最简单，最简洁的方式

00:58:41.170 --> 00:58:44.530
可能然后利用

00:58:43.060 --> 00:58:46.750
随时利用并充分利用

00:58:44.530 --> 00:58:48.700
利用使

00:58:46.750 --> 00:58:50.650
平台很有价值，因此我

00:58:48.700 --> 00:58:52.750
一如既往的朋友谢谢你

00:58:50.650 --> 00:58:55.050
收看很多，我们下次见

00:58:52.750 --> 00:58:55.050
时间

00:59:00.290 --> 00:59:02.350
您

