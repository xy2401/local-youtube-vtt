WEBVTT
Kind: captions
Language: en

00:00:24.690 --> 00:00:27.120 align:start position:0%
 
hi<00:00:25.690><c> spring</c><00:00:25.960><c> fans</c><00:00:26.200><c> welcome</c><00:00:26.860><c> to</c><00:00:27.010><c> another</c>

00:00:27.120 --> 00:00:27.130 align:start position:0%
hi spring fans welcome to another
 

00:00:27.130 --> 00:00:29.160 align:start position:0%
hi spring fans welcome to another
installment<00:00:27.460><c> of</c><00:00:27.670><c> spring</c><00:00:27.940><c> tips</c><00:00:28.210><c> this</c><00:00:28.930><c> time</c>

00:00:29.160 --> 00:00:29.170 align:start position:0%
installment of spring tips this time
 

00:00:29.170 --> 00:00:30.570 align:start position:0%
installment of spring tips this time
we're<00:00:29.410><c> going</c><00:00:29.500><c> to</c><00:00:29.560><c> revisit</c><00:00:30.100><c> the</c><00:00:30.220><c> Kotlin</c>

00:00:30.570 --> 00:00:30.580 align:start position:0%
we're going to revisit the Kotlin
 

00:00:30.580 --> 00:00:32.159 align:start position:0%
we're going to revisit the Kotlin
programming<00:00:31.000><c> language</c><00:00:31.300><c> in</c><00:00:31.450><c> the</c><00:00:31.810><c> earlier</c>

00:00:32.159 --> 00:00:32.169 align:start position:0%
programming language in the earlier
 

00:00:32.169 --> 00:00:33.600 align:start position:0%
programming language in the earlier
video<00:00:32.470><c> we</c><00:00:32.619><c> looked</c><00:00:32.770><c> at</c><00:00:32.890><c> a</c><00:00:32.920><c> call</c><00:00:33.130><c> and</c><00:00:33.310><c> and</c><00:00:33.460><c> its</c>

00:00:33.600 --> 00:00:33.610 align:start position:0%
video we looked at a call and and its
 

00:00:33.610 --> 00:00:35.250 align:start position:0%
video we looked at a call and and its
basic<00:00:33.940><c> nascent</c><00:00:34.330><c> integration</c><00:00:34.810><c> with</c><00:00:34.960><c> spring</c>

00:00:35.250 --> 00:00:35.260 align:start position:0%
basic nascent integration with spring
 

00:00:35.260 --> 00:00:37.410 align:start position:0%
basic nascent integration with spring
community<00:00:36.160><c> in</c><00:00:36.220><c> the</c><00:00:36.310><c> ecosystem</c><00:00:36.880><c> and</c><00:00:37.120><c> I</c><00:00:37.300><c> just</c>

00:00:37.410 --> 00:00:37.420 align:start position:0%
community in the ecosystem and I just
 

00:00:37.420 --> 00:00:38.460 align:start position:0%
community in the ecosystem and I just
want<00:00:37.540><c> to</c><00:00:37.570><c> revisit</c><00:00:37.989><c> it</c><00:00:38.020><c> because</c><00:00:38.230><c> a</c><00:00:38.260><c> lot</c><00:00:38.440><c> of</c>

00:00:38.460 --> 00:00:38.470 align:start position:0%
want to revisit it because a lot of
 

00:00:38.470 --> 00:00:39.690 align:start position:0%
want to revisit it because a lot of
progress<00:00:38.710><c> has</c><00:00:38.920><c> been</c><00:00:38.980><c> made</c><00:00:39.130><c> and</c><00:00:39.310><c> I</c><00:00:39.460><c> want</c><00:00:39.550><c> to</c>

00:00:39.690 --> 00:00:39.700 align:start position:0%
progress has been made and I want to
 

00:00:39.700 --> 00:00:41.160 align:start position:0%
progress has been made and I want to
start<00:00:40.180><c> today</c><00:00:40.450><c> with</c><00:00:40.480><c> there</c><00:00:40.720><c> is</c><00:00:40.809><c> simple</c>

00:00:41.160 --> 00:00:41.170 align:start position:0%
start today with there is simple
 

00:00:41.170 --> 00:00:42.660 align:start position:0%
start today with there is simple
bread-and-butter<00:00:41.559><c> spring</c><00:00:42.010><c> application</c><00:00:42.520><c> and</c>

00:00:42.660 --> 00:00:42.670 align:start position:0%
bread-and-butter spring application and
 

00:00:42.670 --> 00:00:45.060 align:start position:0%
bread-and-butter spring application and
then<00:00:43.000><c> progress</c><00:00:43.360><c> towards</c><00:00:43.690><c> a</c><00:00:43.840><c> more</c><00:00:44.260><c> Kotlin</c>

00:00:45.060 --> 00:00:45.070 align:start position:0%
then progress towards a more Kotlin
 

00:00:45.070 --> 00:00:46.920 align:start position:0%
then progress towards a more Kotlin
native<00:00:45.489><c> sort</c><00:00:45.760><c> of</c><00:00:45.820><c> approach</c><00:00:46.090><c> to</c><00:00:46.360><c> building</c>

00:00:46.920 --> 00:00:46.930 align:start position:0%
native sort of approach to building
 

00:00:46.930 --> 00:00:48.000 align:start position:0%
native sort of approach to building
spring<00:00:47.170><c> application</c><00:00:47.590><c> so</c><00:00:47.650><c> I'm</c><00:00:47.710><c> gonna</c><00:00:47.800><c> start</c>

00:00:48.000 --> 00:00:48.010 align:start position:0%
spring application so I'm gonna start
 

00:00:48.010 --> 00:00:50.640 align:start position:0%
spring application so I'm gonna start
with<00:00:48.129><c> a</c><00:00:48.190><c> bread-and-butter</c><00:00:48.520><c> basic</c><00:00:49.360><c> JBC</c><00:00:50.170><c> sort</c>

00:00:50.640 --> 00:00:50.650 align:start position:0%
with a bread-and-butter basic JBC sort
 

00:00:50.650 --> 00:00:54.030 align:start position:0%
with a bread-and-butter basic JBC sort
of<00:00:50.710><c> web</c><00:00:51.160><c> application</c><00:00:51.700><c> here</c><00:00:52.360><c> I'm</c><00:00:53.110><c> gonna</c><00:00:53.260><c> use</c><00:00:53.350><c> h2</c>

00:00:54.030 --> 00:00:54.040 align:start position:0%
of web application here I'm gonna use h2
 

00:00:54.040 --> 00:00:55.229 align:start position:0%
of web application here I'm gonna use h2
which<00:00:54.280><c> is</c><00:00:54.370><c> an</c><00:00:54.430><c> in-memory</c><00:00:54.640><c> embedded</c><00:00:55.090><c> database</c>

00:00:55.229 --> 00:00:55.239 align:start position:0%
which is an in-memory embedded database
 

00:00:55.239 --> 00:00:57.420 align:start position:0%
which is an in-memory embedded database
we<00:00:55.540><c> use</c><00:00:55.660><c> the</c><00:00:55.780><c> JDBC</c><00:00:56.230><c> support</c><00:00:56.620><c> we</c><00:00:56.980><c> use</c><00:00:57.130><c> spring</c>

00:00:57.420 --> 00:00:57.430 align:start position:0%
we use the JDBC support we use spring
 

00:00:57.430 --> 00:00:58.830 align:start position:0%
we use the JDBC support we use spring
the<00:00:57.520><c> web</c><00:00:57.760><c> support</c><00:00:57.940><c> and</c><00:00:58.270><c> we're</c><00:00:58.570><c> going</c><00:00:58.690><c> to</c><00:00:58.720><c> use</c>

00:00:58.830 --> 00:00:58.840 align:start position:0%
the web support and we're going to use
 

00:00:58.840 --> 00:01:02.639 align:start position:0%
the web support and we're going to use
common<00:00:59.320><c> naturally</c><00:00:59.739><c> and</c><00:00:59.950><c> spring</c><00:01:00.640><c> boot</c><00:01:00.820><c> 2005</c><00:01:01.720><c> so</c>

00:01:02.639 --> 00:01:02.649 align:start position:0%
common naturally and spring boot 2005 so
 

00:01:02.649 --> 00:01:03.840 align:start position:0%
common naturally and spring boot 2005 so
when<00:01:02.770><c> I</c><00:01:02.800><c> hit</c><00:01:02.950><c> generate</c><00:01:03.340><c> then</c><00:01:03.489><c> I'll</c><00:01:03.579><c> give</c><00:01:03.670><c> us</c><00:01:03.790><c> a</c>

00:01:03.840 --> 00:01:03.850 align:start position:0%
when I hit generate then I'll give us a
 

00:01:03.850 --> 00:01:05.340 align:start position:0%
when I hit generate then I'll give us a
new<00:01:03.970><c> project</c><00:01:04.479><c> now</c><00:01:04.630><c> I'm</c><00:01:04.869><c> gonna</c><00:01:04.960><c> open</c><00:01:05.050><c> up</c><00:01:05.290><c> this</c>

00:01:05.340 --> 00:01:05.350 align:start position:0%
new project now I'm gonna open up this
 

00:01:05.350 --> 00:01:08.730 align:start position:0%
new project now I'm gonna open up this
application<00:01:06.100><c> here</c><00:01:06.390><c> in</c><00:01:07.390><c> my</c><00:01:07.570><c> IDE</c><00:01:07.930><c> and</c><00:01:08.229><c> it</c>

00:01:08.730 --> 00:01:08.740 align:start position:0%
application here in my IDE and it
 

00:01:08.740 --> 00:01:09.630 align:start position:0%
application here in my IDE and it
doesn't<00:01:08.920><c> really</c><00:01:09.009><c> matter</c><00:01:09.130><c> what</c><00:01:09.340><c> I</c><00:01:09.369><c> do</c><00:01:09.430><c> you're</c>

00:01:09.630 --> 00:01:09.640 align:start position:0%
doesn't really matter what I do you're
 

00:01:09.640 --> 00:01:11.670 align:start position:0%
doesn't really matter what I do you're
using<00:01:09.820><c> of</c><00:01:10.030><c> course</c><00:01:10.060><c> but</c><00:01:10.960><c> it's</c><00:01:11.290><c> in</c><00:01:11.440><c> treating</c>

00:01:11.670 --> 00:01:11.680 align:start position:0%
using of course but it's in treating
 

00:01:11.680 --> 00:01:20.910 align:start position:0%
using of course but it's in treating
common<00:01:12.070><c> ontology</c><00:01:12.250><c> is</c><00:01:12.520><c> a</c><00:01:12.610><c> pretty</c><00:01:13.149><c> good</c><00:01:13.300><c> choice</c>

00:01:20.910 --> 00:01:20.920 align:start position:0%
 
 

00:01:20.920 --> 00:01:23.050 align:start position:0%
 
now<00:01:21.920><c> I've</c><00:01:22.280><c> got</c><00:01:22.430><c> a</c><00:01:22.460><c> new</c><00:01:22.610><c> bread-and-butter</c>

00:01:23.050 --> 00:01:23.060 align:start position:0%
now I've got a new bread-and-butter
 

00:01:23.060 --> 00:01:24.280 align:start position:0%
now I've got a new bread-and-butter
application<00:01:23.660><c> so</c><00:01:23.780><c> the</c><00:01:23.870><c> first</c><00:01:24.050><c> thing</c><00:01:24.140><c> I'm</c><00:01:24.200><c> going</c>

00:01:24.280 --> 00:01:24.290 align:start position:0%
application so the first thing I'm going
 

00:01:24.290 --> 00:01:25.990 align:start position:0%
application so the first thing I'm going
to<00:01:24.350><c> do</c><00:01:24.500><c> this</c><00:01:24.560><c> I</c><00:01:24.710><c> know</c><00:01:24.770><c> you</c><00:01:25.430><c> know</c><00:01:25.550><c> manage</c><00:01:25.880><c> my</c>

00:01:25.990 --> 00:01:26.000 align:start position:0%
to do this I know you know manage my
 

00:01:26.000 --> 00:01:28.330 align:start position:0%
to do this I know you know manage my
data<00:01:26.240><c> and</c><00:01:27.140><c> I'm</c><00:01:27.620><c> gonna</c><00:01:27.710><c> do</c><00:01:27.860><c> that</c><00:01:27.950><c> using</c><00:01:28.160><c> the</c>

00:01:28.330 --> 00:01:28.340 align:start position:0%
data and I'm gonna do that using the
 

00:01:28.340 --> 00:01:29.590 align:start position:0%
data and I'm gonna do that using the
dependencies<00:01:28.790><c> that</c><00:01:28.820><c> on</c><00:01:29.000><c> the</c><00:01:29.060><c> classpath</c><00:01:29.390><c> right</c>

00:01:29.590 --> 00:01:29.600 align:start position:0%
dependencies that on the classpath right
 

00:01:29.600 --> 00:01:31.600 align:start position:0%
dependencies that on the classpath right
I've<00:01:29.690><c> got</c><00:01:29.810><c> my</c><00:01:29.990><c> age</c><00:01:30.380><c> to</c><00:01:30.740><c> support</c><00:01:31.130><c> I've</c><00:01:31.310><c> got</c><00:01:31.460><c> my</c>

00:01:31.600 --> 00:01:31.610 align:start position:0%
I've got my age to support I've got my
 

00:01:31.610 --> 00:01:34.360 align:start position:0%
I've got my age to support I've got my
JDBC<00:01:32.060><c> support</c><00:01:32.740><c> I've</c><00:01:33.740><c> also</c><00:01:33.920><c> got</c><00:01:34.100><c> the</c><00:01:34.190><c> cotton</c>

00:01:34.360 --> 00:01:34.370 align:start position:0%
JDBC support I've also got the cotton
 

00:01:34.370 --> 00:01:35.830 align:start position:0%
JDBC support I've also got the cotton
standard<00:01:34.970><c> library</c><00:01:35.360><c> and</c><00:01:35.420><c> the</c><00:01:35.540><c> reflects</c>

00:01:35.830 --> 00:01:35.840 align:start position:0%
standard library and the reflects
 

00:01:35.840 --> 00:01:38.980 align:start position:0%
standard library and the reflects
support<00:01:36.200><c> there</c><00:01:36.410><c> I've</c><00:01:36.590><c> got</c><00:01:36.620><c> the</c><00:01:37.990><c> origins</c>

00:01:38.980 --> 00:01:38.990 align:start position:0%
support there I've got the origins
 

00:01:38.990 --> 00:01:41.170 align:start position:0%
support there I've got the origins
cotton<00:01:39.290><c> maven</c><00:01:39.620><c> plugin</c><00:01:39.950><c> and</c><00:01:40.700><c> I've</c><00:01:41.030><c> got</c><00:01:41.150><c> a</c>

00:01:41.170 --> 00:01:41.180 align:start position:0%
cotton maven plugin and I've got a
 

00:01:41.180 --> 00:01:42.910 align:start position:0%
cotton maven plugin and I've got a
compiler<00:01:41.600><c> plugin</c><00:01:41.960><c> in</c><00:01:42.140><c> the</c><00:01:42.410><c> maven</c><00:01:42.710><c> plug-in</c>

00:01:42.910 --> 00:01:42.920 align:start position:0%
compiler plugin in the maven plug-in
 

00:01:42.920 --> 00:01:45.040 align:start position:0%
compiler plugin in the maven plug-in
itself<00:01:43.730><c> and</c><00:01:43.850><c> the</c><00:01:43.910><c> compiler</c><00:01:44.420><c> plug-in</c><00:01:44.690><c> is</c><00:01:44.780><c> for</c>

00:01:45.040 --> 00:01:45.050 align:start position:0%
itself and the compiler plug-in is for
 

00:01:45.050 --> 00:01:50.350 align:start position:0%
itself and the compiler plug-in is for
spring<00:01:45.260><c> you</c><00:01:45.700><c> see</c><00:01:46.700><c> we</c><00:01:47.210><c> we</c><00:01:48.050><c> have</c><00:01:48.470><c> a</c><00:01:49.090><c> need</c><00:01:50.090><c> in</c>

00:01:50.350 --> 00:01:50.360 align:start position:0%
spring you see we we have a need in
 

00:01:50.360 --> 00:01:52.240 align:start position:0%
spring you see we we have a need in
spring<00:01:50.720><c> to</c><00:01:50.900><c> be</c><00:01:50.960><c> able</c><00:01:51.020><c> to</c><00:01:51.140><c> extend</c><00:01:51.560><c> your</c><00:01:51.800><c> classes</c>

00:01:52.240 --> 00:01:52.250 align:start position:0%
spring to be able to extend your classes
 

00:01:52.250 --> 00:01:54.210 align:start position:0%
spring to be able to extend your classes
to<00:01:52.400><c> subclass</c><00:01:52.790><c> them</c><00:01:52.970><c> think</c><00:01:53.450><c> about</c><00:01:53.660><c> the</c><00:01:53.810><c> way</c>

00:01:54.210 --> 00:01:54.220 align:start position:0%
to subclass them think about the way
 

00:01:54.220 --> 00:01:57.400 align:start position:0%
to subclass them think about the way
most<00:01:55.220><c> of</c><00:01:55.369><c> this</c><00:01:55.570><c> stuff</c><00:01:56.570><c> is</c><00:01:56.660><c> supported</c><00:01:57.260><c> right</c>

00:01:57.400 --> 00:01:57.410 align:start position:0%
most of this stuff is supported right
 

00:01:57.410 --> 00:02:00.730 align:start position:0%
most of this stuff is supported right
spring<00:01:57.680><c> provides</c><00:01:57.920><c> proxies</c><00:01:58.670><c> that</c><00:01:58.880><c> then</c><00:01:59.740><c> extend</c>

00:02:00.730 --> 00:02:00.740 align:start position:0%
spring provides proxies that then extend
 

00:02:00.740 --> 00:02:02.800 align:start position:0%
spring provides proxies that then extend
your<00:02:00.950><c> classes</c><00:02:01.430><c> ultimately</c><00:02:01.850><c> at</c><00:02:01.970><c> runtime</c><00:02:02.150><c> you</c>

00:02:02.800 --> 00:02:02.810 align:start position:0%
your classes ultimately at runtime you
 

00:02:02.810 --> 00:02:05.290 align:start position:0%
your classes ultimately at runtime you
you<00:02:03.320><c> take</c><00:02:03.650><c> advantage</c><00:02:03.800><c> of</c><00:02:04.010><c> the</c><00:02:04.070><c> fact</c><00:02:04.250><c> of</c><00:02:04.759><c> you</c>

00:02:05.290 --> 00:02:05.300 align:start position:0%
you take advantage of the fact of you
 

00:02:05.300 --> 00:02:07.120 align:start position:0%
you take advantage of the fact of you
take<00:02:05.450><c> advantage</c><00:02:05.600><c> of</c><00:02:05.810><c> the</c><00:02:05.869><c> the</c><00:02:06.440><c> nature</c><00:02:06.680><c> of</c><00:02:06.860><c> the</c>

00:02:07.120 --> 00:02:07.130 align:start position:0%
take advantage of the the nature of the
 

00:02:07.130 --> 00:02:08.650 align:start position:0%
take advantage of the the nature of the
Liskov<00:02:07.520><c> substitution</c><00:02:07.550><c> principle</c><00:02:08.240><c> I</c><00:02:08.600><c> can</c>

00:02:08.650 --> 00:02:08.660 align:start position:0%
Liskov substitution principle I can
 

00:02:08.660 --> 00:02:12.190 align:start position:0%
Liskov substitution principle I can
substitute<00:02:09.100><c> any</c><00:02:10.270><c> objects</c><00:02:11.270><c> of</c><00:02:11.360><c> type</c><00:02:11.390><c> a</c><00:02:11.690><c> for</c><00:02:12.170><c> a</c>

00:02:12.190 --> 00:02:12.200 align:start position:0%
substitute any objects of type a for a
 

00:02:12.200 --> 00:02:13.960 align:start position:0%
substitute any objects of type a for a
subclass<00:02:12.620><c> of</c><00:02:12.770><c> a</c><00:02:12.920><c> right</c><00:02:13.280><c> that's</c><00:02:13.490><c> the</c><00:02:13.670><c> benefit</c>

00:02:13.960 --> 00:02:13.970 align:start position:0%
subclass of a right that's the benefit
 

00:02:13.970 --> 00:02:15.699 align:start position:0%
subclass of a right that's the benefit
of<00:02:14.030><c> that</c><00:02:14.090><c> and</c><00:02:14.390><c> that's</c><00:02:14.570><c> the</c><00:02:14.780><c> basis</c><00:02:15.590><c> of</c>

00:02:15.699 --> 00:02:15.709 align:start position:0%
of that and that's the basis of
 

00:02:15.709 --> 00:02:17.890 align:start position:0%
of that and that's the basis of
dependency<00:02:16.160><c> injection</c><00:02:16.490><c> I</c><00:02:16.670><c> can</c><00:02:17.180><c> describe</c><00:02:17.690><c> my</c>

00:02:17.890 --> 00:02:17.900 align:start position:0%
dependency injection I can describe my
 

00:02:17.900 --> 00:02:19.690 align:start position:0%
dependency injection I can describe my
code<00:02:18.080><c> in</c><00:02:18.200><c> terms</c><00:02:18.380><c> of</c><00:02:18.560><c> types</c><00:02:19.100><c> that</c><00:02:19.280><c> I</c><00:02:19.340><c> need</c><00:02:19.520><c> and</c>

00:02:19.690 --> 00:02:19.700 align:start position:0%
code in terms of types that I need and
 

00:02:19.700 --> 00:02:20.949 align:start position:0%
code in terms of types that I need and
as<00:02:19.760><c> long</c><00:02:19.880><c> as</c><00:02:19.910><c> I</c><00:02:20.030><c> get</c><00:02:20.090><c> that</c><00:02:20.270><c> type</c><00:02:20.510><c> or</c><00:02:20.690><c> something</c>

00:02:20.949 --> 00:02:20.959 align:start position:0%
as long as I get that type or something
 

00:02:20.959 --> 00:02:23.020 align:start position:0%
as long as I get that type or something
that<00:02:21.050><c> specializes</c><00:02:21.590><c> that</c><00:02:21.709><c> type</c><00:02:21.860><c> it'll</c><00:02:22.430><c> look</c><00:02:22.550><c> so</c>

00:02:23.020 --> 00:02:23.030 align:start position:0%
that specializes that type it'll look so
 

00:02:23.030 --> 00:02:25.620 align:start position:0%
that specializes that type it'll look so
I<00:02:23.090><c> can</c><00:02:23.240><c> swap</c><00:02:23.510><c> out</c><00:02:23.660><c> or</c><00:02:23.870><c> at</c><00:02:24.230><c> least</c><00:02:24.290><c> subclass</c>

00:02:25.620 --> 00:02:25.630 align:start position:0%
I can swap out or at least subclass
 

00:02:25.630 --> 00:02:27.430 align:start position:0%
I can swap out or at least subclass
particular<00:02:26.630><c> types</c><00:02:26.840><c> and</c><00:02:26.959><c> then</c><00:02:27.050><c> provide</c><00:02:27.290><c> that</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
particular types and then provide that
 

00:02:27.440 --> 00:02:29.350 align:start position:0%
particular types and then provide that
reference<00:02:27.769><c> instead</c><00:02:28.100><c> and</c><00:02:28.340><c> I</c><00:02:28.730><c> get</c><00:02:28.880><c> enhanced</c>

00:02:29.350 --> 00:02:29.360 align:start position:0%
reference instead and I get enhanced
 

00:02:29.360 --> 00:02:31.180 align:start position:0%
reference instead and I get enhanced
behavior<00:02:29.900><c> without</c><00:02:30.200><c> having</c><00:02:30.440><c> to</c><00:02:30.500><c> change</c><00:02:30.680><c> my</c>

00:02:31.180 --> 00:02:31.190 align:start position:0%
behavior without having to change my
 

00:02:31.190 --> 00:02:33.100 align:start position:0%
behavior without having to change my
code<00:02:31.430><c> that</c><00:02:31.489><c> depends</c><00:02:31.910><c> on</c><00:02:32.000><c> that</c><00:02:32.120><c> type</c><00:02:32.300><c> so</c><00:02:33.080><c> that</c>

00:02:33.100 --> 00:02:33.110 align:start position:0%
code that depends on that type so that
 

00:02:33.110 --> 00:02:35.170 align:start position:0%
code that depends on that type so that
works<00:02:33.620><c> because</c><00:02:34.040><c> we</c><00:02:34.250><c> can</c><00:02:34.370><c> extend</c><00:02:34.670><c> your</c><00:02:34.760><c> classes</c>

00:02:35.170 --> 00:02:35.180 align:start position:0%
works because we can extend your classes
 

00:02:35.180 --> 00:02:37.810 align:start position:0%
works because we can extend your classes
in<00:02:35.390><c> Kotlin</c><00:02:36.140><c> by</c><00:02:36.320><c> default</c><00:02:36.680><c> you</c><00:02:37.130><c> have</c><00:02:37.310><c> to</c><00:02:37.430><c> specify</c>

00:02:37.810 --> 00:02:37.820 align:start position:0%
in Kotlin by default you have to specify
 

00:02:37.820 --> 00:02:41.050 align:start position:0%
in Kotlin by default you have to specify
open<00:02:38.690><c> for</c><00:02:39.440><c> class</c><00:02:39.620><c> to</c><00:02:39.830><c> be</c><00:02:39.920><c> subclass</c><00:02:40.430><c> of</c><00:02:40.459><c> all</c><00:02:40.640><c> by</c>

00:02:41.050 --> 00:02:41.060 align:start position:0%
open for class to be subclass of all by
 

00:02:41.060 --> 00:02:42.970 align:start position:0%
open for class to be subclass of all by
default<00:02:41.360><c> if</c><00:02:41.540><c> you</c><00:02:41.570><c> if</c><00:02:42.080><c> you</c><00:02:42.260><c> leave</c><00:02:42.410><c> this</c><00:02:42.560><c> as</c><00:02:42.769><c> is</c>

00:02:42.970 --> 00:02:42.980 align:start position:0%
default if you if you leave this as is
 

00:02:42.980 --> 00:02:45.699 align:start position:0%
default if you if you leave this as is
its<00:02:43.519><c> equivalent</c><00:02:44.269><c> to</c><00:02:44.630><c> saying</c><00:02:44.810><c> final</c><00:02:45.320><c> final</c>

00:02:45.699 --> 00:02:45.709 align:start position:0%
its equivalent to saying final final
 

00:02:45.709 --> 00:02:48.759 align:start position:0%
its equivalent to saying final final
class<00:02:45.860><c> GBC</c><00:02:46.280><c> application</c><00:02:47.269><c> in</c><00:02:47.480><c> Java</c><00:02:47.870><c> and</c><00:02:48.170><c> so</c>

00:02:48.759 --> 00:02:48.769 align:start position:0%
class GBC application in Java and so
 

00:02:48.769 --> 00:02:50.830 align:start position:0%
class GBC application in Java and so
we're<00:02:49.190><c> in</c><00:02:49.310><c> Java</c><00:02:49.549><c> you</c><00:02:49.670><c> have</c><00:02:49.700><c> to</c><00:02:49.880><c> opt</c><00:02:50.060><c> in</c><00:02:50.420><c> to</c>

00:02:50.830 --> 00:02:50.840 align:start position:0%
we're in Java you have to opt in to
 

00:02:50.840 --> 00:02:53.229 align:start position:0%
we're in Java you have to opt in to
locking<00:02:51.140><c> down</c><00:02:51.230><c> your</c><00:02:51.320><c> classes</c><00:02:51.769><c> in</c><00:02:52.150><c> Kotlin</c><00:02:53.150><c> you</c>

00:02:53.229 --> 00:02:53.239 align:start position:0%
locking down your classes in Kotlin you
 

00:02:53.239 --> 00:02:55.210 align:start position:0%
locking down your classes in Kotlin you
have<00:02:53.330><c> to</c><00:02:53.420><c> opt</c><00:02:53.570><c> out</c><00:02:53.989><c> so</c><00:02:54.650><c> what</c><00:02:54.830><c> you</c><00:02:54.920><c> want</c><00:02:55.070><c> to</c><00:02:55.130><c> be</c>

00:02:55.210 --> 00:02:55.220 align:start position:0%
have to opt out so what you want to be
 

00:02:55.220 --> 00:02:56.259 align:start position:0%
have to opt out so what you want to be
able<00:02:55.280><c> to</c><00:02:55.400><c> make</c><00:02:55.580><c> that</c><00:02:55.700><c> as</c><00:02:55.820><c> easy</c><00:02:55.910><c> as</c><00:02:56.060><c> possible</c>

00:02:56.259 --> 00:02:56.269 align:start position:0%
able to make that as easy as possible
 

00:02:56.269 --> 00:02:59.289 align:start position:0%
able to make that as easy as possible
since<00:02:56.959><c> spring</c><00:02:57.260><c> requires</c><00:02:57.920><c> you</c><00:02:58.190><c> topped</c><00:02:58.400><c> out</c><00:02:58.610><c> for</c>

00:02:59.289 --> 00:02:59.299 align:start position:0%
since spring requires you topped out for
 

00:02:59.299 --> 00:03:00.640 align:start position:0%
since spring requires you topped out for
all<00:02:59.420><c> the</c><00:02:59.540><c> components</c><00:02:59.900><c> that</c><00:03:00.110><c> work</c><00:03:00.290><c> with</c><00:03:00.410><c> spring</c>

00:03:00.640 --> 00:03:00.650 align:start position:0%
all the components that work with spring
 

00:03:00.650 --> 00:03:02.320 align:start position:0%
all the components that work with spring
so<00:03:01.130><c> that's</c><00:03:01.280><c> what</c><00:03:01.370><c> this</c><00:03:01.459><c> caught</c><00:03:01.700><c> in</c><00:03:01.850><c> maven</c><00:03:02.120><c> all</c>

00:03:02.320 --> 00:03:02.330 align:start position:0%
so that's what this caught in maven all
 

00:03:02.330 --> 00:03:04.509 align:start position:0%
so that's what this caught in maven all
open<00:03:02.690><c> plugin</c><00:03:02.959><c> does</c><00:03:03.110><c> it</c><00:03:03.560><c> says</c><00:03:03.830><c> whenever</c><00:03:04.430><c> you</c>

00:03:04.509 --> 00:03:04.519 align:start position:0%
open plugin does it says whenever you
 

00:03:04.519 --> 00:03:06.039 align:start position:0%
open plugin does it says whenever you
see<00:03:04.670><c> a</c><00:03:04.700><c> spring</c><00:03:05.060><c> annotation</c><00:03:05.660><c> like</c><00:03:05.810><c> add</c>

00:03:06.039 --> 00:03:06.049 align:start position:0%
see a spring annotation like add
 

00:03:06.049 --> 00:03:08.259 align:start position:0%
see a spring annotation like add
component<00:03:06.560><c> or</c><00:03:06.680><c> at</c><00:03:06.830><c> configuration</c><00:03:07.459><c> an</c>

00:03:08.259 --> 00:03:08.269 align:start position:0%
component or at configuration an
 

00:03:08.269 --> 00:03:10.720 align:start position:0%
component or at configuration an
annotation<00:03:08.900><c> that</c><00:03:09.170><c> is</c><00:03:09.620><c> used</c><00:03:09.830><c> to</c><00:03:09.920><c> describe</c><00:03:10.070><c> that</c>

00:03:10.720 --> 00:03:10.730 align:start position:0%
annotation that is used to describe that
 

00:03:10.730 --> 00:03:12.070 align:start position:0%
annotation that is used to describe that
this<00:03:11.090><c> is</c><00:03:11.180><c> a</c><00:03:11.269><c> component</c><00:03:11.540><c> of</c><00:03:11.750><c> spring</c><00:03:11.959><c> will</c>

00:03:12.070 --> 00:03:12.080 align:start position:0%
this is a component of spring will
 

00:03:12.080 --> 00:03:12.430 align:start position:0%
this is a component of spring will
manage

00:03:12.430 --> 00:03:12.440 align:start position:0%
manage
 

00:03:12.440 --> 00:03:14.590 align:start position:0%
manage
whenever<00:03:13.010><c> they</c><00:03:13.130><c> whenever</c><00:03:14.000><c> that</c><00:03:14.090><c> condition</c><00:03:14.510><c> is</c>

00:03:14.590 --> 00:03:14.600 align:start position:0%
whenever they whenever that condition is
 

00:03:14.600 --> 00:03:16.870 align:start position:0%
whenever they whenever that condition is
met<00:03:14.750><c> then</c><00:03:15.500><c> the</c><00:03:15.739><c> class</c><00:03:15.950><c> is</c><00:03:16.190><c> left</c><00:03:16.370><c> open</c><00:03:16.610><c> by</c>

00:03:16.870 --> 00:03:16.880 align:start position:0%
met then the class is left open by
 

00:03:16.880 --> 00:03:18.310 align:start position:0%
met then the class is left open by
default<00:03:17.120><c> that's</c><00:03:17.780><c> what</c><00:03:17.900><c> this</c><00:03:17.989><c> plug-in</c><00:03:18.140><c> does</c>

00:03:18.310 --> 00:03:18.320 align:start position:0%
default that's what this plug-in does
 

00:03:18.320 --> 00:03:20.350 align:start position:0%
default that's what this plug-in does
along<00:03:18.650><c> with</c><00:03:18.799><c> the</c><00:03:18.890><c> compiler</c><00:03:19.190><c> plugin</c><00:03:19.489><c> so</c><00:03:20.239><c> we</c>

00:03:20.350 --> 00:03:20.360 align:start position:0%
along with the compiler plugin so we
 

00:03:20.360 --> 00:03:22.509 align:start position:0%
along with the compiler plugin so we
have<00:03:20.480><c> this</c><00:03:20.600><c> here</c><00:03:20.810><c> now</c><00:03:21.110><c> we</c><00:03:21.170><c> can</c><00:03:21.380><c> build</c><00:03:21.650><c> a</c><00:03:21.890><c> new</c>

00:03:22.509 --> 00:03:22.519 align:start position:0%
have this here now we can build a new
 

00:03:22.519 --> 00:03:23.590 align:start position:0%
have this here now we can build a new
application<00:03:22.880><c> we're</c><00:03:23.209><c> gonna</c><00:03:23.330><c> build</c><00:03:23.480><c> an</c>

00:03:23.590 --> 00:03:23.600 align:start position:0%
application we're gonna build an
 

00:03:23.600 --> 00:03:24.940 align:start position:0%
application we're gonna build an
application<00:03:23.690><c> that</c><00:03:24.019><c> manages</c><00:03:24.380><c> data</c><00:03:24.410><c> so</c><00:03:24.860><c> of</c>

00:03:24.940 --> 00:03:24.950 align:start position:0%
application that manages data so of
 

00:03:24.950 --> 00:03:26.289 align:start position:0%
application that manages data so of
course<00:03:25.100><c> we'll</c><00:03:25.310><c> create</c><00:03:25.430><c> a</c><00:03:25.519><c> data</c><00:03:25.700><c> class</c><00:03:25.970><c> called</c>

00:03:26.289 --> 00:03:26.299 align:start position:0%
course we'll create a data class called
 

00:03:26.299 --> 00:03:28.110 align:start position:0%
course we'll create a data class called
customer<00:03:27.110><c> whose</c>

00:03:28.110 --> 00:03:28.120 align:start position:0%
customer whose
 

00:03:28.120 --> 00:03:32.620 align:start position:0%
customer whose
var<00:03:30.580><c> var</c><00:03:31.580><c> name</c><00:03:31.640><c> will</c>

00:03:32.620 --> 00:03:32.630 align:start position:0%
var var name will
 

00:03:32.630 --> 00:03:37.830 align:start position:0%
var var name will
string<00:03:33.020><c> and</c><00:03:33.850><c> the</c><00:03:34.850><c> VAR</c><00:03:35.210><c> ID</c><00:03:35.570><c> will</c><00:03:36.380><c> be</c><00:03:36.820><c> no</c>

00:03:37.830 --> 00:03:37.840 align:start position:0%
string and the VAR ID will be no
 

00:03:37.840 --> 00:03:40.990 align:start position:0%
string and the VAR ID will be no
knowable<00:03:38.840><c> long</c><00:03:39.320><c> so</c><00:03:40.190><c> I'm</c><00:03:40.250><c> gonna</c><00:03:40.340><c> have</c><00:03:40.520><c> two</c>

00:03:40.990 --> 00:03:41.000 align:start position:0%
knowable long so I'm gonna have two
 

00:03:41.000 --> 00:03:43.380 align:start position:0%
knowable long so I'm gonna have two
fields<00:03:41.300><c> here</c><00:03:41.390><c> maybe</c><00:03:41.600><c> this</c><00:03:41.750><c> will</c><00:03:41.870><c> be</c><00:03:41.960><c> null</c><00:03:42.200><c> Val</c>

00:03:43.380 --> 00:03:43.390 align:start position:0%
fields here maybe this will be null Val
 

00:03:43.390 --> 00:03:46.690 align:start position:0%
fields here maybe this will be null Val
that<00:03:44.390><c> it's</c><00:03:44.710><c> read-only</c><00:03:45.710><c> not</c><00:03:46.190><c> writable</c><00:03:46.460><c> once</c>

00:03:46.690 --> 00:03:46.700 align:start position:0%
that it's read-only not writable once
 

00:03:46.700 --> 00:03:48.700 align:start position:0%
that it's read-only not writable once
you've<00:03:46.820><c> constructed</c><00:03:47.120><c> it</c><00:03:47.450><c> and</c><00:03:48.260><c> this</c><00:03:48.380><c> is</c><00:03:48.530><c> these</c>

00:03:48.700 --> 00:03:48.710 align:start position:0%
you've constructed it and this is these
 

00:03:48.710 --> 00:03:49.720 align:start position:0%
you've constructed it and this is these
are<00:03:48.770><c> the</c><00:03:48.860><c> constructor</c><00:03:49.370><c> this</c><00:03:49.550><c> is</c><00:03:49.670><c> the</c>

00:03:49.720 --> 00:03:49.730 align:start position:0%
are the constructor this is the
 

00:03:49.730 --> 00:03:52.180 align:start position:0%
are the constructor this is the
constructor<00:03:50.150><c> prototype</c><00:03:50.510><c> of</c><00:03:50.660><c> course</c><00:03:50.870><c> and</c><00:03:51.650><c> this</c>

00:03:52.180 --> 00:03:52.190 align:start position:0%
constructor prototype of course and this
 

00:03:52.190 --> 00:03:54.460 align:start position:0%
constructor prototype of course and this
creates<00:03:52.520><c> a</c><00:03:52.700><c> mutable</c><00:03:53.570><c> you</c><00:03:54.020><c> know</c><00:03:54.140><c> read</c><00:03:54.290><c> and</c>

00:03:54.460 --> 00:03:54.470 align:start position:0%
creates a mutable you know read and
 

00:03:54.470 --> 00:03:56.770 align:start position:0%
creates a mutable you know read and
write<00:03:54.620><c> property</c><00:03:55.520><c> that</c><00:03:55.910><c> is</c><00:03:56.120><c> malleable</c><00:03:56.630><c> that's</c>

00:03:56.770 --> 00:03:56.780 align:start position:0%
write property that is malleable that's
 

00:03:56.780 --> 00:03:57.760 align:start position:0%
write property that is malleable that's
what<00:03:56.870><c> the</c><00:03:56.930><c> question</c><00:03:57.020><c> mark</c><00:03:57.320><c> is</c><00:03:57.440><c> and</c><00:03:57.650><c> that's</c>

00:03:57.760 --> 00:03:57.770 align:start position:0%
what the question mark is and that's
 

00:03:57.770 --> 00:04:00.040 align:start position:0%
what the question mark is and that's
what<00:03:57.920><c> and</c><00:03:58.640><c> that</c><00:03:58.820><c> default</c><00:03:59.240><c> value</c><00:03:59.510><c> will</c><00:03:59.630><c> be</c><00:03:59.720><c> null</c>

00:04:00.040 --> 00:04:00.050 align:start position:0%
what and that default value will be null
 

00:04:00.050 --> 00:04:01.630 align:start position:0%
what and that default value will be null
so<00:04:00.290><c> that's</c><00:04:00.440><c> what</c><00:04:00.560><c> the</c><00:04:00.620><c> equals</c><00:04:00.980><c> null</c><00:04:01.100><c> means</c><00:04:01.310><c> so</c>

00:04:01.630 --> 00:04:01.640 align:start position:0%
so that's what the equals null means so
 

00:04:01.640 --> 00:04:03.550 align:start position:0%
so that's what the equals null means so
you<00:04:01.670><c> get</c><00:04:01.970><c> a</c><00:04:02.120><c> lot</c><00:04:02.300><c> of</c><00:04:02.330><c> bang</c><00:04:02.900><c> for</c><00:04:02.930><c> your</c><00:04:03.230><c> buck</c><00:04:03.380><c> in</c>

00:04:03.550 --> 00:04:03.560 align:start position:0%
you get a lot of bang for your buck in
 

00:04:03.560 --> 00:04:04.780 align:start position:0%
you get a lot of bang for your buck in
this<00:04:03.680><c> look</c><00:04:03.860><c> at</c><00:04:03.950><c> this</c><00:04:04.040><c> I</c><00:04:04.160><c> mean</c><00:04:04.280><c> we've</c><00:04:04.400><c> got</c><00:04:04.520><c> a</c>

00:04:04.780 --> 00:04:04.790 align:start position:0%
this look at this I mean we've got a
 

00:04:04.790 --> 00:04:06.070 align:start position:0%
this look at this I mean we've got a
whole<00:04:05.120><c> object</c><00:04:05.510><c> with</c><00:04:05.630><c> getters</c><00:04:05.870><c> and</c><00:04:05.930><c> setters</c>

00:04:06.070 --> 00:04:06.080 align:start position:0%
whole object with getters and setters
 

00:04:06.080 --> 00:04:07.690 align:start position:0%
whole object with getters and setters
and<00:04:06.290><c> equals</c><00:04:06.620><c> and</c><00:04:06.740><c> hashcode</c><00:04:06.800><c> and</c><00:04:07.070><c> constructor</c>

00:04:07.690 --> 00:04:07.700 align:start position:0%
and equals and hashcode and constructor
 

00:04:07.700 --> 00:04:09.820 align:start position:0%
and equals and hashcode and constructor
and<00:04:07.850><c> we've</c><00:04:08.810><c> already</c><00:04:09.020><c> specified</c><00:04:09.620><c> whether</c>

00:04:09.820 --> 00:04:09.830 align:start position:0%
and we've already specified whether
 

00:04:09.830 --> 00:04:11.260 align:start position:0%
and we've already specified whether
things<00:04:10.040><c> are</c><00:04:10.220><c> read</c><00:04:10.340><c> and</c><00:04:10.520><c> readable</c><00:04:10.820><c> or</c><00:04:10.910><c> writable</c>

00:04:11.260 --> 00:04:11.270 align:start position:0%
things are read and readable or writable
 

00:04:11.270 --> 00:04:12.850 align:start position:0%
things are read and readable or writable
we<00:04:11.360><c> can</c><00:04:11.480><c> do</c><00:04:11.570><c> all</c><00:04:11.750><c> sorts</c><00:04:11.780><c> of</c><00:04:12.050><c> stuff</c><00:04:12.230><c> just</c><00:04:12.740><c> for</c>

00:04:12.850 --> 00:04:12.860 align:start position:0%
we can do all sorts of stuff just for
 

00:04:12.860 --> 00:04:14.410 align:start position:0%
we can do all sorts of stuff just for
that<00:04:13.010><c> little</c><00:04:13.220><c> basic</c><00:04:13.430><c> definition</c><00:04:13.850><c> and</c><00:04:14.030><c> that's</c>

00:04:14.410 --> 00:04:14.420 align:start position:0%
that little basic definition and that's
 

00:04:14.420 --> 00:04:16.270 align:start position:0%
that little basic definition and that's
good<00:04:14.600><c> so</c><00:04:14.780><c> we</c><00:04:14.900><c> can</c><00:04:15.020><c> use</c><00:04:15.170><c> that</c><00:04:15.200><c> now</c><00:04:15.440><c> to</c><00:04:15.500><c> talk</c><00:04:16.070><c> to</c>

00:04:16.270 --> 00:04:16.280 align:start position:0%
good so we can use that now to talk to
 

00:04:16.280 --> 00:04:18.430 align:start position:0%
good so we can use that now to talk to
the<00:04:16.400><c> database</c><00:04:16.489><c> so</c><00:04:16.850><c> let's</c><00:04:17.330><c> create</c><00:04:17.570><c> a</c><00:04:17.720><c> service</c>

00:04:18.430 --> 00:04:18.440 align:start position:0%
the database so let's create a service
 

00:04:18.440 --> 00:04:20.650 align:start position:0%
the database so let's create a service
but<00:04:18.739><c> actually</c><00:04:18.980><c> in</c><00:04:19.760><c> our</c><00:04:19.910><c> talk</c><00:04:20.239><c> today</c><00:04:20.450><c> in</c><00:04:20.570><c> our</c>

00:04:20.650 --> 00:04:20.660 align:start position:0%
but actually in our talk today in our
 

00:04:20.660 --> 00:04:22.030 align:start position:0%
but actually in our talk today in our
time<00:04:20.870><c> to</c><00:04:21.049><c> get</c><00:04:21.170><c> together</c><00:04:21.470><c> today</c><00:04:21.770><c> we're</c><00:04:21.950><c> going</c>

00:04:22.030 --> 00:04:22.040 align:start position:0%
time to get together today we're going
 

00:04:22.040 --> 00:04:25.000 align:start position:0%
time to get together today we're going
to<00:04:22.130><c> look</c><00:04:22.190><c> at</c><00:04:22.340><c> two</c><00:04:22.850><c> different</c><00:04:22.880><c> services</c><00:04:24.010><c> that</c>

00:04:25.000 --> 00:04:25.010 align:start position:0%
to look at two different services that
 

00:04:25.010 --> 00:04:26.740 align:start position:0%
to look at two different services that
it<00:04:25.790><c> provides</c><00:04:25.820><c> the</c><00:04:26.090><c> same</c><00:04:26.150><c> interface</c><00:04:26.540><c> or</c><00:04:26.660><c> as</c>

00:04:26.740 --> 00:04:26.750 align:start position:0%
it provides the same interface or as
 

00:04:26.750 --> 00:04:28.900 align:start position:0%
it provides the same interface or as
implement<00:04:27.620><c> the</c><00:04:27.680><c> same</c><00:04:27.860><c> interface</c><00:04:28.370><c> so</c><00:04:28.550><c> we're</c>

00:04:28.900 --> 00:04:28.910 align:start position:0%
implement the same interface so we're
 

00:04:28.910 --> 00:04:29.620 align:start position:0%
implement the same interface so we're
going<00:04:29.000><c> to</c><00:04:29.120><c> do</c><00:04:29.180><c> that</c><00:04:29.300><c> we're</c><00:04:29.420><c> gonna</c><00:04:29.510><c> actually</c>

00:04:29.620 --> 00:04:29.630 align:start position:0%
going to do that we're gonna actually
 

00:04:29.630 --> 00:04:33.180 align:start position:0%
going to do that we're gonna actually
provide<00:04:30.350><c> or</c><00:04:31.130><c> define</c><00:04:31.430><c> an</c><00:04:31.580><c> interface</c><00:04:31.760><c> the</c><00:04:32.480><c> first</c>

00:04:33.180 --> 00:04:33.190 align:start position:0%
provide or define an interface the first
 

00:04:33.190 --> 00:04:36.970 align:start position:0%
provide or define an interface the first
method<00:04:34.190><c> is</c><00:04:34.280><c> going</c><00:04:34.430><c> to</c><00:04:34.490><c> return</c><00:04:34.820><c> all</c><00:04:35.290><c> of</c><00:04:36.290><c> the</c>

00:04:36.970 --> 00:04:36.980 align:start position:0%
method is going to return all of the
 

00:04:36.980 --> 00:04:38.920 align:start position:0%
method is going to return all of the
records<00:04:37.250><c> so</c><00:04:37.400><c> if</c><00:04:37.490><c> collection</c><00:04:37.820><c> of</c><00:04:37.940><c> all</c><00:04:38.120><c> customer</c>

00:04:38.920 --> 00:04:38.930 align:start position:0%
records so if collection of all customer
 

00:04:38.930 --> 00:04:43.470 align:start position:0%
records so if collection of all customer
and<00:04:39.490><c> the</c><00:04:40.490><c> second</c><00:04:40.820><c> one</c><00:04:40.910><c> will</c><00:04:41.060><c> say</c><00:04:41.240><c> by</c><00:04:41.540><c> ID</c><00:04:42.010><c> ID</c>

00:04:43.470 --> 00:04:43.480 align:start position:0%
and the second one will say by ID ID
 

00:04:43.480 --> 00:04:48.370 align:start position:0%
and the second one will say by ID ID
long<00:04:45.970><c> customer</c><00:04:46.970><c> question</c><00:04:47.720><c> mark</c><00:04:47.870><c> so</c><00:04:48.290><c> we're</c>

00:04:48.370 --> 00:04:48.380 align:start position:0%
long customer question mark so we're
 

00:04:48.380 --> 00:04:50.350 align:start position:0%
long customer question mark so we're
gonna<00:04:48.470><c> say</c><00:04:48.680><c> find</c><00:04:49.220><c> a</c><00:04:49.400><c> record</c><00:04:49.580><c> by</c><00:04:49.700><c> its</c><00:04:49.850><c> ID</c><00:04:49.970><c> if</c><00:04:50.240><c> it</c>

00:04:50.350 --> 00:04:50.360 align:start position:0%
gonna say find a record by its ID if it
 

00:04:50.360 --> 00:04:52.000 align:start position:0%
gonna say find a record by its ID if it
exists<00:04:50.660><c> it</c><00:04:50.750><c> might</c><00:04:50.870><c> not</c><00:04:50.990><c> exist</c><00:04:51.290><c> and</c><00:04:51.560><c> if</c><00:04:51.920><c> it</c>

00:04:52.000 --> 00:04:52.010 align:start position:0%
exists it might not exist and if it
 

00:04:52.010 --> 00:04:53.170 align:start position:0%
exists it might not exist and if it
doesn't<00:04:52.160><c> exist</c><00:04:52.310><c> return</c><00:04:52.670><c> null</c><00:04:52.850><c> if</c><00:04:52.970><c> it</c><00:04:53.060><c> does</c>

00:04:53.170 --> 00:04:53.180 align:start position:0%
doesn't exist return null if it does
 

00:04:53.180 --> 00:04:54.670 align:start position:0%
doesn't exist return null if it does
exist<00:04:53.300><c> return</c><00:04:53.690><c> the</c><00:04:53.810><c> actual</c><00:04:53.900><c> thing</c><00:04:54.170><c> and</c><00:04:54.350><c> I'm</c>

00:04:54.670 --> 00:04:54.680 align:start position:0%
exist return the actual thing and I'm
 

00:04:54.680 --> 00:04:56.020 align:start position:0%
exist return the actual thing and I'm
gonna<00:04:54.800><c> have</c><00:04:54.950><c> another</c><00:04:55.100><c> method</c><00:04:55.490><c> to</c><00:04:55.550><c> insert</c>

00:04:56.020 --> 00:04:56.030 align:start position:0%
gonna have another method to insert
 

00:04:56.030 --> 00:04:58.210 align:start position:0%
gonna have another method to insert
objects<00:04:56.900><c> of</c><00:04:57.020><c> type</c><00:04:57.050><c> customer</c><00:04:57.650><c> into</c><00:04:58.130><c> the</c>

00:04:58.210 --> 00:04:58.220 align:start position:0%
objects of type customer into the
 

00:04:58.220 --> 00:05:00.160 align:start position:0%
objects of type customer into the
database<00:04:58.520><c> so</c><00:04:59.390><c> we</c><00:04:59.420><c> have</c><00:04:59.540><c> a</c><00:04:59.570><c> customer</c><00:04:59.990><c> service</c>

00:05:00.160 --> 00:05:00.170 align:start position:0%
database so we have a customer service
 

00:05:00.170 --> 00:05:01.480 align:start position:0%
database so we have a customer service
interface<00:05:00.530><c> let's</c><00:05:00.740><c> provide</c><00:05:01.010><c> our</c><00:05:01.190><c> first</c>

00:05:01.480 --> 00:05:01.490 align:start position:0%
interface let's provide our first
 

00:05:01.490 --> 00:05:03.520 align:start position:0%
interface let's provide our first
implementation<00:05:02.390><c> and</c><00:05:02.720><c> this</c><00:05:02.870><c> one</c><00:05:03.020><c> will</c><00:05:03.500><c> be</c>

00:05:03.520 --> 00:05:03.530 align:start position:0%
implementation and this one will be
 

00:05:03.530 --> 00:05:05.650 align:start position:0%
implementation and this one will be
based<00:05:03.770><c> on</c><00:05:03.950><c> the</c><00:05:04.040><c> JDBC</c><00:05:04.430><c> template</c><00:05:04.820><c> customer</c>

00:05:05.650 --> 00:05:05.660 align:start position:0%
based on the JDBC template customer
 

00:05:05.660 --> 00:05:07.980 align:start position:0%
based on the JDBC template customer
service<00:05:06.440><c> type</c><00:05:07.070><c> right</c><00:05:07.430><c> so</c><00:05:07.580><c> I'm</c><00:05:07.640><c> gonna</c><00:05:07.730><c> say</c>

00:05:07.980 --> 00:05:07.990 align:start position:0%
service type right so I'm gonna say
 

00:05:07.990 --> 00:05:12.400 align:start position:0%
service type right so I'm gonna say
private<00:05:08.990><c> foul</c><00:05:09.580><c> JDBC</c><00:05:10.580><c> template</c><00:05:11.120><c> and</c><00:05:11.410><c> when</c>

00:05:12.400 --> 00:05:12.410 align:start position:0%
private foul JDBC template and when
 

00:05:12.410 --> 00:05:14.670 align:start position:0%
private foul JDBC template and when
implement<00:05:12.920><c> the</c><00:05:12.980><c> customer</c><00:05:13.370><c> service</c><00:05:13.640><c> contract</c>

00:05:14.670 --> 00:05:14.680 align:start position:0%
implement the customer service contract
 

00:05:14.680 --> 00:05:20.650 align:start position:0%
implement the customer service contract
okay<00:05:15.680><c> and</c><00:05:16.000><c> let's</c><00:05:17.000><c> see</c><00:05:17.300><c> here</c><00:05:18.260><c> we</c><00:05:18.350><c> are</c><00:05:19.510><c> we</c><00:05:20.510><c> have</c>

00:05:20.650 --> 00:05:20.660 align:start position:0%
okay and let's see here we are we have
 

00:05:20.660 --> 00:05:25.080 align:start position:0%
okay and let's see here we are we have
to<00:05:20.900><c> override</c><00:05:21.500><c> these</c><00:05:21.740><c> methods</c><00:05:22.900><c> at</c><00:05:23.900><c> service</c><00:05:24.470><c> at</c>

00:05:25.080 --> 00:05:25.090 align:start position:0%
to override these methods at service at
 

00:05:25.090 --> 00:05:27.690 align:start position:0%
to override these methods at service at
transactional

00:05:27.690 --> 00:05:27.700 align:start position:0%
transactional
 

00:05:27.700 --> 00:05:30.570 align:start position:0%
transactional
and<00:05:27.790><c> we</c><00:05:28.690><c> have</c><00:05:28.840><c> to</c><00:05:28.990><c> return</c><00:05:29.620><c> all</c><00:05:29.890><c> the</c><00:05:30.190><c> records</c><00:05:30.460><c> so</c>

00:05:30.570 --> 00:05:30.580 align:start position:0%
and we have to return all the records so
 

00:05:30.580 --> 00:05:34.170 align:start position:0%
and we have to return all the records so
this<00:05:30.820><c> but</c><00:05:31.260><c> JBC</c><00:05:32.260><c> template.dot</c><00:05:32.680><c> query</c><00:05:33.180><c> select</c>

00:05:34.170 --> 00:05:34.180 align:start position:0%
this but JBC template.dot query select
 

00:05:34.180 --> 00:05:39.240 align:start position:0%
this but JBC template.dot query select
all<00:05:34.360><c> from</c><00:05:35.340><c> customers</c><00:05:36.340><c> and</c><00:05:38.010><c> we</c><00:05:39.010><c> need</c><00:05:39.160><c> to</c>

00:05:39.240 --> 00:05:39.250 align:start position:0%
all from customers and we need to
 

00:05:39.250 --> 00:05:40.980 align:start position:0%
all from customers and we need to
provide<00:05:39.490><c> a</c><00:05:39.550><c> road</c><00:05:39.970><c> map</c><00:05:40.000><c> er</c><00:05:40.150><c> the</c><00:05:40.540><c> standard</c>

00:05:40.980 --> 00:05:40.990 align:start position:0%
provide a road map er the standard
 

00:05:40.990 --> 00:05:42.840 align:start position:0%
provide a road map er the standard
signature<00:05:41.620><c> for</c><00:05:41.770><c> this</c><00:05:41.830><c> dictates</c><00:05:42.520><c> that</c><00:05:42.610><c> we</c><00:05:42.730><c> need</c>

00:05:42.840 --> 00:05:42.850 align:start position:0%
signature for this dictates that we need
 

00:05:42.850 --> 00:05:45.090 align:start position:0%
signature for this dictates that we need
a<00:05:43.020><c> some</c><00:05:44.020><c> sort</c><00:05:44.170><c> of</c><00:05:44.230><c> functional</c><00:05:44.560><c> interface</c><00:05:44.920><c> as</c>

00:05:45.090 --> 00:05:45.100 align:start position:0%
a some sort of functional interface as
 

00:05:45.100 --> 00:05:47.220 align:start position:0%
a some sort of functional interface as
the<00:05:45.310><c> last</c><00:05:45.640><c> parameter</c><00:05:45.790><c> and</c><00:05:46.330><c> this</c><00:05:46.480><c> works</c><00:05:46.660><c> very</c>

00:05:47.220 --> 00:05:47.230 align:start position:0%
the last parameter and this works very
 

00:05:47.230 --> 00:05:48.300 align:start position:0%
the last parameter and this works very
nicely<00:05:47.410><c> with</c><00:05:47.710><c> what</c><00:05:47.770><c> we're</c><00:05:47.920><c> trying</c><00:05:48.010><c> to</c><00:05:48.130><c> do</c><00:05:48.220><c> in</c>

00:05:48.300 --> 00:05:48.310 align:start position:0%
nicely with what we're trying to do in
 

00:05:48.310 --> 00:05:51.120 align:start position:0%
nicely with what we're trying to do in
lembeh<00:05:48.550><c> in</c><00:05:49.060><c> in</c><00:05:49.270><c> common</c><00:05:49.630><c> rather</c><00:05:49.810><c> you</c><00:05:50.470><c> see</c><00:05:50.650><c> if</c><00:05:50.860><c> we</c>

00:05:51.120 --> 00:05:51.130 align:start position:0%
lembeh in in common rather you see if we
 

00:05:51.130 --> 00:05:52.680 align:start position:0%
lembeh in in common rather you see if we
need<00:05:51.340><c> a</c><00:05:51.490><c> lambda</c><00:05:51.760><c> as</c><00:05:52.000><c> the</c><00:05:52.090><c> last</c><00:05:52.270><c> argument</c><00:05:52.420><c> we</c>

00:05:52.680 --> 00:05:52.690 align:start position:0%
need a lambda as the last argument we
 

00:05:52.690 --> 00:05:54.930 align:start position:0%
need a lambda as the last argument we
can<00:05:52.810><c> specify</c><00:05:53.020><c> that</c><00:05:53.380><c> outside</c><00:05:54.280><c> the</c><00:05:54.460><c> invocation</c>

00:05:54.930 --> 00:05:54.940 align:start position:0%
can specify that outside the invocation
 

00:05:54.940 --> 00:05:56.910 align:start position:0%
can specify that outside the invocation
here<00:05:55.090><c> so</c><00:05:55.240><c> this</c><00:05:55.720><c> is</c><00:05:55.870><c> the</c><00:05:55.990><c> clothes</c><00:05:56.290><c> you</c><00:05:56.800><c> know</c>

00:05:56.910 --> 00:05:56.920 align:start position:0%
here so this is the clothes you know
 

00:05:56.920 --> 00:05:58.890 align:start position:0%
here so this is the clothes you know
right<00:05:57.070><c> here</c><00:05:57.280><c> is</c><00:05:57.490><c> the</c><00:05:57.670><c> end</c><00:05:57.940><c> of</c><00:05:58.330><c> the</c><00:05:58.420><c> invocation</c>

00:05:58.890 --> 00:05:58.900 align:start position:0%
right here is the end of the invocation
 

00:05:58.900 --> 00:06:00.870 align:start position:0%
right here is the end of the invocation
here<00:05:59.380><c> I'm</c><00:05:59.500><c> starting</c><00:05:59.740><c> this</c><00:05:59.950><c> this</c><00:06:00.400><c> strange</c>

00:06:00.870 --> 00:06:00.880 align:start position:0%
here I'm starting this this strange
 

00:06:00.880 --> 00:06:02.580 align:start position:0%
here I'm starting this this strange
block<00:06:01.150><c> but</c><00:06:01.480><c> this</c><00:06:01.630><c> is</c><00:06:01.750><c> actually</c><00:06:01.990><c> a</c><00:06:02.020><c> lambda</c><00:06:02.230><c> and</c>

00:06:02.580 --> 00:06:02.590 align:start position:0%
block but this is actually a lambda and
 

00:06:02.590 --> 00:06:04.560 align:start position:0%
block but this is actually a lambda and
it's<00:06:03.040><c> a</c><00:06:03.100><c> lambda</c><00:06:03.310><c> of</c><00:06:03.580><c> type</c><00:06:04.150><c> of</c><00:06:04.180><c> rule</c><00:06:04.390><c> mapper</c>

00:06:04.560 --> 00:06:04.570 align:start position:0%
it's a lambda of type of rule mapper
 

00:06:04.570 --> 00:06:06.390 align:start position:0%
it's a lambda of type of rule mapper
it's<00:06:05.080><c> gonna</c><00:06:05.200><c> implement</c><00:06:05.680><c> the</c><00:06:05.830><c> same</c><00:06:05.950><c> contract</c>

00:06:06.390 --> 00:06:06.400 align:start position:0%
it's gonna implement the same contract
 

00:06:06.400 --> 00:06:09.240 align:start position:0%
it's gonna implement the same contract
and<00:06:06.750><c> so</c><00:06:07.750><c> I'll</c><00:06:07.930><c> say</c><00:06:08.200><c> that</c><00:06:08.710><c> I'm</c><00:06:08.800><c> going</c><00:06:08.920><c> to</c><00:06:08.950><c> map</c>

00:06:09.240 --> 00:06:09.250 align:start position:0%
and so I'll say that I'm going to map
 

00:06:09.250 --> 00:06:11.640 align:start position:0%
and so I'll say that I'm going to map
the<00:06:10.210><c> result</c><00:06:10.540><c> set</c><00:06:10.750><c> which</c><00:06:10.900><c> is</c><00:06:11.020><c> this</c><00:06:11.200><c> and</c><00:06:11.410><c> the</c>

00:06:11.640 --> 00:06:11.650 align:start position:0%
the result set which is this and the
 

00:06:11.650 --> 00:06:13.710 align:start position:0%
the result set which is this and the
offset<00:06:11.980><c> which</c><00:06:12.130><c> is</c><00:06:12.220><c> an</c><00:06:12.310><c> integer</c><00:06:12.630><c> into</c><00:06:13.630><c> the</c>

00:06:13.710 --> 00:06:13.720 align:start position:0%
offset which is an integer into the
 

00:06:13.720 --> 00:06:16.170 align:start position:0%
offset which is an integer into the
result<00:06:13.930><c> set</c><00:06:14.080><c> I'm</c><00:06:14.440><c> gonna</c><00:06:14.650><c> map</c><00:06:14.830><c> that</c><00:06:15.100><c> to</c><00:06:15.910><c> a</c>

00:06:16.170 --> 00:06:16.180 align:start position:0%
result set I'm gonna map that to a
 

00:06:16.180 --> 00:06:19.680 align:start position:0%
result set I'm gonna map that to a
customer<00:06:16.840><c> object</c><00:06:17.280><c> by</c><00:06:18.280><c> you</c><00:06:18.820><c> know</c><00:06:18.910><c> unpacking</c>

00:06:19.680 --> 00:06:19.690 align:start position:0%
customer object by you know unpacking
 

00:06:19.690 --> 00:06:21.810 align:start position:0%
customer object by you know unpacking
some<00:06:19.810><c> values</c><00:06:20.110><c> from</c><00:06:20.230><c> the</c><00:06:20.350><c> results</c><00:06:21.070><c> in</c><00:06:21.190><c> all</c>

00:06:21.810 --> 00:06:21.820 align:start position:0%
some values from the results in all
 

00:06:21.820 --> 00:06:23.160 align:start position:0%
some values from the results in all
right<00:06:21.970><c> that's</c><00:06:22.180><c> the</c><00:06:22.270><c> that's</c><00:06:22.810><c> fairly</c>

00:06:23.160 --> 00:06:23.170 align:start position:0%
right that's the that's fairly
 

00:06:23.170 --> 00:06:24.690 align:start position:0%
right that's the that's fairly
straightforward<00:06:23.350><c> right</c><00:06:23.860><c> then</c><00:06:24.010><c> not</c><00:06:24.400><c> so</c><00:06:24.520><c> bad</c>

00:06:24.690 --> 00:06:24.700 align:start position:0%
straightforward right then not so bad
 

00:06:24.700 --> 00:06:27.210 align:start position:0%
straightforward right then not so bad
let's<00:06:25.180><c> try</c><00:06:25.420><c> this</c><00:06:25.480><c> with</c><00:06:25.840><c> the</c><00:06:25.990><c> the</c><00:06:26.830><c> one</c><00:06:26.950><c> that</c><00:06:27.100><c> has</c>

00:06:27.210 --> 00:06:27.220 align:start position:0%
let's try this with the the one that has
 

00:06:27.220 --> 00:06:28.920 align:start position:0%
let's try this with the the one that has
a<00:06:27.250><c> predicate</c><00:06:27.640><c> more</c><00:06:28.030><c> slightly</c><00:06:28.540><c> more</c><00:06:28.660><c> involved</c>

00:06:28.920 --> 00:06:28.930 align:start position:0%
a predicate more slightly more involved
 

00:06:28.930 --> 00:06:33.000 align:start position:0%
a predicate more slightly more involved
here<00:06:29.320><c> so</c><00:06:30.180><c> equals</c><00:06:31.180><c> and</c><00:06:31.540><c> here</c><00:06:32.290><c> we're</c><00:06:32.710><c> gonna</c><00:06:32.800><c> look</c>

00:06:33.000 --> 00:06:33.010 align:start position:0%
here so equals and here we're gonna look
 

00:06:33.010 --> 00:06:36.600 align:start position:0%
here so equals and here we're gonna look
for<00:06:33.220><c> a</c><00:06:33.250><c> specific</c><00:06:33.430><c> record</c><00:06:33.850><c> and</c><00:06:34.860><c> we</c><00:06:35.860><c> cannot</c><00:06:36.310><c> just</c>

00:06:36.600 --> 00:06:36.610 align:start position:0%
for a specific record and we cannot just
 

00:06:36.610 --> 00:06:41.700 align:start position:0%
for a specific record and we cannot just
say<00:06:38.190><c> we</c><00:06:39.190><c> need</c><00:06:39.460><c> one</c><00:06:39.910><c> we</c><00:06:40.120><c> need</c><00:06:40.270><c> to</c><00:06:40.360><c> specify</c><00:06:40.710><c> which</c>

00:06:41.700 --> 00:06:41.710 align:start position:0%
say we need one we need to specify which
 

00:06:41.710 --> 00:06:43.650 align:start position:0%
say we need one we need to specify which
one<00:06:41.740><c> right</c><00:06:42.370><c> so</c><00:06:43.120><c> we</c><00:06:43.210><c> need</c><00:06:43.330><c> to</c><00:06:43.390><c> provide</c><00:06:43.600><c> a</c>

00:06:43.650 --> 00:06:43.660 align:start position:0%
one right so we need to provide a
 

00:06:43.660 --> 00:06:45.000 align:start position:0%
one right so we need to provide a
parameter<00:06:44.110><c> here</c><00:06:44.200><c> so</c><00:06:44.440><c> I'm</c><00:06:44.500><c> going</c><00:06:44.620><c> to</c><00:06:44.650><c> pass</c><00:06:44.770><c> in</c>

00:06:45.000 --> 00:06:45.010 align:start position:0%
parameter here so I'm going to pass in
 

00:06:45.010 --> 00:06:47.640 align:start position:0%
parameter here so I'm going to pass in
this<00:06:45.430><c> ID</c><00:06:45.640><c> and</c><00:06:45.940><c> of</c><00:06:46.750><c> course</c><00:06:46.990><c> this</c><00:06:47.380><c> doesn't</c>

00:06:47.640 --> 00:06:47.650 align:start position:0%
this ID and of course this doesn't
 

00:06:47.650 --> 00:06:49.770 align:start position:0%
this ID and of course this doesn't
compile<00:06:48.100><c> I</c><00:06:48.400><c> have</c><00:06:48.850><c> to</c><00:06:49.000><c> tell</c><00:06:49.390><c> them</c><00:06:49.480><c> that</c><00:06:49.570><c> you</c><00:06:49.630><c> saw</c>

00:06:49.770 --> 00:06:49.780 align:start position:0%
compile I have to tell them that you saw
 

00:06:49.780 --> 00:06:52.140 align:start position:0%
compile I have to tell them that you saw
that<00:06:49.900><c> a</c><00:06:49.960><c> suggestion</c><00:06:50.830><c> IntelliJ</c><00:06:51.370><c> is</c><00:06:51.460><c> saying</c><00:06:51.670><c> we</c>

00:06:52.140 --> 00:06:52.150 align:start position:0%
that a suggestion IntelliJ is saying we
 

00:06:52.150 --> 00:06:54.360 align:start position:0%
that a suggestion IntelliJ is saying we
have<00:06:52.180><c> an</c><00:06:52.570><c> option</c><00:06:52.840><c> for</c><00:06:52.990><c> you</c><00:06:53.160><c> because</c><00:06:54.160><c> by</c>

00:06:54.360 --> 00:06:54.370 align:start position:0%
have an option for you because by
 

00:06:54.370 --> 00:06:56.730 align:start position:0%
have an option for you because by
default<00:06:54.520><c> if</c><00:06:55.240><c> you</c><00:06:55.330><c> look</c><00:06:55.570><c> at</c><00:06:55.660><c> the</c><00:06:55.750><c> query</c><00:06:56.590><c> for</c>

00:06:56.730 --> 00:06:56.740 align:start position:0%
default if you look at the query for
 

00:06:56.740 --> 00:07:00.480 align:start position:0%
default if you look at the query for
object<00:06:57.010><c> method</c><00:06:57.250><c> that</c><00:06:58.230><c> the</c><00:06:59.230><c> GL</c><00:07:00.160><c> person</c>

00:07:00.480 --> 00:07:00.490 align:start position:0%
object method that the GL person
 

00:07:00.490 --> 00:07:02.820 align:start position:0%
object method that the GL person
supports<00:07:00.820><c> it</c><00:07:01.240><c> gives</c><00:07:01.480><c> you</c><00:07:01.600><c> a</c><00:07:01.780><c> string</c><00:07:02.440><c> a</c><00:07:02.620><c> row</c>

00:07:02.820 --> 00:07:02.830 align:start position:0%
supports it gives you a string a row
 

00:07:02.830 --> 00:07:04.260 align:start position:0%
supports it gives you a string a row
mapper<00:07:03.100><c> and</c><00:07:03.400><c> then</c><00:07:03.580><c> a</c><00:07:03.610><c> very</c><00:07:03.760><c> attic</c><00:07:04.000><c> array</c><00:07:04.150><c> of</c>

00:07:04.260 --> 00:07:04.270 align:start position:0%
mapper and then a very attic array of
 

00:07:04.270 --> 00:07:05.640 align:start position:0%
mapper and then a very attic array of
arguments<00:07:04.750><c> well</c><00:07:04.900><c> I</c><00:07:04.930><c> don't</c><00:07:05.200><c> want</c><00:07:05.380><c> to</c><00:07:05.470><c> provide</c>

00:07:05.640 --> 00:07:05.650 align:start position:0%
arguments well I don't want to provide
 

00:07:05.650 --> 00:07:07.320 align:start position:0%
arguments well I don't want to provide
the<00:07:05.770><c> arguments</c><00:07:06.160><c> last</c><00:07:06.280><c> otherwise</c><00:07:07.150><c> I'll</c><00:07:07.300><c> lose</c>

00:07:07.320 --> 00:07:07.330 align:start position:0%
the arguments last otherwise I'll lose
 

00:07:07.330 --> 00:07:09.180 align:start position:0%
the arguments last otherwise I'll lose
out<00:07:07.630><c> on</c><00:07:07.780><c> the</c><00:07:07.960><c> convenience</c><00:07:08.500><c> where</c><00:07:08.980><c> I</c><00:07:09.010><c> can</c>

00:07:09.180 --> 00:07:09.190 align:start position:0%
out on the convenience where I can
 

00:07:09.190 --> 00:07:10.620 align:start position:0%
out on the convenience where I can
provide<00:07:09.370><c> the</c><00:07:09.490><c> lambda</c><00:07:09.820><c> as</c><00:07:09.880><c> the</c><00:07:10.090><c> last</c><00:07:10.450><c> argument</c>

00:07:10.620 --> 00:07:10.630 align:start position:0%
provide the lambda as the last argument
 

00:07:10.630 --> 00:07:12.270 align:start position:0%
provide the lambda as the last argument
and<00:07:10.900><c> have</c><00:07:11.020><c> that</c><00:07:11.170><c> written</c><00:07:11.320><c> outside</c><00:07:11.950><c> of</c><00:07:12.190><c> the</c>

00:07:12.270 --> 00:07:12.280 align:start position:0%
and have that written outside of the
 

00:07:12.280 --> 00:07:14.190 align:start position:0%
and have that written outside of the
invocation<00:07:12.730><c> so</c><00:07:13.090><c> instead</c><00:07:13.390><c> I</c><00:07:13.600><c> want</c><00:07:14.140><c> the</c>

00:07:14.190 --> 00:07:14.200 align:start position:0%
invocation so instead I want the
 

00:07:14.200 --> 00:07:15.690 align:start position:0%
invocation so instead I want the
arguments<00:07:14.560><c> to</c><00:07:14.680><c> come</c><00:07:14.860><c> first</c><00:07:15.130><c> and</c><00:07:15.370><c> then</c><00:07:15.460><c> I</c><00:07:15.490><c> want</c>

00:07:15.690 --> 00:07:15.700 align:start position:0%
arguments to come first and then I want
 

00:07:15.700 --> 00:07:16.950 align:start position:0%
arguments to come first and then I want
the<00:07:15.760><c> row</c><00:07:15.850><c> mapper</c><00:07:16.060><c> so</c><00:07:16.240><c> we</c><00:07:16.330><c> have</c><00:07:16.420><c> it</c><00:07:16.510><c> a</c><00:07:16.540><c> call</c><00:07:16.780><c> an</c>

00:07:16.950 --> 00:07:16.960 align:start position:0%
the row mapper so we have it a call an
 

00:07:16.960 --> 00:07:18.810 align:start position:0%
the row mapper so we have it a call an
extension<00:07:17.440><c> here</c><00:07:17.620><c> that</c><00:07:18.160><c> does</c><00:07:18.340><c> just</c><00:07:18.580><c> that</c><00:07:18.610><c> it</c>

00:07:18.810 --> 00:07:18.820 align:start position:0%
extension here that does just that it
 

00:07:18.820 --> 00:07:20.340 align:start position:0%
extension here that does just that it
says<00:07:18.940><c> query</c><00:07:19.150><c> for</c><00:07:19.330><c> object</c><00:07:19.570><c> equals</c><00:07:19.750><c> string</c>

00:07:20.340 --> 00:07:20.350 align:start position:0%
says query for object equals string
 

00:07:20.350 --> 00:07:22.920 align:start position:0%
says query for object equals string
verdict<00:07:21.310><c> array</c><00:07:21.520><c> of</c><00:07:21.610><c> arguments</c><00:07:22.090><c> in</c><00:07:22.240><c> carlin</c><00:07:22.780><c> and</c>

00:07:22.920 --> 00:07:22.930 align:start position:0%
verdict array of arguments in carlin and
 

00:07:22.930 --> 00:07:25.410 align:start position:0%
verdict array of arguments in carlin and
then<00:07:23.260><c> a</c><00:07:23.440><c> lambda</c><00:07:23.710><c> definition</c><00:07:24.370><c> this</c><00:07:24.820><c> is</c><00:07:24.970><c> this</c>

00:07:25.410 --> 00:07:25.420 align:start position:0%
then a lambda definition this is this
 

00:07:25.420 --> 00:07:27.090 align:start position:0%
then a lambda definition this is this
says<00:07:25.630><c> I</c><00:07:25.660><c> care</c><00:07:26.140><c> about</c><00:07:26.320><c> a</c><00:07:26.350><c> result</c><00:07:26.620><c> set</c><00:07:26.800><c> and</c><00:07:26.830><c> an</c>

00:07:27.090 --> 00:07:27.100 align:start position:0%
says I care about a result set and an
 

00:07:27.100 --> 00:07:28.830 align:start position:0%
says I care about a result set and an
integer<00:07:27.370><c> and</c><00:07:27.520><c> I'm</c><00:07:27.610><c> gonna</c><00:07:27.700><c> return</c><00:07:27.970><c> a</c><00:07:28.030><c> T</c><00:07:28.300><c> it</c>

00:07:28.830 --> 00:07:28.840 align:start position:0%
integer and I'm gonna return a T it
 

00:07:28.840 --> 00:07:30.660 align:start position:0%
integer and I'm gonna return a T it
doesn't<00:07:29.170><c> say</c><00:07:29.290><c> I</c><00:07:29.320><c> need</c><00:07:29.620><c> a</c><00:07:29.650><c> row</c><00:07:29.830><c> mapper</c><00:07:30.070><c> all</c>

00:07:30.660 --> 00:07:30.670 align:start position:0%
doesn't say I need a row mapper all
 

00:07:30.670 --> 00:07:31.710 align:start position:0%
doesn't say I need a row mapper all
right<00:07:30.760><c> we</c><00:07:30.910><c> don't</c><00:07:31.000><c> have</c><00:07:31.210><c> to</c><00:07:31.300><c> do</c><00:07:31.390><c> a</c><00:07:31.420><c> function</c>

00:07:31.710 --> 00:07:31.720 align:start position:0%
right we don't have to do a function
 

00:07:31.720 --> 00:07:33.500 align:start position:0%
right we don't have to do a function
interface<00:07:31.990><c> here</c><00:07:32.140><c> we</c><00:07:32.530><c> just</c><00:07:32.710><c> provide</c><00:07:32.980><c> an</c><00:07:33.190><c> actual</c>

00:07:33.500 --> 00:07:33.510 align:start position:0%
interface here we just provide an actual
 

00:07:33.510 --> 00:07:36.600 align:start position:0%
interface here we just provide an actual
honest-to-goodness<00:07:34.680><c> lambda</c><00:07:35.680><c> right</c><00:07:35.950><c> and</c><00:07:36.130><c> then</c>

00:07:36.600 --> 00:07:36.610 align:start position:0%
honest-to-goodness lambda right and then
 

00:07:36.610 --> 00:07:38.250 align:start position:0%
honest-to-goodness lambda right and then
that<00:07:36.730><c> gets</c><00:07:36.880><c> mapped</c><00:07:37.150><c> into</c><00:07:37.540><c> query</c><00:07:38.080><c> object</c>

00:07:38.250 --> 00:07:38.260 align:start position:0%
that gets mapped into query object
 

00:07:38.260 --> 00:07:39.480 align:start position:0%
that gets mapped into query object
taking<00:07:38.980><c> a</c><00:07:39.040><c> row</c><00:07:39.160><c> mapper</c>

00:07:39.480 --> 00:07:39.490 align:start position:0%
taking a row mapper
 

00:07:39.490 --> 00:07:41.370 align:start position:0%
taking a row mapper
you<00:07:40.000><c> know</c><00:07:40.090><c> overwriting</c><00:07:40.510><c> the</c><00:07:40.600><c> result</c><00:07:40.870><c> set</c>

00:07:41.370 --> 00:07:41.380 align:start position:0%
you know overwriting the result set
 

00:07:41.380 --> 00:07:45.000 align:start position:0%
you know overwriting the result set
blah<00:07:41.590><c> blah</c><00:07:41.830><c> blah</c><00:07:41.980><c> blah</c><00:07:42.130><c> okay</c><00:07:43.000><c> so</c><00:07:43.270><c> we</c><00:07:43.960><c> we</c><00:07:44.770><c> get</c>

00:07:45.000 --> 00:07:45.010 align:start position:0%
blah blah blah blah okay so we we get
 

00:07:45.010 --> 00:07:46.620 align:start position:0%
blah blah blah blah okay so we we get
that<00:07:45.190><c> for</c><00:07:45.400><c> free</c><00:07:45.490><c> that's</c><00:07:45.640><c> a</c><00:07:45.760><c> call</c><00:07:46.000><c> an</c><00:07:46.150><c> extension</c>

00:07:46.620 --> 00:07:46.630 align:start position:0%
that for free that's a call an extension
 

00:07:46.630 --> 00:07:48.270 align:start position:0%
that for free that's a call an extension
in<00:07:46.780><c> Spring</c><00:07:47.110><c> Framework</c><00:07:47.320><c> five</c><00:07:47.710><c> right</c><00:07:48.040><c> you</c><00:07:48.070><c> can</c>

00:07:48.270 --> 00:07:48.280 align:start position:0%
in Spring Framework five right you can
 

00:07:48.280 --> 00:07:49.440 align:start position:0%
in Spring Framework five right you can
see<00:07:48.400><c> that</c><00:07:48.430><c> was</c><00:07:48.670><c> on</c><00:07:48.760><c> the</c><00:07:48.820><c> class</c><00:07:49.000><c> but</c><00:07:49.210><c> already</c>

00:07:49.440 --> 00:07:49.450 align:start position:0%
see that was on the class but already
 

00:07:49.450 --> 00:07:51.540 align:start position:0%
see that was on the class but already
it's<00:07:50.140><c> on</c><00:07:50.230><c> Spring</c><00:07:50.680><c> Framework</c><00:07:50.770><c> or</c><00:07:51.100><c> extreme</c><00:07:51.370><c> form</c>

00:07:51.540 --> 00:07:51.550 align:start position:0%
it's on Spring Framework or extreme form
 

00:07:51.550 --> 00:07:53.670 align:start position:0%
it's on Spring Framework or extreme form
of<00:07:51.640><c> GBC</c><00:07:51.970><c> core</c><00:07:52.180><c> if</c><00:07:52.570><c> using</c><00:07:52.870><c> Java</c><00:07:53.080><c> you'll</c><00:07:53.500><c> never</c>

00:07:53.670 --> 00:07:53.680 align:start position:0%
of GBC core if using Java you'll never
 

00:07:53.680 --> 00:07:54.690 align:start position:0%
of GBC core if using Java you'll never
see<00:07:53.890><c> it</c><00:07:53.920><c> you'll</c><00:07:54.130><c> never</c><00:07:54.280><c> know</c><00:07:54.400><c> about</c><00:07:54.490><c> it</c><00:07:54.580><c> you</c>

00:07:54.690 --> 00:07:54.700 align:start position:0%
see it you'll never know about it you
 

00:07:54.700 --> 00:07:56.250 align:start position:0%
see it you'll never know about it you
don't<00:07:54.790><c> care</c><00:07:55.000><c> but</c><00:07:55.120><c> if</c><00:07:55.210><c> yours</c><00:07:55.390><c> in</c><00:07:55.510><c> Kotlin</c><00:07:55.870><c> that</c>

00:07:56.250 --> 00:07:56.260 align:start position:0%
don't care but if yours in Kotlin that
 

00:07:56.260 --> 00:07:58.740 align:start position:0%
don't care but if yours in Kotlin that
code<00:07:56.530><c> will</c><00:07:56.740><c> work</c><00:07:56.770><c> for</c><00:07:57.010><c> you</c><00:07:57.100><c> right</c><00:07:57.480><c> all</c><00:07:58.480><c> right</c>

00:07:58.740 --> 00:07:58.750 align:start position:0%
code will work for you right all right
 

00:07:58.750 --> 00:08:01.680 align:start position:0%
code will work for you right all right
so<00:07:59.140><c> last</c><00:07:59.500><c> one</c><00:07:59.940><c> customer</c><00:08:00.940><c> we</c><00:08:01.180><c> have</c><00:08:01.300><c> to</c><00:08:01.390><c> insert</c>

00:08:01.680 --> 00:08:01.690 align:start position:0%
so last one customer we have to insert
 

00:08:01.690 --> 00:08:03.750 align:start position:0%
so last one customer we have to insert
some<00:08:01.930><c> data</c><00:08:02.080><c> so</c><00:08:02.380><c> we'll</c><00:08:02.470><c> say</c><00:08:02.680><c> this</c><00:08:03.580><c> stuff</c>

00:08:03.750 --> 00:08:03.760 align:start position:0%
some data so we'll say this stuff
 

00:08:03.760 --> 00:08:06.390 align:start position:0%
some data so we'll say this stuff
Jaime's<00:08:04.150><c> template</c><00:08:04.510><c> that</c><00:08:04.660><c> executes</c><00:08:05.400><c> insert</c>

00:08:06.390 --> 00:08:06.400 align:start position:0%
Jaime's template that executes insert
 

00:08:06.400 --> 00:08:12.630 align:start position:0%
Jaime's template that executes insert
into<00:08:07.350><c> customers</c><00:08:09.840><c> name</c><00:08:10.840><c> values</c><00:08:11.530><c> question</c><00:08:12.460><c> mark</c>

00:08:12.630 --> 00:08:12.640 align:start position:0%
into customers name values question mark
 

00:08:12.640 --> 00:08:15.570 align:start position:0%
into customers name values question mark
and<00:08:12.850><c> here</c><00:08:13.420><c> to</c><00:08:13.630><c> may</c><00:08:13.930><c> is</c><00:08:13.960><c> a</c><00:08:14.080><c> lambda</c><00:08:14.470><c> and</c><00:08:14.620><c> the</c>

00:08:15.570 --> 00:08:15.580 align:start position:0%
and here to may is a lambda and the
 

00:08:15.580 --> 00:08:17.310 align:start position:0%
and here to may is a lambda and the
defaults<00:08:15.940><c> the</c><00:08:16.180><c> the</c><00:08:16.450><c> the</c><00:08:16.720><c> lambda</c><00:08:16.990><c> is</c><00:08:17.080><c> gonna</c><00:08:17.260><c> be</c>

00:08:17.310 --> 00:08:17.320 align:start position:0%
defaults the the the lambda is gonna be
 

00:08:17.320 --> 00:08:19.350 align:start position:0%
defaults the the the lambda is gonna be
a<00:08:17.380><c> prepared</c><00:08:18.070><c> statement</c><00:08:18.280><c> I</c><00:08:18.730><c> could</c><00:08:19.180><c> specify</c>

00:08:19.350 --> 00:08:19.360 align:start position:0%
a prepared statement I could specify
 

00:08:19.360 --> 00:08:21.750 align:start position:0%
a prepared statement I could specify
that<00:08:19.750><c> if</c><00:08:19.930><c> I</c><00:08:20.020><c> want</c><00:08:20.230><c> to</c><00:08:20.380><c> but</c><00:08:20.770><c> I</c><00:08:21.040><c> can</c><00:08:21.250><c> also</c><00:08:21.370><c> do</c><00:08:21.550><c> fly</c>

00:08:21.750 --> 00:08:21.760 align:start position:0%
that if I want to but I can also do fly
 

00:08:21.760 --> 00:08:23.040 align:start position:0%
that if I want to but I can also do fly
on<00:08:21.820><c> caught</c><00:08:22.300><c> them</c><00:08:22.420><c> to</c><00:08:22.510><c> give</c><00:08:22.630><c> me</c><00:08:22.720><c> an</c><00:08:22.780><c> implicit</c>

00:08:23.040 --> 00:08:23.050 align:start position:0%
on caught them to give me an implicit
 

00:08:23.050 --> 00:08:25.380 align:start position:0%
on caught them to give me an implicit
parameter<00:08:23.350><c> it</c><00:08:23.980><c> it</c><00:08:24.730><c> is</c><00:08:24.910><c> the</c><00:08:25.060><c> prepared</c>

00:08:25.380 --> 00:08:25.390 align:start position:0%
parameter it it is the prepared
 

00:08:25.390 --> 00:08:27.540 align:start position:0%
parameter it it is the prepared
statement<00:08:25.570><c> sorry</c><00:08:25.960><c> it</c><00:08:26.140><c> thought</c><00:08:26.860><c> set</c><00:08:27.250><c> string</c>

00:08:27.540 --> 00:08:27.550 align:start position:0%
statement sorry it thought set string
 

00:08:27.550 --> 00:08:30.270 align:start position:0%
statement sorry it thought set string
one<00:08:27.880><c> is</c><00:08:28.180><c> going</c><00:08:28.390><c> to</c><00:08:28.450><c> be</c><00:08:28.510><c> equal</c><00:08:28.810><c> to</c><00:08:28.840><c> customer</c><00:08:29.530><c> dot</c>

00:08:30.270 --> 00:08:30.280 align:start position:0%
one is going to be equal to customer dot
 

00:08:30.280 --> 00:08:34.200 align:start position:0%
one is going to be equal to customer dot
name<00:08:30.520><c> and</c><00:08:31.050><c> it</c><00:08:32.050><c> not</c><00:08:32.289><c> execute</c><00:08:32.890><c> there</c><00:08:33.789><c> we</c><00:08:33.880><c> are</c>

00:08:34.200 --> 00:08:34.210 align:start position:0%
name and it not execute there we are
 

00:08:34.210 --> 00:08:39.990 align:start position:0%
name and it not execute there we are
so<00:08:35.370><c> I've</c><00:08:36.370><c> overridden</c><00:08:36.910><c> the</c><00:08:37.270><c> the</c><00:08:38.880><c> insert</c><00:08:39.880><c> method</c>

00:08:39.990 --> 00:08:40.000 align:start position:0%
so I've overridden the the insert method
 

00:08:40.000 --> 00:08:41.940 align:start position:0%
so I've overridden the the insert method
there<00:08:40.240><c> I</c><00:08:40.270><c> provide</c><00:08:40.599><c> the</c><00:08:40.720><c> definition</c><00:08:41.470><c> and</c><00:08:41.650><c> I'm</c>

00:08:41.940 --> 00:08:41.950 align:start position:0%
there I provide the definition and I'm
 

00:08:41.950 --> 00:08:43.710 align:start position:0%
there I provide the definition and I'm
using<00:08:42.400><c> the</c><00:08:42.580><c> JDBC</c><00:08:42.970><c> template</c><00:08:43.240><c> to</c><00:08:43.330><c> write</c><00:08:43.479><c> data</c><00:08:43.630><c> to</c>

00:08:43.710 --> 00:08:43.720 align:start position:0%
using the JDBC template to write data to
 

00:08:43.720 --> 00:08:45.270 align:start position:0%
using the JDBC template to write data to
the<00:08:43.810><c> database</c><00:08:43.930><c> the</c><00:08:44.320><c> question</c><00:08:44.890><c> of</c><00:08:44.950><c> course</c><00:08:45.100><c> then</c>

00:08:45.270 --> 00:08:45.280 align:start position:0%
the database the question of course then
 

00:08:45.280 --> 00:08:47.190 align:start position:0%
the database the question of course then
is<00:08:45.400><c> what</c><00:08:45.640><c> database</c><00:08:45.970><c> what</c><00:08:46.150><c> schema</c><00:08:46.570><c> a</c><00:08:46.600><c> table</c><00:08:47.050><c> so</c>

00:08:47.190 --> 00:08:47.200 align:start position:0%
is what database what schema a table so
 

00:08:47.200 --> 00:08:48.810 align:start position:0%
is what database what schema a table so
we<00:08:47.320><c> can</c><00:08:47.440><c> take</c><00:08:47.590><c> advantage</c><00:08:47.680><c> of</c><00:08:47.950><c> a</c><00:08:48.040><c> mechanism</c>

00:08:48.810 --> 00:08:48.820 align:start position:0%
we can take advantage of a mechanism
 

00:08:48.820 --> 00:08:51.420 align:start position:0%
we can take advantage of a mechanism
here<00:08:49.270><c> and</c><00:08:49.570><c> spring</c><00:08:50.170><c> itself</c><00:08:50.500><c> not</c><00:08:51.070><c> not</c><00:08:51.400><c> even</c>

00:08:51.420 --> 00:08:51.430 align:start position:0%
here and spring itself not not even
 

00:08:51.430 --> 00:08:54.510 align:start position:0%
here and spring itself not not even
spring<00:08:51.820><c> butjust</c><00:08:52.150><c> spring</c><00:08:52.570><c> I</c><00:08:52.810><c> can</c><00:08:53.350><c> say</c><00:08:53.530><c> schema</c>

00:08:54.510 --> 00:08:54.520 align:start position:0%
spring butjust spring I can say schema
 

00:08:54.520 --> 00:08:57.590 align:start position:0%
spring butjust spring I can say schema
that's<00:08:54.760><c> equal</c><00:08:55.300><c> and</c><00:08:55.540><c> if</c><00:08:56.350><c> I</c><00:08:56.440><c> say</c><00:08:56.650><c> insert</c><00:08:57.130><c> into</c>

00:08:57.590 --> 00:08:57.600 align:start position:0%
that's equal and if I say insert into
 

00:08:57.600 --> 00:08:59.670 align:start position:0%
that's equal and if I say insert into
customer<00:08:58.600><c> so</c><00:08:58.750><c> I'm</c><00:08:58.810><c> sorry</c><00:08:58.900><c> I</c><00:08:59.140><c> want</c><00:08:59.410><c> to</c><00:08:59.530><c> create</c>

00:08:59.670 --> 00:08:59.680 align:start position:0%
customer so I'm sorry I want to create
 

00:08:59.680 --> 00:09:02.600 align:start position:0%
customer so I'm sorry I want to create
the<00:08:59.770><c> table</c><00:08:59.890><c> and</c><00:09:00.100><c> say</c><00:09:00.220><c> create</c><00:09:00.430><c> table</c><00:09:01.390><c> customers</c>

00:09:02.600 --> 00:09:02.610 align:start position:0%
the table and say create table customers
 

00:09:02.610 --> 00:09:06.180 align:start position:0%
the table and say create table customers
and<00:09:04.050><c> I'm</c><00:09:05.050><c> gonna</c><00:09:05.140><c> provide</c><00:09:05.470><c> a</c><00:09:05.530><c> semicolon</c>

00:09:06.180 --> 00:09:06.190 align:start position:0%
and I'm gonna provide a semicolon
 

00:09:06.190 --> 00:09:07.500 align:start position:0%
and I'm gonna provide a semicolon
the<00:09:06.370><c> only</c><00:09:06.520><c> semicolon</c><00:09:07.000><c> you're</c><00:09:07.090><c> gonna</c><00:09:07.210><c> see</c><00:09:07.390><c> me</c>

00:09:07.500 --> 00:09:07.510 align:start position:0%
the only semicolon you're gonna see me
 

00:09:07.510 --> 00:09:09.780 align:start position:0%
the only semicolon you're gonna see me
type<00:09:07.690><c> this</c><00:09:07.930><c> for</c><00:09:08.500><c> this</c><00:09:08.560><c> installation</c><00:09:08.890><c> that's</c>

00:09:09.780 --> 00:09:09.790 align:start position:0%
type this for this installation that's
 

00:09:09.790 --> 00:09:13.200 align:start position:0%
type this for this installation that's
gonna<00:09:09.910><c> have</c><00:09:10.030><c> an</c><00:09:10.120><c> ID</c><00:09:10.270><c> big</c><00:09:11.080><c> int</c><00:09:11.760><c> auto</c><00:09:12.760><c> increment</c>

00:09:13.200 --> 00:09:13.210 align:start position:0%
gonna have an ID big int auto increment
 

00:09:13.210 --> 00:09:16.380 align:start position:0%
gonna have an ID big int auto increment
primary<00:09:13.720><c> key</c><00:09:13.960><c> and</c><00:09:14.230><c> a</c><00:09:14.650><c> name</c><00:09:14.890><c> var</c><00:09:15.370><c> car</c><00:09:15.790><c> two</c><00:09:16.180><c> five</c>

00:09:16.380 --> 00:09:16.390 align:start position:0%
primary key and a name var car two five
 

00:09:16.390 --> 00:09:19.650 align:start position:0%
primary key and a name var car two five
five<00:09:16.630><c> not</c><00:09:17.410><c> null</c><00:09:17.880><c> all</c><00:09:18.880><c> right</c><00:09:19.090><c> so</c><00:09:19.390><c> there's</c><00:09:19.570><c> my</c>

00:09:19.650 --> 00:09:19.660 align:start position:0%
five not null all right so there's my
 

00:09:19.660 --> 00:09:22.710 align:start position:0%
five not null all right so there's my
scheme<00:09:20.350><c> on</c><00:09:20.560><c> my</c><00:09:20.680><c> DDL</c><00:09:21.070><c> and</c><00:09:21.300><c> springs</c><00:09:22.300><c> gonna</c><00:09:22.510><c> run</c>

00:09:22.710 --> 00:09:22.720 align:start position:0%
scheme on my DDL and springs gonna run
 

00:09:22.720 --> 00:09:24.000 align:start position:0%
scheme on my DDL and springs gonna run
that<00:09:22.840><c> when</c><00:09:23.020><c> the</c><00:09:23.110><c> application</c><00:09:23.500><c> starts</c><00:09:23.530><c> up</c><00:09:23.800><c> and</c>

00:09:24.000 --> 00:09:24.010 align:start position:0%
that when the application starts up and
 

00:09:24.010 --> 00:09:25.650 align:start position:0%
that when the application starts up and
this<00:09:24.280><c> is</c><00:09:24.400><c> gonna</c><00:09:24.520><c> work</c><00:09:24.670><c> so</c><00:09:24.910><c> now</c><00:09:25.240><c> let's</c><00:09:25.420><c> go</c><00:09:25.600><c> ahead</c>

00:09:25.650 --> 00:09:25.660 align:start position:0%
this is gonna work so now let's go ahead
 

00:09:25.660 --> 00:09:26.730 align:start position:0%
this is gonna work so now let's go ahead
and<00:09:25.840><c> exercise</c><00:09:26.200><c> it</c><00:09:26.350><c> will</c><00:09:26.380><c> created</c><00:09:26.650><c> an</c>

00:09:26.730 --> 00:09:26.740 align:start position:0%
and exercise it will created an
 

00:09:26.740 --> 00:09:27.990 align:start position:0%
and exercise it will created an
implementation<00:09:27.280><c> we're</c><00:09:27.640><c> creating</c><00:09:27.850><c> an</c><00:09:27.910><c> object</c>

00:09:27.990 --> 00:09:28.000 align:start position:0%
implementation we're creating an object
 

00:09:28.000 --> 00:09:30.300 align:start position:0%
implementation we're creating an object
that<00:09:28.270><c> actually</c><00:09:28.450><c> exercises</c><00:09:29.170><c> the</c><00:09:29.260><c> service</c><00:09:29.620><c> and</c>

00:09:30.300 --> 00:09:30.310 align:start position:0%
that actually exercises the service and
 

00:09:30.310 --> 00:09:32.220 align:start position:0%
that actually exercises the service and
it's<00:09:30.400><c> gonna</c><00:09:30.490><c> get</c><00:09:30.640><c> an</c><00:09:30.730><c> application</c><00:09:30.940><c> winner</c><00:09:31.480><c> so</c>

00:09:32.220 --> 00:09:32.230 align:start position:0%
it's gonna get an application winner so
 

00:09:32.230 --> 00:09:33.510 align:start position:0%
it's gonna get an application winner so
I<00:09:32.260><c> could</c><00:09:32.500><c> do</c><00:09:32.650><c> what</c><00:09:32.860><c> I</c><00:09:32.890><c> normally</c><00:09:32.980><c> do</c><00:09:33.340><c> right</c><00:09:33.490><c> I</c>

00:09:33.510 --> 00:09:33.520 align:start position:0%
I could do what I normally do right I
 

00:09:33.520 --> 00:09:36.630 align:start position:0%
I could do what I normally do right I
can<00:09:33.700><c> just</c><00:09:33.730><c> say</c><00:09:33.970><c> you</c><00:09:34.360><c> know</c><00:09:34.660><c> data</c><00:09:35.640><c> initializer</c>

00:09:36.630 --> 00:09:36.640 align:start position:0%
can just say you know data initializer
 

00:09:36.640 --> 00:09:40.530 align:start position:0%
can just say you know data initializer
and<00:09:38.040><c> override</c><00:09:39.040><c> the</c><00:09:39.070><c> application</c><00:09:39.640><c> runner</c><00:09:39.820><c> and</c>

00:09:40.530 --> 00:09:40.540 align:start position:0%
and override the application runner and
 

00:09:40.540 --> 00:09:43.590 align:start position:0%
and override the application runner and
inject<00:09:41.410><c> this</c><00:09:41.530><c> here</c><00:09:41.740><c> private</c><00:09:42.160><c> Val</c><00:09:42.600><c> customer</c>

00:09:43.590 --> 00:09:43.600 align:start position:0%
inject this here private Val customer
 

00:09:43.600 --> 00:09:46.830 align:start position:0%
inject this here private Val customer
service<00:09:44.970><c> and</c><00:09:45.970><c> make</c><00:09:46.150><c> this</c><00:09:46.240><c> a</c><00:09:46.300><c> regular</c><00:09:46.450><c> spin</c>

00:09:46.830 --> 00:09:46.840 align:start position:0%
service and make this a regular spin
 

00:09:46.840 --> 00:09:49.170 align:start position:0%
service and make this a regular spin
component<00:09:47.380><c> and</c><00:09:48.130><c> all</c><00:09:48.280><c> of</c><00:09:48.370><c> that</c><00:09:48.460><c> is</c><00:09:48.550><c> fine</c><00:09:48.700><c> I</c><00:09:48.970><c> mean</c>

00:09:49.170 --> 00:09:49.180 align:start position:0%
component and all of that is fine I mean
 

00:09:49.180 --> 00:09:50.910 align:start position:0%
component and all of that is fine I mean
that<00:09:49.270><c> would</c><00:09:49.360><c> certainly</c><00:09:49.540><c> work</c><00:09:49.750><c> but</c><00:09:50.530><c> there's</c>

00:09:50.910 --> 00:09:50.920 align:start position:0%
that would certainly work but there's
 

00:09:50.920 --> 00:09:52.890 align:start position:0%
that would certainly work but there's
actually<00:09:51.190><c> a</c><00:09:51.250><c> much</c><00:09:51.760><c> more</c><00:09:51.880><c> Colin</c><00:09:52.420><c> esque</c>

00:09:52.890 --> 00:09:52.900 align:start position:0%
actually a much more Colin esque
 

00:09:52.900 --> 00:09:56.090 align:start position:0%
actually a much more Colin esque
approach<00:09:53.410><c> right</c><00:09:53.650><c> we</c><00:09:53.770><c> can</c><00:09:53.890><c> use</c>

00:09:56.090 --> 00:09:56.100 align:start position:0%
 
 

00:09:56.100 --> 00:09:58.890 align:start position:0%
 
functional<00:09:57.100><c> beam</c><00:09:57.340><c> registration</c><00:09:58.180><c> right</c><00:09:58.420><c> so</c>

00:09:58.890 --> 00:09:58.900 align:start position:0%
functional beam registration right so
 

00:09:58.900 --> 00:10:01.290 align:start position:0%
functional beam registration right so
instead<00:09:59.110><c> of</c><00:09:59.170><c> using</c><00:09:59.640><c> Java</c><00:10:00.640><c> config</c><00:10:01.120><c> or</c>

00:10:01.290 --> 00:10:01.300 align:start position:0%
instead of using Java config or
 

00:10:01.300 --> 00:10:03.030 align:start position:0%
instead of using Java config or
component<00:10:01.720><c> scanning</c><00:10:01.960><c> here</c><00:10:02.320><c> we</c><00:10:02.530><c> say</c><00:10:02.680><c> spring</c>

00:10:03.030 --> 00:10:03.040 align:start position:0%
component scanning here we say spring
 

00:10:03.040 --> 00:10:10.110 align:start position:0%
component scanning here we say spring
application<00:10:03.580><c> builder</c><00:10:07.140><c> dot</c><00:10:09.120><c> initializers</c>

00:10:10.110 --> 00:10:10.120 align:start position:0%
application builder dot initializers
 

00:10:10.120 --> 00:10:13.920 align:start position:0%
application builder dot initializers
beans<00:10:11.080><c> provide</c><00:10:11.620><c> that</c><00:10:11.950><c> beans</c><00:10:12.160><c> definition</c><00:10:12.930><c> and</c>

00:10:13.920 --> 00:10:13.930 align:start position:0%
beans provide that beans definition and
 

00:10:13.930 --> 00:10:14.820 align:start position:0%
beans provide that beans definition and
we'll<00:10:14.050><c> come</c><00:10:14.170><c> back</c><00:10:14.290><c> to</c><00:10:14.380><c> that</c><00:10:14.470><c> a</c><00:10:14.500><c> second</c><00:10:14.740><c> that's</c>

00:10:14.820 --> 00:10:14.830 align:start position:0%
we'll come back to that a second that's
 

00:10:14.830 --> 00:10:16.500 align:start position:0%
we'll come back to that a second that's
like<00:10:15.040><c> the</c><00:10:15.310><c> DSL</c><00:10:15.790><c> that</c><00:10:15.910><c> we</c><00:10:15.970><c> want</c><00:10:16.090><c> to</c><00:10:16.180><c> use</c><00:10:16.300><c> when</c>

00:10:16.500 --> 00:10:16.510 align:start position:0%
like the DSL that we want to use when
 

00:10:16.510 --> 00:10:19.020 align:start position:0%
like the DSL that we want to use when
I'll<00:10:16.630><c> specify</c><00:10:16.810><c> which</c><00:10:17.620><c> class</c><00:10:18.490><c> to</c><00:10:18.700><c> use</c><00:10:18.850><c> in</c><00:10:18.970><c> this</c>

00:10:19.020 --> 00:10:19.030 align:start position:0%
I'll specify which class to use in this
 

00:10:19.030 --> 00:10:22.140 align:start position:0%
I'll specify which class to use in this
case<00:10:19.210><c> GV</c><00:10:19.510><c> application</c><00:10:20.110><c> class</c><00:10:20.680><c> Java</c><00:10:21.070><c> and</c><00:10:21.370><c> we</c>

00:10:22.140 --> 00:10:22.150 align:start position:0%
case GV application class Java and we
 

00:10:22.150 --> 00:10:24.660 align:start position:0%
case GV application class Java and we
can<00:10:22.240><c> tell</c><00:10:22.390><c> it</c><00:10:22.540><c> to</c><00:10:22.840><c> run</c><00:10:23.520><c> passing</c><00:10:24.520><c> in</c><00:10:24.610><c> the</c>

00:10:24.660 --> 00:10:24.670 align:start position:0%
can tell it to run passing in the
 

00:10:24.670 --> 00:10:28.470 align:start position:0%
can tell it to run passing in the
arguments<00:10:25.080><c> so</c><00:10:26.080><c> this</c><00:10:26.580><c> is</c><00:10:27.580><c> the</c><00:10:28.240><c> list</c><00:10:28.420><c> of</c>

00:10:28.470 --> 00:10:28.480 align:start position:0%
arguments so this is the list of
 

00:10:28.480 --> 00:10:31.200 align:start position:0%
arguments so this is the list of
arguments<00:10:28.870><c> at</c><00:10:28.930><c> want</c><00:10:29.080><c> to</c><00:10:29.140><c> provide</c><00:10:29.380><c> and</c><00:10:29.850><c> the</c><00:10:30.850><c> DSL</c>

00:10:31.200 --> 00:10:31.210 align:start position:0%
arguments at want to provide and the DSL
 

00:10:31.210 --> 00:10:34.110 align:start position:0%
arguments at want to provide and the DSL
let's<00:10:31.930><c> just</c><00:10:32.080><c> define</c><00:10:32.200><c> means</c><00:10:32.760><c> using</c><00:10:33.760><c> this</c><00:10:33.940><c> very</c>

00:10:34.110 --> 00:10:34.120 align:start position:0%
let's just define means using this very
 

00:10:34.120 --> 00:10:36.420 align:start position:0%
let's just define means using this very
nice<00:10:34.240><c> DSL</c><00:10:34.570><c> that</c><00:10:35.080><c> that</c><00:10:35.500><c> will</c><00:10:35.770><c> get</c><00:10:35.920><c> run</c><00:10:36.100><c> with</c><00:10:36.310><c> the</c>

00:10:36.420 --> 00:10:36.430 align:start position:0%
nice DSL that that will get run with the
 

00:10:36.430 --> 00:10:38.910 align:start position:0%
nice DSL that that will get run with the
registered<00:10:37.120><c> application</c><00:10:37.600><c> context</c><00:10:38.080><c> right</c><00:10:38.170><c> now</c>

00:10:38.910 --> 00:10:38.920 align:start position:0%
registered application context right now
 

00:10:38.920 --> 00:10:40.350 align:start position:0%
registered application context right now
there<00:10:39.070><c> isn't</c><00:10:39.220><c> it</c><00:10:39.430><c> there's</c><00:10:39.730><c> an</c><00:10:39.790><c> analog</c><00:10:40.090><c> to</c><00:10:40.270><c> this</c>

00:10:40.350 --> 00:10:40.360 align:start position:0%
there isn't it there's an analog to this
 

00:10:40.360 --> 00:10:41.400 align:start position:0%
there isn't it there's an analog to this
there's<00:10:40.540><c> function</c><00:10:40.810><c> you</c><00:10:40.960><c> can</c><00:10:41.080><c> do</c><00:10:41.170><c> functional</c>

00:10:41.400 --> 00:10:41.410 align:start position:0%
there's function you can do functional
 

00:10:41.410 --> 00:10:43.470 align:start position:0%
there's function you can do functional
mean<00:10:41.680><c> definitions</c><00:10:42.130><c> in</c><00:10:42.310><c> Java</c><00:10:42.790><c> as</c><00:10:42.940><c> well</c><00:10:43.090><c> but</c>

00:10:43.470 --> 00:10:43.480 align:start position:0%
mean definitions in Java as well but
 

00:10:43.480 --> 00:10:45.270 align:start position:0%
mean definitions in Java as well but
this<00:10:43.630><c> call</c><00:10:43.870><c> in</c><00:10:44.020><c> DSL</c><00:10:44.320><c> was</c><00:10:44.530><c> unique</c><00:10:44.770><c> to</c><00:10:44.800><c> common</c>

00:10:45.270 --> 00:10:45.280 align:start position:0%
this call in DSL was unique to common
 

00:10:45.280 --> 00:10:48.180 align:start position:0%
this call in DSL was unique to common
right<00:10:45.400><c> it</c><00:10:45.780><c> and</c><00:10:46.780><c> I</c><00:10:46.930><c> think</c><00:10:47.110><c> it</c><00:10:47.230><c> reads</c><00:10:47.530><c> much</c><00:10:47.980><c> more</c>

00:10:48.180 --> 00:10:48.190 align:start position:0%
right it and I think it reads much more
 

00:10:48.190 --> 00:10:49.950 align:start position:0%
right it and I think it reads much more
nicely<00:10:48.370><c> so</c><00:10:48.700><c> here</c><00:10:49.210><c> we're</c><00:10:49.420><c> gonna</c><00:10:49.510><c> create</c><00:10:49.660><c> a</c><00:10:49.720><c> beam</c>

00:10:49.950 --> 00:10:49.960 align:start position:0%
nicely so here we're gonna create a beam
 

00:10:49.960 --> 00:10:51.750 align:start position:0%
nicely so here we're gonna create a beam
of<00:10:50.260><c> type</c><00:10:50.440><c> application</c><00:10:50.890><c> runner</c><00:10:51.040><c> and</c><00:10:51.340><c> in</c><00:10:51.670><c> the</c>

00:10:51.750 --> 00:10:51.760 align:start position:0%
of type application runner and in the
 

00:10:51.760 --> 00:10:53.100 align:start position:0%
of type application runner and in the
application<00:10:51.850><c> runner</c><00:10:52.300><c> we</c><00:10:52.420><c> need</c><00:10:52.570><c> a</c><00:10:52.600><c> pointer</c><00:10:53.080><c> to</c>

00:10:53.100 --> 00:10:53.110 align:start position:0%
application runner we need a pointer to
 

00:10:53.110 --> 00:10:56.250 align:start position:0%
application runner we need a pointer to
the<00:10:53.800><c> customer</c><00:10:54.310><c> service</c><00:10:54.490><c> so</c><00:10:55.480><c> normally</c><00:10:56.110><c> we'd</c>

00:10:56.250 --> 00:10:56.260 align:start position:0%
the customer service so normally we'd
 

00:10:56.260 --> 00:10:58.050 align:start position:0%
the customer service so normally we'd
ask<00:10:56.410><c> spring</c><00:10:56.770><c> to</c><00:10:56.890><c> inject</c><00:10:57.220><c> us</c><00:10:57.370><c> in</c><00:10:57.490><c> a</c><00:10:57.610><c> bean</c>

00:10:58.050 --> 00:10:58.060 align:start position:0%
ask spring to inject us in a bean
 

00:10:58.060 --> 00:11:00.060 align:start position:0%
ask spring to inject us in a bean
provider<00:10:58.480><c> method</c><00:10:58.840><c> here</c><00:10:59.290><c> we</c><00:10:59.500><c> say</c><00:10:59.680><c> give</c><00:10:59.920><c> me</c><00:11:00.040><c> a</c>

00:11:00.060 --> 00:11:00.070 align:start position:0%
provider method here we say give me a
 

00:11:00.070 --> 00:11:02.250 align:start position:0%
provider method here we say give me a
reference<00:11:00.550><c> to</c><00:11:00.730><c> it</c><00:11:00.820><c> and</c><00:11:01.540><c> you</c><00:11:01.630><c> do</c><00:11:01.960><c> that</c><00:11:02.110><c> by</c>

00:11:02.250 --> 00:11:02.260 align:start position:0%
reference to it and you do that by
 

00:11:02.260 --> 00:11:04.050 align:start position:0%
reference to it and you do that by
asking<00:11:02.440><c> for</c><00:11:02.680><c> this</c><00:11:02.890><c> ref</c><00:11:03.100><c> by</c><00:11:03.550><c> calling</c><00:11:03.850><c> the</c><00:11:03.910><c> ref</c>

00:11:04.050 --> 00:11:04.060 align:start position:0%
asking for this ref by calling the ref
 

00:11:04.060 --> 00:11:06.450 align:start position:0%
asking for this ref by calling the ref
method<00:11:04.390><c> this</c><00:11:05.050><c> ref</c><00:11:05.230><c> method</c><00:11:05.590><c> it</c><00:11:05.740><c> doesn't</c><00:11:06.040><c> need</c><00:11:06.280><c> a</c>

00:11:06.450 --> 00:11:06.460 align:start position:0%
method this ref method it doesn't need a
 

00:11:06.460 --> 00:11:07.890 align:start position:0%
method this ref method it doesn't need a
class<00:11:06.700><c> literal</c><00:11:07.060><c> right</c><00:11:07.270><c> well</c><00:11:07.600><c> remember</c>

00:11:07.890 --> 00:11:07.900 align:start position:0%
class literal right well remember
 

00:11:07.900 --> 00:11:08.910 align:start position:0%
class literal right well remember
ultimately<00:11:08.020><c> what</c><00:11:08.350><c> it's</c><00:11:08.440><c> going</c><00:11:08.530><c> to</c><00:11:08.590><c> do</c><00:11:08.740><c> is</c><00:11:08.830><c> is</c>

00:11:08.910 --> 00:11:08.920 align:start position:0%
ultimately what it's going to do is is
 

00:11:08.920 --> 00:11:10.290 align:start position:0%
ultimately what it's going to do is is
gonna<00:11:09.130><c> go</c><00:11:09.220><c> to</c><00:11:09.280><c> the</c><00:11:09.340><c> application</c><00:11:09.760><c> context</c><00:11:10.150><c> and</c>

00:11:10.290 --> 00:11:10.300 align:start position:0%
gonna go to the application context and
 

00:11:10.300 --> 00:11:12.210 align:start position:0%
gonna go to the application context and
say<00:11:10.720><c> give</c><00:11:10.930><c> me</c><00:11:11.020><c> a</c><00:11:11.080><c> bean</c><00:11:11.260><c> of</c><00:11:11.410><c> this</c><00:11:11.530><c> type</c><00:11:11.740><c> well</c>

00:11:12.210 --> 00:11:12.220 align:start position:0%
say give me a bean of this type well
 

00:11:12.220 --> 00:11:14.010 align:start position:0%
say give me a bean of this type well
that<00:11:12.430><c> type</c><00:11:12.820><c> is</c><00:11:12.970><c> only</c><00:11:13.120><c> you</c><00:11:13.570><c> know</c><00:11:13.660><c> we</c><00:11:13.810><c> don't</c><00:11:13.900><c> have</c>

00:11:14.010 --> 00:11:14.020 align:start position:0%
that type is only you know we don't have
 

00:11:14.020 --> 00:11:16.890 align:start position:0%
that type is only you know we don't have
a<00:11:14.500><c> class</c><00:11:14.950><c> little</c><00:11:15.250><c> hair</c><00:11:15.400><c> but</c><00:11:15.660><c> complet</c><00:11:16.660><c> has</c><00:11:16.780><c> this</c>

00:11:16.890 --> 00:11:16.900 align:start position:0%
a class little hair but complet has this
 

00:11:16.900 --> 00:11:20.700 align:start position:0%
a class little hair but complet has this
nice<00:11:17.110><c> feature</c><00:11:17.320><c> work</c><00:11:17.560><c> and</c><00:11:17.770><c> ray</c><00:11:18.220><c> of</c><00:11:18.400><c> phi</c><00:11:19.710><c> generic</c>

00:11:20.700 --> 00:11:20.710 align:start position:0%
nice feature work and ray of phi generic
 

00:11:20.710 --> 00:11:23.040 align:start position:0%
nice feature work and ray of phi generic
signatures<00:11:21.130><c> are</c><00:11:21.250><c> generic</c><00:11:21.970><c> information</c><00:11:22.450><c> for</c>

00:11:23.040 --> 00:11:23.050 align:start position:0%
signatures are generic information for
 

00:11:23.050 --> 00:11:24.900 align:start position:0%
signatures are generic information for
inline<00:11:23.530><c> methods</c><00:11:24.040><c> so</c><00:11:24.310><c> if</c><00:11:24.400><c> you</c><00:11:24.460><c> look</c><00:11:24.580><c> at</c><00:11:24.640><c> this</c><00:11:24.760><c> it</c>

00:11:24.900 --> 00:11:24.910 align:start position:0%
inline methods so if you look at this it
 

00:11:24.910 --> 00:11:29.190 align:start position:0%
inline methods so if you look at this it
says<00:11:25.030><c> inline</c><00:11:25.780><c> fun</c><00:11:26.280><c> ray</c><00:11:27.280><c> if</c><00:11:27.400><c> I'd</c><00:11:27.550><c> T</c><00:11:27.880><c> and</c><00:11:28.150><c> then</c><00:11:28.900><c> it</c>

00:11:29.190 --> 00:11:29.200 align:start position:0%
says inline fun ray if I'd T and then it
 

00:11:29.200 --> 00:11:31.170 align:start position:0%
says inline fun ray if I'd T and then it
returns<00:11:29.530><c> T</c><00:11:29.740><c> so</c><00:11:29.860><c> this</c><00:11:30.130><c> this</c><00:11:30.520><c> has</c><00:11:30.730><c> the</c><00:11:30.820><c> effect</c><00:11:30.910><c> of</c>

00:11:31.170 --> 00:11:31.180 align:start position:0%
returns T so this this has the effect of
 

00:11:31.180 --> 00:11:33.810 align:start position:0%
returns T so this this has the effect of
basically<00:11:31.870><c> capturing</c><00:11:32.500><c> the</c><00:11:33.250><c> generic</c><00:11:33.580><c> type</c>

00:11:33.810 --> 00:11:33.820 align:start position:0%
basically capturing the generic type
 

00:11:33.820 --> 00:11:35.550 align:start position:0%
basically capturing the generic type
signature<00:11:34.240><c> here</c><00:11:34.390><c> and</c><00:11:34.480><c> making</c><00:11:35.170><c> it</c><00:11:35.260><c> said</c><00:11:35.380><c> I</c><00:11:35.410><c> can</c>

00:11:35.550 --> 00:11:35.560 align:start position:0%
signature here and making it said I can
 

00:11:35.560 --> 00:11:37.440 align:start position:0%
signature here and making it said I can
talk<00:11:35.740><c> about</c><00:11:35.860><c> it</c><00:11:36.040><c> as</c><00:11:36.130><c> a</c><00:11:36.160><c> class</c><00:11:36.400><c> literal</c><00:11:36.730><c> TD</c><00:11:37.360><c> I</c>

00:11:37.440 --> 00:11:37.450 align:start position:0%
talk about it as a class literal TD I
 

00:11:37.450 --> 00:11:39.420 align:start position:0%
talk about it as a class literal TD I
can<00:11:37.660><c> t</c><00:11:38.170><c> class</c><00:11:38.470><c> Java</c><00:11:38.800><c> right</c><00:11:39.010><c> now</c><00:11:39.160><c> I'm</c><00:11:39.339><c> actually</c>

00:11:39.420 --> 00:11:39.430 align:start position:0%
can t class Java right now I'm actually
 

00:11:39.430 --> 00:11:41.480 align:start position:0%
can t class Java right now I'm actually
able<00:11:39.610><c> to</c><00:11:39.730><c> say</c><00:11:39.880><c> T</c><00:11:40.420><c> that</c><00:11:40.630><c> get</c><00:11:40.810><c> class</c><00:11:41.020><c> basically</c>

00:11:41.480 --> 00:11:41.490 align:start position:0%
able to say T that get class basically
 

00:11:41.490 --> 00:11:44.430 align:start position:0%
able to say T that get class basically
and<00:11:42.490><c> this</c><00:11:43.030><c> is</c><00:11:43.089><c> possible</c><00:11:43.570><c> because</c><00:11:43.720><c> when</c><00:11:44.320><c> it</c>

00:11:44.430 --> 00:11:44.440 align:start position:0%
and this is possible because when it
 

00:11:44.440 --> 00:11:45.090 align:start position:0%
and this is possible because when it
says<00:11:44.589><c> inlined</c>

00:11:45.090 --> 00:11:45.100 align:start position:0%
says inlined
 

00:11:45.100 --> 00:11:47.010 align:start position:0%
says inlined
what<00:11:45.730><c> it</c><00:11:45.820><c> means</c><00:11:45.970><c> is</c><00:11:46.180><c> that</c><00:11:46.210><c> this</c><00:11:46.570><c> function</c><00:11:46.750><c> has</c>

00:11:47.010 --> 00:11:47.020 align:start position:0%
what it means is that this function has
 

00:11:47.020 --> 00:11:49.320 align:start position:0%
what it means is that this function has
been<00:11:47.050><c> copied</c><00:11:47.500><c> and</c><00:11:47.650><c> pasted</c><00:11:47.950><c> into</c><00:11:48.820><c> the</c><00:11:49.120><c> call</c>

00:11:49.320 --> 00:11:49.330 align:start position:0%
been copied and pasted into the call
 

00:11:49.330 --> 00:11:51.450 align:start position:0%
been copied and pasted into the call
site<00:11:49.570><c> it's</c><00:11:49.930><c> a</c><00:11:50.020><c> macro</c><00:11:50.380><c> if</c><00:11:50.530><c> you</c><00:11:50.620><c> will</c><00:11:50.770><c> you're</c>

00:11:51.450 --> 00:11:51.460 align:start position:0%
site it's a macro if you will you're
 

00:11:51.460 --> 00:11:53.220 align:start position:0%
site it's a macro if you will you're
there's<00:11:52.270><c> no</c><00:11:52.390><c> stack</c><00:11:52.660><c> it's</c><00:11:52.870><c> actually</c><00:11:53.110><c> just</c>

00:11:53.220 --> 00:11:53.230 align:start position:0%
there's no stack it's actually just
 

00:11:53.230 --> 00:11:55.380 align:start position:0%
there's no stack it's actually just
copying<00:11:53.650><c> and</c><00:11:53.740><c> pasting</c><00:11:53.860><c> that</c><00:11:54.460><c> code</c><00:11:54.760><c> and</c><00:11:55.150><c> at</c><00:11:55.300><c> the</c>

00:11:55.380 --> 00:11:55.390 align:start position:0%
copying and pasting that code and at the
 

00:11:55.390 --> 00:11:56.820 align:start position:0%
copying and pasting that code and at the
place<00:11:55.540><c> where</c><00:11:55.720><c> you're</c><00:11:55.810><c> calling</c><00:11:56.110><c> it</c><00:11:56.230><c> and</c><00:11:56.470><c> it's</c>

00:11:56.820 --> 00:11:56.830 align:start position:0%
place where you're calling it and it's
 

00:11:56.830 --> 00:11:59.370 align:start position:0%
place where you're calling it and it's
able<00:11:56.920><c> to</c><00:11:57.040><c> capture</c><00:11:57.280><c> the</c><00:11:57.520><c> argument</c><00:11:57.880><c> as</c><00:11:58.200><c> you</c><00:11:59.200><c> have</c>

00:11:59.370 --> 00:11:59.380 align:start position:0%
able to capture the argument as you have
 

00:11:59.380 --> 00:12:01.920 align:start position:0%
able to capture the argument as you have
it<00:11:59.500><c> right</c><00:11:59.620><c> then</c><00:11:59.770><c> and</c><00:11:59.830><c> there</c><00:11:59.890><c> because</c><00:12:00.930><c> Minoo</c>

00:12:01.920 --> 00:12:01.930 align:start position:0%
it right then and there because Minoo
 

00:12:01.930 --> 00:12:03.000 align:start position:0%
it right then and there because Minoo
you're<00:12:02.110><c> not</c><00:12:02.230><c> passing</c><00:12:02.560><c> around</c><00:12:02.650><c> it's</c><00:12:02.950><c> just</c>

00:12:03.000 --> 00:12:03.010 align:start position:0%
you're not passing around it's just
 

00:12:03.010 --> 00:12:05.610 align:start position:0%
you're not passing around it's just
braid<00:12:03.250><c> that</c><00:12:03.370><c> in</c><00:12:03.490><c> there</c><00:12:03.610><c> right</c><00:12:04.260><c> it</c><00:12:05.260><c> can</c><00:12:05.440><c> capture</c>

00:12:05.610 --> 00:12:05.620 align:start position:0%
braid that in there right it can capture
 

00:12:05.620 --> 00:12:06.720 align:start position:0%
braid that in there right it can capture
that<00:12:05.770><c> and</c><00:12:05.950><c> keeps</c><00:12:06.160><c> it</c><00:12:06.280><c> on</c><00:12:06.370><c> an</c><00:12:06.490><c> implicit</c>

00:12:06.720 --> 00:12:06.730 align:start position:0%
that and keeps it on an implicit
 

00:12:06.730 --> 00:12:08.310 align:start position:0%
that and keeps it on an implicit
variable<00:12:07.420><c> that's</c><00:12:07.570><c> you</c><00:12:07.990><c> know</c>

00:12:08.310 --> 00:12:08.320 align:start position:0%
variable that's you know
 

00:12:08.320 --> 00:12:09.570 align:start position:0%
variable that's you know
from<00:12:08.530><c> your</c><00:12:08.650><c> code</c><00:12:08.980><c> you</c><00:12:09.160><c> have</c><00:12:09.190><c> to</c><00:12:09.340><c> worry</c><00:12:09.490><c> about</c>

00:12:09.570 --> 00:12:09.580 align:start position:0%
from your code you have to worry about
 

00:12:09.580 --> 00:12:12.210 align:start position:0%
from your code you have to worry about
it<00:12:10.330><c> it's</c><00:12:10.660><c> not</c><00:12:10.810><c> true</c><00:12:11.140><c> reification</c><00:12:11.470><c> but</c><00:12:12.010><c> for</c><00:12:12.130><c> our</c>

00:12:12.210 --> 00:12:12.220 align:start position:0%
it it's not true reification but for our
 

00:12:12.220 --> 00:12:13.890 align:start position:0%
it it's not true reification but for our
purposes<00:12:12.520><c> it</c><00:12:12.580><c> works</c><00:12:12.910><c> right</c><00:12:13.120><c> this</c><00:12:13.270><c> is</c><00:12:13.420><c> this</c>

00:12:13.890 --> 00:12:13.900 align:start position:0%
purposes it works right this is this
 

00:12:13.900 --> 00:12:16.380 align:start position:0%
purposes it works right this is this
this<00:12:14.560><c> ref</c><00:12:14.770><c> method</c><00:12:15.100><c> at</c><00:12:15.250><c> runtime</c><00:12:15.490><c> or</c><00:12:16.030><c> have</c><00:12:16.270><c> a</c>

00:12:16.380 --> 00:12:16.390 align:start position:0%
this ref method at runtime or have a
 

00:12:16.390 --> 00:12:18.120 align:start position:0%
this ref method at runtime or have a
pointer<00:12:16.750><c> to</c><00:12:16.780><c> the</c><00:12:17.440><c> type</c><00:12:17.650><c> that</c><00:12:17.800><c> you've</c><00:12:17.920><c> used</c>

00:12:18.120 --> 00:12:18.130 align:start position:0%
pointer to the type that you've used
 

00:12:18.130 --> 00:12:18.780 align:start position:0%
pointer to the type that you've used
here

00:12:18.780 --> 00:12:18.790 align:start position:0%
here
 

00:12:18.790 --> 00:12:20.700 align:start position:0%
here
and<00:12:19.150><c> then</c><00:12:19.300><c> we</c><00:12:19.390><c> can</c><00:12:19.540><c> use</c><00:12:19.690><c> that</c><00:12:19.720><c> to</c><00:12:19.900><c> write</c><00:12:20.530><c> some</c>

00:12:20.700 --> 00:12:20.710 align:start position:0%
and then we can use that to write some
 

00:12:20.710 --> 00:12:21.780 align:start position:0%
and then we can use that to write some
data<00:12:20.830><c> to</c><00:12:20.980><c> the</c><00:12:21.040><c> database</c><00:12:21.130><c> so</c><00:12:21.430><c> let's</c><00:12:21.550><c> do</c><00:12:21.670><c> that</c>

00:12:21.780 --> 00:12:21.790 align:start position:0%
data to the database so let's do that
 

00:12:21.790 --> 00:12:30.110 align:start position:0%
data to the database so let's do that
array<00:12:22.120><c> of</c><00:12:22.530><c> let's</c><00:12:23.530><c> see</c><00:12:23.740><c> Tammy</c><00:12:27.210><c> Mario</c><00:12:28.980><c> Andrew</c>

00:12:30.110 --> 00:12:30.120 align:start position:0%
array of let's see Tammy Mario Andrew
 

00:12:30.120 --> 00:12:34.650 align:start position:0%
array of let's see Tammy Mario Andrew
and<00:12:32.880><c> Cornelia</c><00:12:33.880><c> there</c><00:12:34.150><c> we</c><00:12:34.300><c> are</c><00:12:34.330><c> okay</c><00:12:34.540><c> so</c>

00:12:34.650 --> 00:12:34.660 align:start position:0%
and Cornelia there we are okay so
 

00:12:34.660 --> 00:12:36.600 align:start position:0%
and Cornelia there we are okay so
there's<00:12:35.410><c> that</c><00:12:35.530><c> and</c><00:12:35.890><c> I'm</c><00:12:35.980><c> going</c><00:12:36.070><c> to</c><00:12:36.130><c> visit</c><00:12:36.340><c> each</c>

00:12:36.600 --> 00:12:36.610 align:start position:0%
there's that and I'm going to visit each
 

00:12:36.610 --> 00:12:39.150 align:start position:0%
there's that and I'm going to visit each
one<00:12:36.910><c> I'm</c><00:12:37.780><c> going</c><00:12:37.900><c> to</c><00:12:37.960><c> map</c><00:12:38.200><c> each</c><00:12:38.350><c> one</c><00:12:38.560><c> I</c><00:12:38.590><c> suppose</c>

00:12:39.150 --> 00:12:39.160 align:start position:0%
one I'm going to map each one I suppose
 

00:12:39.160 --> 00:12:41.100 align:start position:0%
one I'm going to map each one I suppose
so<00:12:39.460><c> we'll</c><00:12:39.580><c> say</c><00:12:39.730><c> map</c><00:12:39.970><c> each</c><00:12:40.150><c> one</c><00:12:40.360><c> to</c><00:12:40.540><c> a</c><00:12:40.570><c> customer</c>

00:12:41.100 --> 00:12:41.110 align:start position:0%
so we'll say map each one to a customer
 

00:12:41.110 --> 00:12:44.220 align:start position:0%
so we'll say map each one to a customer
whose<00:12:41.800><c> name</c><00:12:42.100><c> is</c><00:12:42.310><c> equal</c><00:12:42.610><c> to</c><00:12:42.760><c> it</c><00:12:42.940><c> and</c><00:12:43.270><c> then</c><00:12:44.050><c> win</c>

00:12:44.220 --> 00:12:44.230 align:start position:0%
whose name is equal to it and then win
 

00:12:44.230 --> 00:12:46.500 align:start position:0%
whose name is equal to it and then win
us<00:12:44.350><c> for</c><00:12:45.190><c> each</c><00:12:45.280><c> one</c><00:12:45.400><c> of</c><00:12:45.490><c> those</c><00:12:45.580><c> will</c><00:12:45.820><c> say</c><00:12:46.360><c> that</c>

00:12:46.500 --> 00:12:46.510 align:start position:0%
us for each one of those will say that
 

00:12:46.510 --> 00:12:49.530 align:start position:0%
us for each one of those will say that
the<00:12:46.600><c> name</c><00:12:46.750><c> a</c><00:12:46.870><c> so</c><00:12:47.020><c> we'll</c><00:12:47.140><c> say</c><00:12:48.120><c> customer</c><00:12:49.120><c> service</c>

00:12:49.530 --> 00:12:49.540 align:start position:0%
the name a so we'll say customer service
 

00:12:49.540 --> 00:12:54.540 align:start position:0%
the name a so we'll say customer service
dot<00:12:50.460><c> insert</c><00:12:51.690><c> it</c><00:12:53.040><c> alright</c><00:12:54.040><c> so</c><00:12:54.070><c> there's</c><00:12:54.430><c> our</c>

00:12:54.540 --> 00:12:54.550 align:start position:0%
dot insert it alright so there's our
 

00:12:54.550 --> 00:12:56.040 align:start position:0%
dot insert it alright so there's our
records<00:12:55.210><c> and</c><00:12:55.330><c> I</c><00:12:55.360><c> want</c><00:12:55.510><c> to</c><00:12:55.570><c> say</c><00:12:55.660><c> customer</c>

00:12:56.040 --> 00:12:56.050 align:start position:0%
records and I want to say customer
 

00:12:56.050 --> 00:13:00.360 align:start position:0%
records and I want to say customer
service<00:12:56.350><c> dot</c><00:12:56.500><c> all</c><00:12:56.860><c> done</c><00:12:57.550><c> for</c><00:12:57.850><c> each</c><00:12:58.090><c> and</c><00:12:59.370><c> print</c>

00:13:00.360 --> 00:13:00.370 align:start position:0%
service dot all done for each and print
 

00:13:00.370 --> 00:13:03.870 align:start position:0%
service dot all done for each and print
out<00:13:00.490><c> the</c><00:13:00.520><c> results</c><00:13:01.170><c> here</c><00:13:02.170><c> we</c><00:13:02.230><c> are</c><00:13:02.550><c> ok</c><00:13:03.550><c> so</c><00:13:03.700><c> I</c>

00:13:03.870 --> 00:13:03.880 align:start position:0%
out the results here we are ok so I
 

00:13:03.880 --> 00:13:17.900 align:start position:0%
out the results here we are ok so I
would<00:13:03.940><c> run</c><00:13:04.180><c> that</c><00:13:05.520><c> let's</c><00:13:06.520><c> see</c><00:13:06.700><c> what</c><00:13:06.850><c> we</c><00:13:06.910><c> get</c>

00:13:17.900 --> 00:13:17.910 align:start position:0%
 
 

00:13:17.910 --> 00:13:21.410 align:start position:0%
 
you<00:13:18.510><c> can</c><00:13:18.660><c> see</c><00:13:18.780><c> the</c><00:13:18.900><c> compiler</c><00:13:19.290><c> is</c><00:13:20.360><c> telling</c><00:13:21.360><c> us</c>

00:13:21.410 --> 00:13:21.420 align:start position:0%
you can see the compiler is telling us
 

00:13:21.420 --> 00:13:23.990 align:start position:0%
you can see the compiler is telling us
in<00:13:21.570><c> a</c><00:13:21.630><c> few</c><00:13:21.780><c> cases</c><00:13:21.900><c> where</c><00:13:22.140><c> these</c><00:13:22.890><c> AI</c><00:13:23.160><c> arguments</c>

00:13:23.990 --> 00:13:24.000 align:start position:0%
in a few cases where these AI arguments
 

00:13:24.000 --> 00:13:25.640 align:start position:0%
in a few cases where these AI arguments
are<00:13:24.150><c> never</c><00:13:24.540><c> used</c><00:13:24.750><c> and</c><00:13:25.050><c> it</c><00:13:25.140><c> could</c><00:13:25.290><c> be</c><00:13:25.380><c> renamed</c>

00:13:25.640 --> 00:13:25.650 align:start position:0%
are never used and it could be renamed
 

00:13:25.650 --> 00:13:27.050 align:start position:0%
are never used and it could be renamed
to<00:13:25.920><c> just</c><00:13:26.100><c> underscore</c><00:13:26.430><c> to</c><00:13:26.640><c> signify</c><00:13:26.940><c> that</c>

00:13:27.050 --> 00:13:27.060 align:start position:0%
to just underscore to signify that
 

00:13:27.060 --> 00:13:29.690 align:start position:0%
to just underscore to signify that
though<00:13:28.050><c> we</c><00:13:28.290><c> need</c><00:13:28.470><c> to</c><00:13:28.710><c> satisfy</c><00:13:28.950><c> that</c><00:13:29.160><c> parameter</c>

00:13:29.690 --> 00:13:29.700 align:start position:0%
though we need to satisfy that parameter
 

00:13:29.700 --> 00:13:31.190 align:start position:0%
though we need to satisfy that parameter
for<00:13:29.850><c> the</c><00:13:29.940><c> the</c><00:13:30.540><c> constructor</c><00:13:30.990><c> for</c><00:13:31.020><c> the</c>

00:13:31.190 --> 00:13:31.200 align:start position:0%
for the the constructor for the
 

00:13:31.200 --> 00:13:33.170 align:start position:0%
for the the constructor for the
interface<00:13:31.590><c> they're</c><00:13:32.550><c> useless</c><00:13:32.760><c> we</c><00:13:33.000><c> don't</c><00:13:33.120><c> need</c>

00:13:33.170 --> 00:13:33.180 align:start position:0%
interface they're useless we don't need
 

00:13:33.180 --> 00:13:34.550 align:start position:0%
interface they're useless we don't need
them<00:13:33.360><c> don't</c><00:13:33.630><c> worry</c><00:13:33.780><c> about</c><00:13:33.870><c> them</c><00:13:34.020><c> don't</c><00:13:34.200><c> don't</c>

00:13:34.550 --> 00:13:34.560 align:start position:0%
them don't worry about them don't don't
 

00:13:34.560 --> 00:13:36.290 align:start position:0%
them don't worry about them don't don't
waste<00:13:34.710><c> cognitive</c><00:13:35.130><c> effort</c><00:13:35.280><c> cognitive</c><00:13:36.210><c> effort</c>

00:13:36.290 --> 00:13:36.300 align:start position:0%
waste cognitive effort cognitive effort
 

00:13:36.300 --> 00:13:38.270 align:start position:0%
waste cognitive effort cognitive effort
trying<00:13:36.570><c> to</c><00:13:36.690><c> feel</c><00:13:36.780><c> what</c><00:13:36.960><c> they</c><00:13:37.020><c> do</c><00:13:37.080><c> all</c><00:13:37.920><c> right</c><00:13:37.980><c> so</c>

00:13:38.270 --> 00:13:38.280 align:start position:0%
trying to feel what they do all right so
 

00:13:38.280 --> 00:13:40.760 align:start position:0%
trying to feel what they do all right so
there's<00:13:38.460><c> the</c><00:13:39.110><c> results</c><00:13:40.110><c> on</c><00:13:40.170><c> the</c><00:13:40.260><c> database</c><00:13:40.560><c> on</c>

00:13:40.760 --> 00:13:40.770 align:start position:0%
there's the results on the database on
 

00:13:40.770 --> 00:13:42.650 align:start position:0%
there's the results on the database on
the<00:13:40.860><c> console</c><00:13:41.190><c> that</c><00:13:41.310><c> seems</c><00:13:41.580><c> to</c><00:13:41.730><c> work</c><00:13:41.850><c> seems</c><00:13:42.570><c> to</c>

00:13:42.650 --> 00:13:42.660 align:start position:0%
the console that seems to work seems to
 

00:13:42.660 --> 00:13:45.050 align:start position:0%
the console that seems to work seems to
have<00:13:42.750><c> worked</c><00:13:42.870><c> and</c><00:13:43.670><c> you</c><00:13:44.670><c> know</c><00:13:44.760><c> that's</c><00:13:44.940><c> not</c>

00:13:45.050 --> 00:13:45.060 align:start position:0%
have worked and you know that's not
 

00:13:45.060 --> 00:13:46.880 align:start position:0%
have worked and you know that's not
surprising<00:13:45.180><c> this</c><00:13:45.540><c> is</c><00:13:45.660><c> a</c><00:13:45.690><c> very</c><00:13:45.930><c> simple</c><00:13:46.680><c> code</c>

00:13:46.880 --> 00:13:46.890 align:start position:0%
surprising this is a very simple code
 

00:13:46.890 --> 00:13:49.550 align:start position:0%
surprising this is a very simple code
and<00:13:47.130><c> we</c><00:13:47.580><c> can</c><00:13:48.150><c> pretty</c><00:13:48.420><c> easily</c><00:13:48.510><c> sort</c><00:13:49.320><c> of</c><00:13:49.380><c> guess</c>

00:13:49.550 --> 00:13:49.560 align:start position:0%
and we can pretty easily sort of guess
 

00:13:49.560 --> 00:13:52.160 align:start position:0%
and we can pretty easily sort of guess
that<00:13:49.770><c> what</c><00:13:49.920><c> the</c><00:13:50.010><c> queries</c><00:13:50.280><c> are</c><00:13:50.310><c> gonna</c><00:13:50.490><c> be</c><00:13:51.110><c> if</c><00:13:52.110><c> we</c>

00:13:52.160 --> 00:13:52.170 align:start position:0%
that what the queries are gonna be if we
 

00:13:52.170 --> 00:13:53.450 align:start position:0%
that what the queries are gonna be if we
had<00:13:52.380><c> something</c><00:13:52.620><c> more</c><00:13:52.710><c> sophisticated</c><00:13:53.280><c> we</c>

00:13:53.450 --> 00:13:53.460 align:start position:0%
had something more sophisticated we
 

00:13:53.460 --> 00:13:56.060 align:start position:0%
had something more sophisticated we
might<00:13:53.910><c> want</c><00:13:54.090><c> to</c><00:13:54.180><c> do</c><00:13:54.990><c> something</c><00:13:55.290><c> that</c><00:13:55.470><c> makes</c>

00:13:56.060 --> 00:13:56.070 align:start position:0%
might want to do something that makes
 

00:13:56.070 --> 00:14:00.650 align:start position:0%
might want to do something that makes
getting<00:13:56.550><c> the</c><00:13:57.450><c> right</c><00:13:57.660><c> result</c><00:13:58.050><c> easier</c><00:13:59.660><c> type</c>

00:14:00.650 --> 00:14:00.660 align:start position:0%
getting the right result easier type
 

00:14:00.660 --> 00:14:03.410 align:start position:0%
getting the right result easier type
safety<00:14:01.160><c> can</c><00:14:02.160><c> be</c><00:14:02.280><c> very</c><00:14:02.460><c> valuable</c><00:14:02.580><c> here</c><00:14:03.000><c> and</c><00:14:03.240><c> so</c>

00:14:03.410 --> 00:14:03.420 align:start position:0%
safety can be very valuable here and so
 

00:14:03.420 --> 00:14:04.790 align:start position:0%
safety can be very valuable here and so
we<00:14:03.540><c> can</c><00:14:03.660><c> use</c><00:14:03.750><c> a</c><00:14:03.780><c> third-party</c><00:14:04.410><c> library</c><00:14:04.530><c> a</c>

00:14:04.790 --> 00:14:04.800 align:start position:0%
we can use a third-party library a
 

00:14:04.800 --> 00:14:06.770 align:start position:0%
we can use a third-party library a
common<00:14:05.190><c> library</c><00:14:05.490><c> from</c><00:14:06.120><c> JetBrains</c><00:14:06.540><c> The</c>

00:14:06.770 --> 00:14:06.780 align:start position:0%
common library from JetBrains The
 

00:14:06.780 --> 00:14:10.280 align:start position:0%
common library from JetBrains The
Pretenders<00:14:07.620><c> of</c><00:14:07.860><c> Colin</c><00:14:08.340><c> called</c><00:14:09.090><c> exposed</c><00:14:09.870><c> it's</c>

00:14:10.280 --> 00:14:10.290 align:start position:0%
Pretenders of Colin called exposed it's
 

00:14:10.290 --> 00:14:12.170 align:start position:0%
Pretenders of Colin called exposed it's
a<00:14:10.350><c> norm</c><00:14:10.590><c> framework</c><00:14:11.130><c> that</c><00:14:11.610><c> also</c><00:14:11.820><c> works</c><00:14:12.120><c> very</c>

00:14:12.170 --> 00:14:12.180 align:start position:0%
a norm framework that also works very
 

00:14:12.180 --> 00:14:13.610 align:start position:0%
a norm framework that also works very
nicely<00:14:12.450><c> with</c><00:14:12.690><c> spring</c><00:14:12.960><c> so</c><00:14:13.110><c> let's</c><00:14:13.260><c> do</c><00:14:13.470><c> that</c>

00:14:13.610 --> 00:14:13.620 align:start position:0%
nicely with spring so let's do that
 

00:14:13.620 --> 00:14:14.380 align:start position:0%
nicely with spring so let's do that
instead

00:14:14.380 --> 00:14:14.390 align:start position:0%
instead
 

00:14:14.390 --> 00:14:18.320 align:start position:0%
instead
well<00:14:15.390><c> use</c><00:14:15.540><c> exposed</c><00:14:16.700><c> and</c><00:14:17.700><c> I'll</c><00:14:17.790><c> copy</c><00:14:18.000><c> and</c><00:14:18.180><c> paste</c>

00:14:18.320 --> 00:14:18.330 align:start position:0%
well use exposed and I'll copy and paste
 

00:14:18.330 --> 00:14:22.300 align:start position:0%
well use exposed and I'll copy and paste
this<00:14:18.510><c> and</c><00:14:18.830><c> we</c><00:14:19.830><c> use</c><00:14:19.980><c> a</c><00:14:20.370><c> spring</c><00:14:20.940><c> transaction</c><00:14:21.690><c> and</c>

00:14:22.300 --> 00:14:22.310 align:start position:0%
this and we use a spring transaction and
 

00:14:22.310 --> 00:14:26.210 align:start position:0%
this and we use a spring transaction and
exposed<00:14:23.310><c> needs</c><00:14:24.270><c> a</c><00:14:24.540><c> well</c><00:14:25.500><c> first</c><00:14:25.650><c> let's</c><00:14:25.890><c> comment</c>

00:14:26.210 --> 00:14:26.220 align:start position:0%
exposed needs a well first let's comment
 

00:14:26.220 --> 00:14:28.490 align:start position:0%
exposed needs a well first let's comment
this<00:14:26.370><c> out</c><00:14:26.550><c> and</c><00:14:26.880><c> exposed</c><00:14:27.870><c> in</c><00:14:28.020><c> order</c><00:14:28.230><c> to</c><00:14:28.320><c> do</c><00:14:28.380><c> its</c>

00:14:28.490 --> 00:14:28.500 align:start position:0%
this out and exposed in order to do its
 

00:14:28.500 --> 00:14:30.050 align:start position:0%
this out and exposed in order to do its
work<00:14:28.620><c> it</c><00:14:28.770><c> needs</c><00:14:28.950><c> schema</c><00:14:29.550><c> we've</c><00:14:29.730><c> already</c><00:14:29.850><c> got</c><00:14:30.030><c> a</c>

00:14:30.050 --> 00:14:30.060 align:start position:0%
work it needs schema we've already got a
 

00:14:30.060 --> 00:14:32.090 align:start position:0%
work it needs schema we've already got a
schema<00:14:30.360><c> file</c><00:14:30.600><c> but</c><00:14:30.780><c> let's</c><00:14:30.930><c> rename</c><00:14:31.620><c> this</c><00:14:31.680><c> to</c><00:14:32.010><c> be</c>

00:14:32.090 --> 00:14:32.100 align:start position:0%
schema file but let's rename this to be
 

00:14:32.100 --> 00:14:36.320 align:start position:0%
schema file but let's rename this to be
schema.org<00:14:32.730><c> okay</c><00:14:33.630><c> and</c><00:14:34.040><c> then</c><00:14:35.040><c> in</c><00:14:35.250><c> the</c><00:14:35.970><c> schema</c>

00:14:36.320 --> 00:14:36.330 align:start position:0%
schema.org okay and then in the schema
 

00:14:36.330 --> 00:14:39.260 align:start position:0%
schema.org okay and then in the schema
definition<00:14:36.770><c> or</c><00:14:37.770><c> for</c><00:14:38.610><c> us</c><00:14:38.730><c> to</c><00:14:38.880><c> provide</c><00:14:39.150><c> the</c>

00:14:39.260 --> 00:14:39.270 align:start position:0%
definition or for us to provide the
 

00:14:39.270 --> 00:14:41.600 align:start position:0%
definition or for us to provide the
schema<00:14:39.480><c> definition</c><00:14:39.570><c> we</c><00:14:40.410><c> have</c><00:14:40.980><c> to</c><00:14:41.160><c> provide</c><00:14:41.400><c> an</c>

00:14:41.600 --> 00:14:41.610 align:start position:0%
schema definition we have to provide an
 

00:14:41.610 --> 00:14:46.220 align:start position:0%
schema definition we have to provide an
object<00:14:42.560><c> customers</c><00:14:43.560><c> that</c><00:14:43.800><c> extends</c><00:14:44.340><c> table</c><00:14:45.230><c> now</c>

00:14:46.220 --> 00:14:46.230 align:start position:0%
object customers that extends table now
 

00:14:46.230 --> 00:14:49.280 align:start position:0%
object customers that extends table now
this<00:14:46.380><c> syntax</c><00:14:46.710><c> in</c><00:14:47.520><c> in</c><00:14:47.820><c> in</c><00:14:48.090><c> Kotlin</c><00:14:48.480><c> it's</c><00:14:48.960><c> very</c>

00:14:49.280 --> 00:14:49.290 align:start position:0%
this syntax in in in Kotlin it's very
 

00:14:49.290 --> 00:14:51.290 align:start position:0%
this syntax in in in Kotlin it's very
hard<00:14:49.500><c> to</c><00:14:49.560><c> have</c><00:14:49.680><c> static</c><00:14:50.070><c> fields</c><00:14:50.820><c> or</c><00:14:50.940><c> methods</c><00:14:51.210><c> in</c>

00:14:51.290 --> 00:14:51.300 align:start position:0%
hard to have static fields or methods in
 

00:14:51.300 --> 00:14:52.760 align:start position:0%
hard to have static fields or methods in
a<00:14:51.360><c> class</c><00:14:51.570><c> you</c><00:14:52.110><c> have</c><00:14:52.230><c> to</c><00:14:52.320><c> create</c><00:14:52.440><c> a</c><00:14:52.500><c> separate</c>

00:14:52.760 --> 00:14:52.770 align:start position:0%
a class you have to create a separate
 

00:14:52.770 --> 00:14:54.950 align:start position:0%
a class you have to create a separate
object<00:14:52.920><c> a</c><00:14:53.190><c> singleton</c><00:14:53.670><c> object</c><00:14:54.090><c> and</c><00:14:54.570><c> you</c><00:14:54.930><c> can</c>

00:14:54.950 --> 00:14:54.960 align:start position:0%
object a singleton object and you can
 

00:14:54.960 --> 00:14:56.540 align:start position:0%
object a singleton object and you can
store<00:14:55.230><c> things</c><00:14:55.410><c> in</c><00:14:55.590><c> there</c><00:14:55.800><c> so</c><00:14:56.340><c> this</c><00:14:56.490><c> is</c>

00:14:56.540 --> 00:14:56.550 align:start position:0%
store things in there so this is
 

00:14:56.550 --> 00:14:58.670 align:start position:0%
store things in there so this is
separate<00:14:57.030><c> this</c><00:14:57.210><c> is</c><00:14:57.390><c> a</c><00:14:57.420><c> separate</c><00:14:57.750><c> construct</c><00:14:58.560><c> in</c>

00:14:58.670 --> 00:14:58.680 align:start position:0%
separate this is a separate construct in
 

00:14:58.680 --> 00:15:00.800 align:start position:0%
separate this is a separate construct in
a<00:14:58.740><c> class</c><00:14:58.950><c> it's</c><00:14:59.250><c> a</c><00:14:59.370><c> single</c><00:14:59.700><c> class</c><00:14:59.910><c> that</c><00:15:00.690><c> has</c>

00:15:00.800 --> 00:15:00.810 align:start position:0%
a class it's a single class that has
 

00:15:00.810 --> 00:15:01.880 align:start position:0%
a class it's a single class that has
functions<00:15:01.200><c> that</c><00:15:01.320><c> live</c><00:15:01.470><c> in</c><00:15:01.560><c> a</c><00:15:01.590><c> single</c>

00:15:01.880 --> 00:15:01.890 align:start position:0%
functions that live in a single
 

00:15:01.890 --> 00:15:04.010 align:start position:0%
functions that live in a single
namespace<00:15:02.400><c> two</c><00:15:02.580><c> thing</c><00:15:02.760><c> like</c><00:15:03.450><c> static</c><00:15:03.720><c> methods</c>

00:15:04.010 --> 00:15:04.020 align:start position:0%
namespace two thing like static methods
 

00:15:04.020 --> 00:15:06.560 align:start position:0%
namespace two thing like static methods
in<00:15:04.110><c> Java</c><00:15:04.410><c> and</c><00:15:05.160><c> here</c><00:15:05.550><c> we're</c><00:15:05.940><c> gonna</c><00:15:06.030><c> define</c><00:15:06.270><c> our</c>

00:15:06.560 --> 00:15:06.570 align:start position:0%
in Java and here we're gonna define our
 

00:15:06.570 --> 00:15:07.730 align:start position:0%
in Java and here we're gonna define our
detail<00:15:06.960><c> if</c><00:15:07.110><c> we're</c><00:15:07.200><c> gonna</c><00:15:07.290><c> say</c><00:15:07.440><c> that</c><00:15:07.470><c> there's</c>

00:15:07.730 --> 00:15:07.740 align:start position:0%
detail if we're gonna say that there's
 

00:15:07.740 --> 00:15:09.710 align:start position:0%
detail if we're gonna say that there's
gonna<00:15:07.860><c> be</c><00:15:07.980><c> a</c><00:15:08.010><c> field</c><00:15:08.190><c> called</c><00:15:08.430><c> ID</c><00:15:08.640><c> that</c><00:15:09.570><c> is</c><00:15:09.690><c> a</c>

00:15:09.710 --> 00:15:09.720 align:start position:0%
gonna be a field called ID that is a
 

00:15:09.720 --> 00:15:12.680 align:start position:0%
gonna be a field called ID that is a
long<00:15:09.990><c> field</c><00:15:10.950><c> called</c><00:15:11.430><c> ID</c><00:15:11.580><c> it's</c><00:15:12.210><c> gonna</c><00:15:12.300><c> be</c><00:15:12.480><c> auto</c>

00:15:12.680 --> 00:15:12.690 align:start position:0%
long field called ID it's gonna be auto
 

00:15:12.690 --> 00:15:13.970 align:start position:0%
long field called ID it's gonna be auto
incrementing<00:15:13.170><c> and</c><00:15:13.440><c> it'll</c><00:15:13.620><c> be</c><00:15:13.680><c> the</c><00:15:13.770><c> primary</c>

00:15:13.970 --> 00:15:13.980 align:start position:0%
incrementing and it'll be the primary
 

00:15:13.980 --> 00:15:16.280 align:start position:0%
incrementing and it'll be the primary
key<00:15:14.340><c> we're</c><00:15:15.060><c> gonna</c><00:15:15.210><c> have</c><00:15:15.330><c> a</c><00:15:15.360><c> named</c><00:15:15.630><c> field</c><00:15:16.050><c> it's</c>

00:15:16.280 --> 00:15:16.290 align:start position:0%
key we're gonna have a named field it's
 

00:15:16.290 --> 00:15:20.000 align:start position:0%
key we're gonna have a named field it's
gonna<00:15:16.380><c> be</c><00:15:16.530><c> var</c><00:15:16.770><c> car</c><00:15:17.390><c> name</c><00:15:18.740><c> and</c><00:15:19.740><c> that's</c><00:15:19.890><c> it</c>

00:15:20.000 --> 00:15:20.010 align:start position:0%
gonna be var car name and that's it
 

00:15:20.010 --> 00:15:22.130 align:start position:0%
gonna be var car name and that's it
that's<00:15:20.280><c> our</c><00:15:20.430><c> definition</c><00:15:20.670><c> that's</c><00:15:21.090><c> our</c><00:15:21.180><c> DDL</c><00:15:21.510><c> now</c>

00:15:22.130 --> 00:15:22.140 align:start position:0%
that's our definition that's our DDL now
 

00:15:22.140 --> 00:15:26.330 align:start position:0%
that's our definition that's our DDL now
I<00:15:22.440><c> want</c><00:15:22.770><c> to</c><00:15:22.800><c> create</c><00:15:23.010><c> an</c><00:15:23.130><c> exposed</c><00:15:25.340><c> customer</c>

00:15:26.330 --> 00:15:26.340 align:start position:0%
I want to create an exposed customer
 

00:15:26.340 --> 00:15:28.330 align:start position:0%
I want to create an exposed customer
service

00:15:28.330 --> 00:15:28.340 align:start position:0%
service
 

00:15:28.340 --> 00:15:31.940 align:start position:0%
service
and<00:15:29.340><c> it's</c><00:15:29.520><c> going</c><00:15:29.730><c> to</c><00:15:30.290><c> implement</c><00:15:31.290><c> the</c><00:15:31.530><c> customer</c>

00:15:31.940 --> 00:15:31.950 align:start position:0%
and it's going to implement the customer
 

00:15:31.950 --> 00:15:37.750 align:start position:0%
and it's going to implement the customer
service<00:15:32.250><c> contract</c><00:15:34.550><c> all</c><00:15:35.550><c> right</c>

00:15:37.750 --> 00:15:37.760 align:start position:0%
service contract all right
 

00:15:37.760 --> 00:15:44.480 align:start position:0%
service contract all right
there's<00:15:38.760><c> this</c><00:15:41.630><c> very</c><00:15:42.630><c> good</c><00:15:42.840><c> okay</c><00:15:43.350><c> now</c><00:15:43.530><c> this</c><00:15:44.430><c> is</c>

00:15:44.480 --> 00:15:44.490 align:start position:0%
there's this very good okay now this is
 

00:15:44.490 --> 00:15:46.700 align:start position:0%
there's this very good okay now this is
a<00:15:44.610><c> spring</c><00:15:44.940><c> beam</c><00:15:45.120><c> as</c><00:15:45.270><c> before</c><00:15:45.660><c> and</c><00:15:46.020><c> it's</c><00:15:46.590><c> gonna</c>

00:15:46.700 --> 00:15:46.710 align:start position:0%
a spring beam as before and it's gonna
 

00:15:46.710 --> 00:15:49.700 align:start position:0%
a spring beam as before and it's gonna
be<00:15:46.830><c> ad</c><00:15:46.920><c> transactional</c><00:15:47.550><c> as</c><00:15:47.610><c> before</c><00:15:48.020><c> and</c><00:15:49.020><c> in</c>

00:15:49.700 --> 00:15:49.710 align:start position:0%
be ad transactional as before and in
 

00:15:49.710 --> 00:15:51.740 align:start position:0%
be ad transactional as before and in
order<00:15:49.920><c> for</c><00:15:50.010><c> us</c><00:15:50.040><c> to</c><00:15:50.100><c> create</c><00:15:50.340><c> that</c><00:15:50.460><c> DDL</c><00:15:50.880><c> we</c><00:15:51.600><c> need</c>

00:15:51.740 --> 00:15:51.750 align:start position:0%
order for us to create that DDL we need
 

00:15:51.750 --> 00:15:53.600 align:start position:0%
order for us to create that DDL we need
to<00:15:51.840><c> have</c><00:15:52.020><c> a</c><00:15:52.260><c> life</c><00:15:52.800><c> cycle</c><00:15:52.950><c> call</c><00:15:53.250><c> back</c><00:15:53.400><c> we're</c>

00:15:53.600 --> 00:15:53.610 align:start position:0%
to have a life cycle call back we're
 

00:15:53.610 --> 00:15:55.160 align:start position:0%
to have a life cycle call back we're
gonna<00:15:53.730><c> tell</c><00:15:53.940><c> spring</c><00:15:54.300><c> to</c><00:15:54.480><c> call</c><00:15:54.690><c> this</c><00:15:54.870><c> an</c><00:15:55.020><c> it</c>

00:15:55.160 --> 00:15:55.170 align:start position:0%
gonna tell spring to call this an it
 

00:15:55.170 --> 00:15:56.930 align:start position:0%
gonna tell spring to call this an it
method<00:15:55.500><c> when</c><00:15:56.010><c> the</c><00:15:56.040><c> application</c><00:15:56.460><c> starts</c><00:15:56.520><c> up</c><00:15:56.790><c> in</c>

00:15:56.930 --> 00:15:56.940 align:start position:0%
method when the application starts up in
 

00:15:56.940 --> 00:15:58.730 align:start position:0%
method when the application starts up in
there<00:15:57.090><c> and</c><00:15:57.180><c> we're</c><00:15:57.300><c> gonna</c><00:15:57.360><c> call</c><00:15:57.600><c> schema</c><00:15:58.440><c> util</c>

00:15:58.730 --> 00:15:58.740 align:start position:0%
there and we're gonna call schema util
 

00:15:58.740 --> 00:16:02.810 align:start position:0%
there and we're gonna call schema util
dot<00:15:58.770><c> create</c><00:15:59.510><c> customers</c><00:16:01.280><c> this</c><00:16:02.280><c> has</c><00:16:02.490><c> to</c><00:16:02.670><c> happen</c>

00:16:02.810 --> 00:16:02.820 align:start position:0%
dot create customers this has to happen
 

00:16:02.820 --> 00:16:04.790 align:start position:0%
dot create customers this has to happen
within<00:16:03.150><c> a</c><00:16:03.270><c> transactional</c><00:16:03.750><c> boundary</c><00:16:04.170><c> so</c><00:16:04.560><c> even</c>

00:16:04.790 --> 00:16:04.800 align:start position:0%
within a transactional boundary so even
 

00:16:04.800 --> 00:16:06.830 align:start position:0%
within a transactional boundary so even
though<00:16:04.860><c> we've</c><00:16:04.980><c> got</c><00:16:05.100><c> add</c><00:16:05.280><c> transactional</c><00:16:05.910><c> the</c>

00:16:06.830 --> 00:16:06.840 align:start position:0%
though we've got add transactional the
 

00:16:06.840 --> 00:16:09.290 align:start position:0%
though we've got add transactional the
content<00:16:07.620><c> of</c><00:16:07.770><c> this</c><00:16:07.890><c> method</c><00:16:08.610><c> that</c><00:16:08.640><c> what</c><00:16:09.030><c> happens</c>

00:16:09.290 --> 00:16:09.300 align:start position:0%
content of this method that what happens
 

00:16:09.300 --> 00:16:10.640 align:start position:0%
content of this method that what happens
in<00:16:09.420><c> here</c><00:16:09.570><c> isn't</c><00:16:09.870><c> gonna</c><00:16:09.990><c> be</c><00:16:10.110><c> transactional</c><00:16:10.530><c> by</c>

00:16:10.640 --> 00:16:10.650 align:start position:0%
in here isn't gonna be transactional by
 

00:16:10.650 --> 00:16:12.500 align:start position:0%
in here isn't gonna be transactional by
default<00:16:10.920><c> that</c><00:16:11.370><c> happens</c><00:16:11.730><c> after</c><00:16:12.060><c> this</c><00:16:12.210><c> method</c>

00:16:12.500 --> 00:16:12.510 align:start position:0%
default that happens after this method
 

00:16:12.510 --> 00:16:14.240 align:start position:0%
default that happens after this method
is<00:16:12.600><c> called</c><00:16:12.780><c> so</c><00:16:13.050><c> we</c><00:16:13.470><c> need</c><00:16:13.620><c> to</c><00:16:13.710><c> wrap</c><00:16:13.860><c> this</c><00:16:13.890><c> in</c><00:16:14.100><c> a</c>

00:16:14.240 --> 00:16:14.250 align:start position:0%
is called so we need to wrap this in a
 

00:16:14.250 --> 00:16:15.680 align:start position:0%
is called so we need to wrap this in a
transactional<00:16:14.670><c> boundary</c><00:16:15.060><c> and</c><00:16:15.240><c> what</c><00:16:15.630><c> I'm</c>

00:16:15.680 --> 00:16:15.690 align:start position:0%
transactional boundary and what I'm
 

00:16:15.690 --> 00:16:17.740 align:start position:0%
transactional boundary and what I'm
gonna<00:16:15.780><c> do</c><00:16:15.960><c> that</c><00:16:16.080><c> is</c><00:16:16.170><c> to</c><00:16:16.320><c> use</c><00:16:16.470><c> a</c><00:16:16.500><c> private</c><00:16:17.310><c> val</c>

00:16:17.740 --> 00:16:17.750 align:start position:0%
gonna do that is to use a private val
 

00:16:17.750 --> 00:16:20.030 align:start position:0%
gonna do that is to use a private val
transaction<00:16:18.750><c> template</c><00:16:19.320><c> alright</c><00:16:19.980><c> a</c>

00:16:20.030 --> 00:16:20.040 align:start position:0%
transaction template alright a
 

00:16:20.040 --> 00:16:23.030 align:start position:0%
transaction template alright a
transaction<00:16:20.610><c> template</c><00:16:20.910><c> from</c><00:16:21.360><c> spring</c><00:16:21.830><c> is</c><00:16:22.830><c> a</c>

00:16:23.030 --> 00:16:23.040 align:start position:0%
transaction template from spring is a
 

00:16:23.040 --> 00:16:25.490 align:start position:0%
transaction template from spring is a
object<00:16:23.940><c> spinning</c><00:16:24.240><c> spring</c><00:16:24.450><c> for</c><00:16:24.660><c> more</c><00:16:25.350><c> than</c><00:16:25.470><c> a</c>

00:16:25.490 --> 00:16:25.500 align:start position:0%
object spinning spring for more than a
 

00:16:25.500 --> 00:16:27.140 align:start position:0%
object spinning spring for more than a
decade<00:16:25.650><c> it's</c><00:16:25.980><c> a</c><00:16:26.070><c> wrapper</c><00:16:26.670><c> around</c><00:16:26.940><c> the</c>

00:16:27.140 --> 00:16:27.150 align:start position:0%
decade it's a wrapper around the
 

00:16:27.150 --> 00:16:28.910 align:start position:0%
decade it's a wrapper around the
platform<00:16:27.390><c> content</c><00:16:27.930><c> and</c><00:16:28.140><c> transaction</c><00:16:28.560><c> manager</c>

00:16:28.910 --> 00:16:28.920 align:start position:0%
platform content and transaction manager
 

00:16:28.920 --> 00:16:31.910 align:start position:0%
platform content and transaction manager
abstraction<00:16:29.790><c> and</c><00:16:29.970><c> for</c><00:16:30.750><c> our</c><00:16:30.840><c> purposes</c><00:16:31.230><c> allows</c>

00:16:31.910 --> 00:16:31.920 align:start position:0%
abstraction and for our purposes allows
 

00:16:31.920 --> 00:16:35.329 align:start position:0%
abstraction and for our purposes allows
us<00:16:32.190><c> to</c><00:16:32.339><c> say</c><00:16:33.380><c> that</c><00:16:34.380><c> we</c><00:16:34.560><c> want</c><00:16:34.710><c> to</c><00:16:34.770><c> run</c><00:16:34.950><c> this</c><00:16:35.070><c> code</c>

00:16:35.329 --> 00:16:35.339 align:start position:0%
us to say that we want to run this code
 

00:16:35.339 --> 00:16:37.250 align:start position:0%
us to say that we want to run this code
in<00:16:35.700><c> a</c><00:16:36.270><c> transactional</c><00:16:36.720><c> boundary</c><00:16:37.050><c> now</c><00:16:37.200><c> the</c>

00:16:37.250 --> 00:16:37.260 align:start position:0%
in a transactional boundary now the
 

00:16:37.260 --> 00:16:41.210 align:start position:0%
in a transactional boundary now the
execute<00:16:37.770><c> method</c><00:16:37.890><c> itself</c><00:16:39.320><c> oops</c><00:16:40.320><c> the</c><00:16:40.920><c> execute</c>

00:16:41.210 --> 00:16:41.220 align:start position:0%
execute method itself oops the execute
 

00:16:41.220 --> 00:16:43.160 align:start position:0%
execute method itself oops the execute
method<00:16:41.339><c> itself</c><00:16:41.700><c> takes</c><00:16:42.570><c> a</c><00:16:42.660><c> transaction</c>

00:16:43.160 --> 00:16:43.170 align:start position:0%
method itself takes a transaction
 

00:16:43.170 --> 00:16:44.540 align:start position:0%
method itself takes a transaction
callback<00:16:43.560><c> which</c><00:16:43.710><c> of</c><00:16:43.800><c> course</c><00:16:43.830><c> as</c><00:16:44.070><c> a</c><00:16:44.100><c> functional</c>

00:16:44.540 --> 00:16:44.550 align:start position:0%
callback which of course as a functional
 

00:16:44.550 --> 00:16:46.310 align:start position:0%
callback which of course as a functional
interface<00:16:44.850><c> which</c><00:16:45.060><c> has</c><00:16:45.089><c> one</c><00:16:45.360><c> method</c><00:16:45.540><c> of</c><00:16:45.839><c> type</c>

00:16:46.310 --> 00:16:46.320 align:start position:0%
interface which has one method of type
 

00:16:46.320 --> 00:16:48.320 align:start position:0%
interface which has one method of type
doing<00:16:47.220><c> transaction</c><00:16:47.670><c> which</c><00:16:47.850><c> takes</c><00:16:48.120><c> a</c><00:16:48.180><c> single</c>

00:16:48.320 --> 00:16:48.330 align:start position:0%
doing transaction which takes a single
 

00:16:48.330 --> 00:16:50.450 align:start position:0%
doing transaction which takes a single
parameter<00:16:48.540><c> in</c><00:16:49.110><c> this</c><00:16:49.290><c> case</c><00:16:49.470><c> we</c><00:16:50.010><c> can</c><00:16:50.190><c> rely</c><00:16:50.430><c> upon</c>

00:16:50.450 --> 00:16:50.460 align:start position:0%
parameter in this case we can rely upon
 

00:16:50.460 --> 00:16:51.860 align:start position:0%
parameter in this case we can rely upon
the<00:16:50.820><c> implicit</c><00:16:51.089><c> parameter</c><00:16:51.330><c> it</c>

00:16:51.860 --> 00:16:51.870 align:start position:0%
the implicit parameter it
 

00:16:51.870 --> 00:16:52.970 align:start position:0%
the implicit parameter it
that's<00:16:52.050><c> the</c><00:16:52.170><c> transaction</c><00:16:52.620><c> status</c><00:16:52.680><c> so</c><00:16:52.950><c> we</c>

00:16:52.970 --> 00:16:52.980 align:start position:0%
that's the transaction status so we
 

00:16:52.980 --> 00:16:54.500 align:start position:0%
that's the transaction status so we
don't<00:16:53.190><c> need</c><00:16:53.280><c> it</c><00:16:53.400><c> or</c><00:16:53.670><c> we</c><00:16:53.910><c> can</c><00:16:54.030><c> declare</c><00:16:54.150><c> it</c><00:16:54.420><c> and</c>

00:16:54.500 --> 00:16:54.510 align:start position:0%
don't need it or we can declare it and
 

00:16:54.510 --> 00:16:56.810 align:start position:0%
don't need it or we can declare it and
we<00:16:54.570><c> could</c><00:16:54.690><c> say</c><00:16:54.810><c> TS</c><00:16:55.470><c> equals</c><00:16:55.890><c> whatever</c><00:16:56.040><c> but</c>

00:16:56.810 --> 00:16:56.820 align:start position:0%
we could say TS equals whatever but
 

00:16:56.820 --> 00:16:58.850 align:start position:0%
we could say TS equals whatever but
either<00:16:56.910><c> way</c><00:16:57.089><c> we're</c><00:16:57.930><c> just</c><00:16:57.960><c> gonna</c><00:16:58.200><c> run</c><00:16:58.380><c> this</c><00:16:58.560><c> one</c>

00:16:58.850 --> 00:16:58.860 align:start position:0%
either way we're just gonna run this one
 

00:16:58.860 --> 00:16:59.870 align:start position:0%
either way we're just gonna run this one
little<00:16:59.010><c> bit</c><00:16:59.100><c> of</c><00:16:59.190><c> code</c><00:16:59.370><c> in</c><00:16:59.400><c> a</c><00:16:59.610><c> custom</c>

00:16:59.870 --> 00:16:59.880 align:start position:0%
little bit of code in a custom
 

00:16:59.880 --> 00:17:01.220 align:start position:0%
little bit of code in a custom
transactional<00:17:00.360><c> block</c><00:17:00.510><c> the</c><00:17:00.900><c> rest</c><00:17:01.080><c> of</c><00:17:01.170><c> these</c>

00:17:01.220 --> 00:17:01.230 align:start position:0%
transactional block the rest of these
 

00:17:01.230 --> 00:17:03.699 align:start position:0%
transactional block the rest of these
will<00:17:01.410><c> be</c><00:17:01.500><c> managed</c><00:17:02.490><c> for</c><00:17:02.610><c> us</c><00:17:02.730><c> automatically</c>

00:17:03.699 --> 00:17:03.709 align:start position:0%
will be managed for us automatically
 

00:17:03.709 --> 00:17:06.679 align:start position:0%
will be managed for us automatically
ok<00:17:04.709><c> so</c><00:17:04.770><c> let's</c><00:17:05.069><c> implement</c><00:17:05.250><c> our</c><00:17:05.610><c> service</c><00:17:06.569><c> in</c>

00:17:06.679 --> 00:17:06.689 align:start position:0%
ok so let's implement our service in
 

00:17:06.689 --> 00:17:09.079 align:start position:0%
ok so let's implement our service in
terms<00:17:06.870><c> of</c><00:17:07.079><c> this</c><00:17:07.199><c> new</c><00:17:07.579><c> integration</c><00:17:08.579><c> so</c><00:17:08.730><c> select</c>

00:17:09.079 --> 00:17:09.089 align:start position:0%
terms of this new integration so select
 

00:17:09.089 --> 00:17:10.850 align:start position:0%
terms of this new integration so select
all<00:17:09.329><c> and</c><00:17:09.839><c> I'm</c><00:17:10.170><c> going</c><00:17:10.290><c> to</c><00:17:10.350><c> map</c><00:17:10.560><c> the</c><00:17:10.740><c> results</c>

00:17:10.850 --> 00:17:10.860 align:start position:0%
all and I'm going to map the results
 

00:17:10.860 --> 00:17:12.819 align:start position:0%
all and I'm going to map the results
going<00:17:11.280><c> to</c><00:17:11.339><c> say</c><00:17:11.430><c> give</c><00:17:11.640><c> me</c><00:17:11.670><c> a</c><00:17:11.790><c> customer</c><00:17:12.329><c> back</c>

00:17:12.819 --> 00:17:12.829 align:start position:0%
going to say give me a customer back
 

00:17:12.829 --> 00:17:18.380 align:start position:0%
going to say give me a customer back
where<00:17:13.829><c> I</c><00:17:13.860><c> map</c><00:17:14.670><c> the</c><00:17:15.260><c> IT</c><00:17:16.760><c> customers</c><00:17:17.760><c> dot</c><00:17:18.150><c> name</c>

00:17:18.380 --> 00:17:18.390 align:start position:0%
where I map the IT customers dot name
 

00:17:18.390 --> 00:17:25.670 align:start position:0%
where I map the IT customers dot name
and<00:17:19.579><c> the</c><00:17:20.579><c> IT</c><00:17:21.230><c> customers</c><00:17:22.230><c> dot</c><00:17:22.620><c> ID</c><00:17:23.610><c> and</c><00:17:24.680><c> that's</c>

00:17:25.670 --> 00:17:25.680 align:start position:0%
and the IT customers dot ID and that's
 

00:17:25.680 --> 00:17:27.800 align:start position:0%
and the IT customers dot ID and that's
my<00:17:25.829><c> omit</c><00:17:26.189><c> that's</c><00:17:26.490><c> it</c><00:17:26.610><c> it's</c><00:17:26.910><c> a</c><00:17:26.970><c> type</c><00:17:27.150><c> safe</c><00:17:27.360><c> DSL</c>

00:17:27.800 --> 00:17:27.810 align:start position:0%
my omit that's it it's a type safe DSL
 

00:17:27.810 --> 00:17:29.240 align:start position:0%
my omit that's it it's a type safe DSL
right<00:17:27.990><c> I</c><00:17:28.020><c> don't</c><00:17:28.079><c> have</c><00:17:28.260><c> to</c><00:17:28.410><c> I</c><00:17:28.620><c> don't</c><00:17:28.800><c> have</c><00:17:29.010><c> to</c><00:17:29.160><c> do</c>

00:17:29.240 --> 00:17:29.250 align:start position:0%
right I don't have to I don't have to do
 

00:17:29.250 --> 00:17:31.070 align:start position:0%
right I don't have to I don't have to do
anything<00:17:29.430><c> more</c><00:17:29.610><c> than</c><00:17:29.670><c> that</c><00:17:29.940><c> I'm</c><00:17:30.450><c> going</c><00:17:30.870><c> to</c><00:17:30.960><c> do</c>

00:17:31.070 --> 00:17:31.080 align:start position:0%
anything more than that I'm going to do
 

00:17:31.080 --> 00:17:33.220 align:start position:0%
anything more than that I'm going to do
the<00:17:31.200><c> same</c><00:17:31.350><c> thing</c><00:17:31.530><c> here</c><00:17:31.710><c> so</c><00:17:31.890><c> customers</c><00:17:32.520><c> dot</c>

00:17:33.220 --> 00:17:33.230 align:start position:0%
the same thing here so customers dot
 

00:17:33.230 --> 00:17:35.270 align:start position:0%
the same thing here so customers dot
select<00:17:34.230><c> and</c><00:17:34.560><c> here</c><00:17:34.770><c> I</c><00:17:34.800><c> need</c><00:17:34.920><c> to</c><00:17:35.010><c> provide</c><00:17:35.220><c> a</c>

00:17:35.270 --> 00:17:35.280 align:start position:0%
select and here I need to provide a
 

00:17:35.280 --> 00:17:37.850 align:start position:0%
select and here I need to provide a
predicate<00:17:35.640><c> I</c><00:17:35.730><c> need</c><00:17:35.880><c> to</c><00:17:35.970><c> say</c><00:17:36.140><c> customers</c><00:17:37.140><c> that</c>

00:17:37.850 --> 00:17:37.860 align:start position:0%
predicate I need to say customers that
 

00:17:37.860 --> 00:17:40.120 align:start position:0%
predicate I need to say customers that
ID<00:17:38.100><c> that</c><00:17:38.550><c> equals</c>

00:17:40.120 --> 00:17:40.130 align:start position:0%
ID that equals
 

00:17:40.130 --> 00:17:42.550 align:start position:0%
ID that equals
Eydie<00:17:40.940><c> right</c><00:17:41.630><c> let's</c><00:17:41.840><c> took</c><00:17:41.960><c> predicated</c><00:17:42.380><c> coming</c>

00:17:42.550 --> 00:17:42.560 align:start position:0%
Eydie right let's took predicated coming
 

00:17:42.560 --> 00:17:46.270 align:start position:0%
Eydie right let's took predicated coming
for<00:17:42.680><c> the</c><00:17:42.740><c> method</c><00:17:42.980><c> and</c><00:17:43.130><c> then</c><00:17:43.760><c> we</c><00:17:43.850><c> say</c><00:17:44.030><c> map</c><00:17:45.280><c> and</c>

00:17:46.270 --> 00:17:46.280 align:start position:0%
for the method and then we say map and
 

00:17:46.280 --> 00:17:51.720 align:start position:0%
for the method and then we say map and
I'll<00:17:46.400><c> just</c><00:17:46.570><c> reuse</c><00:17:47.570><c> this</c><00:17:47.780><c> definition</c><00:17:48.380><c> up</c><00:17:48.560><c> here</c>

00:17:51.720 --> 00:17:51.730 align:start position:0%
 
 

00:17:51.730 --> 00:17:55.810 align:start position:0%
 
okay<00:17:52.730><c> and</c><00:17:53.060><c> we're</c><00:17:54.050><c> gonna</c><00:17:54.110><c> say</c><00:17:54.380><c> first</c><00:17:55.310><c> or</c><00:17:55.610><c> Knoll</c>

00:17:55.810 --> 00:17:55.820 align:start position:0%
okay and we're gonna say first or Knoll
 

00:17:55.820 --> 00:18:01.450 align:start position:0%
okay and we're gonna say first or Knoll
so<00:17:56.750><c> we're</c><00:17:57.260><c> gonna</c><00:17:57.350><c> create</c><00:17:57.650><c> a</c><00:17:57.860><c> mapping</c><00:18:00.430><c> what</c><00:18:01.430><c> a</c>

00:18:01.450 --> 00:18:01.460 align:start position:0%
so we're gonna create a mapping what a
 

00:18:01.460 --> 00:18:04.420 align:start position:0%
so we're gonna create a mapping what a
map<00:18:01.730><c> we're</c><00:18:02.120><c> gonna</c><00:18:02.210><c> say</c><00:18:02.360><c> select</c><00:18:02.540><c> all</c><00:18:03.310><c> turn</c><00:18:04.310><c> them</c>

00:18:04.420 --> 00:18:04.430 align:start position:0%
map we're gonna say select all turn them
 

00:18:04.430 --> 00:18:05.680 align:start position:0%
map we're gonna say select all turn them
into<00:18:04.520><c> objects</c><00:18:04.970><c> and</c><00:18:05.090><c> then</c><00:18:05.180><c> give</c><00:18:05.360><c> me</c><00:18:05.390><c> the</c><00:18:05.480><c> first</c>

00:18:05.680 --> 00:18:05.690 align:start position:0%
into objects and then give me the first
 

00:18:05.690 --> 00:18:06.820 align:start position:0%
into objects and then give me the first
one<00:18:05.780><c> or</c><00:18:05.990><c> no</c><00:18:06.080><c> that's</c><00:18:06.290><c> why</c><00:18:06.470><c> we</c><00:18:06.590><c> have</c><00:18:06.710><c> this</c>

00:18:06.820 --> 00:18:06.830 align:start position:0%
one or no that's why we have this
 

00:18:06.830 --> 00:18:09.790 align:start position:0%
one or no that's why we have this
question<00:18:07.820><c> mark</c><00:18:08.150><c> there</c><00:18:08.300><c> and</c><00:18:09.110><c> then</c><00:18:09.230><c> finally</c><00:18:09.590><c> for</c>

00:18:09.790 --> 00:18:09.800 align:start position:0%
question mark there and then finally for
 

00:18:09.800 --> 00:18:11.890 align:start position:0%
question mark there and then finally for
the<00:18:09.860><c> insert</c><00:18:10.340><c> it's</c><00:18:10.580><c> a</c><00:18:10.820><c> also</c><00:18:11.270><c> very</c><00:18:11.600><c> strict</c><00:18:11.720><c> for</c>

00:18:11.890 --> 00:18:11.900 align:start position:0%
the insert it's a also very strict for
 

00:18:11.900 --> 00:18:17.170 align:start position:0%
the insert it's a also very strict for
we<00:18:11.990><c> say</c><00:18:12.110><c> customers</c><00:18:12.710><c> dot</c><00:18:13.520><c> insert</c><00:18:14.890><c> and</c><00:18:16.180><c> we're</c>

00:18:17.170 --> 00:18:17.180 align:start position:0%
we say customers dot insert and we're
 

00:18:17.180 --> 00:18:19.060 align:start position:0%
we say customers dot insert and we're
gonna<00:18:17.330><c> say</c><00:18:17.450><c> it's</c><00:18:17.690><c> that</c><00:18:18.020><c> customers</c><00:18:18.560><c> that</c><00:18:18.800><c> ID</c>

00:18:19.060 --> 00:18:19.070 align:start position:0%
gonna say it's that customers that ID
 

00:18:19.070 --> 00:18:23.950 align:start position:0%
gonna say it's that customers that ID
our<00:18:19.520><c> name</c><00:18:20.420><c> rather</c><00:18:20.710><c> equals</c><00:18:22.330><c> customer</c><00:18:23.330><c> dot</c><00:18:23.450><c> name</c>

00:18:23.950 --> 00:18:23.960 align:start position:0%
our name rather equals customer dot name
 

00:18:23.960 --> 00:18:26.260 align:start position:0%
our name rather equals customer dot name
right<00:18:24.620><c> so</c><00:18:25.100><c> there</c><00:18:25.220><c> we</c><00:18:25.310><c> go</c><00:18:25.340><c> we</c><00:18:25.490><c> have</c><00:18:25.640><c> everything</c>

00:18:26.260 --> 00:18:26.270 align:start position:0%
right so there we go we have everything
 

00:18:26.270 --> 00:18:27.970 align:start position:0%
right so there we go we have everything
we<00:18:26.420><c> need</c><00:18:26.450><c> to</c><00:18:26.810><c> be</c><00:18:26.870><c> able</c><00:18:26.930><c> to</c><00:18:27.020><c> use</c><00:18:27.230><c> that</c><00:18:27.260><c> out</c><00:18:27.800><c> of</c>

00:18:27.970 --> 00:18:27.980 align:start position:0%
we need to be able to use that out of
 

00:18:27.980 --> 00:18:32.320 align:start position:0%
we need to be able to use that out of
the<00:18:28.040><c> box</c><00:18:28.600><c> that</c><00:18:29.600><c> is</c><00:18:29.840><c> a</c><00:18:30.520><c> very</c><00:18:31.520><c> very</c><00:18:31.610><c> simple</c><00:18:32.150><c> type</c>

00:18:32.320 --> 00:18:32.330 align:start position:0%
the box that is a very very simple type
 

00:18:32.330 --> 00:18:33.610 align:start position:0%
the box that is a very very simple type
safety<00:18:32.570><c> SL</c><00:18:32.900><c> but</c><00:18:33.020><c> you</c><00:18:33.110><c> can</c><00:18:33.230><c> do</c><00:18:33.290><c> very</c><00:18:33.470><c> complex</c>

00:18:33.610 --> 00:18:33.620 align:start position:0%
safety SL but you can do very complex
 

00:18:33.620 --> 00:18:36.580 align:start position:0%
safety SL but you can do very complex
things<00:18:34.300><c> very</c><00:18:35.300><c> very</c><00:18:35.630><c> powerful</c><00:18:36.020><c> complex</c><00:18:36.410><c> things</c>

00:18:36.580 --> 00:18:36.590 align:start position:0%
things very very powerful complex things
 

00:18:36.590 --> 00:18:38.680 align:start position:0%
things very very powerful complex things
like<00:18:36.650><c> joins</c><00:18:37.400><c> and</c><00:18:37.700><c> so</c><00:18:37.790><c> on</c><00:18:37.910><c> all</c><00:18:38.090><c> on</c><00:18:38.390><c> this</c><00:18:38.480><c> type</c>

00:18:38.680 --> 00:18:38.690 align:start position:0%
like joins and so on all on this type
 

00:18:38.690 --> 00:18:39.970 align:start position:0%
like joins and so on all on this type
safety<00:18:38.930><c> SL</c><00:18:39.200><c> you</c><00:18:39.290><c> don't</c><00:18:39.440><c> ever</c><00:18:39.590><c> have</c><00:18:39.710><c> to</c><00:18:39.830><c> drop</c>

00:18:39.970 --> 00:18:39.980 align:start position:0%
safety SL you don't ever have to drop
 

00:18:39.980 --> 00:18:42.370 align:start position:0%
safety SL you don't ever have to drop
down<00:18:40.010><c> to</c><00:18:40.160><c> extremely</c><00:18:41.060><c> sequel</c><00:18:41.450><c> and</c><00:18:41.600><c> indeed</c><00:18:42.170><c> even</c>

00:18:42.370 --> 00:18:42.380 align:start position:0%
down to extremely sequel and indeed even
 

00:18:42.380 --> 00:18:45.670 align:start position:0%
down to extremely sequel and indeed even
the<00:18:42.560><c> definition</c><00:18:42.740><c> of</c><00:18:43.220><c> the</c><00:18:43.430><c> of</c><00:18:43.910><c> the</c><00:18:44.480><c> DDL</c><00:18:45.200><c> itself</c>

00:18:45.670 --> 00:18:45.680 align:start position:0%
the definition of the of the DDL itself
 

00:18:45.680 --> 00:18:46.510 align:start position:0%
the definition of the of the DDL itself
is<00:18:45.890><c> done</c><00:18:46.100><c> for</c><00:18:46.280><c> you</c>

00:18:46.510 --> 00:18:46.520 align:start position:0%
is done for you
 

00:18:46.520 --> 00:18:48.910 align:start position:0%
is done for you
using<00:18:47.120><c> this</c><00:18:47.210><c> type</c><00:18:47.360><c> safe</c><00:18:47.600><c> DSL</c><00:18:47.900><c> so</c><00:18:48.080><c> let's</c><00:18:48.260><c> now</c>

00:18:48.910 --> 00:18:48.920 align:start position:0%
using this type safe DSL so let's now
 

00:18:48.920 --> 00:18:50.410 align:start position:0%
using this type safe DSL so let's now
rerun<00:18:49.340><c> this</c><00:18:49.490><c> code</c><00:18:49.730><c> I've</c><00:18:49.910><c> commented</c><00:18:50.120><c> out</c><00:18:50.300><c> the</c>

00:18:50.410 --> 00:18:50.420 align:start position:0%
rerun this code I've commented out the
 

00:18:50.420 --> 00:18:52.630 align:start position:0%
rerun this code I've commented out the
JDBC<00:18:50.840><c> implementation</c><00:18:51.440><c> but</c><00:18:52.280><c> as</c><00:18:52.430><c> we</c><00:18:52.610><c> are</c>

00:18:52.630 --> 00:18:52.640 align:start position:0%
JDBC implementation but as we are
 

00:18:52.640 --> 00:18:54.580 align:start position:0%
JDBC implementation but as we are
implementing<00:18:53.300><c> the</c><00:18:53.420><c> customer</c><00:18:54.320><c> service</c>

00:18:54.580 --> 00:18:54.590 align:start position:0%
implementing the customer service
 

00:18:54.590 --> 00:18:56.530 align:start position:0%
implementing the customer service
contract<00:18:54.980><c> for</c><00:18:55.130><c> this</c><00:18:55.220><c> our</c><00:18:55.400><c> initializer</c><00:18:56.180><c> which</c>

00:18:56.530 --> 00:18:56.540 align:start position:0%
contract for this our initializer which
 

00:18:56.540 --> 00:18:57.910 align:start position:0%
contract for this our initializer which
depends<00:18:56.960><c> on</c><00:18:57.050><c> that</c><00:18:57.140><c> customer</c><00:18:57.500><c> service</c><00:18:57.620><c> will</c>

00:18:57.910 --> 00:18:57.920 align:start position:0%
depends on that customer service will
 

00:18:57.920 --> 00:19:05.260 align:start position:0%
depends on that customer service will
still<00:18:58.160><c> work</c><00:18:58.280><c> let's</c><00:18:59.180><c> run</c><00:18:59.360><c> that</c><00:19:03.460><c> oh</c><00:19:04.460><c> I</c><00:19:04.970><c> need</c><00:19:05.210><c> to</c>

00:19:05.260 --> 00:19:05.270 align:start position:0%
still work let's run that oh I need to
 

00:19:05.270 --> 00:19:07.720 align:start position:0%
still work let's run that oh I need to
specify<00:19:05.450><c> the</c><00:19:05.630><c> length</c><00:19:06.080><c> and</c><00:19:06.410><c> the</c><00:19:07.370><c> compiler</c>

00:19:07.720 --> 00:19:07.730 align:start position:0%
specify the length and the compiler
 

00:19:07.730 --> 00:19:12.750 align:start position:0%
specify the length and the compiler
thought<00:19:08.720><c> that</c><00:19:08.900><c> for</c><00:19:09.050><c> me</c>

00:19:12.750 --> 00:19:12.760 align:start position:0%
 
 

00:19:12.760 --> 00:19:16.180 align:start position:0%
 
now<00:19:14.140><c> exposed</c><00:19:15.140><c> requires</c><00:19:15.620><c> joda-time</c>

00:19:16.180 --> 00:19:16.190 align:start position:0%
now exposed requires joda-time
 

00:19:16.190 --> 00:19:21.970 align:start position:0%
now exposed requires joda-time
and<00:19:17.649><c> it</c><00:19:18.649><c> also</c><00:19:18.799><c> requires</c><00:19:19.840><c> integration</c><00:19:20.860><c> sorry</c>

00:19:21.970 --> 00:19:21.980 align:start position:0%
and it also requires integration sorry
 

00:19:21.980 --> 00:19:23.230 align:start position:0%
and it also requires integration sorry
it<00:19:22.100><c> requires</c><00:19:22.399><c> it</c><00:19:22.549><c> doesn't</c><00:19:22.820><c> record</c><00:19:22.970><c> to</c><00:19:23.149><c> the</c>

00:19:23.230 --> 00:19:23.240 align:start position:0%
it requires it doesn't record to the
 

00:19:23.240 --> 00:19:24.639 align:start position:0%
it requires it doesn't record to the
time<00:19:23.390><c> it</c><00:19:23.510><c> requires</c><00:19:23.750><c> integration</c><00:19:24.230><c> with</c><00:19:24.590><c> our</c>

00:19:24.639 --> 00:19:24.649 align:start position:0%
time it requires integration with our
 

00:19:24.649 --> 00:19:26.230 align:start position:0%
time it requires integration with our
transaction<00:19:25.190><c> management</c><00:19:25.399><c> mechanism</c><00:19:25.850><c> this</c>

00:19:26.230 --> 00:19:26.240 align:start position:0%
transaction management mechanism this
 

00:19:26.240 --> 00:19:28.720 align:start position:0%
transaction management mechanism this
come<00:19:26.480><c> this</c><00:19:26.690><c> error</c><00:19:27.049><c> here</c><00:19:27.380><c> is</c><00:19:27.890><c> saying</c><00:19:28.190><c> please</c>

00:19:28.720 --> 00:19:28.730 align:start position:0%
come this error here is saying please
 

00:19:28.730 --> 00:19:30.610 align:start position:0%
come this error here is saying please
call<00:19:28.940><c> Davies</c><00:19:29.240><c> start</c><00:19:29.480><c> connect</c><00:19:29.720><c> before</c><00:19:30.019><c> running</c>

00:19:30.610 --> 00:19:30.620 align:start position:0%
call Davies start connect before running
 

00:19:30.620 --> 00:19:32.259 align:start position:0%
call Davies start connect before running
this<00:19:30.740><c> code</c><00:19:30.919><c> and</c><00:19:31.490><c> that</c><00:19:31.610><c> indicates</c><00:19:32.000><c> to</c><00:19:32.149><c> me</c><00:19:32.179><c> that</c>

00:19:32.259 --> 00:19:32.269 align:start position:0%
this code and that indicates to me that
 

00:19:32.269 --> 00:19:33.669 align:start position:0%
this code and that indicates to me that
it<00:19:32.480><c> hasn't</c><00:19:32.659><c> actually</c><00:19:32.929><c> committed</c><00:19:33.110><c> the</c>

00:19:33.669 --> 00:19:33.679 align:start position:0%
it hasn't actually committed the
 

00:19:33.679 --> 00:19:35.200 align:start position:0%
it hasn't actually committed the
transaction<00:19:34.159><c> before</c><00:19:34.429><c> so</c><00:19:34.580><c> we've</c><00:19:35.059><c> actually</c>

00:19:35.200 --> 00:19:35.210 align:start position:0%
transaction before so we've actually
 

00:19:35.210 --> 00:19:36.430 align:start position:0%
transaction before so we've actually
done<00:19:35.539><c> but</c><00:19:35.720><c> it's</c><00:19:35.809><c> looking</c><00:19:36.049><c> for</c><00:19:36.200><c> we've</c><00:19:36.320><c> done</c>

00:19:36.430 --> 00:19:36.440 align:start position:0%
done but it's looking for we've done
 

00:19:36.440 --> 00:19:38.470 align:start position:0%
done but it's looking for we've done
this<00:19:36.590><c> here</c><00:19:36.950><c> but</c><00:19:37.669><c> this</c><00:19:37.760><c> transaction</c><00:19:38.090><c> template</c>

00:19:38.470 --> 00:19:38.480 align:start position:0%
this here but this transaction template
 

00:19:38.480 --> 00:19:40.630 align:start position:0%
this here but this transaction template
doesn't<00:19:38.870><c> know</c><00:19:39.080><c> about</c><00:19:39.559><c> our</c><00:19:40.070><c> platform</c>

00:19:40.630 --> 00:19:40.640 align:start position:0%
doesn't know about our platform
 

00:19:40.640 --> 00:19:42.130 align:start position:0%
doesn't know about our platform
transaction<00:19:41.240><c> manager</c><00:19:41.510><c> the</c><00:19:41.659><c> plan</c><00:19:41.840><c> checks</c>

00:19:42.130 --> 00:19:42.140 align:start position:0%
transaction manager the plan checks
 

00:19:42.140 --> 00:19:44.049 align:start position:0%
transaction manager the plan checks
transaction<00:19:42.740><c> template</c><00:19:43.039><c> knows</c><00:19:43.490><c> about</c><00:19:43.730><c> Springs</c>

00:19:44.049 --> 00:19:44.059 align:start position:0%
transaction template knows about Springs
 

00:19:44.059 --> 00:19:45.639 align:start position:0%
transaction template knows about Springs
platform<00:19:44.480><c> transaction</c><00:19:45.019><c> manager</c><00:19:45.260><c> interface</c>

00:19:45.639 --> 00:19:45.649 align:start position:0%
platform transaction manager interface
 

00:19:45.649 --> 00:19:47.379 align:start position:0%
platform transaction manager interface
there<00:19:46.159><c> are</c><00:19:46.279><c> many</c><00:19:46.429><c> different</c><00:19:46.730><c> implementations</c>

00:19:47.379 --> 00:19:47.389 align:start position:0%
there are many different implementations
 

00:19:47.389 --> 00:19:49.480 align:start position:0%
there are many different implementations
of<00:19:47.480><c> that</c><00:19:47.659><c> interface</c><00:19:48.260><c> for</c><00:19:48.950><c> different</c><00:19:49.190><c> kinds</c><00:19:49.399><c> of</c>

00:19:49.480 --> 00:19:49.490 align:start position:0%
of that interface for different kinds of
 

00:19:49.490 --> 00:19:51.820 align:start position:0%
of that interface for different kinds of
resources<00:19:50.269><c> you</c><00:19:50.600><c> know</c><00:19:50.720><c> from</c><00:19:50.899><c> different</c><00:19:51.529><c> kinds</c>

00:19:51.820 --> 00:19:51.830 align:start position:0%
resources you know from different kinds
 

00:19:51.830 --> 00:19:53.440 align:start position:0%
resources you know from different kinds
of<00:19:51.889><c> transactions</c><00:19:52.399><c> we</c><00:19:52.700><c> need</c><00:19:52.850><c> to</c><00:19:52.940><c> provide</c><00:19:53.210><c> the</c>

00:19:53.440 --> 00:19:53.450 align:start position:0%
of transactions we need to provide the
 

00:19:53.450 --> 00:19:55.600 align:start position:0%
of transactions we need to provide the
exposed<00:19:53.990><c> one</c><00:19:54.260><c> called</c><00:19:54.860><c> spring</c><00:19:55.100><c> transaction</c>

00:19:55.600 --> 00:19:55.610 align:start position:0%
exposed one called spring transaction
 

00:19:55.610 --> 00:20:00.310 align:start position:0%
exposed one called spring transaction
manager<00:19:55.940><c> and</c><00:19:56.590><c> we</c><00:19:57.590><c> can</c><00:19:57.710><c> do</c><00:19:57.830><c> that</c><00:19:57.950><c> here</c><00:19:58.630><c> and</c><00:19:59.630><c> just</c>

00:20:00.310 --> 00:20:00.320 align:start position:0%
manager and we can do that here and just
 

00:20:00.320 --> 00:20:01.899 align:start position:0%
manager and we can do that here and just
it<00:20:00.559><c> expects</c><00:20:01.190><c> a</c><00:20:01.279><c> reference</c><00:20:01.549><c> to</c><00:20:01.639><c> our</c><00:20:01.669><c> data</c>

00:20:01.899 --> 00:20:01.909 align:start position:0%
it expects a reference to our data
 

00:20:01.909 --> 00:20:03.639 align:start position:0%
it expects a reference to our data
source<00:20:02.149><c> right</c><00:20:02.840><c> we're</c><00:20:03.139><c> going</c><00:20:03.260><c> to</c><00:20:03.289><c> provide</c><00:20:03.470><c> that</c>

00:20:03.639 --> 00:20:03.649 align:start position:0%
source right we're going to provide that
 

00:20:03.649 --> 00:20:06.580 align:start position:0%
source right we're going to provide that
here<00:20:03.940><c> it's</c><00:20:04.940><c> verified</c><00:20:05.750><c> as</c><00:20:05.899><c> I</c><00:20:06.019><c> said</c><00:20:06.169><c> before</c><00:20:06.260><c> so</c>

00:20:06.580 --> 00:20:06.590 align:start position:0%
here it's verified as I said before so
 

00:20:06.590 --> 00:20:07.930 align:start position:0%
here it's verified as I said before so
you'll<00:20:06.710><c> get</c><00:20:06.860><c> you</c><00:20:07.250><c> know</c><00:20:07.279><c> this</c><00:20:07.549><c> spring</c>

00:20:07.930 --> 00:20:07.940 align:start position:0%
you'll get you know this spring
 

00:20:07.940 --> 00:20:09.820 align:start position:0%
you'll get you know this spring
transaction<00:20:08.600><c> manager</c><00:20:08.899><c> is</c><00:20:09.169><c> expecting</c><00:20:09.590><c> a</c><00:20:09.679><c> data</c>

00:20:09.820 --> 00:20:09.830 align:start position:0%
transaction manager is expecting a data
 

00:20:09.830 --> 00:20:11.350 align:start position:0%
transaction manager is expecting a data
source<00:20:10.039><c> and</c><00:20:10.309><c> it's</c><00:20:10.610><c> gotten</c><00:20:10.880><c> that</c><00:20:10.940><c> already</c><00:20:11.149><c> this</c>

00:20:11.350 --> 00:20:11.360 align:start position:0%
source and it's gotten that already this
 

00:20:11.360 --> 00:20:14.259 align:start position:0%
source and it's gotten that already this
is<00:20:11.539><c> of</c><00:20:11.659><c> course</c><00:20:11.809><c> a</c><00:20:12.850><c> implementation</c><00:20:13.850><c> from</c><00:20:14.120><c> the</c>

00:20:14.259 --> 00:20:14.269 align:start position:0%
is of course a implementation from the
 

00:20:14.269 --> 00:20:17.340 align:start position:0%
is of course a implementation from the
JetBrains<00:20:14.630><c> exposed</c><00:20:14.960><c> library</c><00:20:15.350><c> it</c><00:20:15.769><c> in</c><00:20:16.039><c> turn</c>

00:20:17.340 --> 00:20:17.350 align:start position:0%
JetBrains exposed library it in turn
 

00:20:17.350 --> 00:20:19.629 align:start position:0%
JetBrains exposed library it in turn
extends<00:20:18.350><c> Springs</c><00:20:18.710><c> own</c><00:20:18.889><c> data</c><00:20:19.429><c> source</c>

00:20:19.629 --> 00:20:19.639 align:start position:0%
extends Springs own data source
 

00:20:19.639 --> 00:20:21.039 align:start position:0%
extends Springs own data source
transaction<00:20:20.059><c> manager</c><00:20:20.330><c> which</c><00:20:20.690><c> in</c><00:20:20.840><c> turn</c>

00:20:21.039 --> 00:20:21.049 align:start position:0%
transaction manager which in turn
 

00:20:21.049 --> 00:20:22.870 align:start position:0%
transaction manager which in turn
extends<00:20:21.919><c> the</c><00:20:22.010><c> abstract</c><00:20:22.370><c> platform</c>

00:20:22.870 --> 00:20:22.880 align:start position:0%
extends the abstract platform
 

00:20:22.880 --> 00:20:23.919 align:start position:0%
extends the abstract platform
transaction<00:20:23.299><c> manager</c><00:20:23.510><c> which</c><00:20:23.659><c> in</c><00:20:23.779><c> turn</c>

00:20:23.919 --> 00:20:23.929 align:start position:0%
transaction manager which in turn
 

00:20:23.929 --> 00:20:25.840 align:start position:0%
transaction manager which in turn
implements<00:20:24.740><c> platform</c><00:20:25.159><c> transaction</c><00:20:25.549><c> manager</c>

00:20:25.840 --> 00:20:25.850 align:start position:0%
implements platform transaction manager
 

00:20:25.850 --> 00:20:29.320 align:start position:0%
implements platform transaction manager
so<00:20:26.000><c> we</c><00:20:26.539><c> can</c><00:20:26.720><c> now</c><00:20:27.309><c> reuse</c><00:20:28.309><c> that</c><00:20:28.730><c> implementation</c>

00:20:29.320 --> 00:20:29.330 align:start position:0%
so we can now reuse that implementation
 

00:20:29.330 --> 00:20:34.210 align:start position:0%
so we can now reuse that implementation
here<00:20:30.039><c> and</c><00:20:32.620><c> hopefully</c><00:20:33.620><c> it</c><00:20:33.679><c> doesn't</c><00:20:33.799><c> work</c><00:20:33.980><c> let's</c>

00:20:34.210 --> 00:20:34.220 align:start position:0%
here and hopefully it doesn't work let's
 

00:20:34.220 --> 00:20:39.070 align:start position:0%
here and hopefully it doesn't work let's
run<00:20:34.340><c> this</c><00:20:34.399><c> code</c><00:20:34.580><c> oh</c><00:20:37.750><c> it</c><00:20:38.750><c> does</c><00:20:38.899><c> require</c>

00:20:39.070 --> 00:20:39.080 align:start position:0%
run this code oh it does require
 

00:20:39.080 --> 00:20:39.549 align:start position:0%
run this code oh it does require
joda-time

00:20:39.549 --> 00:20:39.559 align:start position:0%
joda-time
 

00:20:39.559 --> 00:20:41.259 align:start position:0%
joda-time
yes<00:20:39.740><c> so</c><00:20:39.980><c> let's</c><00:20:40.159><c> bring</c><00:20:40.370><c> that</c><00:20:40.519><c> in</c><00:20:40.730><c> as</c><00:20:40.909><c> well</c><00:20:41.059><c> I</c>

00:20:41.259 --> 00:20:41.269 align:start position:0%
yes so let's bring that in as well I
 

00:20:41.269 --> 00:20:43.210 align:start position:0%
yes so let's bring that in as well I
don't<00:20:41.750><c> know</c><00:20:41.809><c> why</c><00:20:41.929><c> it</c><00:20:41.990><c> requires</c><00:20:42.139><c> two</c><00:20:42.350><c> at</c><00:20:42.440><c> a</c><00:20:42.470><c> time</c>

00:20:43.210 --> 00:20:43.220 align:start position:0%
don't know why it requires two at a time
 

00:20:43.220 --> 00:20:45.250 align:start position:0%
don't know why it requires two at a time
I<00:20:43.279><c> would</c><00:20:44.000><c> love</c><00:20:44.149><c> to</c><00:20:44.299><c> know</c><00:20:44.419><c> why</c><00:20:44.690><c> I</c><00:20:44.720><c> have</c><00:20:45.019><c> to</c><00:20:45.049><c> bring</c>

00:20:45.250 --> 00:20:45.260 align:start position:0%
I would love to know why I have to bring
 

00:20:45.260 --> 00:20:46.419 align:start position:0%
I would love to know why I have to bring
that<00:20:45.380><c> in</c><00:20:45.529><c> and</c><00:20:45.649><c> why</c><00:20:45.710><c> it</c><00:20:45.830><c> doesn't</c><00:20:45.980><c> just</c><00:20:46.250><c> do</c><00:20:46.340><c> it</c>

00:20:46.419 --> 00:20:46.429 align:start position:0%
that in and why it doesn't just do it
 

00:20:46.429 --> 00:20:55.279 align:start position:0%
that in and why it doesn't just do it
for<00:20:46.580><c> me</c><00:20:46.669><c> but</c><00:20:46.880><c> we'll</c><00:20:47.809><c> leave</c><00:20:47.929><c> it</c><00:20:47.990><c> at</c><00:20:48.139><c> this</c>

00:20:55.279 --> 00:20:55.289 align:start position:0%
 
 

00:20:55.289 --> 00:20:58.049 align:start position:0%
 
all<00:20:56.289><c> right</c><00:20:56.529><c> very</c><00:20:57.039><c> good</c><00:20:57.279><c> so</c><00:20:57.369><c> there</c><00:20:57.489><c> are</c><00:20:57.700><c> records</c>

00:20:58.049 --> 00:20:58.059 align:start position:0%
all right very good so there are records
 

00:20:58.059 --> 00:21:00.119 align:start position:0%
all right very good so there are records
in<00:20:58.149><c> the</c><00:20:58.210><c> database</c><00:20:58.299><c> all</c><00:20:59.139><c> four</c><00:20:59.409><c> records</c><00:20:59.710><c> that's</c>

00:21:00.119 --> 00:21:00.129 align:start position:0%
in the database all four records that's
 

00:21:00.129 --> 00:21:01.859 align:start position:0%
in the database all four records that's
a<00:21:00.220><c> very</c><00:21:00.399><c> simple</c><00:21:01.059><c> bread-and-butter</c><00:21:01.509><c> kind</c><00:21:01.809><c> of</c>

00:21:01.859 --> 00:21:01.869 align:start position:0%
a very simple bread-and-butter kind of
 

00:21:01.869 --> 00:21:03.090 align:start position:0%
a very simple bread-and-butter kind of
application<00:21:02.379><c> we</c><00:21:02.529><c> can</c><00:21:02.559><c> build</c><00:21:02.799><c> a</c><00:21:02.919><c> tres</c>

00:21:03.090 --> 00:21:03.100 align:start position:0%
application we can build a tres
 

00:21:03.100 --> 00:21:05.070 align:start position:0%
application we can build a tres
controller<00:21:03.489><c> we</c><00:21:03.700><c> could</c><00:21:03.820><c> say</c><00:21:03.909><c> customer</c><00:21:04.419><c> rest</c>

00:21:05.070 --> 00:21:05.080 align:start position:0%
controller we could say customer rest
 

00:21:05.080 --> 00:21:07.739 align:start position:0%
controller we could say customer rest
controller<00:21:05.590><c> using</c><00:21:05.950><c> spring</c><00:21:06.580><c> MVC</c><00:21:06.730><c> so</c><00:21:07.330><c> and</c><00:21:07.539><c> get</c>

00:21:07.739 --> 00:21:07.749 align:start position:0%
controller using spring MVC so and get
 

00:21:07.749 --> 00:21:12.539 align:start position:0%
controller using spring MVC so and get
mapping<00:21:08.309><c> customers</c><00:21:09.720><c> fun</c><00:21:10.720><c> customers</c><00:21:11.559><c> equals</c>

00:21:12.539 --> 00:21:12.549 align:start position:0%
mapping customers fun customers equals
 

00:21:12.549 --> 00:21:15.200 align:start position:0%
mapping customers fun customers equals
and<00:21:12.820><c> we</c><00:21:12.879><c> want</c><00:21:13.029><c> to</c><00:21:13.090><c> inject</c><00:21:13.419><c> the</c><00:21:13.860><c> private</c><00:21:14.860><c> Val</c>

00:21:15.200 --> 00:21:15.210 align:start position:0%
and we want to inject the private Val
 

00:21:15.210 --> 00:21:19.159 align:start position:0%
and we want to inject the private Val
customer<00:21:16.210><c> service</c><00:21:16.629><c> at</c><00:21:17.559><c> risk</c><00:21:17.980><c> controller</c>

00:21:19.159 --> 00:21:19.169 align:start position:0%
customer service at risk controller
 

00:21:19.169 --> 00:21:23.249 align:start position:0%
customer service at risk controller
equals<00:21:20.169><c> this</c><00:21:20.470><c> that</c><00:21:20.710><c> customer</c><00:21:21.159><c> service</c><00:21:22.259><c> dot</c>

00:21:23.249 --> 00:21:23.259 align:start position:0%
equals this that customer service dot
 

00:21:23.259 --> 00:21:28.070 align:start position:0%
equals this that customer service dot
all<00:21:23.529><c> and</c><00:21:23.970><c> run</c><00:21:24.970><c> the</c><00:21:25.059><c> code</c><00:21:25.239><c> again</c>

00:21:28.070 --> 00:21:28.080 align:start position:0%
 
 

00:21:28.080 --> 00:21:29.539 align:start position:0%
 
localhost:8080

00:21:29.539 --> 00:21:29.549 align:start position:0%
localhost:8080
 

00:21:29.549 --> 00:21:33.389 align:start position:0%
localhost:8080
customers<00:21:30.730><c> oh</c><00:21:30.759><c> it's</c><00:21:31.659><c> blocked</c><00:21:32.340><c> Kotlin</c><00:21:33.340><c> by</c>

00:21:33.389 --> 00:21:33.399 align:start position:0%
customers oh it's blocked Kotlin by
 

00:21:33.399 --> 00:21:35.820 align:start position:0%
customers oh it's blocked Kotlin by
default<00:21:33.899><c> the</c><00:21:34.899><c> integration</c><00:21:35.289><c> intelligent</c>

00:21:35.820 --> 00:21:35.830 align:start position:0%
default the integration intelligent
 

00:21:35.830 --> 00:21:38.039 align:start position:0%
default the integration intelligent
common<00:21:36.159><c> is</c><00:21:36.669><c> not</c><00:21:36.970><c> smart</c><00:21:37.179><c> enough</c><00:21:37.299><c> to</c><00:21:37.359><c> set</c><00:21:37.600><c> single</c>

00:21:38.039 --> 00:21:38.049 align:start position:0%
common is not smart enough to set single
 

00:21:38.049 --> 00:21:39.899 align:start position:0%
common is not smart enough to set single
instance<00:21:38.350><c> only</c><00:21:38.559><c> so</c><00:21:38.769><c> I'm</c><00:21:39.159><c> running</c><00:21:39.519><c> a</c><00:21:39.669><c> spring</c>

00:21:39.899 --> 00:21:39.909 align:start position:0%
instance only so I'm running a spring
 

00:21:39.909 --> 00:21:42.930 align:start position:0%
instance only so I'm running a spring
good<00:21:40.059><c> application</c><00:21:40.509><c> it'll</c><00:21:41.609><c> collide</c><00:21:42.609><c> with</c><00:21:42.879><c> the</c>

00:21:42.930 --> 00:21:42.940 align:start position:0%
good application it'll collide with the
 

00:21:42.940 --> 00:21:44.070 align:start position:0%
good application it'll collide with the
existing<00:21:43.269><c> application</c><00:21:43.629><c> that's</c><00:21:43.749><c> running</c><00:21:43.840><c> on</c>

00:21:44.070 --> 00:21:44.080 align:start position:0%
existing application that's running on
 

00:21:44.080 --> 00:21:46.109 align:start position:0%
existing application that's running on
the<00:21:44.169><c> same</c><00:21:44.320><c> port</c><00:21:44.529><c> and</c><00:21:44.799><c> one</c><00:21:45.669><c> of</c><00:21:45.759><c> them</c><00:21:45.850><c> will</c><00:21:45.970><c> fail</c>

00:21:46.109 --> 00:21:46.119 align:start position:0%
the same port and one of them will fail
 

00:21:46.119 --> 00:21:48.119 align:start position:0%
the same port and one of them will fail
so<00:21:46.389><c> this</c><00:21:46.629><c> one</c><00:21:46.779><c> the</c><00:21:47.320><c> second</c><00:21:47.619><c> one</c><00:21:47.649><c> failed</c><00:21:47.919><c> here</c>

00:21:48.119 --> 00:21:48.129 align:start position:0%
so this one the second one failed here
 

00:21:48.129 --> 00:21:50.460 align:start position:0%
so this one the second one failed here
I'm<00:21:48.220><c> gonna</c><00:21:48.340><c> kill</c><00:21:48.580><c> that</c><00:21:48.609><c> off</c><00:21:49.379><c> run</c><00:21:50.379><c> the</c>

00:21:50.460 --> 00:21:50.470 align:start position:0%
I'm gonna kill that off run the
 

00:21:50.470 --> 00:21:55.159 align:start position:0%
I'm gonna kill that off run the
application<00:21:50.830><c> again</c><00:21:51.929><c> localhost</c><00:21:53.730><c> customers</c>

00:21:55.159 --> 00:21:55.169 align:start position:0%
application again localhost customers
 

00:21:55.169 --> 00:21:59.519 align:start position:0%
application again localhost customers
okay<00:21:56.169><c> let's</c><00:21:56.529><c> see</c><00:21:56.799><c> what</c><00:21:57.340><c> I</c><00:21:57.369><c> choose</c><00:21:58.499><c> customer</c><00:21:59.499><c> I</c>

00:21:59.519 --> 00:21:59.529 align:start position:0%
okay let's see what I choose customer I
 

00:21:59.529 --> 00:22:02.369 align:start position:0%
okay let's see what I choose customer I
chose<00:21:59.909><c> that's</c><00:22:00.909><c> the</c><00:22:01.029><c> wrong</c><00:22:01.179><c> URL</c><00:22:01.480><c> but</c><00:22:02.019><c> if</c><00:22:02.169><c> I</c><00:22:02.259><c> had</c>

00:22:02.369 --> 00:22:02.379 align:start position:0%
chose that's the wrong URL but if I had
 

00:22:02.379 --> 00:22:05.489 align:start position:0%
chose that's the wrong URL but if I had
specified<00:22:02.769><c> s</c><00:22:02.980><c> as</c><00:22:03.309><c> I</c><00:22:04.210><c> should</c><00:22:04.419><c> have</c><00:22:04.450><c> that</c><00:22:05.409><c> would</c>

00:22:05.489 --> 00:22:05.499 align:start position:0%
specified s as I should have that would
 

00:22:05.499 --> 00:22:06.840 align:start position:0%
specified s as I should have that would
have<00:22:05.590><c> worked</c><00:22:05.649><c> as</c><00:22:05.799><c> well</c><00:22:05.919><c> all</c><00:22:06.369><c> right</c><00:22:06.429><c> so</c><00:22:06.730><c> we</c><00:22:06.820><c> have</c>

00:22:06.840 --> 00:22:06.850 align:start position:0%
have worked as well all right so we have
 

00:22:06.850 --> 00:22:08.399 align:start position:0%
have worked as well all right so we have
now<00:22:07.090><c> a</c><00:22:07.119><c> very</c><00:22:07.269><c> simple</c><00:22:07.659><c> spring</c><00:22:07.869><c> application</c>

00:22:08.399 --> 00:22:08.409 align:start position:0%
now a very simple spring application
 

00:22:08.409 --> 00:22:09.989 align:start position:0%
now a very simple spring application
using<00:22:08.950><c> bread</c><00:22:09.190><c> and</c><00:22:09.340><c> butter</c><00:22:09.489><c> technologies</c>

00:22:09.989 --> 00:22:09.999 align:start position:0%
using bread and butter technologies
 

00:22:09.999 --> 00:22:12.029 align:start position:0%
using bread and butter technologies
again<00:22:10.239><c> we're</c><00:22:10.720><c> using</c><00:22:10.749><c> JDBC</c><00:22:11.440><c> and</c><00:22:11.679><c> spring</c><00:22:11.889><c> MVC</c>

00:22:12.029 --> 00:22:12.039 align:start position:0%
again we're using JDBC and spring MVC
 

00:22:12.039 --> 00:22:13.710 align:start position:0%
again we're using JDBC and spring MVC
which<00:22:12.549><c> in</c><00:22:12.700><c> turn</c><00:22:12.850><c> is</c><00:22:13.029><c> based</c><00:22:13.059><c> on</c><00:22:13.330><c> the</c><00:22:13.419><c> servlet</c>

00:22:13.710 --> 00:22:13.720 align:start position:0%
which in turn is based on the servlet
 

00:22:13.720 --> 00:22:16.950 align:start position:0%
which in turn is based on the servlet
stuff<00:22:13.929><c> so</c><00:22:14.080><c> you</c><00:22:14.710><c> know</c><00:22:14.739><c> this</c><00:22:14.950><c> is</c><00:22:15.539><c> very</c><00:22:16.539><c> clean</c>

00:22:16.950 --> 00:22:16.960 align:start position:0%
stuff so you know this is very clean
 

00:22:16.960 --> 00:22:21.720 align:start position:0%
stuff so you know this is very clean
very<00:22:16.989><c> automatic</c><00:22:17.529><c> very</c><00:22:18.570><c> you</c><00:22:19.570><c> know</c><00:22:20.730><c> modern</c>

00:22:21.720 --> 00:22:21.730 align:start position:0%
very automatic very you know modern
 

00:22:21.730 --> 00:22:26.180 align:start position:0%
very automatic very you know modern
approach<00:22:22.359><c> and</c><00:22:24.480><c> way</c><00:22:25.480><c> to</c><00:22:25.539><c> work</c><00:22:25.929><c> with</c>

00:22:26.180 --> 00:22:26.190 align:start position:0%
approach and way to work with
 

00:22:26.190 --> 00:22:28.950 align:start position:0%
approach and way to work with
fundamentally<00:22:27.210><c> decades-old</c><00:22:28.210><c> technology</c>

00:22:28.950 --> 00:22:28.960 align:start position:0%
fundamentally decades-old technology
 

00:22:28.960 --> 00:22:32.220 align:start position:0%
fundamentally decades-old technology
I<00:22:28.989><c> mean</c><00:22:29.200><c> JDBC</c><00:22:29.830><c> and</c><00:22:29.980><c> servlets</c><00:22:30.220><c> are</c><00:22:31.169><c> very</c><00:22:32.169><c> old</c>

00:22:32.220 --> 00:22:32.230 align:start position:0%
I mean JDBC and servlets are very old
 

00:22:32.230 --> 00:22:33.899 align:start position:0%
I mean JDBC and servlets are very old
and<00:22:32.710><c> they</c><00:22:32.980><c> worked</c><00:22:33.159><c> just</c><00:22:33.220><c> fine</c><00:22:33.340><c> they're</c><00:22:33.700><c> there</c>

00:22:33.899 --> 00:22:33.909 align:start position:0%
and they worked just fine they're there
 

00:22:33.909 --> 00:22:35.310 align:start position:0%
and they worked just fine they're there
you<00:22:34.480><c> know</c><00:22:34.570><c> like</c><00:22:34.779><c> I</c><00:22:34.869><c> said</c><00:22:34.929><c> bread-and-butter</c>

00:22:35.310 --> 00:22:35.320 align:start position:0%
you know like I said bread-and-butter
 

00:22:35.320 --> 00:22:39.659 align:start position:0%
you know like I said bread-and-butter
kind<00:22:35.679><c> stuff</c><00:22:35.830><c> but</c><00:22:37.859><c> while</c><00:22:38.859><c> we've</c><00:22:39.009><c> gotten</c><00:22:39.309><c> some</c>

00:22:39.659 --> 00:22:39.669 align:start position:0%
kind stuff but while we've gotten some
 

00:22:39.669 --> 00:22:42.119 align:start position:0%
kind stuff but while we've gotten some
benefit<00:22:40.059><c> from</c><00:22:40.299><c> the</c><00:22:40.749><c> cotton</c><00:22:41.289><c> extensions</c><00:22:41.889><c> in</c>

00:22:42.119 --> 00:22:42.129 align:start position:0%
benefit from the cotton extensions in
 

00:22:42.129 --> 00:22:44.310 align:start position:0%
benefit from the cotton extensions in
traditional<00:22:42.549><c> spring</c><00:22:42.820><c> api's</c><00:22:43.119><c> right</c><00:22:43.960><c> where</c><00:22:44.289><c> i</c>

00:22:44.310 --> 00:22:44.320 align:start position:0%
traditional spring api's right where i
 

00:22:44.320 --> 00:22:46.499 align:start position:0%
traditional spring api's right where i
think<00:22:44.409><c> there's</c><00:22:44.679><c> a</c><00:22:44.769><c> lot</c><00:22:44.889><c> of</c><00:22:45.509><c> really</c>

00:22:46.499 --> 00:22:46.509 align:start position:0%
think there's a lot of really
 

00:22:46.509 --> 00:22:48.119 align:start position:0%
think there's a lot of really
interesting<00:22:46.690><c> stuff</c><00:22:46.899><c> to</c><00:22:47.169><c> see</c><00:22:47.289><c> than</c><00:22:47.529><c> a</c><00:22:47.619><c> new</c><00:22:47.799><c> api</c>

00:22:48.119 --> 00:22:48.129 align:start position:0%
interesting stuff to see than a new api
 

00:22:48.129 --> 00:22:50.159 align:start position:0%
interesting stuff to see than a new api
so<00:22:48.369><c> let's</c><00:22:48.519><c> now</c><00:22:48.669><c> build</c><00:22:49.539><c> a</c><00:22:49.690><c> new</c><00:22:49.840><c> application</c>

00:22:50.159 --> 00:22:50.169 align:start position:0%
so let's now build a new application
 

00:22:50.169 --> 00:22:52.379 align:start position:0%
so let's now build a new application
similar<00:22:50.889><c> to</c><00:22:51.070><c> this</c><00:22:51.129><c> one</c><00:22:51.279><c> well</c><00:22:51.999><c> go</c><00:22:52.090><c> back</c><00:22:52.210><c> to</c>

00:22:52.379 --> 00:22:52.389 align:start position:0%
similar to this one well go back to
 

00:22:52.389 --> 00:22:55.109 align:start position:0%
similar to this one well go back to
start<00:22:52.600><c> out</c><00:22:52.749><c> spring</c><00:22:52.929><c> today</c><00:22:53.080><c> oh</c><00:22:53.169><c> and</c><00:22:54.090><c> we'll</c><00:22:55.090><c> use</c>

00:22:55.109 --> 00:22:55.119 align:start position:0%
start out spring today oh and we'll use
 

00:22:55.119 --> 00:22:57.269 align:start position:0%
start out spring today oh and we'll use
the<00:22:55.389><c> reactive</c><00:22:55.809><c> stuff</c><00:22:56.019><c> reactive</c><00:22:56.889><c> support</c><00:22:57.190><c> and</c>

00:22:57.269 --> 00:22:57.279 align:start position:0%
the reactive stuff reactive support and
 

00:22:57.279 --> 00:22:59.460 align:start position:0%
the reactive stuff reactive support and
spring<00:22:57.489><c> webflix</c><00:22:57.970><c> which</c><00:22:58.809><c> is</c><00:22:58.929><c> in</c><00:22:59.019><c> turn</c><00:22:59.169><c> part</c><00:22:59.409><c> of</c>

00:22:59.460 --> 00:22:59.470 align:start position:0%
spring webflix which is in turn part of
 

00:22:59.470 --> 00:23:03.139 align:start position:0%
spring webflix which is in turn part of
Spring<00:22:59.679><c> Framework</c><00:22:59.799><c> 5</c><00:23:00.399><c> so</c><00:23:00.940><c> I</c><00:23:00.970><c> use</c><00:23:01.239><c> spring</c><00:23:01.809><c> Mutoh</c>

00:23:03.139 --> 00:23:03.149 align:start position:0%
Spring Framework 5 so I use spring Mutoh
 

00:23:03.149 --> 00:23:05.310 align:start position:0%
Spring Framework 5 so I use spring Mutoh
Cottman<00:23:04.149><c> of</c><00:23:04.240><c> course</c>

00:23:05.310 --> 00:23:05.320 align:start position:0%
Cottman of course
 

00:23:05.320 --> 00:23:08.310 align:start position:0%
Cottman of course
I'm<00:23:05.710><c> going</c><00:23:05.890><c> to</c><00:23:05.950><c> use</c><00:23:06.040><c> reactive</c><00:23:07.050><c> web</c><00:23:08.050><c> but</c>

00:23:08.310 --> 00:23:08.320 align:start position:0%
I'm going to use reactive web but
 

00:23:08.320 --> 00:23:09.210 align:start position:0%
I'm going to use reactive web but
reactive

00:23:09.210 --> 00:23:09.220 align:start position:0%
reactive
 

00:23:09.220 --> 00:23:14.130 align:start position:0%
reactive
MongoDB<00:23:09.880><c> and</c><00:23:10.330><c> we're</c><00:23:10.870><c> going</c><00:23:10.990><c> to</c><00:23:11.050><c> use</c><00:23:13.140><c> gateway</c>

00:23:14.130 --> 00:23:14.140 align:start position:0%
MongoDB and we're going to use gateway
 

00:23:14.140 --> 00:23:15.900 align:start position:0%
MongoDB and we're going to use gateway
spring<00:23:14.470><c> cloud</c><00:23:14.620><c> gateway</c><00:23:14.920><c> okay</c><00:23:15.340><c> a</c><00:23:15.370><c> new</c><00:23:15.550><c> project</c>

00:23:15.900 --> 00:23:15.910 align:start position:0%
spring cloud gateway okay a new project
 

00:23:15.910 --> 00:23:19.320 align:start position:0%
spring cloud gateway okay a new project
for<00:23:16.030><c> for</c><00:23:16.830><c> stand</c><00:23:17.830><c> up</c><00:23:17.950><c> API</c><00:23:18.310><c> gateways</c><00:23:18.610><c> so</c><00:23:19.270><c> I've</c>

00:23:19.320 --> 00:23:19.330 align:start position:0%
for for stand up API gateways so I've
 

00:23:19.330 --> 00:23:21.240 align:start position:0%
for for stand up API gateways so I've
got<00:23:19.510><c> that</c><00:23:19.660><c> now</c><00:23:19.840><c> let's</c><00:23:20.230><c> say</c><00:23:20.320><c> you</c><00:23:20.380><c> AoE</c><00:23:20.800><c> active</c>

00:23:21.240 --> 00:23:21.250 align:start position:0%
got that now let's say you AoE active
 

00:23:21.250 --> 00:23:45.140 align:start position:0%
got that now let's say you AoE active
zip<00:23:22.050><c> open</c><00:23:23.050><c> this</c><00:23:23.140><c> up</c><00:23:23.230><c> on</c><00:23:23.320><c> the</c><00:23:23.470><c> IDE</c>

00:23:45.140 --> 00:23:45.150 align:start position:0%
 
 

00:23:45.150 --> 00:23:48.110 align:start position:0%
 
all<00:23:45.690><c> right</c><00:23:46.400><c> so</c><00:23:47.400><c> we</c><00:23:47.490><c> have</c><00:23:47.520><c> a</c><00:23:47.640><c> new</c><00:23:47.760><c> application</c>

00:23:48.110 --> 00:23:48.120 align:start position:0%
all right so we have a new application
 

00:23:48.120 --> 00:23:51.650 align:start position:0%
all right so we have a new application
and<00:23:49.730><c> same</c><00:23:50.730><c> as</c><00:23:50.850><c> before</c><00:23:50.970><c> we'll</c><00:23:51.240><c> create</c><00:23:51.330><c> a</c><00:23:51.450><c> data</c>

00:23:51.650 --> 00:23:51.660 align:start position:0%
and same as before we'll create a data
 

00:23:51.660 --> 00:23:54.170 align:start position:0%
and same as before we'll create a data
entity<00:23:52.050><c> a</c><00:23:52.080><c> data</c><00:23:52.350><c> a</c><00:23:52.410><c> class</c><00:23:52.710><c> customer</c><00:23:53.610><c> but</c><00:23:54.090><c> this</c>

00:23:54.170 --> 00:23:54.180 align:start position:0%
entity a data a class customer but this
 

00:23:54.180 --> 00:23:56.090 align:start position:0%
entity a data a class customer but this
one<00:23:54.330><c> will</c><00:23:54.480><c> map</c><00:23:54.660><c> to</c><00:23:54.690><c> database</c><00:23:55.200><c> so</c><00:23:55.440><c> using</c>

00:23:56.090 --> 00:23:56.100 align:start position:0%
one will map to database so using
 

00:23:56.100 --> 00:23:58.370 align:start position:0%
one will map to database so using
MongoDB<00:23:56.250><c> so</c><00:23:56.730><c> we</c><00:23:56.820><c> the</c><00:23:57.000><c> idea</c><00:23:57.809><c> will</c><00:23:57.930><c> be</c><00:23:58.020><c> a</c><00:23:58.050><c> strain</c>

00:23:58.370 --> 00:23:58.380 align:start position:0%
MongoDB so we the idea will be a strain
 

00:23:58.380 --> 00:24:02.000 align:start position:0%
MongoDB so we the idea will be a strain
question<00:23:59.340><c> run</c><00:23:59.490><c> all</c><00:23:59.730><c> of</c><00:24:00.420><c> our</c><00:24:00.630><c> name</c><00:24:01.110><c> string</c>

00:24:02.000 --> 00:24:02.010 align:start position:0%
question run all of our name string
 

00:24:02.010 --> 00:24:04.370 align:start position:0%
question run all of our name string
question<00:24:02.910><c> mark</c><00:24:03.059><c> equals</c><00:24:03.300><c> at</c><00:24:03.390><c> all</c><00:24:03.540><c> it's</c><00:24:04.290><c> gonna</c>

00:24:04.370 --> 00:24:04.380 align:start position:0%
question mark equals at all it's gonna
 

00:24:04.380 --> 00:24:06.380 align:start position:0%
question mark equals at all it's gonna
be<00:24:04.500><c> a</c><00:24:04.530><c> document</c><00:24:05.100><c> let's</c><00:24:05.309><c> bring</c><00:24:05.460><c> down</c><00:24:05.520><c> a</c><00:24:05.700><c> MongoDB</c>

00:24:06.380 --> 00:24:06.390 align:start position:0%
be a document let's bring down a MongoDB
 

00:24:06.390 --> 00:24:08.600 align:start position:0%
be a document let's bring down a MongoDB
document<00:24:07.080><c> and</c><00:24:07.230><c> it'll</c><00:24:07.380><c> have</c><00:24:07.530><c> a</c><00:24:07.559><c> primary</c><00:24:08.220><c> key</c>

00:24:08.600 --> 00:24:08.610 align:start position:0%
document and it'll have a primary key
 

00:24:08.610 --> 00:24:11.750 align:start position:0%
document and it'll have a primary key
whose<00:24:08.850><c> ID</c><00:24:09.270><c> is</c><00:24:09.390><c> a</c><00:24:09.540><c> 5</c><00:24:09.720><c> ID</c><00:24:09.960><c> and</c><00:24:10.890><c> that's</c><00:24:11.430><c> it</c><00:24:11.610><c> that's</c>

00:24:11.750 --> 00:24:11.760 align:start position:0%
whose ID is a 5 ID and that's it that's
 

00:24:11.760 --> 00:24:14.600 align:start position:0%
whose ID is a 5 ID and that's it that's
the<00:24:11.930><c> basic</c><00:24:12.930><c> definition</c><00:24:13.320><c> of</c><00:24:13.350><c> our</c><00:24:13.500><c> type</c><00:24:13.680><c> and</c>

00:24:14.600 --> 00:24:14.610 align:start position:0%
the basic definition of our type and
 

00:24:14.610 --> 00:24:16.040 align:start position:0%
the basic definition of our type and
we're<00:24:14.850><c> gonna</c><00:24:14.940><c> use</c><00:24:15.090><c> the</c><00:24:15.270><c> spring</c><00:24:15.600><c> data</c><00:24:15.780><c> among</c>

00:24:16.040 --> 00:24:16.050 align:start position:0%
we're gonna use the spring data among
 

00:24:16.050 --> 00:24:17.480 align:start position:0%
we're gonna use the spring data among
going<00:24:16.170><c> to</c><00:24:16.230><c> be</c><00:24:16.320><c> a</c><00:24:16.470><c> reactive</c><00:24:17.010><c> MongoDB</c>

00:24:17.480 --> 00:24:17.490 align:start position:0%
going to be a reactive MongoDB
 

00:24:17.490 --> 00:24:19.010 align:start position:0%
going to be a reactive MongoDB
repository<00:24:18.360><c> support</c><00:24:18.660><c> so</c><00:24:18.720><c> I'm</c><00:24:18.780><c> gonna</c><00:24:18.870><c> say</c>

00:24:19.010 --> 00:24:19.020 align:start position:0%
repository support so I'm gonna say
 

00:24:19.020 --> 00:24:24.980 align:start position:0%
repository support so I'm gonna say
customer<00:24:19.610><c> service</c><00:24:21.440><c> cost</c><00:24:22.440><c> reactive</c><00:24:23.990><c> Mongo</c>

00:24:24.980 --> 00:24:24.990 align:start position:0%
customer service cost reactive Mongo
 

00:24:24.990 --> 00:24:27.020 align:start position:0%
customer service cost reactive Mongo
repository<00:24:25.620><c> managing</c><00:24:26.490><c> entities</c><00:24:26.730><c> of</c><00:24:26.880><c> type</c>

00:24:27.020 --> 00:24:27.030 align:start position:0%
repository managing entities of type
 

00:24:27.030 --> 00:24:28.880 align:start position:0%
repository managing entities of type
customer<00:24:27.420><c> whose</c><00:24:27.570><c> primary</c><00:24:27.780><c> key</c><00:24:28.080><c> it's</c><00:24:28.650><c> a</c><00:24:28.710><c> type</c>

00:24:28.880 --> 00:24:28.890 align:start position:0%
customer whose primary key it's a type
 

00:24:28.890 --> 00:24:33.710 align:start position:0%
customer whose primary key it's a type
string<00:24:29.190><c> and</c><00:24:29.420><c> now</c><00:24:31.640><c> we're</c><00:24:32.640><c> going</c><00:24:32.790><c> to</c><00:24:33.030><c> save</c><00:24:33.600><c> some</c>

00:24:33.710 --> 00:24:33.720 align:start position:0%
string and now we're going to save some
 

00:24:33.720 --> 00:24:35.600 align:start position:0%
string and now we're going to save some
data<00:24:33.870><c> to</c><00:24:34.080><c> database</c><00:24:34.410><c> so</c><00:24:34.559><c> again</c><00:24:34.740><c> as</c><00:24:35.160><c> we</c><00:24:35.190><c> did</c><00:24:35.460><c> last</c>

00:24:35.600 --> 00:24:35.610 align:start position:0%
data to database so again as we did last
 

00:24:35.610 --> 00:24:39.530 align:start position:0%
data to database so again as we did last
time<00:24:35.910><c> we're</c><00:24:36.540><c> gonna</c><00:24:36.690><c> say</c><00:24:36.950><c> spring</c><00:24:38.540><c> application</c>

00:24:39.530 --> 00:24:39.540 align:start position:0%
time we're gonna say spring application
 

00:24:39.540 --> 00:24:46.400 align:start position:0%
time we're gonna say spring application
builder<00:24:41.900><c> dot</c><00:24:42.900><c> initializers</c><00:24:43.830><c> beans</c><00:24:45.170><c> alt</c><00:24:46.170><c> enter</c>

00:24:46.400 --> 00:24:46.410 align:start position:0%
builder dot initializers beans alt enter
 

00:24:46.410 --> 00:24:49.430 align:start position:0%
builder dot initializers beans alt enter
when<00:24:46.920><c> I</c><00:24:46.950><c> say</c><00:24:47.100><c> sources</c><00:24:47.700><c> is</c><00:24:47.850><c> equal</c><00:24:48.240><c> to</c><00:24:48.440><c> reactive</c>

00:24:49.430 --> 00:24:49.440 align:start position:0%
when I say sources is equal to reactive
 

00:24:49.440 --> 00:24:55.280 align:start position:0%
when I say sources is equal to reactive
application<00:24:52.520><c> reactive</c><00:24:53.809><c> application</c><00:24:54.809><c> class</c>

00:24:55.280 --> 00:24:55.290 align:start position:0%
application reactive application class
 

00:24:55.290 --> 00:25:01.480 align:start position:0%
application reactive application class
Java<00:24:55.850><c> and</c><00:24:56.850><c> I'm</c><00:24:57.600><c> going</c><00:24:57.750><c> to</c><00:24:57.809><c> tell</c><00:24:57.960><c> it</c><00:24:58.050><c> to</c><00:24:58.140><c> run</c>

00:25:01.480 --> 00:25:01.490 align:start position:0%
 
 

00:25:01.490 --> 00:25:04.680 align:start position:0%
 
down<00:25:02.490><c> here</c><00:25:02.730><c> ok</c>

00:25:04.680 --> 00:25:04.690 align:start position:0%
down here ok
 

00:25:04.690 --> 00:25:07.649 align:start position:0%
down here ok
passing<00:25:05.679><c> the</c><00:25:05.830><c> orgs</c><00:25:06.389><c> there</c><00:25:07.389><c> we</c><00:25:07.479><c> are</c>

00:25:07.649 --> 00:25:07.659 align:start position:0%
passing the orgs there we are
 

00:25:07.659 --> 00:25:09.210 align:start position:0%
passing the orgs there we are
and<00:25:07.899><c> the</c><00:25:07.960><c> initializers</c><00:25:08.470><c> in</c><00:25:08.559><c> the</c><00:25:08.649><c> beam</c><00:25:08.830><c> the</c>

00:25:09.210 --> 00:25:09.220 align:start position:0%
and the initializers in the beam the
 

00:25:09.220 --> 00:25:10.169 align:start position:0%
and the initializers in the beam the
first<00:25:09.429><c> thing</c><00:25:09.549><c> I'm</c><00:25:09.639><c> going</c><00:25:09.700><c> to</c><00:25:09.820><c> do</c><00:25:09.909><c> is</c><00:25:09.999><c> I'm</c><00:25:10.059><c> going</c>

00:25:10.169 --> 00:25:10.179 align:start position:0%
first thing I'm going to do is I'm going
 

00:25:10.179 --> 00:25:11.969 align:start position:0%
first thing I'm going to do is I'm going
to<00:25:10.239><c> write</c><00:25:10.659><c> some</c><00:25:10.809><c> day-to-day</c><00:25:11.289><c> basis</c><00:25:11.619><c> as</c><00:25:11.710><c> we</c><00:25:11.859><c> did</c>

00:25:11.969 --> 00:25:11.979 align:start position:0%
to write some day-to-day basis as we did
 

00:25:11.979 --> 00:25:16.320 align:start position:0%
to write some day-to-day basis as we did
earlier<00:25:12.009><c> so</c><00:25:12.279><c> customer</c><00:25:13.289><c> repository</c><00:25:15.330><c> equals</c>

00:25:16.320 --> 00:25:16.330 align:start position:0%
earlier so customer repository equals
 

00:25:16.330 --> 00:25:21.469 align:start position:0%
earlier so customer repository equals
ref<00:25:16.570><c> customer</c><00:25:17.320><c> repository</c><00:25:18.249><c> or</c><00:25:18.989><c> customer</c>

00:25:21.469 --> 00:25:21.479 align:start position:0%
ref customer repository or customer
 

00:25:21.479 --> 00:25:25.979 align:start position:0%
ref customer repository or customer
repository<00:25:22.479><c> here</c><00:25:22.659><c> we</c><00:25:22.779><c> are</c><00:25:24.570><c> okay</c>

00:25:25.979 --> 00:25:25.989 align:start position:0%
repository here we are okay
 

00:25:25.989 --> 00:25:27.180 align:start position:0%
repository here we are okay
could<00:25:26.470><c> have</c><00:25:26.559><c> been</c><00:25:26.619><c> customer</c><00:25:26.950><c> service</c>

00:25:27.180 --> 00:25:27.190 align:start position:0%
could have been customer service
 

00:25:27.190 --> 00:25:29.430 align:start position:0%
could have been customer service
couldn't<00:25:27.429><c> have</c><00:25:27.519><c> I</c><00:25:27.729><c> would</c><00:25:28.690><c> have</c><00:25:28.720><c> been</c><00:25:28.869><c> okay</c><00:25:29.259><c> I</c>

00:25:29.430 --> 00:25:29.440 align:start position:0%
couldn't have I would have been okay I
 

00:25:29.440 --> 00:25:32.129 align:start position:0%
couldn't have I would have been okay I
guess<00:25:29.649><c> as</c><00:25:29.799><c> well</c><00:25:29.950><c> all</c><00:25:30.669><c> right</c><00:25:30.729><c> there's</c><00:25:31.119><c> the</c><00:25:31.210><c> ref</c>

00:25:32.129 --> 00:25:32.139 align:start position:0%
guess as well all right there's the ref
 

00:25:32.139 --> 00:25:33.869 align:start position:0%
guess as well all right there's the ref
we<00:25:32.619><c> need</c><00:25:32.739><c> to</c><00:25:32.830><c> create</c><00:25:32.979><c> a</c><00:25:33.009><c> beam</c><00:25:33.220><c> of</c><00:25:33.489><c> course</c><00:25:33.729><c> so</c>

00:25:33.869 --> 00:25:33.879 align:start position:0%
we need to create a beam of course so
 

00:25:33.879 --> 00:25:34.859 align:start position:0%
we need to create a beam of course so
this<00:25:33.999><c> is</c><00:25:34.179><c> could</c><00:25:34.359><c> be</c><00:25:34.419><c> inside</c><00:25:34.599><c> that</c><00:25:34.749><c> mean</c>

00:25:34.859 --> 00:25:34.869 align:start position:0%
this is could be inside that mean
 

00:25:34.869 --> 00:25:36.719 align:start position:0%
this is could be inside that mean
definition<00:25:35.320><c> and</c><00:25:35.619><c> we're</c><00:25:36.340><c> gonna</c><00:25:36.429><c> write</c><00:25:36.609><c> some</c>

00:25:36.719 --> 00:25:36.729 align:start position:0%
definition and we're gonna write some
 

00:25:36.729 --> 00:25:38.599 align:start position:0%
definition and we're gonna write some
data<00:25:36.849><c> out</c><00:25:37.090><c> so</c><00:25:37.299><c> we're</c><00:25:37.389><c> gonna</c><00:25:37.479><c> say</c><00:25:37.659><c> save</c>

00:25:38.599 --> 00:25:38.609 align:start position:0%
data out so we're gonna say save
 

00:25:38.609 --> 00:25:46.680 align:start position:0%
data out so we're gonna say save
customer<00:25:39.960><c> ID</c><00:25:41.129><c> so</c><00:25:42.129><c> our</c><00:25:42.220><c> name</c><00:25:42.460><c> equals</c><00:25:44.970><c> let's</c><00:25:45.970><c> see</c>

00:25:46.680 --> 00:25:46.690 align:start position:0%
customer ID so our name equals let's see
 

00:25:46.690 --> 00:25:47.700 align:start position:0%
customer ID so our name equals let's see
well<00:25:47.019><c> actually</c><00:25:47.109><c> I</c><00:25:47.259><c> want</c><00:25:47.379><c> to</c><00:25:47.440><c> create</c><00:25:47.559><c> some</c>

00:25:47.700 --> 00:25:47.710 align:start position:0%
well actually I want to create some
 

00:25:47.710 --> 00:25:49.529 align:start position:0%
well actually I want to create some
records<00:25:48.009><c> and</c><00:25:48.129><c> save</c><00:25:48.609><c> them</c><00:25:48.789><c> reactively</c><00:25:49.389><c> so</c>

00:25:49.529 --> 00:25:49.539 align:start position:0%
records and save them reactively so
 

00:25:49.539 --> 00:25:51.359 align:start position:0%
records and save them reactively so
let's<00:25:49.690><c> do</c><00:25:49.809><c> this</c><00:25:49.929><c> the</c><00:25:50.190><c> using</c><00:25:51.190><c> another</c>

00:25:51.359 --> 00:25:51.369 align:start position:0%
let's do this the using another
 

00:25:51.369 --> 00:25:52.889 align:start position:0%
let's do this the using another
extension<00:25:51.759><c> here</c><00:25:51.999><c> we're</c><00:25:52.090><c> going</c><00:25:52.179><c> to</c><00:25:52.239><c> use</c><00:25:52.359><c> list</c>

00:25:52.889 --> 00:25:52.899 align:start position:0%
extension here we're going to use list
 

00:25:52.899 --> 00:26:02.539 align:start position:0%
extension here we're going to use list
of<00:25:53.309><c> you</c><00:25:54.309><c> know</c><00:25:54.429><c> Margaret</c><00:25:56.999><c> mat</c><00:25:59.039><c> Michelle</c>

00:26:02.539 --> 00:26:02.549 align:start position:0%
 
 

00:26:02.549 --> 00:26:05.999 align:start position:0%
 
Michael<00:26:03.549><c> okay</c><00:26:03.849><c> so</c><00:26:03.909><c> for</c><00:26:04.509><c> MS</c><00:26:04.989><c> and</c><00:26:05.229><c> I</c><00:26:05.830><c> want</c><00:26:05.950><c> to</c>

00:26:05.999 --> 00:26:06.009 align:start position:0%
Michael okay so for MS and I want to
 

00:26:06.009 --> 00:26:07.919 align:start position:0%
Michael okay so for MS and I want to
turn<00:26:06.159><c> this</c><00:26:06.279><c> into</c><00:26:06.340><c> a</c><00:26:06.609><c> publisher</c><00:26:07.269><c> the</c><00:26:07.899><c> publisher</c>

00:26:07.919 --> 00:26:07.929 align:start position:0%
turn this into a publisher the publisher
 

00:26:07.929 --> 00:26:11.549 align:start position:0%
turn this into a publisher the publisher
of<00:26:08.470><c> type</c><00:26:08.649><c> flux</c><00:26:09.009><c> and</c><00:26:09.999><c> that's</c><00:26:10.690><c> a</c><00:26:10.809><c> context</c><00:26:11.379><c> it's</c>

00:26:11.549 --> 00:26:11.559 align:start position:0%
of type flux and that's a context it's
 

00:26:11.559 --> 00:26:14.279 align:start position:0%
of type flux and that's a context it's
an<00:26:11.619><c> extension</c><00:26:12.070><c> to</c><00:26:12.999><c> Kotlin</c><00:26:13.570><c> sequences</c><00:26:14.019><c> cotton</c>

00:26:14.279 --> 00:26:14.289 align:start position:0%
an extension to Kotlin sequences cotton
 

00:26:14.289 --> 00:26:16.169 align:start position:0%
an extension to Kotlin sequences cotton
collections<00:26:14.679><c> that</c><00:26:15.220><c> turns</c><00:26:15.519><c> it</c><00:26:15.639><c> into</c><00:26:15.759><c> a</c><00:26:15.940><c> flux</c>

00:26:16.169 --> 00:26:16.179 align:start position:0%
collections that turns it into a flux
 

00:26:16.179 --> 00:26:19.080 align:start position:0%
collections that turns it into a flux
and<00:26:16.330><c> that</c><00:26:16.359><c> to</c><00:26:16.749><c> flux</c><00:26:17.019><c> method</c><00:26:17.200><c> comes</c><00:26:17.950><c> from</c><00:26:18.279><c> the</c>

00:26:19.080 --> 00:26:19.090 align:start position:0%
and that to flux method comes from the
 

00:26:19.090 --> 00:26:22.529 align:start position:0%
and that to flux method comes from the
reactor<00:26:19.720><c> core</c><00:26:20.019><c> integration</c><00:26:20.619><c> for</c><00:26:21.539><c> common</c>

00:26:22.529 --> 00:26:22.539 align:start position:0%
reactor core integration for common
 

00:26:22.539 --> 00:26:24.749 align:start position:0%
reactor core integration for common
right<00:26:23.019><c> it's</c><00:26:23.259><c> the</c><00:26:23.349><c> common</c><00:26:23.710><c> extension</c><00:26:24.099><c> so</c><00:26:24.580><c> cuz</c>

00:26:24.749 --> 00:26:24.759 align:start position:0%
right it's the common extension so cuz
 

00:26:24.759 --> 00:26:26.070 align:start position:0%
right it's the common extension so cuz
turn<00:26:25.029><c> it</c><00:26:25.090><c> into</c><00:26:25.210><c> a</c><00:26:25.269><c> publisher</c><00:26:25.659><c> a</c><00:26:25.690><c> directive</c>

00:26:26.070 --> 00:26:26.080 align:start position:0%
turn it into a publisher a directive
 

00:26:26.080 --> 00:26:27.869 align:start position:0%
turn it into a publisher a directive
steam<00:26:26.229><c> publisher</c><00:26:26.679><c> and</c><00:26:26.830><c> then</c><00:26:27.309><c> we</c><00:26:27.369><c> can</c><00:26:27.489><c> visit</c>

00:26:27.869 --> 00:26:27.879 align:start position:0%
steam publisher and then we can visit
 

00:26:27.879 --> 00:26:29.729 align:start position:0%
steam publisher and then we can visit
each<00:26:28.149><c> one</c><00:26:28.330><c> of</c><00:26:28.389><c> those</c><00:26:28.450><c> we're</c><00:26:28.629><c> gonna</c><00:26:28.779><c> say</c><00:26:28.929><c> map</c>

00:26:29.729 --> 00:26:29.739 align:start position:0%
each one of those we're gonna say map
 

00:26:29.739 --> 00:26:32.210 align:start position:0%
each one of those we're gonna say map
each<00:26:30.099><c> one</c><00:26:30.429><c> to</c><00:26:31.090><c> a</c><00:26:31.119><c> customer</c>

00:26:32.210 --> 00:26:32.220 align:start position:0%
each one to a customer
 

00:26:32.220 --> 00:26:35.310 align:start position:0%
each one to a customer
those<00:26:33.220><c> game</c><00:26:33.429><c> is</c><00:26:33.549><c> equal</c><00:26:33.759><c> to</c><00:26:33.879><c> that</c><00:26:33.970><c> I</c><00:26:34.269><c> want</c><00:26:35.229><c> to</c>

00:26:35.310 --> 00:26:35.320 align:start position:0%
those game is equal to that I want to
 

00:26:35.320 --> 00:26:38.940 align:start position:0%
those game is equal to that I want to
turn<00:26:35.559><c> to</c><00:26:35.590><c> see</c><00:26:36.039><c> this</c><00:26:36.249><c> all</c><00:26:37.619><c> so</c><00:26:38.619><c> I'm</c><00:26:38.679><c> gonna</c><00:26:38.769><c> see</c>

00:26:38.940 --> 00:26:38.950 align:start position:0%
turn to see this all so I'm gonna see
 

00:26:38.950 --> 00:26:42.330 align:start position:0%
turn to see this all so I'm gonna see
map<00:26:39.330><c> that</c><00:26:40.330><c> and</c><00:26:41.080><c> then</c><00:26:41.200><c> flat</c><00:26:41.470><c> map</c><00:26:41.710><c> that</c><00:26:42.009><c> by</c>

00:26:42.330 --> 00:26:42.340 align:start position:0%
map that and then flat map that by
 

00:26:42.340 --> 00:26:43.919 align:start position:0%
map that and then flat map that by
saving<00:26:42.700><c> it</c><00:26:42.879><c> in</c><00:26:42.970><c> the</c><00:26:43.059><c> database</c><00:26:43.210><c> so</c><00:26:43.419><c> customer</c>

00:26:43.919 --> 00:26:43.929 align:start position:0%
saving it in the database so customer
 

00:26:43.929 --> 00:26:47.599 align:start position:0%
saving it in the database so customer
pause<00:26:44.109><c> right</c><00:26:44.289><c> at</c><00:26:44.379><c> save</c><00:26:44.729><c> passing</c><00:26:45.729><c> in</c><00:26:45.820><c> it</c><00:26:46.029><c> and</c>

00:26:47.599 --> 00:26:47.609 align:start position:0%
pause right at save passing in it and
 

00:26:47.609 --> 00:26:54.359 align:start position:0%
pause right at save passing in it and
that'll<00:26:48.609><c> give</c><00:26:48.729><c> us</c><00:26:48.759><c> Val</c><00:26:51.210><c> customers</c><00:26:52.979><c> equals</c><00:26:53.979><c> a</c>

00:26:54.359 --> 00:26:54.369 align:start position:0%
that'll give us Val customers equals a
 

00:26:54.369 --> 00:26:58.789 align:start position:0%
that'll give us Val customers equals a
publisher<00:26:55.269><c> of</c><00:26:55.450><c> customer</c><00:26:57.059><c> and</c><00:26:58.059><c> I'm</c><00:26:58.149><c> Eric</c><00:26:58.419><c> and</c>

00:26:58.789 --> 00:26:58.799 align:start position:0%
publisher of customer and I'm Eric and
 

00:26:58.799 --> 00:27:01.139 align:start position:0%
publisher of customer and I'm Eric and
we<00:26:59.799><c> can</c><00:26:59.919><c> save</c><00:27:00.190><c> the</c><00:27:00.340><c> data</c><00:27:00.429><c> we</c><00:27:00.549><c> can</c><00:27:00.669><c> say</c><00:27:00.789><c> customer</c>

00:27:01.139 --> 00:27:01.149 align:start position:0%
we can save the data we can say customer
 

00:27:01.149 --> 00:27:05.419 align:start position:0%
we can save the data we can say customer
pause<00:27:01.330><c> right</c><00:27:01.570><c> out</c><00:27:01.690><c> delete</c><00:27:02.590><c> all</c><00:27:03.059><c> but</c><00:27:04.059><c> then</c><00:27:04.419><c> many</c>

00:27:05.419 --> 00:27:05.429 align:start position:0%
pause right out delete all but then many
 

00:27:05.429 --> 00:27:12.479 align:start position:0%
pause right out delete all but then many
customers<00:27:06.429><c> that</c><00:27:08.609><c> then</c><00:27:09.609><c> many</c><00:27:11.159><c> customer</c><00:27:12.159><c> posit</c>

00:27:12.479 --> 00:27:12.489 align:start position:0%
customers that then many customer posit
 

00:27:12.489 --> 00:27:16.950 align:start position:0%
customers that then many customer posit
or<00:27:12.639><c> not</c><00:27:13.599><c> find</c><00:27:14.080><c> all</c><00:27:14.320><c> dot</c><00:27:15.249><c> subscribe</c><00:27:16.089><c> right</c>

00:27:16.950 --> 00:27:16.960 align:start position:0%
or not find all dot subscribe right
 

00:27:16.960 --> 00:27:20.430 align:start position:0%
or not find all dot subscribe right
print<00:27:17.680><c> mine</c><00:27:17.860><c> IT</c><00:27:18.570><c> very</c><00:27:19.570><c> good</c><00:27:19.690><c> so</c><00:27:19.930><c> we</c><00:27:20.080><c> have</c><00:27:20.230><c> now</c>

00:27:20.430 --> 00:27:20.440 align:start position:0%
print mine IT very good so we have now
 

00:27:20.440 --> 00:27:26.190 align:start position:0%
print mine IT very good so we have now
the<00:27:21.010><c> list</c><00:27:21.580><c> of</c><00:27:21.700><c> publishers</c><00:27:22.060><c> and</c><00:27:24.690><c> the</c><00:27:25.690><c> dinner</c>

00:27:26.190 --> 00:27:26.200 align:start position:0%
the list of publishers and the dinner
 

00:27:26.200 --> 00:27:27.120 align:start position:0%
the list of publishers and the dinner
should<00:27:26.350><c> be</c><00:27:26.410><c> written</c><00:27:26.590><c> in</c><00:27:26.710><c> the</c><00:27:26.770><c> database</c><00:27:27.010><c> when</c>

00:27:27.120 --> 00:27:27.130 align:start position:0%
should be written in the database when
 

00:27:27.130 --> 00:27:28.500 align:start position:0%
should be written in the database when
the<00:27:27.190><c> application</c><00:27:27.550><c> starts</c><00:27:27.580><c> up</c><00:27:27.820><c> let's</c><00:27:28.210><c> confirm</c>

00:27:28.500 --> 00:27:28.510 align:start position:0%
the application starts up let's confirm
 

00:27:28.510 --> 00:27:44.130 align:start position:0%
the application starts up let's confirm
as<00:27:28.660><c> much</c><00:27:28.800><c> by</c><00:27:29.800><c> running</c><00:27:30.220><c> application</c>

00:27:44.130 --> 00:27:44.140 align:start position:0%
 
 

00:27:44.140 --> 00:27:46.590 align:start position:0%
 
all<00:27:44.740><c> right</c><00:27:44.950><c> so</c><00:27:45.160><c> that</c><00:27:45.280><c> work</c><00:27:45.820><c> just</c><00:27:45.850><c> fine</c><00:27:46.210><c> we</c><00:27:46.450><c> got</c>

00:27:46.590 --> 00:27:46.600 align:start position:0%
all right so that work just fine we got
 

00:27:46.600 --> 00:27:48.060 align:start position:0%
all right so that work just fine we got
the<00:27:46.990><c> four</c><00:27:47.170><c> records</c><00:27:47.500><c> in</c><00:27:47.590><c> the</c><00:27:47.650><c> database</c><00:27:47.710><c> we've</c>

00:27:48.060 --> 00:27:48.070 align:start position:0%
the four records in the database we've
 

00:27:48.070 --> 00:27:49.470 align:start position:0%
the four records in the database we've
got<00:27:48.190><c> their</c><00:27:48.310><c> IDs</c><00:27:48.580><c> all</c><00:27:48.880><c> that</c><00:27:49.030><c> stuff</c><00:27:49.180><c> is</c><00:27:49.300><c> just</c>

00:27:49.470 --> 00:27:49.480 align:start position:0%
got their IDs all that stuff is just
 

00:27:49.480 --> 00:27:51.300 align:start position:0%
got their IDs all that stuff is just
working<00:27:49.750><c> as</c><00:27:49.930><c> we</c><00:27:50.320><c> expect</c><00:27:50.650><c> for</c><00:27:51.100><c> your</c><00:27:51.190><c> little</c>

00:27:51.300 --> 00:27:51.310 align:start position:0%
working as we expect for your little
 

00:27:51.310 --> 00:27:53.310 align:start position:0%
working as we expect for your little
code<00:27:51.550><c> so</c><00:27:51.760><c> far</c><00:27:51.940><c> let's</c><00:27:52.150><c> build</c><00:27:52.360><c> a</c><00:27:52.420><c> REST</c><00:27:52.600><c> API</c><00:27:52.720><c> so</c>

00:27:53.310 --> 00:27:53.320 align:start position:0%
code so far let's build a REST API so
 

00:27:53.320 --> 00:27:55.740 align:start position:0%
code so far let's build a REST API so
again<00:27:53.500><c> here</c><00:27:54.040><c> we</c><00:27:54.280><c> can</c><00:27:54.400><c> use</c><00:27:54.430><c> a</c><00:27:54.820><c> nice</c><00:27:55.300><c> new</c><00:27:55.510><c> feature</c>

00:27:55.740 --> 00:27:55.750 align:start position:0%
again here we can use a nice new feature
 

00:27:55.750 --> 00:27:57.900 align:start position:0%
again here we can use a nice new feature
in<00:27:56.050><c> Spring</c><00:27:56.710><c> Framework</c><00:27:56.830><c> five</c><00:27:57.190><c> and</c><00:27:57.520><c> spring</c><00:27:57.730><c> Webb</c>

00:27:57.900 --> 00:27:57.910 align:start position:0%
in Spring Framework five and spring Webb
 

00:27:57.910 --> 00:28:00.570 align:start position:0%
in Spring Framework five and spring Webb
flux<00:27:58.180><c> the</c><00:27:58.360><c> reactive</c><00:27:58.720><c> web</c><00:27:59.170><c> runtime</c><00:27:59.410><c> here</c><00:27:59.920><c> we</c>

00:28:00.570 --> 00:28:00.580 align:start position:0%
flux the reactive web runtime here we
 

00:28:00.580 --> 00:28:02.340 align:start position:0%
flux the reactive web runtime here we
can<00:28:00.700><c> say</c><00:28:00.880><c> that</c><00:28:01.090><c> we</c><00:28:01.720><c> want</c><00:28:01.900><c> to</c><00:28:01.960><c> define</c><00:28:02.290><c> our</c>

00:28:02.340 --> 00:28:02.350 align:start position:0%
can say that we want to define our
 

00:28:02.350 --> 00:28:04.320 align:start position:0%
can say that we want to define our
endpoints<00:28:02.920><c> using</c><00:28:03.430><c> functional</c><00:28:04.120><c> reactive</c>

00:28:04.320 --> 00:28:04.330 align:start position:0%
endpoints using functional reactive
 

00:28:04.330 --> 00:28:05.850 align:start position:0%
endpoints using functional reactive
endpoints<00:28:05.020><c> and</c><00:28:05.140><c> again</c><00:28:05.290><c> we</c><00:28:05.410><c> could</c><00:28:05.590><c> use</c><00:28:05.620><c> the</c>

00:28:05.850 --> 00:28:05.860 align:start position:0%
endpoints and again we could use the
 

00:28:05.860 --> 00:28:08.160 align:start position:0%
endpoints and again we could use the
spring<00:28:06.130><c> with</c><00:28:06.310><c> MVC</c><00:28:06.640><c> style</c><00:28:07.030><c> controllers</c><00:28:07.900><c> as</c><00:28:08.020><c> we</c>

00:28:08.160 --> 00:28:08.170 align:start position:0%
spring with MVC style controllers as we
 

00:28:08.170 --> 00:28:09.780 align:start position:0%
spring with MVC style controllers as we
did<00:28:08.320><c> in</c><00:28:08.410><c> the</c><00:28:08.470><c> last</c><00:28:08.560><c> example</c><00:28:08.710><c> but</c><00:28:09.430><c> this</c><00:28:09.550><c> is</c><00:28:09.670><c> I</c>

00:28:09.780 --> 00:28:09.790 align:start position:0%
did in the last example but this is I
 

00:28:09.790 --> 00:28:12.000 align:start position:0%
did in the last example but this is I
think<00:28:09.820><c> a</c><00:28:10.030><c> little</c><00:28:10.120><c> bit</c><00:28:10.300><c> more</c><00:28:10.650><c> this</c><00:28:11.650><c> was</c><00:28:11.890><c> gonna</c>

00:28:12.000 --> 00:28:12.010 align:start position:0%
think a little bit more this was gonna
 

00:28:12.010 --> 00:28:13.650 align:start position:0%
think a little bit more this was gonna
be<00:28:12.160><c> very</c><00:28:12.430><c> approachable</c><00:28:13.060><c> if</c><00:28:13.390><c> you're</c><00:28:13.510><c> doing</c>

00:28:13.650 --> 00:28:13.660 align:start position:0%
be very approachable if you're doing
 

00:28:13.660 --> 00:28:15.300 align:start position:0%
be very approachable if you're doing
Kotler<00:28:13.960><c> and</c><00:28:13.990><c> you</c><00:28:14.110><c> want</c><00:28:14.260><c> to</c><00:28:14.350><c> you</c><00:28:14.830><c> know</c><00:28:14.950><c> least</c>

00:28:15.300 --> 00:28:15.310 align:start position:0%
Kotler and you want to you know least
 

00:28:15.310 --> 00:28:17.850 align:start position:0%
Kotler and you want to you know least
amount<00:28:15.550><c> of</c><00:28:15.640><c> code</c><00:28:15.850><c> for</c><00:28:16.120><c> the</c><00:28:16.660><c> results</c><00:28:17.200><c> so</c><00:28:17.680><c> what</c>

00:28:17.850 --> 00:28:17.860 align:start position:0%
amount of code for the results so what
 

00:28:17.860 --> 00:28:19.260 align:start position:0%
amount of code for the results so what
we're<00:28:18.010><c> gonna</c><00:28:18.100><c> do</c><00:28:18.280><c> we're</c><00:28:18.430><c> to</c><00:28:18.520><c> do</c><00:28:18.670><c> what</c><00:28:19.180><c> we're</c>

00:28:19.260 --> 00:28:19.270 align:start position:0%
we're gonna do we're to do what we're
 

00:28:19.270 --> 00:28:20.460 align:start position:0%
we're gonna do we're to do what we're
gonna<00:28:19.360><c> just</c><00:28:19.540><c> want</c><00:28:19.660><c> to</c><00:28:19.750><c> use</c><00:28:19.900><c> it</c><00:28:20.050><c> function</c>

00:28:20.460 --> 00:28:20.470 align:start position:0%
gonna just want to use it function
 

00:28:20.470 --> 00:28:22.740 align:start position:0%
gonna just want to use it function
reactive<00:28:20.770><c> endpoints</c><00:28:21.160><c> and</c><00:28:21.850><c> we</c><00:28:22.000><c> use</c><00:28:22.180><c> the</c><00:28:22.330><c> Kotlin</c>

00:28:22.740 --> 00:28:22.750 align:start position:0%
reactive endpoints and we use the Kotlin
 

00:28:22.750 --> 00:28:25.350 align:start position:0%
reactive endpoints and we use the Kotlin
DSL<00:28:23.110><c> which</c><00:28:23.140><c> makes</c><00:28:23.500><c> it</c><00:28:23.590><c> even</c><00:28:23.770><c> more</c><00:28:23.950><c> succinct</c><00:28:24.610><c> so</c>

00:28:25.350 --> 00:28:25.360 align:start position:0%
DSL which makes it even more succinct so
 

00:28:25.360 --> 00:28:30.420 align:start position:0%
DSL which makes it even more succinct so
mater<00:28:26.020><c> get</c><00:28:27.570><c> customers</c><00:28:28.570><c> and</c><00:28:28.920><c> our</c><00:28:29.920><c> job</c><00:28:30.190><c> is</c><00:28:30.400><c> to</c>

00:28:30.420 --> 00:28:30.430 align:start position:0%
mater get customers and our job is to
 

00:28:30.430 --> 00:28:33.810 align:start position:0%
mater get customers and our job is to
return<00:28:30.760><c> a</c><00:28:31.230><c> server</c><00:28:32.230><c> response</c><00:28:32.680><c> that</c><00:28:32.920><c> okay</c><00:28:33.340><c> body</c>

00:28:33.810 --> 00:28:33.820 align:start position:0%
return a server response that okay body
 

00:28:33.820 --> 00:28:36.120 align:start position:0%
return a server response that okay body
and<00:28:34.090><c> we're</c><00:28:34.690><c> going</c><00:28:34.870><c> to</c><00:28:34.990><c> need</c><00:28:35.410><c> the</c><00:28:35.650><c> customer</c>

00:28:36.120 --> 00:28:36.130 align:start position:0%
and we're going to need the customer
 

00:28:36.130 --> 00:28:40.890 align:start position:0%
and we're going to need the customer
repository<00:28:36.730><c> so</c><00:28:36.940><c> customer</c><00:28:38.460><c> repository</c><00:28:39.900><c> equals</c>

00:28:40.890 --> 00:28:40.900 align:start position:0%
repository so customer repository equals
 

00:28:40.900 --> 00:28:44.640 align:start position:0%
repository so customer repository equals
rift<00:28:41.200><c> customer</c><00:28:41.560><c> repository</c><00:28:42.340><c> and</c><00:28:43.560><c> we're</c><00:28:44.560><c> gonna</c>

00:28:44.640 --> 00:28:44.650 align:start position:0%
rift customer repository and we're gonna
 

00:28:44.650 --> 00:28:47.730 align:start position:0%
rift customer repository and we're gonna
say<00:28:44.880><c> customer</c><00:28:45.880><c> repository</c><00:28:46.420><c> don't</c><00:28:46.630><c> find</c><00:28:47.350><c> all</c>

00:28:47.730 --> 00:28:47.740 align:start position:0%
say customer repository don't find all
 

00:28:47.740 --> 00:28:50.130 align:start position:0%
say customer repository don't find all
it's<00:28:48.700><c> a</c><00:28:48.820><c> return</c><00:28:49.030><c> to</c><00:28:49.090><c> flux</c><00:28:49.480><c> of</c><00:28:49.660><c> customers</c><00:28:50.110><c> a</c>

00:28:50.130 --> 00:28:50.140 align:start position:0%
it's a return to flux of customers a
 

00:28:50.140 --> 00:28:52.650 align:start position:0%
it's a return to flux of customers a
publisher<00:28:50.770><c> of</c><00:28:50.920><c> customers</c><00:28:51.670><c> notice</c><00:28:52.420><c> that</c><00:28:52.510><c> we're</c>

00:28:52.650 --> 00:28:52.660 align:start position:0%
publisher of customers notice that we're
 

00:28:52.660 --> 00:28:54.570 align:start position:0%
publisher of customers notice that we're
being<00:28:53.080><c> provided</c><00:28:53.590><c> an</c><00:28:53.740><c> extension</c><00:28:54.280><c> that</c><00:28:54.400><c> we</c><00:28:54.460><c> can</c>

00:28:54.570 --> 00:28:54.580 align:start position:0%
being provided an extension that we can
 

00:28:54.580 --> 00:28:56.460 align:start position:0%
being provided an extension that we can
interact<00:28:54.850><c> with</c><00:28:55.000><c> and</c><00:28:55.360><c> we</c><00:28:55.930><c> want</c><00:28:56.080><c> that</c><00:28:56.200><c> extension</c>

00:28:56.460 --> 00:28:56.470 align:start position:0%
interact with and we want that extension
 

00:28:56.470 --> 00:28:58.500 align:start position:0%
interact with and we want that extension
because<00:28:56.680><c> otherwise</c><00:28:57.160><c> without</c><00:28:58.000><c> that</c><00:28:58.270><c> extension</c>

00:28:58.500 --> 00:28:58.510 align:start position:0%
because otherwise without that extension
 

00:28:58.510 --> 00:29:00.240 align:start position:0%
because otherwise without that extension
we'd<00:28:58.780><c> have</c><00:28:58.960><c> to</c><00:28:59.080><c> provide</c><00:28:59.320><c> a</c><00:28:59.380><c> class</c><00:28:59.740><c> literal</c><00:29:00.100><c> or</c>

00:29:00.240 --> 00:29:00.250 align:start position:0%
we'd have to provide a class literal or
 

00:29:00.250 --> 00:29:03.420 align:start position:0%
we'd have to provide a class literal or
a<00:29:00.310><c> super</c><00:29:00.970><c> type</c><00:29:01.180><c> token</c><00:29:01.680><c> you</c><00:29:02.680><c> know</c><00:29:02.800><c> as</c>

00:29:03.420 --> 00:29:03.430 align:start position:0%
a super type token you know as
 

00:29:03.430 --> 00:29:04.980 align:start position:0%
a super type token you know as
represented<00:29:04.030><c> by</c><00:29:04.090><c> the</c><00:29:04.180><c> parameterize</c><00:29:04.750><c> type</c>

00:29:04.980 --> 00:29:04.990 align:start position:0%
represented by the parameterize type
 

00:29:04.990 --> 00:29:06.630 align:start position:0%
represented by the parameterize type
reference<00:29:05.290><c> in</c><00:29:05.410><c> the</c><00:29:05.470><c> spring</c><00:29:05.680><c> ecosystem</c><00:29:06.160><c> that</c>

00:29:06.630 --> 00:29:06.640 align:start position:0%
reference in the spring ecosystem that
 

00:29:06.640 --> 00:29:08.880 align:start position:0%
reference in the spring ecosystem that
told<00:29:07.090><c> the</c><00:29:07.330><c> publisher</c><00:29:07.690><c> told</c><00:29:07.960><c> the</c><00:29:08.500><c> web</c><00:29:08.740><c> runtime</c>

00:29:08.880 --> 00:29:08.890 align:start position:0%
told the publisher told the web runtime
 

00:29:08.890 --> 00:29:11.430 align:start position:0%
told the publisher told the web runtime
where<00:29:09.730><c> to</c><00:29:09.970><c> do</c><00:29:10.240><c> data</c><00:29:10.570><c> framing</c><00:29:10.930><c> remember</c><00:29:11.320><c> that</c>

00:29:11.430 --> 00:29:11.440 align:start position:0%
where to do data framing remember that
 

00:29:11.440 --> 00:29:13.500 align:start position:0%
where to do data framing remember that
publisher<00:29:11.860><c> could</c><00:29:12.370><c> produce</c><00:29:12.580><c> a</c><00:29:13.060><c> you</c><00:29:13.390><c> know</c><00:29:13.480><c> a</c>

00:29:13.500 --> 00:29:13.510 align:start position:0%
publisher could produce a you know a
 

00:29:13.510 --> 00:29:15.510 align:start position:0%
publisher could produce a you know a
trillion<00:29:14.380><c> values</c><00:29:14.740><c> it</c><00:29:14.920><c> could</c><00:29:15.040><c> go</c><00:29:15.160><c> on</c><00:29:15.220><c> forever</c>

00:29:15.510 --> 00:29:15.520 align:start position:0%
trillion values it could go on forever
 

00:29:15.520 --> 00:29:18.030 align:start position:0%
trillion values it could go on forever
it<00:29:15.820><c> could</c><00:29:16.000><c> never</c><00:29:16.210><c> stop</c><00:29:16.570><c> and</c><00:29:16.840><c> that's</c><00:29:17.200><c> perfectly</c>

00:29:18.030 --> 00:29:18.040 align:start position:0%
it could never stop and that's perfectly
 

00:29:18.040 --> 00:29:20.940 align:start position:0%
it could never stop and that's perfectly
semantically<00:29:18.640><c> okay</c><00:29:19.150><c> the</c><00:29:20.080><c> web</c><00:29:20.230><c> runtime</c><00:29:20.440><c> needs</c>

00:29:20.940 --> 00:29:20.950 align:start position:0%
semantically okay the web runtime needs
 

00:29:20.950 --> 00:29:23.100 align:start position:0%
semantically okay the web runtime needs
to<00:29:21.130><c> know</c><00:29:21.250><c> when</c><00:29:21.760><c> to</c><00:29:21.790><c> frame</c><00:29:22.270><c> the</c><00:29:22.570><c> responses</c>

00:29:23.100 --> 00:29:23.110 align:start position:0%
to know when to frame the responses
 

00:29:23.110 --> 00:29:24.450 align:start position:0%
to know when to frame the responses
though<00:29:23.200><c> when</c><00:29:23.380><c> to</c><00:29:23.560><c> you</c><00:29:23.950><c> know</c><00:29:24.040><c> it</c><00:29:24.160><c> doesn't</c><00:29:24.370><c> want</c>

00:29:24.450 --> 00:29:24.460 align:start position:0%
though when to you know it doesn't want
 

00:29:24.460 --> 00:29:25.800 align:start position:0%
though when to you know it doesn't want
to<00:29:24.550><c> wait</c><00:29:24.640><c> into</c><00:29:24.790><c> the</c><00:29:24.850><c> last</c><00:29:25.000><c> byte</c><00:29:25.270><c> especially</c><00:29:25.720><c> if</c>

00:29:25.800 --> 00:29:25.810 align:start position:0%
to wait into the last byte especially if
 

00:29:25.810 --> 00:29:27.600 align:start position:0%
to wait into the last byte especially if
that<00:29:25.840><c> last</c><00:29:26.110><c> byte</c><00:29:26.320><c> is</c><00:29:26.440><c> never</c><00:29:26.620><c> gonna</c><00:29:26.740><c> arrive</c><00:29:26.980><c> so</c>

00:29:27.600 --> 00:29:27.610 align:start position:0%
that last byte is never gonna arrive so
 

00:29:27.610 --> 00:29:30.120 align:start position:0%
that last byte is never gonna arrive so
that<00:29:28.150><c> publisher</c><00:29:28.630><c> needs</c><00:29:29.170><c> a</c><00:29:29.350><c> clue</c><00:29:29.710><c> as</c><00:29:29.890><c> to</c><00:29:29.920><c> when</c>

00:29:30.120 --> 00:29:30.130 align:start position:0%
that publisher needs a clue as to when
 

00:29:30.130 --> 00:29:31.410 align:start position:0%
that publisher needs a clue as to when
it<00:29:30.250><c> should</c><00:29:30.430><c> start</c><00:29:30.640><c> you</c><00:29:31.060><c> know</c><00:29:31.150><c> when</c><00:29:31.270><c> it</c><00:29:31.360><c> should</c>

00:29:31.410 --> 00:29:31.420 align:start position:0%
it should start you know when it should
 

00:29:31.420 --> 00:29:33.450 align:start position:0%
it should start you know when it should
you<00:29:32.320><c> know</c><00:29:32.410><c> at</c><00:29:32.680><c> what</c><00:29:32.830><c> point</c><00:29:32.860><c> it</c><00:29:33.130><c> should</c><00:29:33.160><c> take</c>

00:29:33.450 --> 00:29:33.460 align:start position:0%
you know at what point it should take
 

00:29:33.460 --> 00:29:34.800 align:start position:0%
you know at what point it should take
what<00:29:33.610><c> it's</c><00:29:33.730><c> got</c><00:29:33.880><c> and</c><00:29:34.090><c> then</c><00:29:34.360><c> send</c><00:29:34.600><c> it</c><00:29:34.660><c> back</c><00:29:34.780><c> to</c>

00:29:34.800 --> 00:29:34.810 align:start position:0%
what it's got and then send it back to
 

00:29:34.810 --> 00:29:36.840 align:start position:0%
what it's got and then send it back to
the<00:29:34.960><c> client</c><00:29:35.140><c> and</c><00:29:35.380><c> we're</c><00:29:35.860><c> gonna</c><00:29:35.950><c> say</c><00:29:36.190><c> send</c><00:29:36.760><c> it</c>

00:29:36.840 --> 00:29:36.850 align:start position:0%
the client and we're gonna say send it
 

00:29:36.850 --> 00:29:38.820 align:start position:0%
the client and we're gonna say send it
back<00:29:37.000><c> for</c><00:29:37.240><c> every</c><00:29:37.450><c> single</c><00:29:37.750><c> customer</c><00:29:38.170><c> entity</c><00:29:38.410><c> it</c>

00:29:38.820 --> 00:29:38.830 align:start position:0%
back for every single customer entity it
 

00:29:38.830 --> 00:29:40.920 align:start position:0%
back for every single customer entity it
needs<00:29:39.160><c> to</c><00:29:39.280><c> know</c><00:29:39.430><c> what</c><00:29:39.970><c> that</c><00:29:40.120><c> shape</c><00:29:40.420><c> what</c><00:29:40.810><c> the</c>

00:29:40.920 --> 00:29:40.930 align:start position:0%
needs to know what that shape what the
 

00:29:40.930 --> 00:29:42.720 align:start position:0%
needs to know what that shape what the
shape<00:29:41.080><c> of</c><00:29:41.170><c> that</c><00:29:41.320><c> customer</c><00:29:41.680><c> is</c><00:29:41.830><c> and</c><00:29:42.130><c> we</c><00:29:42.430><c> do</c><00:29:42.580><c> that</c>

00:29:42.720 --> 00:29:42.730 align:start position:0%
shape of that customer is and we do that
 

00:29:42.730 --> 00:29:44.720 align:start position:0%
shape of that customer is and we do that
normally<00:29:43.030><c> in</c><00:29:43.150><c> the</c><00:29:43.240><c> Java</c><00:29:43.450><c> API</c><00:29:43.690><c> by</c><00:29:44.260><c> providing</c>

00:29:44.720 --> 00:29:44.730 align:start position:0%
normally in the Java API by providing
 

00:29:44.730 --> 00:29:47.250 align:start position:0%
normally in the Java API by providing
customer<00:29:45.730><c> class</c><00:29:46.000><c> Java</c><00:29:46.330><c> as</c><00:29:46.510><c> a</c><00:29:46.540><c> class</c><00:29:47.020><c> the</c>

00:29:47.250 --> 00:29:47.260 align:start position:0%
customer class Java as a class the
 

00:29:47.260 --> 00:29:49.260 align:start position:0%
customer class Java as a class the
reference<00:29:47.590><c> our</c><00:29:47.710><c> class</c><00:29:47.890><c> literal</c><00:29:48.190><c> but</c><00:29:48.640><c> because</c>

00:29:49.260 --> 00:29:49.270 align:start position:0%
reference our class literal but because
 

00:29:49.270 --> 00:29:51.270 align:start position:0%
reference our class literal but because
we<00:29:49.390><c> have</c><00:29:49.480><c> this</c><00:29:49.570><c> common</c><00:29:49.840><c> extension</c><00:29:50.260><c> it's</c><00:29:51.040><c> ray</c>

00:29:51.270 --> 00:29:51.280 align:start position:0%
we have this common extension it's ray
 

00:29:51.280 --> 00:29:53.070 align:start position:0%
we have this common extension it's ray
if<00:29:51.400><c> I'd</c><00:29:51.550><c> right</c><00:29:51.940><c> it's</c><00:29:52.090><c> already</c><00:29:52.300><c> it's</c><00:29:52.630><c> captured</c>

00:29:53.070 --> 00:29:53.080 align:start position:0%
if I'd right it's already it's captured
 

00:29:53.080 --> 00:29:54.600 align:start position:0%
if I'd right it's already it's captured
in<00:29:53.260><c> line</c><00:29:53.470><c> on</c><00:29:53.620><c> the</c><00:29:53.740><c> site</c><00:29:53.890><c> invocation</c><00:29:54.340><c> there</c><00:29:54.460><c> so</c>

00:29:54.600 --> 00:29:54.610 align:start position:0%
in line on the site invocation there so
 

00:29:54.610 --> 00:29:56.220 align:start position:0%
in line on the site invocation there so
now<00:29:54.760><c> we</c><00:29:55.330><c> have</c><00:29:55.450><c> this</c>

00:29:56.220 --> 00:29:56.230 align:start position:0%
now we have this
 

00:29:56.230 --> 00:29:58.740 align:start position:0%
now we have this
react<00:29:56.830><c> to</c><00:29:56.950><c> the</c><00:29:57.040><c> endpoint</c><00:29:57.250><c> API</c><00:29:57.880><c> that'll</c><00:29:58.630><c> work</c>

00:29:58.740 --> 00:29:58.750 align:start position:0%
react to the endpoint API that'll work
 

00:29:58.750 --> 00:30:00.360 align:start position:0%
react to the endpoint API that'll work
just<00:29:58.810><c> fine</c><00:29:59.140><c> let's</c><00:29:59.410><c> go</c><00:29:59.500><c> ahead</c><00:29:59.560><c> and</c><00:29:59.740><c> start</c><00:30:00.220><c> this</c>

00:30:00.360 --> 00:30:00.370 align:start position:0%
just fine let's go ahead and start this
 

00:30:00.370 --> 00:30:03.450 align:start position:0%
just fine let's go ahead and start this
up<00:30:00.520><c> now</c><00:30:01.480><c> this</c><00:30:01.630><c> is</c><00:30:01.750><c> you</c><00:30:02.440><c> know</c><00:30:02.530><c> this</c><00:30:02.650><c> is</c><00:30:02.830><c> a</c><00:30:02.860><c> good</c>

00:30:03.450 --> 00:30:03.460 align:start position:0%
up now this is you know this is a good
 

00:30:03.460 --> 00:30:05.370 align:start position:0%
up now this is you know this is a good
example<00:30:03.550><c> of</c><00:30:03.820><c> an</c><00:30:03.940><c> API</c><00:30:04.300><c> whoops</c><00:30:04.750><c> I</c><00:30:04.900><c> should</c><00:30:05.080><c> kill</c>

00:30:05.370 --> 00:30:05.380 align:start position:0%
example of an API whoops I should kill
 

00:30:05.380 --> 00:30:06.480 align:start position:0%
example of an API whoops I should kill
the<00:30:05.560><c> other</c><00:30:05.680><c> one</c><00:30:05.830><c> otherwise</c><00:30:06.100><c> we'll</c><00:30:06.220><c> run</c><00:30:06.370><c> into</c>

00:30:06.480 --> 00:30:06.490 align:start position:0%
the other one otherwise we'll run into
 

00:30:06.490 --> 00:30:09.930 align:start position:0%
the other one otherwise we'll run into
the<00:30:06.550><c> same</c><00:30:06.670><c> problems</c><00:30:08.520><c> this</c><00:30:09.520><c> is</c><00:30:09.640><c> a</c><00:30:09.700><c> good</c><00:30:09.820><c> example</c>

00:30:09.930 --> 00:30:09.940 align:start position:0%
the same problems this is a good example
 

00:30:09.940 --> 00:30:14.610 align:start position:0%
the same problems this is a good example
of<00:30:10.150><c> an</c><00:30:10.240><c> API</c><00:30:10.450><c> that</c><00:30:11.320><c> works</c><00:30:11.560><c> just</c><00:30:11.680><c> fine</c><00:30:13.560><c> you</c><00:30:14.560><c> know</c>

00:30:14.610 --> 00:30:14.620 align:start position:0%
of an API that works just fine you know
 

00:30:14.620 --> 00:30:17.130 align:start position:0%
of an API that works just fine you know
using<00:30:14.830><c> reactive</c><00:30:15.310><c> stuff</c><00:30:15.520><c> of</c><00:30:15.730><c> course</c><00:30:16.020><c> let's</c><00:30:17.020><c> say</c>

00:30:17.130 --> 00:30:17.140 align:start position:0%
using reactive stuff of course let's say
 

00:30:17.140 --> 00:30:18.720 align:start position:0%
using reactive stuff of course let's say
this<00:30:17.290><c> is</c><00:30:17.350><c> more</c><00:30:17.710><c> than</c><00:30:17.830><c> just</c><00:30:17.890><c> a</c><00:30:18.070><c> service</c><00:30:18.220><c> let's</c>

00:30:18.720 --> 00:30:18.730 align:start position:0%
this is more than just a service let's
 

00:30:18.730 --> 00:30:20.430 align:start position:0%
this is more than just a service let's
say<00:30:18.940><c> that</c><00:30:19.090><c> this</c><00:30:19.150><c> is</c><00:30:19.300><c> also</c><00:30:19.480><c> an</c><00:30:19.780><c> edge</c><00:30:19.990><c> service</c>

00:30:20.430 --> 00:30:20.440 align:start position:0%
say that this is also an edge service
 

00:30:20.440 --> 00:30:22.200 align:start position:0%
say that this is also an edge service
not<00:30:20.620><c> just</c><00:30:20.770><c> a</c><00:30:20.830><c> REST</c><00:30:20.980><c> API</c><00:30:21.070><c> with</c><00:30:21.400><c> an</c><00:30:21.670><c> edge</c><00:30:21.910><c> service</c>

00:30:22.200 --> 00:30:22.210 align:start position:0%
not just a REST API with an edge service
 

00:30:22.210 --> 00:30:23.730 align:start position:0%
not just a REST API with an edge service
it's<00:30:22.360><c> the</c><00:30:22.480><c> back</c><00:30:22.900><c> end</c><00:30:23.140><c> for</c><00:30:23.290><c> a</c><00:30:23.320><c> front-end</c><00:30:23.650><c> or</c>

00:30:23.730 --> 00:30:23.740 align:start position:0%
it's the back end for a front-end or
 

00:30:23.740 --> 00:30:27.600 align:start position:0%
it's the back end for a front-end or
it's<00:30:23.890><c> the</c><00:30:24.010><c> integration</c><00:30:24.850><c> with</c><00:30:25.560><c> with</c><00:30:26.560><c> your</c><00:30:26.740><c> with</c>

00:30:27.600 --> 00:30:27.610 align:start position:0%
it's the integration with with your with
 

00:30:27.610 --> 00:30:30.750 align:start position:0%
it's the integration with with your with
some<00:30:27.790><c> other</c><00:30:29.220><c> technology</c>

00:30:30.750 --> 00:30:30.760 align:start position:0%
some other technology
 

00:30:30.760 --> 00:30:33.210 align:start position:0%
some other technology
maybe<00:30:31.570><c> it's</c><00:30:31.690><c> the</c><00:30:31.810><c> the</c><00:30:32.170><c> thing</c><00:30:32.320><c> that</c><00:30:32.350><c> is</c><00:30:32.620><c> the</c>

00:30:33.210 --> 00:30:33.220 align:start position:0%
maybe it's the the thing that is the
 

00:30:33.220 --> 00:30:34.590 align:start position:0%
maybe it's the the thing that is the
first<00:30:33.370><c> port</c><00:30:33.730><c> of</c><00:30:33.760><c> call</c><00:30:33.820><c> for</c><00:30:34.180><c> requests</c><00:30:34.420><c> coming</c>

00:30:34.590 --> 00:30:34.600 align:start position:0%
first port of call for requests coming
 

00:30:34.600 --> 00:30:35.580 align:start position:0%
first port of call for requests coming
from<00:30:34.780><c> the</c><00:30:34.870><c> outside</c><00:30:34.960><c> to</c><00:30:35.260><c> the</c><00:30:35.290><c> downstream</c>

00:30:35.580 --> 00:30:35.590 align:start position:0%
from the outside to the downstream
 

00:30:35.590 --> 00:30:39.570 align:start position:0%
from the outside to the downstream
services<00:30:36.040><c> whatever</c><00:30:36.550><c> it</c><00:30:36.790><c> is</c><00:30:36.880><c> we</c><00:30:37.660><c> want</c><00:30:37.780><c> to</c><00:30:38.580><c> proxy</c>

00:30:39.570 --> 00:30:39.580 align:start position:0%
services whatever it is we want to proxy
 

00:30:39.580 --> 00:30:40.830 align:start position:0%
services whatever it is we want to proxy
some<00:30:39.760><c> data</c><00:30:39.940><c> from</c><00:30:40.150><c> one</c><00:30:40.330><c> place</c><00:30:40.510><c> to</c><00:30:40.540><c> another</c><00:30:40.630><c> and</c>

00:30:40.830 --> 00:30:40.840 align:start position:0%
some data from one place to another and
 

00:30:40.840 --> 00:30:43.080 align:start position:0%
some data from one place to another and
here<00:30:41.200><c> we</c><00:30:41.590><c> could</c><00:30:41.800><c> use</c><00:30:41.950><c> ool</c><00:30:42.160><c> but</c><00:30:42.730><c> Zul</c><00:30:42.910><c> has</c><00:30:43.060><c> a</c>

00:30:43.080 --> 00:30:43.090 align:start position:0%
here we could use ool but Zul has a
 

00:30:43.090 --> 00:30:44.280 align:start position:0%
here we could use ool but Zul has a
number<00:30:43.360><c> of</c><00:30:43.420><c> limitations</c><00:30:43.570><c> there</c><00:30:44.140><c> was</c><00:30:44.260><c> a</c>

00:30:44.280 --> 00:30:44.290 align:start position:0%
number of limitations there was a
 

00:30:44.290 --> 00:30:45.990 align:start position:0%
number of limitations there was a
project<00:30:44.920><c> from</c><00:30:45.190><c> Netflix</c><00:30:45.520><c> and</c><00:30:45.640><c> we</c><00:30:45.700><c> integrate</c>

00:30:45.990 --> 00:30:46.000 align:start position:0%
project from Netflix and we integrate
 

00:30:46.000 --> 00:30:48.180 align:start position:0%
project from Netflix and we integrate
that<00:30:46.030><c> with</c><00:30:46.240><c> with</c><00:30:46.540><c> spring</c><00:30:46.780><c> cloud</c><00:30:47.050><c> we</c><00:30:47.860><c> do</c><00:30:47.980><c> a</c><00:30:48.010><c> lot</c>

00:30:48.180 --> 00:30:48.190 align:start position:0%
that with with spring cloud we do a lot
 

00:30:48.190 --> 00:30:51.660 align:start position:0%
that with with spring cloud we do a lot
of<00:30:48.280><c> work</c><00:30:48.730><c> to</c><00:30:48.880><c> make</c><00:30:49.030><c> it</c><00:30:49.980><c> powerful</c><00:30:50.980><c> but</c><00:30:51.370><c> it's</c><00:30:51.520><c> not</c>

00:30:51.660 --> 00:30:51.670 align:start position:0%
of work to make it powerful but it's not
 

00:30:51.670 --> 00:30:53.010 align:start position:0%
of work to make it powerful but it's not
gonna<00:30:51.880><c> be</c><00:30:52.030><c> a</c><00:30:52.060><c> great</c><00:30:52.270><c> fit</c><00:30:52.450><c> for</c><00:30:52.630><c> a</c><00:30:52.660><c> reactive</c>

00:30:53.010 --> 00:30:53.020 align:start position:0%
gonna be a great fit for a reactive
 

00:30:53.020 --> 00:30:55.650 align:start position:0%
gonna be a great fit for a reactive
streams<00:30:53.620><c> based</c><00:30:53.920><c> applications</c><00:30:54.640><c> and</c><00:30:55.360><c> it</c><00:30:55.540><c> also</c>

00:30:55.650 --> 00:30:55.660 align:start position:0%
streams based applications and it also
 

00:30:55.660 --> 00:30:57.030 align:start position:0%
streams based applications and it also
doesn't<00:30:55.870><c> support</c><00:30:56.140><c> other</c><00:30:56.320><c> protocols</c><00:30:56.740><c> besides</c>

00:30:57.030 --> 00:30:57.040 align:start position:0%
doesn't support other protocols besides
 

00:30:57.040 --> 00:30:59.700 align:start position:0%
doesn't support other protocols besides
HTTP<00:30:57.610><c> and</c><00:30:58.450><c> also</c><00:30:58.810><c> the</c><00:30:58.930><c> API</c><00:30:59.170><c> is</c><00:30:59.260><c> a</c><00:30:59.350><c> little</c><00:30:59.560><c> clumsy</c>

00:30:59.700 --> 00:30:59.710 align:start position:0%
HTTP and also the API is a little clumsy
 

00:30:59.710 --> 00:31:01.620 align:start position:0%
HTTP and also the API is a little clumsy
if<00:31:00.490><c> you're</c><00:31:00.670><c> dreading</c><00:31:00.910><c> filters</c><00:31:01.390><c> or</c><00:31:01.480><c> if</c><00:31:01.540><c> you're</c>

00:31:01.620 --> 00:31:01.630 align:start position:0%
if you're dreading filters or if you're
 

00:31:01.630 --> 00:31:03.150 align:start position:0%
if you're dreading filters or if you're
trying<00:31:01.720><c> to</c><00:31:01.900><c> integrate</c><00:31:02.500><c> its</c><00:31:02.740><c> functionality</c>

00:31:03.150 --> 00:31:03.160 align:start position:0%
trying to integrate its functionality
 

00:31:03.160 --> 00:31:04.560 align:start position:0%
trying to integrate its functionality
with<00:31:03.250><c> a</c><00:31:03.280><c> spring</c><00:31:03.520><c> ecosystem</c><00:31:04.030><c> so</c><00:31:04.150><c> we</c><00:31:04.240><c> have</c><00:31:04.360><c> a</c><00:31:04.390><c> new</c>

00:31:04.560 --> 00:31:04.570 align:start position:0%
with a spring ecosystem so we have a new
 

00:31:04.570 --> 00:31:06.750 align:start position:0%
with a spring ecosystem so we have a new
project<00:31:04.750><c> called</c><00:31:05.050><c> spring</c><00:31:05.650><c> cloud</c><00:31:06.010><c> gateway</c><00:31:06.460><c> and</c>

00:31:06.750 --> 00:31:06.760 align:start position:0%
project called spring cloud gateway and
 

00:31:06.760 --> 00:31:10.860 align:start position:0%
project called spring cloud gateway and
spring<00:31:07.420><c> cloud</c><00:31:07.570><c> gateway</c><00:31:09.450><c> it's</c><00:31:10.450><c> just</c><00:31:10.600><c> that</c><00:31:10.690><c> it's</c>

00:31:10.860 --> 00:31:10.870 align:start position:0%
spring cloud gateway it's just that it's
 

00:31:10.870 --> 00:31:12.390 align:start position:0%
spring cloud gateway it's just that it's
a<00:31:10.930><c> gateway</c><00:31:11.080><c> technology</c><00:31:11.560><c> it</c><00:31:11.680><c> builds</c><00:31:12.040><c> on</c><00:31:12.130><c> Spring</c>

00:31:12.390 --> 00:31:12.400 align:start position:0%
a gateway technology it builds on Spring
 

00:31:12.400 --> 00:31:14.670 align:start position:0%
a gateway technology it builds on Spring
Framework<00:31:12.790><c> 5</c><00:31:13.180><c> so</c><00:31:13.450><c> of</c><00:31:13.510><c> course</c><00:31:13.660><c> it's</c><00:31:13.870><c> the</c><00:31:14.440><c> the</c>

00:31:14.670 --> 00:31:14.680 align:start position:0%
Framework 5 so of course it's the the
 

00:31:14.680 --> 00:31:16.020 align:start position:0%
Framework 5 so of course it's the the
incarnation<00:31:15.250><c> that</c><00:31:15.280><c> we're</c><00:31:15.520><c> using</c><00:31:15.700><c> is</c><00:31:15.880><c> only</c>

00:31:16.020 --> 00:31:16.030 align:start position:0%
incarnation that we're using is only
 

00:31:16.030 --> 00:31:17.310 align:start position:0%
incarnation that we're using is only
available<00:31:16.150><c> in</c><00:31:16.420><c> spring</c><00:31:16.630><c> plant</c><00:31:16.810><c> Finchley</c><00:31:17.170><c> and</c>

00:31:17.310 --> 00:31:17.320 align:start position:0%
available in spring plant Finchley and
 

00:31:17.320 --> 00:31:19.680 align:start position:0%
available in spring plant Finchley and
we're<00:31:17.830><c> gonna</c><00:31:17.920><c> use</c><00:31:18.490><c> the</c><00:31:18.700><c> reactive</c><00:31:19.120><c> incarnation</c>

00:31:19.680 --> 00:31:19.690 align:start position:0%
we're gonna use the reactive incarnation
 

00:31:19.690 --> 00:31:21.660 align:start position:0%
we're gonna use the reactive incarnation
of<00:31:19.810><c> that</c><00:31:19.930><c> rather</c><00:31:20.080><c> the</c><00:31:20.410><c> Kotlin</c><00:31:20.740><c> extension</c><00:31:21.190><c> for</c>

00:31:21.660 --> 00:31:21.670 align:start position:0%
of that rather the Kotlin extension for
 

00:31:21.670 --> 00:31:24.660 align:start position:0%
of that rather the Kotlin extension for
that<00:31:21.790><c> as</c><00:31:21.910><c> well</c><00:31:22.440><c> it's</c><00:31:23.440><c> gonna</c><00:31:23.560><c> help</c><00:31:23.680><c> us</c><00:31:23.830><c> so</c><00:31:24.070><c> we</c>

00:31:24.660 --> 00:31:24.670 align:start position:0%
that as well it's gonna help us so we
 

00:31:24.670 --> 00:31:27.540 align:start position:0%
that as well it's gonna help us so we
have<00:31:24.850><c> on</c><00:31:25.210><c> a</c><00:31:25.270><c> class</c><00:31:25.480><c> path</c><00:31:25.860><c> spring</c><00:31:26.860><c> cloud</c>

00:31:27.540 --> 00:31:27.550 align:start position:0%
have on a class path spring cloud
 

00:31:27.550 --> 00:31:29.400 align:start position:0%
have on a class path spring cloud
gateway<00:31:28.270><c> and</c><00:31:28.630><c> we</c><00:31:28.870><c> need</c><00:31:28.990><c> to</c><00:31:29.050><c> bring</c><00:31:29.200><c> in</c><00:31:29.320><c> the</c>

00:31:29.400 --> 00:31:29.410 align:start position:0%
gateway and we need to bring in the
 

00:31:29.410 --> 00:31:32.090 align:start position:0%
gateway and we need to bring in the
Kotlin<00:31:29.770><c> extensions</c><00:31:30.250><c> this</c><00:31:30.850><c> is</c><00:31:31.030><c> a</c><00:31:31.060><c> temporary</c>

00:31:32.090 --> 00:31:32.100 align:start position:0%
Kotlin extensions this is a temporary
 

00:31:32.100 --> 00:31:35.160 align:start position:0%
Kotlin extensions this is a temporary
situation<00:31:33.100><c> right</c><00:31:33.670><c> the</c><00:31:33.850><c> cotton</c><00:31:34.750><c> extensions</c>

00:31:35.160 --> 00:31:35.170 align:start position:0%
situation right the cotton extensions
 

00:31:35.170 --> 00:31:36.210 align:start position:0%
situation right the cotton extensions
will<00:31:35.350><c> eventually</c><00:31:35.680><c> just</c><00:31:35.800><c> be</c><00:31:35.950><c> in</c><00:31:36.100><c> the</c><00:31:36.160><c> same</c>

00:31:36.210 --> 00:31:36.220 align:start position:0%
will eventually just be in the same
 

00:31:36.220 --> 00:31:37.590 align:start position:0%
will eventually just be in the same
codebase<00:31:36.730><c> and</c><00:31:36.880><c> you</c><00:31:37.030><c> won't</c><00:31:37.150><c> have</c><00:31:37.240><c> to</c><00:31:37.330><c> bring</c><00:31:37.510><c> in</c>

00:31:37.590 --> 00:31:37.600 align:start position:0%
codebase and you won't have to bring in
 

00:31:37.600 --> 00:31:39.810 align:start position:0%
codebase and you won't have to bring in
a<00:31:37.660><c> separate</c><00:31:37.900><c> library</c><00:31:38.230><c> but</c><00:31:38.710><c> for</c><00:31:38.950><c> now</c><00:31:39.070><c> you</c><00:31:39.730><c> know</c>

00:31:39.810 --> 00:31:39.820 align:start position:0%
a separate library but for now you know
 

00:31:39.820 --> 00:31:41.400 align:start position:0%
a separate library but for now you know
we<00:31:40.360><c> do</c><00:31:40.480><c> we</c><00:31:40.600><c> have</c><00:31:40.690><c> to</c><00:31:40.810><c> do</c><00:31:40.900><c> we</c><00:31:41.050><c> have</c><00:31:41.080><c> to</c><00:31:41.170><c> do</c><00:31:41.290><c> that</c>

00:31:41.400 --> 00:31:41.410 align:start position:0%
we do we have to do we have to do that
 

00:31:41.410 --> 00:31:42.920 align:start position:0%
we do we have to do we have to do that
not<00:31:41.590><c> a</c><00:31:41.620><c> big</c><00:31:41.770><c> deal</c><00:31:41.890><c> so</c><00:31:42.400><c> here's</c><00:31:42.700><c> how</c><00:31:42.790><c> you</c>

00:31:42.920 --> 00:31:42.930 align:start position:0%
not a big deal so here's how you
 

00:31:42.930 --> 00:31:44.940 align:start position:0%
not a big deal so here's how you
describe<00:31:43.930><c> the</c><00:31:44.140><c> gateway</c><00:31:44.440><c> here</c><00:31:44.560><c> we're</c><00:31:44.830><c> gonna</c>

00:31:44.940 --> 00:31:44.950 align:start position:0%
describe the gateway here we're gonna
 

00:31:44.950 --> 00:31:46.440 align:start position:0%
describe the gateway here we're gonna
create<00:31:45.160><c> configurations</c><00:31:45.940><c> here</c><00:31:46.060><c> using</c><00:31:46.360><c> the</c>

00:31:46.440 --> 00:31:46.450 align:start position:0%
create configurations here using the
 

00:31:46.450 --> 00:31:48.360 align:start position:0%
create configurations here using the
cotton<00:31:46.630><c> DSL</c><00:31:47.080><c> this</c><00:31:47.260><c> very</c><00:31:47.410><c> nice</c><00:31:47.560><c> DSL</c><00:31:47.890><c> we're</c>

00:31:48.360 --> 00:31:48.370 align:start position:0%
cotton DSL this very nice DSL we're
 

00:31:48.370 --> 00:31:50.970 align:start position:0%
cotton DSL this very nice DSL we're
gonna<00:31:48.460><c> say</c><00:31:48.670><c> that</c><00:31:49.090><c> we</c><00:31:49.360><c> want</c><00:31:49.510><c> to</c><00:31:49.570><c> create</c><00:31:50.170><c> a</c><00:31:50.230><c> route</c>

00:31:50.970 --> 00:31:50.980 align:start position:0%
gonna say that we want to create a route
 

00:31:50.980 --> 00:31:54.300 align:start position:0%
gonna say that we want to create a route
that<00:31:51.430><c> proxies</c><00:31:52.350><c> calls</c><00:31:53.350><c> to</c><00:31:53.680><c> our</c><00:31:53.710><c> endpoint</c><00:31:54.220><c> to</c>

00:31:54.300 --> 00:31:54.310 align:start position:0%
that proxies calls to our endpoint to
 

00:31:54.310 --> 00:31:57.080 align:start position:0%
that proxies calls to our endpoint to
our<00:31:54.400><c> local</c><00:31:54.550><c> node</c><00:31:54.850><c> and</c><00:31:55.090><c> then</c><00:31:55.780><c> routes</c><00:31:55.990><c> that</c><00:31:56.200><c> to</c><00:31:56.440><c> a</c>

00:31:57.080 --> 00:31:57.090 align:start position:0%
our local node and then routes that to a
 

00:31:57.090 --> 00:32:02.760 align:start position:0%
our local node and then routes that to a
to<00:31:58.090><c> the</c><00:31:58.120><c> blog</c><00:31:58.980><c> output</c><00:32:00.630><c> the</c><00:32:01.630><c> blog</c><00:32:01.810><c> feed</c><00:32:02.140><c> the</c><00:32:02.410><c> RSS</c>

00:32:02.760 --> 00:32:02.770 align:start position:0%
to the blog output the blog feed the RSS
 

00:32:02.770 --> 00:32:05.430 align:start position:0%
to the blog output the blog feed the RSS
feed<00:32:02.920><c> the</c><00:32:03.100><c> atom</c><00:32:03.280><c> feed</c><00:32:03.520><c> rather</c><00:32:04.030><c> for</c><00:32:04.600><c> our</c><00:32:04.900><c> spring</c>

00:32:05.430 --> 00:32:05.440 align:start position:0%
feed the atom feed rather for our spring
 

00:32:05.440 --> 00:32:08.140 align:start position:0%
feed the atom feed rather for our spring
IO<00:32:05.560><c> blog</c><00:32:05.860><c> ok</c><00:32:06.340><c> so</c><00:32:06.400><c> here</c><00:32:07.150><c> we</c><00:32:07.180><c> are</c>

00:32:08.140 --> 00:32:08.150 align:start position:0%
IO blog ok so here we are
 

00:32:08.150 --> 00:32:12.430 align:start position:0%
IO blog ok so here we are
and<00:32:10.450><c> copy</c><00:32:11.450><c> and</c><00:32:11.540><c> paste</c><00:32:11.600><c> that</c><00:32:11.810><c> URL</c><00:32:12.020><c> so</c><00:32:12.290><c> I'm</c><00:32:12.350><c> gonna</c>

00:32:12.430 --> 00:32:12.440 align:start position:0%
and copy and paste that URL so I'm gonna
 

00:32:12.440 --> 00:32:15.490 align:start position:0%
and copy and paste that URL so I'm gonna
say<00:32:12.650><c> if</c><00:32:13.280><c> a</c><00:32:13.610><c> request</c><00:32:14.330><c> comes</c><00:32:14.630><c> in</c><00:32:14.810><c> that</c><00:32:14.930><c> matches</c>

00:32:15.490 --> 00:32:15.500 align:start position:0%
say if a request comes in that matches
 

00:32:15.500 --> 00:32:21.490 align:start position:0%
say if a request comes in that matches
path<00:32:16.420><c> blog</c><00:32:18.640><c> when</c><00:32:19.640><c> user</c><00:32:19.820><c> requests</c><00:32:20.420><c> the</c><00:32:20.600><c> Gateway</c>

00:32:21.490 --> 00:32:21.500 align:start position:0%
path blog when user requests the Gateway
 

00:32:21.500 --> 00:32:22.990 align:start position:0%
path blog when user requests the Gateway
handler<00:32:21.830><c> predicates</c><00:32:22.160><c> wrapper</c><00:32:22.550><c> tickets</c><00:32:22.790><c> path</c>

00:32:22.990 --> 00:32:23.000 align:start position:0%
handler predicates wrapper tickets path
 

00:32:23.000 --> 00:32:28.120 align:start position:0%
handler predicates wrapper tickets path
or<00:32:23.830><c> path</c><00:32:25.720><c> Adam</c><00:32:26.720><c> and</c><00:32:27.050><c> notice</c><00:32:27.770><c> that</c><00:32:27.860><c> we're</c><00:32:28.010><c> using</c>

00:32:28.120 --> 00:32:28.130 align:start position:0%
or path Adam and notice that we're using
 

00:32:28.130 --> 00:32:30.820 align:start position:0%
or path Adam and notice that we're using
this<00:32:28.310><c> or</c><00:32:28.660><c> method</c><00:32:29.660><c> here</c><00:32:29.810><c> right</c><00:32:30.500><c> this</c><00:32:30.680><c> is</c>

00:32:30.820 --> 00:32:30.830 align:start position:0%
this or method here right this is
 

00:32:30.830 --> 00:32:33.970 align:start position:0%
this or method here right this is
actually<00:32:30.950><c> an</c><00:32:31.850><c> infix</c><00:32:32.540><c> function</c><00:32:33.320><c> in</c><00:32:33.470><c> Kotlin</c><00:32:33.800><c> i</c>

00:32:33.970 --> 00:32:33.980 align:start position:0%
actually an infix function in Kotlin i
 

00:32:33.980 --> 00:32:35.590 align:start position:0%
actually an infix function in Kotlin i
don't<00:32:34.430><c> have</c><00:32:34.640><c> to</c><00:32:34.850><c> provide</c><00:32:35.000><c> the</c><00:32:35.300><c> method</c>

00:32:35.590 --> 00:32:35.600 align:start position:0%
don't have to provide the method
 

00:32:35.600 --> 00:32:38.260 align:start position:0%
don't have to provide the method
parentheses<00:32:36.460><c> and</c><00:32:37.460><c> so</c><00:32:37.610><c> it</c><00:32:37.760><c> allows</c><00:32:37.910><c> I</c><00:32:38.060><c> did</c><00:32:38.210><c> it</c>

00:32:38.260 --> 00:32:38.270 align:start position:0%
parentheses and so it allows I did it
 

00:32:38.270 --> 00:32:39.940 align:start position:0%
parentheses and so it allows I did it
because<00:32:38.360><c> it's</c><00:32:38.630><c> called</c><00:32:38.780><c> an</c><00:32:38.900><c> infix</c><00:32:39.200><c> function</c>

00:32:39.940 --> 00:32:39.950 align:start position:0%
because it's called an infix function
 

00:32:39.950 --> 00:32:42.040 align:start position:0%
because it's called an infix function
and<00:32:40.220><c> the</c><00:32:40.550><c> result</c><00:32:41.330><c> is</c><00:32:41.450><c> I</c><00:32:41.510><c> can</c><00:32:41.630><c> write</c><00:32:41.720><c> these</c><00:32:41.840><c> very</c>

00:32:42.040 --> 00:32:42.050 align:start position:0%
and the result is I can write these very
 

00:32:42.050 --> 00:32:46.000 align:start position:0%
and the result is I can write these very
clean<00:32:43.660><c> sort</c><00:32:44.660><c> of</c><00:32:44.720><c> DSL</c><00:32:45.050><c> right</c><00:32:45.290><c> I</c><00:32:45.320><c> have</c><00:32:45.740><c> this</c><00:32:45.860><c> in</c>

00:32:46.000 --> 00:32:46.010 align:start position:0%
clean sort of DSL right I have this in
 

00:32:46.010 --> 00:32:47.800 align:start position:0%
clean sort of DSL right I have this in
flux<00:32:46.160><c> notation</c><00:32:46.640><c> and</c><00:32:46.760><c> that's</c><00:32:47.540><c> just</c><00:32:47.690><c> working</c>

00:32:47.800 --> 00:32:47.810 align:start position:0%
flux notation and that's just working
 

00:32:47.810 --> 00:32:50.110 align:start position:0%
flux notation and that's just working
for<00:32:48.050><c> me</c><00:32:48.170><c> now</c><00:32:48.290><c> I</c><00:32:48.320><c> can</c><00:32:48.500><c> say</c><00:32:48.680><c> when</c><00:32:49.580><c> you</c><00:32:49.850><c> match</c>

00:32:50.110 --> 00:32:50.120 align:start position:0%
for me now I can say when you match
 

00:32:50.120 --> 00:32:52.020 align:start position:0%
for me now I can say when you match
something<00:32:50.450><c> when</c><00:32:51.170><c> something</c><00:32:51.410><c> matches</c><00:32:51.860><c> that</c>

00:32:52.020 --> 00:32:52.030 align:start position:0%
something when something matches that
 

00:32:52.030 --> 00:32:56.070 align:start position:0%
something when something matches that
pattern<00:32:53.140><c> proxy</c><00:32:54.140><c> it</c><00:32:54.230><c> to</c><00:32:54.410><c> this</c><00:32:54.530><c> endpoint</c><00:32:54.710><c> I</c>

00:32:56.070 --> 00:32:56.080 align:start position:0%
pattern proxy it to this endpoint I
 

00:32:56.080 --> 00:33:02.470 align:start position:0%
pattern proxy it to this endpoint I
could<00:32:57.080><c> by</c><00:32:57.830><c> the</c><00:32:57.860><c> way</c><00:32:59.950><c> use</c><00:33:00.950><c> a</c><00:33:00.980><c> low</c><00:33:01.880><c> bounce</c><00:33:02.060><c> URL</c>

00:33:02.470 --> 00:33:02.480 align:start position:0%
could by the way use a low bounce URL
 

00:33:02.480 --> 00:33:04.570 align:start position:0%
could by the way use a low bounce URL
here<00:33:02.660><c> all</c><00:33:02.870><c> right</c><00:33:02.930><c> I</c><00:33:02.990><c> can</c><00:33:03.200><c> actually</c><00:33:03.320><c> have</c><00:33:03.980><c> a</c><00:33:04.010><c> URI</c>

00:33:04.570 --> 00:33:04.580 align:start position:0%
here all right I can actually have a URI
 

00:33:04.580 --> 00:33:07.480 align:start position:0%
here all right I can actually have a URI
that<00:33:04.880><c> goes</c><00:33:05.360><c> to</c><00:33:05.630><c> lb</c><00:33:06.500><c> that's</c><00:33:06.860><c> the</c><00:33:06.980><c> load</c><00:33:07.130><c> bouncer</c>

00:33:07.480 --> 00:33:07.490 align:start position:0%
that goes to lb that's the load bouncer
 

00:33:07.490 --> 00:33:09.790 align:start position:0%
that goes to lb that's the load bouncer
fool<00:33:08.120><c> -</c><00:33:08.330><c> service</c><00:33:08.870><c> I'll</c><00:33:09.050><c> be</c><00:33:09.200><c> the</c><00:33:09.380><c> load</c><00:33:09.530><c> bouncer</c>

00:33:09.790 --> 00:33:09.800 align:start position:0%
fool - service I'll be the load bouncer
 

00:33:09.800 --> 00:33:12.480 align:start position:0%
fool - service I'll be the load bouncer
in<00:33:09.860><c> this</c><00:33:09.950><c> case</c><00:33:10.100><c> would</c><00:33:10.280><c> be</c><00:33:10.370><c> something</c><00:33:11.020><c> you</c><00:33:12.020><c> know</c>

00:33:12.480 --> 00:33:12.490 align:start position:0%
in this case would be something you know
 

00:33:12.490 --> 00:33:14.920 align:start position:0%
in this case would be something you know
ribbon<00:33:13.490><c> Netflix</c><00:33:13.970><c> ribbon</c><00:33:14.210><c> in</c><00:33:14.360><c> working</c><00:33:14.870><c> in</c>

00:33:14.920 --> 00:33:14.930 align:start position:0%
ribbon Netflix ribbon in working in
 

00:33:14.930 --> 00:33:17.440 align:start position:0%
ribbon Netflix ribbon in working in
conjunction<00:33:15.080><c> with</c><00:33:15.410><c> a</c><00:33:16.190><c> discovery</c><00:33:17.150><c> kind</c><00:33:17.360><c> of</c>

00:33:17.440 --> 00:33:17.450 align:start position:0%
conjunction with a discovery kind of
 

00:33:17.450 --> 00:33:19.170 align:start position:0%
conjunction with a discovery kind of
spring<00:33:17.600><c> cloud</c><00:33:17.810><c> discovery</c><00:33:18.290><c> client</c>

00:33:19.170 --> 00:33:19.180 align:start position:0%
spring cloud discovery client
 

00:33:19.180 --> 00:33:21.100 align:start position:0%
spring cloud discovery client
implementation<00:33:20.180><c> that</c><00:33:20.270><c> in</c><00:33:20.450><c> turn</c><00:33:20.600><c> can</c><00:33:20.780><c> talk</c><00:33:20.990><c> to</c>

00:33:21.100 --> 00:33:21.110 align:start position:0%
implementation that in turn can talk to
 

00:33:21.110 --> 00:33:23.080 align:start position:0%
implementation that in turn can talk to
things<00:33:21.260><c> like</c><00:33:21.320><c> Apache</c><00:33:21.590><c> zookeeper</c><00:33:22.190><c> and</c><00:33:22.370><c> Netflix</c>

00:33:23.080 --> 00:33:23.090 align:start position:0%
things like Apache zookeeper and Netflix
 

00:33:23.090 --> 00:33:25.450 align:start position:0%
things like Apache zookeeper and Netflix
you<00:33:23.210><c> week</c><00:33:23.390><c> hashey</c><00:33:23.960><c> core</c><00:33:24.320><c> console</c><00:33:24.710><c> etc</c><00:33:25.100><c> so</c><00:33:25.430><c> I</c>

00:33:25.450 --> 00:33:25.460 align:start position:0%
you week hashey core console etc so I
 

00:33:25.460 --> 00:33:26.860 align:start position:0%
you week hashey core console etc so I
could<00:33:25.610><c> do</c><00:33:25.730><c> that</c><00:33:25.850><c> certainly</c><00:33:26.240><c> and</c><00:33:26.540><c> I</c><00:33:26.630><c> can</c><00:33:26.750><c> even</c>

00:33:26.860 --> 00:33:26.870 align:start position:0%
could do that certainly and I can even
 

00:33:26.870 --> 00:33:28.210 align:start position:0%
could do that certainly and I can even
do<00:33:26.990><c> other</c><00:33:27.140><c> interesting</c><00:33:27.230><c> things</c><00:33:27.800><c> like</c><00:33:27.950><c> there's</c>

00:33:28.210 --> 00:33:28.220 align:start position:0%
do other interesting things like there's
 

00:33:28.220 --> 00:33:29.470 align:start position:0%
do other interesting things like there's
gateway<00:33:28.490><c> filters</c><00:33:28.850><c> that</c><00:33:28.970><c> you</c><00:33:29.030><c> can</c><00:33:29.120><c> provide</c>

00:33:29.470 --> 00:33:29.480 align:start position:0%
gateway filters that you can provide
 

00:33:29.480 --> 00:33:31.180 align:start position:0%
gateway filters that you can provide
that<00:33:29.900><c> support</c><00:33:30.080><c> things</c><00:33:30.410><c> like</c><00:33:30.470><c> load</c><00:33:30.710><c> balancing</c>

00:33:31.180 --> 00:33:31.190 align:start position:0%
that support things like load balancing
 

00:33:31.190 --> 00:33:35.050 align:start position:0%
that support things like load balancing
rate<00:33:31.820><c> limiting</c><00:33:32.180><c> and</c><00:33:32.540><c> and</c><00:33:33.790><c> circuit</c><00:33:34.790><c> breaking</c>

00:33:35.050 --> 00:33:35.060 align:start position:0%
rate limiting and and circuit breaking
 

00:33:35.060 --> 00:33:36.160 align:start position:0%
rate limiting and and circuit breaking
right<00:33:35.150><c> I</c><00:33:35.240><c> can</c><00:33:35.420><c> do</c><00:33:35.510><c> all</c><00:33:35.600><c> that</c><00:33:35.690><c> stuff</c><00:33:35.840><c> as</c><00:33:36.050><c> well</c>

00:33:36.160 --> 00:33:36.170 align:start position:0%
right I can do all that stuff as well
 

00:33:36.170 --> 00:33:38.230 align:start position:0%
right I can do all that stuff as well
but<00:33:36.590><c> for</c><00:33:36.710><c> our</c><00:33:36.830><c> purposes</c><00:33:37.160><c> it's</c><00:33:37.670><c> probably</c><00:33:38.120><c> fine</c>

00:33:38.230 --> 00:33:38.240 align:start position:0%
but for our purposes it's probably fine
 

00:33:38.240 --> 00:33:40.420 align:start position:0%
but for our purposes it's probably fine
just<00:33:38.450><c> to</c><00:33:38.540><c> leave</c><00:33:38.690><c> this</c><00:33:38.870><c> as</c><00:33:39.110><c> it</c><00:33:39.710><c> is</c><00:33:39.740><c> and</c><00:33:40.130><c> get</c><00:33:40.310><c> rid</c>

00:33:40.420 --> 00:33:40.430 align:start position:0%
just to leave this as it is and get rid
 

00:33:40.430 --> 00:33:42.970 align:start position:0%
just to leave this as it is and get rid
of<00:33:40.460><c> that</c><00:33:40.550><c> and</c><00:33:41.120><c> do</c><00:33:41.630><c> that</c><00:33:41.870><c> and</c><00:33:42.080><c> then</c><00:33:42.350><c> rerun</c><00:33:42.860><c> the</c>

00:33:42.970 --> 00:33:42.980 align:start position:0%
of that and do that and then rerun the
 

00:33:42.980 --> 00:33:52.220 align:start position:0%
of that and do that and then rerun the
application

00:33:52.220 --> 00:33:52.230 align:start position:0%
 
 

00:33:52.230 --> 00:33:58.710 align:start position:0%
 
all<00:33:53.230><c> right</c><00:33:54.390><c> so</c><00:33:56.010><c> localhost</c><00:33:57.510><c> customers</c><00:33:58.510><c> there's</c>

00:33:58.710 --> 00:33:58.720 align:start position:0%
all right so localhost customers there's
 

00:33:58.720 --> 00:34:01.529 align:start position:0%
all right so localhost customers there's
that<00:33:59.400><c> let's</c><00:34:00.400><c> go</c><00:34:00.549><c> to</c><00:34:00.669><c> the</c><00:34:00.760><c> consult</c><00:34:01.240><c> for</c><00:34:01.450><c> this</c>

00:34:01.529 --> 00:34:01.539 align:start position:0%
that let's go to the consult for this
 

00:34:01.539 --> 00:34:06.600 align:start position:0%
that let's go to the consult for this
last<00:34:01.690><c> look</c><00:34:01.960><c> here</c><00:34:04.919><c> we're</c><00:34:05.919><c> gonna</c><00:34:06.039><c> say</c><00:34:06.220><c> curl</c>

00:34:06.600 --> 00:34:06.610 align:start position:0%
last look here we're gonna say curl
 

00:34:06.610 --> 00:34:10.950 align:start position:0%
last look here we're gonna say curl
minus<00:34:07.090><c> V</c><00:34:07.299><c> and</c><00:34:08.399><c> get</c><00:34:09.399><c> that</c><00:34:09.550><c> good</c><00:34:09.909><c> and</c><00:34:10.480><c> we</c><00:34:10.510><c> also</c>

00:34:10.950 --> 00:34:10.960 align:start position:0%
minus V and get that good and we also
 

00:34:10.960 --> 00:34:12.780 align:start position:0%
minus V and get that good and we also
have<00:34:11.200><c> this</c><00:34:11.320><c> one</c><00:34:11.440><c> called</c><00:34:11.679><c> the</c><00:34:11.740><c> blog</c><00:34:12.010><c> look</c><00:34:12.700><c> at</c>

00:34:12.780 --> 00:34:12.790 align:start position:0%
have this one called the blog look at
 

00:34:12.790 --> 00:34:15.440 align:start position:0%
have this one called the blog look at
the<00:34:12.879><c> headers</c><00:34:13.149><c> that</c><00:34:13.179><c> comes</c><00:34:13.540><c> back</c><00:34:13.780><c> lips</c><00:34:14.020><c> head</c>

00:34:15.440 --> 00:34:15.450 align:start position:0%
the headers that comes back lips head
 

00:34:15.450 --> 00:34:18.090 align:start position:0%
the headers that comes back lips head
and<00:34:16.450><c> when</c><00:34:16.540><c> we</c><00:34:16.600><c> do</c><00:34:16.690><c> that</c><00:34:16.720><c> we</c><00:34:17.440><c> can</c><00:34:17.590><c> see</c><00:34:17.770><c> that</c><00:34:18.010><c> we</c>

00:34:18.090 --> 00:34:18.100 align:start position:0%
and when we do that we can see that we
 

00:34:18.100 --> 00:34:20.010 align:start position:0%
and when we do that we can see that we
get<00:34:18.250><c> these</c><00:34:18.369><c> the</c><00:34:18.790><c> the</c><00:34:19.060><c> RSS</c><00:34:19.419><c> feed</c><00:34:19.659><c> of</c><00:34:19.780><c> course</c><00:34:19.929><c> the</c>

00:34:20.010 --> 00:34:20.020 align:start position:0%
get these the the RSS feed of course the
 

00:34:20.020 --> 00:34:22.349 align:start position:0%
get these the the RSS feed of course the
atom<00:34:20.200><c> feed</c><00:34:20.409><c> rather</c><00:34:20.619><c> and</c><00:34:21.310><c> we</c><00:34:21.340><c> get</c><00:34:21.790><c> the</c><00:34:21.940><c> content</c>

00:34:22.349 --> 00:34:22.359 align:start position:0%
atom feed rather and we get the content
 

00:34:22.359 --> 00:34:24.330 align:start position:0%
atom feed rather and we get the content
types<00:34:22.659><c> and</c><00:34:23.020><c> all</c><00:34:23.080><c> that</c><00:34:23.230><c> stuff</c><00:34:23.440><c> that</c><00:34:23.800><c> we've</c>

00:34:24.330 --> 00:34:24.340 align:start position:0%
types and all that stuff that we've
 

00:34:24.340 --> 00:34:25.470 align:start position:0%
types and all that stuff that we've
gotten<00:34:24.669><c> afraid</c><00:34:24.909><c> called</c><00:34:25.149><c> the</c><00:34:25.240><c> service</c>

00:34:25.470 --> 00:34:25.480 align:start position:0%
gotten afraid called the service
 

00:34:25.480 --> 00:34:27.149 align:start position:0%
gotten afraid called the service
directly<00:34:25.720><c> so</c><00:34:25.899><c> we're</c><00:34:26.320><c> actually</c><00:34:26.500><c> proxying</c><00:34:27.070><c> the</c>

00:34:27.149 --> 00:34:27.159 align:start position:0%
directly so we're actually proxying the
 

00:34:27.159 --> 00:34:28.740 align:start position:0%
directly so we're actually proxying the
results<00:34:27.460><c> using</c><00:34:27.970><c> this</c><00:34:28.030><c> highly</c><00:34:28.389><c> efficient</c>

00:34:28.740 --> 00:34:28.750 align:start position:0%
results using this highly efficient
 

00:34:28.750 --> 00:34:31.800 align:start position:0%
results using this highly efficient
reactive<00:34:29.139><c> Gateway</c><00:34:29.800><c> project</c><00:34:30.340><c> alright</c><00:34:31.240><c> so</c><00:34:31.510><c> with</c>

00:34:31.800 --> 00:34:31.810 align:start position:0%
reactive Gateway project alright so with
 

00:34:31.810 --> 00:34:33.090 align:start position:0%
reactive Gateway project alright so with
that<00:34:31.960><c> we've</c><00:34:32.230><c> looked</c><00:34:32.409><c> at</c><00:34:32.530><c> just</c><00:34:32.679><c> a</c><00:34:32.800><c> number</c><00:34:33.070><c> of</c>

00:34:33.090 --> 00:34:33.100 align:start position:0%
that we've looked at just a number of
 

00:34:33.100 --> 00:34:35.190 align:start position:0%
that we've looked at just a number of
different<00:34:33.810><c> technologies</c><00:34:34.810><c> in</c><00:34:34.899><c> the</c><00:34:34.960><c> spring</c>

00:34:35.190 --> 00:34:35.200 align:start position:0%
different technologies in the spring
 

00:34:35.200 --> 00:34:37.649 align:start position:0%
different technologies in the spring
ecosystem<00:34:35.859><c> we've</c><00:34:36.010><c> looked</c><00:34:36.159><c> at</c><00:34:36.280><c> a</c><00:34:36.310><c> you</c><00:34:36.970><c> know</c><00:34:37.000><c> the</c>

00:34:37.649 --> 00:34:37.659 align:start position:0%
ecosystem we've looked at a you know the
 

00:34:37.659 --> 00:34:39.780 align:start position:0%
ecosystem we've looked at a you know the
these<00:34:37.990><c> the</c><00:34:38.440><c> seeding</c><00:34:38.889><c> of</c><00:34:38.950><c> a</c><00:34:39.040><c> new</c><00:34:39.159><c> project</c><00:34:39.369><c> using</c>

00:34:39.780 --> 00:34:39.790 align:start position:0%
these the seeding of a new project using
 

00:34:39.790 --> 00:34:41.490 align:start position:0%
these the seeding of a new project using
the<00:34:40.149><c> call</c><00:34:40.359><c> and</c><00:34:40.540><c> all</c><00:34:40.629><c> open</c><00:34:41.050><c> plugin</c><00:34:41.350><c> and</c><00:34:41.440><c> the</c>

00:34:41.490 --> 00:34:41.500 align:start position:0%
the call and all open plugin and the
 

00:34:41.500 --> 00:34:42.899 align:start position:0%
the call and all open plugin and the
spring<00:34:41.679><c> initializer</c><00:34:42.070><c> and</c><00:34:42.310><c> the</c><00:34:42.609><c> complan</c>

00:34:42.899 --> 00:34:42.909 align:start position:0%
spring initializer and the complan
 

00:34:42.909 --> 00:34:44.190 align:start position:0%
spring initializer and the complan
support<00:34:43.179><c> there</c><00:34:43.330><c> we</c><00:34:43.480><c> looked</c><00:34:43.659><c> at</c><00:34:43.750><c> how</c><00:34:43.869><c> to</c><00:34:43.899><c> use</c>

00:34:44.190 --> 00:34:44.200 align:start position:0%
support there we looked at how to use
 

00:34:44.200 --> 00:34:46.020 align:start position:0%
support there we looked at how to use
functional<00:34:44.950><c> beam</c><00:34:45.129><c> definitions</c><00:34:45.639><c> we</c><00:34:45.790><c> looked</c><00:34:45.940><c> at</c>

00:34:46.020 --> 00:34:46.030 align:start position:0%
functional beam definitions we looked at
 

00:34:46.030 --> 00:34:47.609 align:start position:0%
functional beam definitions we looked at
integration<00:34:46.659><c> with</c><00:34:46.869><c> Kotlin</c><00:34:47.260><c> community</c>

00:34:47.609 --> 00:34:47.619 align:start position:0%
integration with Kotlin community
 

00:34:47.619 --> 00:34:50.460 align:start position:0%
integration with Kotlin community
technologies<00:34:48.070><c> like</c><00:34:48.220><c> exposed</c><00:34:49.000><c> and</c><00:34:49.869><c> looked</c><00:34:50.379><c> at</c>

00:34:50.460 --> 00:34:50.470 align:start position:0%
technologies like exposed and looked at
 

00:34:50.470 --> 00:34:51.720 align:start position:0%
technologies like exposed and looked at
how<00:34:50.560><c> to</c><00:34:50.590><c> you</c><00:34:51.070><c> know</c><00:34:51.100><c> integrate</c><00:34:51.520><c> that</c><00:34:51.580><c> with</c>

00:34:51.720 --> 00:34:51.730 align:start position:0%
how to you know integrate that with
 

00:34:51.730 --> 00:34:52.830 align:start position:0%
how to you know integrate that with
spring<00:34:51.940><c> apparatus</c><00:34:52.389><c> like</c><00:34:52.480><c> the</c><00:34:52.600><c> platform</c>

00:34:52.830 --> 00:34:52.840 align:start position:0%
spring apparatus like the platform
 

00:34:52.840 --> 00:34:54.810 align:start position:0%
spring apparatus like the platform
transaction<00:34:53.440><c> manager</c><00:34:53.740><c> we</c><00:34:54.159><c> looked</c><00:34:54.310><c> at</c><00:34:54.399><c> using</c>

00:34:54.810 --> 00:34:54.820 align:start position:0%
transaction manager we looked at using
 

00:34:54.820 --> 00:34:58.050 align:start position:0%
transaction manager we looked at using
spring<00:34:55.629><c> MVC</c><00:34:55.750><c> style</c><00:34:56.200><c> controllers</c><00:34:57.070><c> and</c><00:34:57.760><c> then</c><00:34:57.970><c> we</c>

00:34:58.050 --> 00:34:58.060 align:start position:0%
spring MVC style controllers and then we
 

00:34:58.060 --> 00:35:00.390 align:start position:0%
spring MVC style controllers and then we
looked<00:34:58.240><c> at</c><00:34:58.359><c> how</c><00:34:59.260><c> to</c><00:34:59.290><c> do</c><00:34:59.500><c> you</c><00:34:59.800><c> know</c><00:34:59.890><c> how</c><00:35:00.100><c> to</c><00:35:00.160><c> use</c>

00:35:00.390 --> 00:35:00.400 align:start position:0%
looked at how to do you know how to use
 

00:35:00.400 --> 00:35:03.180 align:start position:0%
looked at how to do you know how to use
the<00:35:00.609><c> reactive</c><00:35:01.030><c> support</c><00:35:01.930><c> in</c><00:35:02.109><c> Spring</c><00:35:02.410><c> Framework</c>

00:35:03.180 --> 00:35:03.190 align:start position:0%
the reactive support in Spring Framework
 

00:35:03.190 --> 00:35:04.760 align:start position:0%
the reactive support in Spring Framework
5<00:35:03.609><c> and</c><00:35:03.910><c> spring</c><00:35:04.150><c> butoh</c>

00:35:04.760 --> 00:35:04.770 align:start position:0%
5 and spring butoh
 

00:35:04.770 --> 00:35:08.280 align:start position:0%
5 and spring butoh
for<00:35:06.180><c> functional</c><00:35:07.180><c> reactive</c><00:35:07.330><c> endpoints</c><00:35:08.109><c> here</c>

00:35:08.280 --> 00:35:08.290 align:start position:0%
for functional reactive endpoints here
 

00:35:08.290 --> 00:35:09.690 align:start position:0%
for functional reactive endpoints here
we<00:35:08.410><c> did</c><00:35:08.560><c> that</c><00:35:08.680><c> with</c><00:35:08.830><c> the</c><00:35:08.950><c> function</c><00:35:09.460><c> reactive</c>

00:35:09.690 --> 00:35:09.700 align:start position:0%
we did that with the function reactive
 

00:35:09.700 --> 00:35:11.280 align:start position:0%
we did that with the function reactive
endpoints<00:35:10.030><c> there</c><00:35:10.210><c> and</c><00:35:10.450><c> then</c><00:35:10.840><c> we</c><00:35:10.930><c> also</c><00:35:11.080><c> looked</c>

00:35:11.280 --> 00:35:11.290 align:start position:0%
endpoints there and then we also looked
 

00:35:11.290 --> 00:35:13.560 align:start position:0%
endpoints there and then we also looked
at<00:35:11.350><c> sprinkler</c><00:35:11.770><c> gateway</c><00:35:12.160><c> and</c><00:35:12.369><c> its</c><00:35:12.820><c> DSL</c><00:35:13.180><c> so</c><00:35:13.330><c> at</c>

00:35:13.560 --> 00:35:13.570 align:start position:0%
at sprinkler gateway and its DSL so at
 

00:35:13.570 --> 00:35:15.660 align:start position:0%
at sprinkler gateway and its DSL so at
this<00:35:13.750><c> point</c><00:35:13.960><c> you</c><00:35:14.350><c> know</c><00:35:14.440><c> this</c><00:35:14.680><c> doesn't</c><00:35:15.609><c> look</c>

00:35:15.660 --> 00:35:15.670 align:start position:0%
this point you know this doesn't look
 

00:35:15.670 --> 00:35:16.680 align:start position:0%
this point you know this doesn't look
anything<00:35:15.790><c> like</c><00:35:16.060><c> you've</c><00:35:16.300><c> probably</c><00:35:16.450><c> seen</c>

00:35:16.680 --> 00:35:16.690 align:start position:0%
anything like you've probably seen
 

00:35:16.690 --> 00:35:18.120 align:start position:0%
anything like you've probably seen
before<00:35:16.750><c> functional</c><00:35:17.350><c> beam</c><00:35:17.470><c> definitions</c><00:35:17.920><c> Plus</c>

00:35:18.120 --> 00:35:18.130 align:start position:0%
before functional beam definitions Plus
 

00:35:18.130 --> 00:35:20.520 align:start position:0%
before functional beam definitions Plus
this<00:35:18.250><c> DSL</c><00:35:18.609><c> this</c><00:35:19.030><c> is</c><00:35:19.180><c> all</c><00:35:19.300><c> spring</c><00:35:19.600><c> this</c><00:35:20.109><c> results</c>

00:35:20.520 --> 00:35:20.530 align:start position:0%
this DSL this is all spring this results
 

00:35:20.530 --> 00:35:22.170 align:start position:0%
this DSL this is all spring this results
in<00:35:20.680><c> an</c><00:35:20.800><c> object</c><00:35:21.250><c> that</c><00:35:21.609><c> gets</c><00:35:21.730><c> managed</c><00:35:22.060><c> by</c><00:35:22.119><c> the</c>

00:35:22.170 --> 00:35:22.180 align:start position:0%
in an object that gets managed by the
 

00:35:22.180 --> 00:35:24.270 align:start position:0%
in an object that gets managed by the
application<00:35:22.660><c> context</c><00:35:23.050><c> right</c><00:35:23.320><c> same</c><00:35:23.859><c> thing</c><00:35:24.040><c> for</c>

00:35:24.270 --> 00:35:24.280 align:start position:0%
application context right same thing for
 

00:35:24.280 --> 00:35:26.099 align:start position:0%
application context right same thing for
this<00:35:24.700><c> this</c><00:35:24.970><c> gives</c><00:35:25.090><c> me</c><00:35:25.240><c> this</c><00:35:25.450><c> results</c><00:35:25.900><c> in</c><00:35:26.020><c> an</c>

00:35:26.099 --> 00:35:26.109 align:start position:0%
this this gives me this results in an
 

00:35:26.109 --> 00:35:27.030 align:start position:0%
this this gives me this results in an
object<00:35:26.410><c> that</c><00:35:26.470><c> gets</c><00:35:26.619><c> managed</c><00:35:26.890><c> by</c><00:35:26.980><c> the</c>

00:35:27.030 --> 00:35:27.040 align:start position:0%
object that gets managed by the
 

00:35:27.040 --> 00:35:29.310 align:start position:0%
object that gets managed by the
application<00:35:27.910><c> context</c><00:35:28.359><c> all</c><00:35:28.750><c> of</c><00:35:28.990><c> that</c><00:35:29.109><c> is</c><00:35:29.200><c> done</c>

00:35:29.310 --> 00:35:29.320 align:start position:0%
application context all of that is done
 

00:35:29.320 --> 00:35:30.690 align:start position:0%
application context all of that is done
for<00:35:29.380><c> you</c><00:35:29.740><c> and</c><00:35:29.920><c> you</c><00:35:30.220><c> don't</c><00:35:30.310><c> have</c><00:35:30.430><c> to</c><00:35:30.580><c> worry</c>

00:35:30.690 --> 00:35:30.700 align:start position:0%
for you and you don't have to worry
 

00:35:30.700 --> 00:35:33.599 align:start position:0%
for you and you don't have to worry
about<00:35:30.820><c> you</c><00:35:31.660><c> know</c><00:35:32.040><c> figuring</c><00:35:33.040><c> that</c><00:35:33.160><c> out</c><00:35:33.220><c> but</c><00:35:33.520><c> it</c>

00:35:33.599 --> 00:35:33.609 align:start position:0%
about you know figuring that out but it
 

00:35:33.609 --> 00:35:34.980 align:start position:0%
about you know figuring that out but it
is<00:35:33.700><c> just</c><00:35:33.880><c> objects</c><00:35:34.300><c> these</c><00:35:34.420><c> are</c><00:35:34.540><c> just</c><00:35:34.720><c> objects</c>

00:35:34.980 --> 00:35:34.990 align:start position:0%
is just objects these are just objects
 

00:35:34.990 --> 00:35:36.870 align:start position:0%
is just objects these are just objects
you<00:35:35.080><c> can</c><00:35:35.220><c> pick</c><00:35:36.220><c> them</c><00:35:36.310><c> apart</c><00:35:36.640><c> and</c><00:35:36.760><c> replace</c>

00:35:36.870 --> 00:35:36.880 align:start position:0%
you can pick them apart and replace
 

00:35:36.880 --> 00:35:38.760 align:start position:0%
you can pick them apart and replace
parts<00:35:37.300><c> of</c><00:35:37.390><c> them</c><00:35:37.480><c> and</c><00:35:37.600><c> so</c><00:35:37.690><c> on</c><00:35:37.780><c> you</c><00:35:38.230><c> get</c><00:35:38.380><c> all</c><00:35:38.560><c> the</c>

00:35:38.760 --> 00:35:38.770 align:start position:0%
parts of them and so on you get all the
 

00:35:38.770 --> 00:35:40.109 align:start position:0%
parts of them and so on you get all the
full<00:35:38.920><c> minutes</c><00:35:39.190><c> of</c><00:35:39.250><c> that</c><00:35:39.340><c> while</c><00:35:39.820><c> getting</c><00:35:40.030><c> a</c>

00:35:40.109 --> 00:35:40.119 align:start position:0%
full minutes of that while getting a
 

00:35:40.119 --> 00:35:42.630 align:start position:0%
full minutes of that while getting a
much<00:35:40.240><c> more</c><00:35:40.270><c> clean</c><00:35:41.080><c> concise</c><00:35:41.619><c> sort</c><00:35:42.369><c> of</c><00:35:42.430><c> approach</c>

00:35:42.630 --> 00:35:42.640 align:start position:0%
much more clean concise sort of approach
 

00:35:42.640 --> 00:35:45.840 align:start position:0%
much more clean concise sort of approach
to<00:35:42.670><c> to</c><00:35:43.300><c> building</c><00:35:43.540><c> applications</c><00:35:43.990><c> and</c><00:35:44.200><c> I</c><00:35:44.850><c> can</c>

00:35:45.840 --> 00:35:45.850 align:start position:0%
to to building applications and I can
 

00:35:45.850 --> 00:35:48.900 align:start position:0%
to to building applications and I can
see<00:35:46.060><c> why</c><00:35:46.210><c> for</c><00:35:46.540><c> example</c><00:35:46.570><c> the</c><00:35:47.530><c> the</c><00:35:48.369><c> folks</c><00:35:48.580><c> at</c><00:35:48.730><c> on</c>

00:35:48.900 --> 00:35:48.910 align:start position:0%
see why for example the the folks at on
 

00:35:48.910 --> 00:35:52.220 align:start position:0%
see why for example the the folks at on
the<00:35:49.030><c> Gradle</c><00:35:49.270><c> team</c><00:35:49.450><c> have</c><00:35:50.280><c> also</c><00:35:51.280><c> supported</c>

00:35:52.220 --> 00:35:52.230 align:start position:0%
the Gradle team have also supported
 

00:35:52.230 --> 00:35:54.030 align:start position:0%
the Gradle team have also supported
Kotlin<00:35:53.230><c> as</c><00:35:53.320><c> a</c><00:35:53.350><c> language</c><00:35:53.500><c> for</c><00:35:53.650><c> building</c><00:35:54.010><c> great</c>

00:35:54.030 --> 00:35:54.040 align:start position:0%
Kotlin as a language for building great
 

00:35:54.040 --> 00:35:56.190 align:start position:0%
Kotlin as a language for building great
alright<00:35:54.460><c> Gradle</c><00:35:54.820><c> is</c><00:35:54.910><c> a</c><00:35:54.940><c> very</c><00:35:55.119><c> clean</c><00:35:55.450><c> concise</c>

00:35:56.190 --> 00:35:56.200 align:start position:0%
alright Gradle is a very clean concise
 

00:35:56.200 --> 00:35:58.349 align:start position:0%
alright Gradle is a very clean concise
DSL<00:35:56.650><c> for</c><00:35:56.859><c> building</c><00:35:57.100><c> build</c><00:35:57.609><c> files</c><00:35:57.850><c> for</c>

00:35:58.349 --> 00:35:58.359 align:start position:0%
DSL for building build files for
 

00:35:58.359 --> 00:35:59.400 align:start position:0%
DSL for building build files for
describing<00:35:58.690><c> build</c><00:35:58.930><c> files</c><00:35:59.140><c> and</c><00:35:59.230><c> there's</c><00:35:59.380><c> a</c>

00:35:59.400 --> 00:35:59.410 align:start position:0%
describing build files and there's a
 

00:35:59.410 --> 00:36:02.099 align:start position:0%
describing build files and there's a
nice<00:35:59.560><c> typesafe</c><00:35:59.980><c> DSL</c><00:36:00.369><c> they're</c><00:36:00.580><c> using</c><00:36:01.180><c> Kotlin</c><00:36:01.570><c> I</c>

00:36:02.099 --> 00:36:02.109 align:start position:0%
nice typesafe DSL they're using Kotlin I
 

00:36:02.109 --> 00:36:04.539 align:start position:0%
nice typesafe DSL they're using Kotlin I
expect<00:36:02.830><c> of</c><00:36:02.950><c> course</c><00:36:03.190><c> that</c><00:36:03.460><c> one</c><00:36:03.700><c> day</c>

00:36:04.539 --> 00:36:04.549 align:start position:0%
expect of course that one day
 

00:36:04.549 --> 00:36:05.739 align:start position:0%
expect of course that one day
you'll<00:36:04.939><c> be</c><00:36:05.029><c> able</c><00:36:05.209><c> to</c><00:36:05.269><c> go</c><00:36:05.359><c> to</c><00:36:05.420><c> start</c><00:36:05.660><c> to</c><00:36:05.719><c> uh</c>

00:36:05.739 --> 00:36:05.749 align:start position:0%
you'll be able to go to start to uh
 

00:36:05.749 --> 00:36:07.989 align:start position:0%
you'll be able to go to start to uh
spring<00:36:05.929><c> that</c><00:36:06.079><c> IO</c><00:36:06.170><c> and</c><00:36:06.469><c> choose</c><00:36:07.219><c> Kotlin</c><00:36:07.789><c> and</c>

00:36:07.989 --> 00:36:07.999 align:start position:0%
spring that IO and choose Kotlin and
 

00:36:07.999 --> 00:36:09.819 align:start position:0%
spring that IO and choose Kotlin and
you'll<00:36:08.089><c> get</c><00:36:08.209><c> a</c><00:36:08.269><c> build.gradle</c><00:36:08.749><c> file</c><00:36:09.170><c> with</c>

00:36:09.819 --> 00:36:09.829 align:start position:0%
you'll get a build.gradle file with
 

00:36:09.829 --> 00:36:11.559 align:start position:0%
you'll get a build.gradle file with
Kotlin<00:36:10.160><c> instead</c><00:36:10.400><c> of</c><00:36:10.489><c> just</c><00:36:10.579><c> goofy</c><00:36:10.849><c> I'm</c><00:36:11.209><c> hoping</c>

00:36:11.559 --> 00:36:11.569 align:start position:0%
Kotlin instead of just goofy I'm hoping
 

00:36:11.569 --> 00:36:12.789 align:start position:0%
Kotlin instead of just goofy I'm hoping
that's<00:36:11.779><c> what's</c><00:36:12.079><c> gonna</c><00:36:12.199><c> happen</c><00:36:12.469><c> one</c><00:36:12.619><c> day</c><00:36:12.650><c> as</c>

00:36:12.789 --> 00:36:12.799 align:start position:0%
that's what's gonna happen one day as
 

00:36:12.799 --> 00:36:14.949 align:start position:0%
that's what's gonna happen one day as
well<00:36:12.949><c> so</c><00:36:13.489><c> right</c><00:36:13.699><c> now</c><00:36:13.789><c> we've</c><00:36:13.939><c> just</c><00:36:13.969><c> got</c><00:36:14.179><c> maven</c>

00:36:14.949 --> 00:36:14.959 align:start position:0%
well so right now we've just got maven
 

00:36:14.959 --> 00:36:16.209 align:start position:0%
well so right now we've just got maven
in<00:36:15.049><c> Gradle</c><00:36:15.319><c> but</c><00:36:15.439><c> imagine</c><00:36:15.679><c> if</c><00:36:15.769><c> you</c><00:36:15.829><c> had</c><00:36:15.920><c> Gradle</c>

00:36:16.209 --> 00:36:16.219 align:start position:0%
in Gradle but imagine if you had Gradle
 

00:36:16.219 --> 00:36:19.900 align:start position:0%
in Gradle but imagine if you had Gradle
with<00:36:16.699><c> common</c><00:36:17.739><c> in</c><00:36:18.739><c> addition</c><00:36:19.039><c> of</c><00:36:19.160><c> course</c><00:36:19.309><c> to</c><00:36:19.400><c> the</c>

00:36:19.900 --> 00:36:19.910 align:start position:0%
with common in addition of course to the
 

00:36:19.910 --> 00:36:21.910 align:start position:0%
with common in addition of course to the
wonderful<00:36:20.239><c> groovy</c><00:36:20.660><c> language</c><00:36:20.929><c> alright</c><00:36:21.650><c> so</c>

00:36:21.910 --> 00:36:21.920 align:start position:0%
wonderful groovy language alright so
 

00:36:21.920 --> 00:36:23.589 align:start position:0%
wonderful groovy language alright so
with<00:36:22.579><c> that</c><00:36:22.670><c> my</c><00:36:22.819><c> friend</c><00:36:22.999><c> thanks</c><00:36:23.299><c> so</c><00:36:23.359><c> much</c><00:36:23.420><c> for</c>

00:36:23.589 --> 00:36:23.599 align:start position:0%
with that my friend thanks so much for
 

00:36:23.599 --> 00:36:33.070 align:start position:0%
with that my friend thanks so much for
watching<00:36:23.689><c> and</c><00:36:23.989><c> we'll</c><00:36:24.079><c> see</c><00:36:24.229><c> you</c><00:36:24.289><c> next</c><00:36:24.319><c> time</c>

00:36:33.070 --> 00:36:33.080 align:start position:0%
 
 

00:36:33.080 --> 00:36:35.140 align:start position:0%
 
you

