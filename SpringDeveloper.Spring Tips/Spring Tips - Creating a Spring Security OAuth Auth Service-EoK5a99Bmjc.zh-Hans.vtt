WEBVTT
Kind: captions
Language: zh-Hans

00:00:25.369 --> 00:00:29.669
嗨，这一期的春季弯

00:00:28.079 --> 00:00:30.119
我们将要看的春季提示

00:00:29.669 --> 00:00:31.619
 off 

00:00:30.119 --> 00:00:34.410
特别是如何建立一个olaf 

00:00:31.619 --> 00:00:38.790
现在使用spring security oauth的服务器

00:00:34.410 --> 00:00:41.100
 OAuth的用例可能

00:00:38.790 --> 00:00:42.870
暗示一些人，原因是

00:00:41.100 --> 00:00:44.159
因为有很多用例

00:00:42.870 --> 00:00:46.470
就像我感觉很多人一样

00:00:44.159 --> 00:00:47.760
大概调查一下，想想哦

00:00:46.470 --> 00:00:49.920
那不是对我来说完全是

00:00:47.760 --> 00:00:52.110
复杂或那你不知道

00:00:49.920 --> 00:00:53.940
有些不同，所以我想要什么

00:00:52.110 --> 00:00:55.229
要做的只是这么短暂

00:00:53.940 --> 00:00:58.350
列出一些青年案例

00:00:55.229 --> 00:00:59.820
激励使用，然后看看如何

00:00:58.350 --> 00:01:02.699
站起来的OAuth授权

00:00:59.820 --> 00:01:04.799
今天关闭使用Spring Security的服务

00:01:02.699 --> 00:01:07.049
我们现在将忽略

00:01:04.799 --> 00:01:09.390
讨论如何实际消费

00:01:07.049 --> 00:01:11.280
角度来看该OAuth服务

00:01:09.390 --> 00:01:14.670
我认为将成为主题的客户

00:01:11.280 --> 00:01:18.390
换个视频自然

00:01:14.670 --> 00:01:20.189
将测试我们的服务是否有效

00:01:18.390 --> 00:01:24.270
正如我们期望的那样，但我们不会

00:01:20.189 --> 00:01:26.690
构建一个有趣的基于Spring的应用程序来

00:01:24.270 --> 00:01:30.659
消耗很多支持就可以了

00:01:26.690 --> 00:01:31.950
好吧，当人们像人一样时

00:01:30.659 --> 00:01:33.060
建立更多的微服务

00:01:31.950 --> 00:01:34.710
他们正在建立更多的系统

00:01:33.060 --> 00:01:36.420
连接到他们的开放网络

00:01:34.710 --> 00:01:37.940
发现这些

00:01:36.420 --> 00:01:41.790
应用这些类型的工作负载

00:01:37.940 --> 00:01:43.260
被越来越多地消耗

00:01:41.790 --> 00:01:46.320
由许多不同种类的

00:01:43.260 --> 00:01:48.090
客户，这就是技术

00:01:46.320 --> 00:01:51.450
就像的o会派上用场

00:01:48.090 --> 00:01:53.280
对于客户来说已经不够了

00:01:51.450 --> 00:01:55.170
而不是一个开发商去考虑

00:01:53.280 --> 00:01:57.659
仅在用户上下文方面的世界

00:01:55.170 --> 00:02:01.350
给做那个的人

00:01:57.659 --> 00:02:02.850
服务请求，因为现在您已经

00:02:01.350 --> 00:02:05.040
现在有不同的客户

00:02:02.850 --> 00:02:07.590
考虑谁在制造

00:02:05.040 --> 00:02:09.959
请求以及该用户是哪个客户端

00:02:07.590 --> 00:02:12.030
提出要求并给您一个

00:02:09.959 --> 00:02:15.150
几个例子，所以我们大多数人

00:02:12.030 --> 00:02:17.700
可以肯定的是，尽管我不是坦白我

00:02:15.150 --> 00:02:19.650
人使用Facebook权利， 

00:02:17.700 --> 00:02:23.700
 Facebook是图像上的社交网络

00:02:19.650 --> 00:02:28.049
你可以忍受你的朋友和家人

00:02:23.700 --> 00:02:29.280
亲人的权利和那件事

00:02:28.049 --> 00:02:31.530
为此变得很大

00:02:29.280 --> 00:02:33.720
在您登录的Facebook机制中登录

00:02:31.530 --> 00:02:34.690
可以找到允许

00:02:33.720 --> 00:02:37.180
您单击一个按钮

00:02:34.690 --> 00:02:39.580
然后这样做会将您重定向到

00:02:37.180 --> 00:02:42.460
 facebook.com提示您进行授权

00:02:39.580 --> 00:02:44.920
 Facebook要做的事

00:02:42.460 --> 00:02:46.330
做对了，您可以向Mullins发送垃圾邮件并且被爱

00:02:44.920 --> 00:02:48.400
等等在Facebook上，然后

00:02:46.330 --> 00:02:51.520
然后将其重定向回第三个

00:02:48.400 --> 00:02:52.930
派对网站及其重定向

00:02:51.520 --> 00:02:54.970
回到那个网站的开始

00:02:52.930 --> 00:02:57.850
现在有它需要做的

00:02:54.970 --> 00:03:00.160
从第三个代表您的要求

00:02:57.850 --> 00:03:02.470
派对服务就在这里

00:03:00.160 --> 00:03:05.650
在这个例子中是第三方

00:03:02.470 --> 00:03:07.390
网站是客户权利，客户是

00:03:05.650 --> 00:03:07.720
第三方网站对您的行为

00:03:07.390 --> 00:03:09.700
代表

00:03:07.720 --> 00:03:13.090
是代表客户行事的客户

00:03:09.700 --> 00:03:15.040
在我的情况下，乔什（Josh）是不是乔什（Josh） 

00:03:13.090 --> 00:03:16.840
并不是说我在开车小猫或

00:03:15.040 --> 00:03:18.190
我可能会提出要求，但

00:03:16.840 --> 00:03:19.600
关键是他们现在可以驱动请求

00:03:18.190 --> 00:03:21.730
也可能是

00:03:19.600 --> 00:03:22.990
在后台运行

00:03:21.730 --> 00:03:24.760
模式可能是无头的

00:03:22.990 --> 00:03:26.500
随便什么，但他们在我身上做

00:03:24.760 --> 00:03:28.740
代表所以在这种情况下

00:03:26.500 --> 00:03:34.360
授权服务是

00:03:28.740 --> 00:03:36.070
我们与之交谈的端点

00:03:34.360 --> 00:03:38.560
您会获得令牌进行互动

00:03:36.070 --> 00:03:40.840
并获得授权码或

00:03:38.560 --> 00:03:43.239
令牌中有资源服务器

00:03:40.840 --> 00:03:45.970
是Facebook REST API的API 

00:03:43.239 --> 00:03:48.970
包含您知道您的朋友图

00:03:45.970 --> 00:03:51.489
以及您的个人资料信息和

00:03:48.970 --> 00:03:53.650
你知道他们还有什么

00:03:51.489 --> 00:03:55.360
在他们的API中，这是一种资源

00:03:53.650 --> 00:03:57.550
保护你必须为了

00:03:55.360 --> 00:04:00.070
能够访问有关

00:03:57.550 --> 00:04:03.640
该IBA API，您必须有一个有效的

00:04:00.070 --> 00:04:05.260
授权创建的令牌

00:04:03.640 --> 00:04:06.700
服务，然后我们终于有了

00:04:05.260 --> 00:04:08.709
客户，客户当然是

00:04:06.700 --> 00:04:11.410
代表的第三方网站

00:04:08.709 --> 00:04:14.950
您是用户，直到您拥有这四个

00:04:11.410 --> 00:04:16.390
游戏中的东西，这是你知道的

00:04:14.950 --> 00:04:18.669
常见的例子，这是第三方

00:04:16.390 --> 00:04:20.830
网站facebook不想要那第三

00:04:18.669 --> 00:04:23.350
派对网站有权访问您的

00:04:20.830 --> 00:04:25.240
密码，您可能不想

00:04:23.350 --> 00:04:27.520
访问可能不需要第三方

00:04:25.240 --> 00:04:29.500
网站正在访问您的密码

00:04:27.520 --> 00:04:31.510
对，所以有一点点

00:04:29.500 --> 00:04:33.370
在此发生的间接

00:04:31.510 --> 00:04:35.710
在特定情况下会发生什么

00:04:33.370 --> 00:04:38.980
第三方网站向

00:04:35.710 --> 00:04:42.940
向Facebook申请授权

00:04:38.980 --> 00:04:44.020
对Facebook进行编码，然后提示您

00:04:42.940 --> 00:04:46.240
如果您尚未登录，请登录

00:04:44.020 --> 00:04:48.770
然后提示您确认

00:04:46.240 --> 00:04:51.710
所要求的特权

00:04:48.770 --> 00:04:53.300
如果您接受的话

00:04:51.710 --> 00:04:56.569
使用授权重定向回

00:04:53.300 --> 00:04:58.009
编码到您的第三方客户端，然后

00:04:56.569 --> 00:04:59.569
客户使用该授权码

00:04:58.009 --> 00:05:02.539
获得所谓的访问令牌

00:04:59.569 --> 00:05:05.360
然后可以用来进行后续

00:05:02.539 --> 00:05:09.169
调用Facebook API资源

00:05:05.360 --> 00:05:11.150
被保护了，这是一种

00:05:09.169 --> 00:05:12.620
流，这是很常见的流

00:05:11.150 --> 00:05:16.009
看到这个，我认为最常见的是

00:05:12.620 --> 00:05:17.599
 Web应用程序所作用的流程

00:05:16.009 --> 00:05:20.360
代表三分之一

00:05:17.599 --> 00:05:21.530
第三方客户端和服务以及API 

00:05:20.360 --> 00:05:23.300
代表你行事

00:05:21.530 --> 00:05:25.250
我们将使用这种流程

00:05:23.300 --> 00:05:27.409
浏览器应用程序现在将使用这些

00:05:25.250 --> 00:05:29.389
历史上新的浏览器应用程序

00:05:27.409 --> 00:05:32.210
还有另一种流叫做隐式

00:05:29.389 --> 00:05:34.780
跳过授权的授予

00:05:32.210 --> 00:05:37.009
代码或相当抱歉跳过了

00:05:34.780 --> 00:05:42.710
要求发送所谓的

00:05:37.009 --> 00:05:45.520
客户机密，这就是事实

00:05:42.710 --> 00:05:49.729
浏览器更容易访问

00:05:45.520 --> 00:05:51.409
令牌，但我想是你知道的

00:05:49.729 --> 00:05:53.960
可能是错误的，但据我所知

00:05:51.409 --> 00:05:56.389
它已经被

00:05:53.960 --> 00:06:00.259
建议那个大多数人

00:05:56.389 --> 00:06:02.259
使用授权码流程和

00:06:00.259 --> 00:06:05.630
只需忽略弯曲的客户凭证

00:06:02.259 --> 00:06:07.669
秘密或者是客户秘密

00:06:05.630 --> 00:06:09.229
那个流还有另一个流

00:06:07.669 --> 00:06:12.080
密码流程写密码

00:06:09.229 --> 00:06:15.440
授予，在这种情况下， 

00:06:12.080 --> 00:06:18.680
第三方客户打电话给您

00:06:15.440 --> 00:06:20.509
代表，但首先要重定向到

00:06:18.680 --> 00:06:23.180
受信任的授权服务

00:06:20.509 --> 00:06:25.190
你知道他们在Facebook网站上

00:06:23.180 --> 00:06:28.370
然后他们迅速登录就是其中之一

00:06:25.190 --> 00:06:30.169
客户提交或传输的情况

00:06:28.370 --> 00:06:31.759
您代表您使用密码

00:06:30.169 --> 00:06:35.029
直接到授权服务

00:06:31.759 --> 00:06:38.990
对，所以这是一个常见的例子

00:06:35.029 --> 00:06:40.099
本机应用程序，尤其是

00:06:38.990 --> 00:06:43.000
这是你知道的东西

00:06:40.099 --> 00:06:45.919
希望只会由

00:06:43.000 --> 00:06:48.169
首先建立API的公司

00:06:45.919 --> 00:06:51.979
放置在Facebook上，您知道的应用

00:06:48.169 --> 00:06:55.400
由开发的iOS应用

00:06:51.979 --> 00:06:58.789
在Facebook的人会是

00:06:55.400 --> 00:07:00.529
与一起开发的

00:06:58.789 --> 00:07:02.689
在这种情况下，密码授予不会

00:07:00.529 --> 00:07:04.879
对本地面孔的感觉

00:07:02.689 --> 00:07:06.769
 iOS上的应用程序以重定向您

00:07:04.879 --> 00:07:09.769
到facebook.com寻求许可

00:07:06.769 --> 00:07:12.829
让Facebook应用访问您的Facebook 

00:07:09.769 --> 00:07:13.819
在facebook.com上的信息的权利

00:07:12.829 --> 00:07:15.949
他们当然可以访问您的信息

00:07:13.819 --> 00:07:18.379
当然没有真正的担心

00:07:15.949 --> 00:07:20.599
关于他们有或者你知道

00:07:18.379 --> 00:07:22.459
自从他们传输密码

00:07:20.599 --> 00:07:23.449
 Facebook吧，他们已经有了您的

00:07:22.459 --> 00:07:24.829
密码，什么也没有

00:07:23.449 --> 00:07:26.509
要逃跑做点什么

00:07:24.829 --> 00:07:28.309
用您的密码好吃

00:07:26.509 --> 00:07:29.599
如果它是第三方网站，那么

00:07:28.309 --> 00:07:31.639
可能有风险吧

00:07:29.599 --> 00:07:33.439
成为您可能不会的第三方客户

00:07:31.639 --> 00:07:34.699
一定要信任，在这种情况下

00:07:33.439 --> 00:07:36.559
非常重要的是你要保持你的

00:07:34.699 --> 00:07:39.289
密码失控

00:07:36.559 --> 00:07:40.879
因为你想要最终否决权

00:07:39.289 --> 00:07:43.279
如果他们没有你

00:07:40.879 --> 00:07:44.539
您可以随时登录到的密码

00:07:43.279 --> 00:07:45.829
 Facebook或其他第三方

00:07:44.539 --> 00:07:47.989
网站Twitter再次或其他

00:07:45.829 --> 00:07:50.149
说我想拒绝这个特殊

00:07:47.989 --> 00:07:52.369
应用程序，因为它正在执行或

00:07:50.149 --> 00:07:55.819
恶意地利用我的信息

00:07:52.369 --> 00:07:57.319
然后你知道那就是

00:07:55.819 --> 00:07:59.539
那是两个很常见的

00:07:57.319 --> 00:08:02.509
密码授予和授权

00:07:59.539 --> 00:08:04.639
代码授予有第四项授予，我们

00:08:02.509 --> 00:08:07.039
谈到了隐式赠款

00:08:04.639 --> 00:08:09.619
第四笔拨款，那是客户

00:08:07.039 --> 00:08:12.259
在这种情况下授予您的凭据

00:08:09.619 --> 00:08:15.739
知道前三个流程是什么

00:08:12.259 --> 00:08:18.469
假设客户和用户具有上下文权限

00:08:15.739 --> 00:08:21.050
是代表乔希（Josh）行事的客户

00:08:18.469 --> 00:08:22.399
或或获得他人的支持，如果

00:08:21.050 --> 00:08:25.639
某处有人

00:08:22.399 --> 00:08:27.559
与客户凭证授予您

00:08:25.639 --> 00:08:29.599
有这个想法的客户没有年龄

00:08:27.559 --> 00:08:31.189
上下文，在这种情况下， 

00:08:29.599 --> 00:08:35.269
这是一种

00:08:31.189 --> 00:08:37.699
后台服务可能使用的流程

00:08:35.269 --> 00:08:38.930
人类没有给予的东西

00:08:37.699 --> 00:08:41.569
没有特定的使用者

00:08:38.930 --> 00:08:43.039
与之关联的上下文，但您想要

00:08:41.569 --> 00:08:44.629
他们想要的OAuth的好处

00:08:43.039 --> 00:08:46.759
能够获得的保护

00:08:44.629 --> 00:08:49.819
使用步行，这是一个呼叫工作流程

00:08:46.759 --> 00:08:51.379
在这种情况下，它只是一个客户

00:08:49.819 --> 00:08:53.509
必须进行身份验证，以便客户

00:08:51.379 --> 00:08:55.160
 OAuth世界有用户名和

00:08:53.509 --> 00:08:58.040
密码是它们具有客户端ID 

00:08:55.160 --> 00:09:00.290
和客户的秘密，这是一个ID 

00:08:58.040 --> 00:09:02.420
和密码，然后用户也有

00:09:00.290 --> 00:09:04.819
 OAuth中的用户名和密码

00:09:02.420 --> 00:09:07.689
世界这两件事是分开的

00:09:04.819 --> 00:09:11.540
的概念和原因

00:09:07.689 --> 00:09:14.480
 XML创意Timbre曾经很有名

00:09:11.540 --> 00:09:16.410
使用Xand密码描述的内容不

00:09:14.480 --> 00:09:18.720
不在开放网络上缩放比例

00:09:16.410 --> 00:09:20.790
正如我们刚刚看过的一样

00:09:18.720 --> 00:09:22.710
说明了很多不同

00:09:20.790 --> 00:09:25.500
给客户的想法很多

00:09:22.710 --> 00:09:27.350
客户的观念取决于您在哪里

00:09:25.500 --> 00:09:30.660
是你在做什么，但是如果你去

00:09:27.350 --> 00:09:31.770
你知道你是否去任何品牌

00:09:30.660 --> 00:09:33.840
在那里你可能会想到他们

00:09:31.770 --> 00:09:36.090
至少有一个iPhone应用程序， 

00:09:33.840 --> 00:09:39.060
以及Android体验，他们

00:09:36.090 --> 00:09:40.740
 html5，您知道基于浏览器的体验

00:09:39.060 --> 00:09:42.600
对，所以至少有三个不同

00:09:40.740 --> 00:09:45.180
客户又有一天可以

00:09:42.600 --> 00:09:47.910
假定他们将

00:09:45.180 --> 00:09:51.210
 HTML桌面时只有一种体验

00:09:47.910 --> 00:09:53.160
基于浏览器的体验

00:09:51.210 --> 00:09:55.050
通常这不是你知道的

00:09:53.160 --> 00:09:57.690
不是全部，这仅仅是开始

00:09:55.050 --> 00:09:58.970
对，我的意思是肯定有一些

00:09:57.690 --> 00:10:00.720
其他种类的经验

00:09:58.970 --> 00:10:02.460
这些天或苹果公司

00:10:00.720 --> 00:10:04.650
公司是品牌正在建立，所以

00:10:02.460 --> 00:10:07.020
当然有iPhone，还有我垫

00:10:04.650 --> 00:10:08.310
有不同的平板电脑设备

00:10:07.020 --> 00:10:10.500
可能在微小的不同客户中

00:10:08.310 --> 00:10:12.720
可能是现有的分支或分支

00:10:10.500 --> 00:10:14.220
客户还有各种各样的其他

00:10:12.720 --> 00:10:16.980
各种计划以及汽车

00:10:14.220 --> 00:10:18.900
如今有SDK意味着

00:10:16.980 --> 00:10:20.790
有男车说话

00:10:18.900 --> 00:10:23.430
服务，那些车有IP 

00:10:20.790 --> 00:10:25.680
地址有冰箱和

00:10:23.430 --> 00:10:27.740
微波炉都与

00:10:25.680 --> 00:10:30.960
物联网，这完全是

00:10:27.740 --> 00:10:33.870
你知道真正的可能性，如果你去

00:10:30.960 --> 00:10:36.270
新加坡新加坡的道路是

00:10:33.870 --> 00:10:38.280
连接到网格

00:10:36.270 --> 00:10:40.410
他们将传感器数据输入

00:10:38.280 --> 00:10:43.050
烧结数据的格陵兰岛

00:10:40.410 --> 00:10:45.540
做一个处理然后做

00:10:43.050 --> 00:10:48.660
预测流量整形和分析

00:10:45.540 --> 00:10:51.180
并在正确的流量调整中

00:10:48.660 --> 00:10:52.890
本质上，道路具有IP地址

00:10:51.180 --> 00:10:55.290
他们是某种形式的客户

00:10:52.890 --> 00:10:59.610
服务上有人类

00:10:55.290 --> 00:11:02.280
行星与器官走动

00:10:59.610 --> 00:11:06.090
连接到其中，并且它们具有IP 

00:11:02.280 --> 00:11:07.530
解决，所以您真的知道天空是

00:11:06.090 --> 00:11:09.690
这些天的限制

00:11:07.530 --> 00:11:11.670
有资格成为客户而非全部

00:11:09.690 --> 00:11:13.860
客户是否具有相同的能力

00:11:11.670 --> 00:11:16.050
对顶级客户的担保应

00:11:13.860 --> 00:11:19.920
被赋予相同的权利而不是

00:11:16.050 --> 00:11:21.270
所有客户都是一样安全

00:11:19.920 --> 00:11:23.370
一个规范，所以它是一个

00:11:21.270 --> 00:11:26.580
授权委托规范

00:11:23.370 --> 00:11:28.589
专为此类

00:11:26.580 --> 00:11:30.540
丛林般的环境

00:11:28.589 --> 00:11:32.459
不同的计划，这是一个

00:11:30.540 --> 00:11:34.139
非常适合微服务领域

00:11:32.459 --> 00:11:36.029
对，我们想要拥有，我们想要能够

00:11:34.139 --> 00:11:37.470
你知道带来很多不同

00:11:36.029 --> 00:11:39.480
客户

00:11:37.470 --> 00:11:41.819
我们希望能够与他们交谈

00:11:39.480 --> 00:11:44.069
你知道欢迎他们加入

00:11:41.819 --> 00:11:45.149
系统，而不必更改每个

00:11:44.069 --> 00:11:46.769
为其中每一项提供单一服务

00:11:45.149 --> 00:11:50.519
客户，如果您有微服务

00:11:46.769 --> 00:11:51.870
您知道要保护的系统

00:11:50.519 --> 00:11:54.529
他们使用Spring Cloud Security，您

00:11:51.870 --> 00:11:57.120
这些服务可以变成资源吗

00:11:54.529 --> 00:11:58.740
服务这些是春天的资源

00:11:57.120 --> 00:12:00.180
云安全可以声明性地

00:11:58.740 --> 00:12:03.480
为您保护，我们将讨论

00:12:00.180 --> 00:12:05.309
在另一部分中，但

00:12:03.480 --> 00:12:06.959
关键是你可以告诉这些不同

00:12:05.309 --> 00:12:09.509
拒绝请求的服务

00:12:06.959 --> 00:12:12.569
来自某种客户

00:12:09.509 --> 00:12:15.180
没有有效令牌但所有客户

00:12:12.569 --> 00:12:17.160
你能通过一种方式知道

00:12:15.180 --> 00:12:19.350
这些不同的赠款类型之一

00:12:17.160 --> 00:12:21.809
他们最终可能会有不同的流动

00:12:19.350 --> 00:12:23.579
获取令牌，这意味着它是

00:12:21.809 --> 00:12:25.139
易于扩展客户能力

00:12:23.579 --> 00:12:28.139
与您的服务交谈而无需

00:12:25.139 --> 00:12:29.819
改变您所有的服务

00:12:28.139 --> 00:12:32.279
我们要做的是建立一个

00:12:29.819 --> 00:12:35.670
今天的授权服务我现在

00:12:32.279 --> 00:12:40.110
前面说过值得重提哦F是

00:12:35.670 --> 00:12:42.750
不是一种解决方案，而是一种

00:12:40.110 --> 00:12:46.319
授权委托规范

00:12:42.750 --> 00:12:48.420
然后就是说它不

00:12:46.319 --> 00:12:53.180
处理它不提供一个问题

00:12:48.420 --> 00:12:58.620
问题的解决方案是该用户

00:12:53.180 --> 00:13:01.439
她或他说谁是对的

00:12:58.620 --> 00:13:04.889
这是一个无法解决问题的问题

00:13:01.439 --> 00:13:07.139
您知道给定用户密码的是

00:13:04.889 --> 00:13:09.750
更正它，而是委派

00:13:07.139 --> 00:13:12.059
对其他系统的特殊检查

00:13:09.750 --> 00:13:13.170
几乎可以是任何东西

00:13:12.059 --> 00:13:15.990
在太阳下就是重点

00:13:13.170 --> 00:13:18.179
要么作者规范谈

00:13:15.990 --> 00:13:19.920
非常特别地关于sam'l 

00:13:18.179 --> 00:13:22.829
例子，它谈到了整合

00:13:19.920 --> 00:13:24.449
与其他技术，所以重点是

00:13:22.829 --> 00:13:25.379
您需要很好地插入该机制

00:13:24.449 --> 00:13:27.839
当然

00:13:25.379 --> 00:13:31.439
春季春季安全办公室

00:13:27.839 --> 00:13:33.029
弹簧安全性又集成了

00:13:31.439 --> 00:13:35.759
设计中的所有内容

00:13:33.029 --> 00:13:37.649
能够添加到该问题，所以我们

00:13:35.759 --> 00:13:41.830
首先我要回答这个问题

00:13:37.649 --> 00:13:45.279
我的小屋服务如何

00:13:41.830 --> 00:13:47.050
没有提供用户名和密码

00:13:45.279 --> 00:13:49.209
您知道用户足够正确

00:13:47.050 --> 00:13:50.740
标志，所以我们需要提供一些

00:13:49.209 --> 00:13:54.100
网络问题的方式，然后

00:13:50.740 --> 00:13:56.350
最后，我们需要配置

00:13:54.100 --> 00:13:58.959
客户及其权限以及

00:13:56.350 --> 00:14:00.459
你知道玛丽，你站在一起

00:13:58.959 --> 00:14:02.800
弹簧安全保护配置

00:14:00.459 --> 00:14:04.990
本身，让我们建立一个授权

00:14:02.800 --> 00:14:09.310
服务器在这里，我要说一声

00:14:04.990 --> 00:14:10.779
服务，我们将为您打造音乐

00:14:09.310 --> 00:14:13.390
知道那里的春季安全上升支持

00:14:10.779 --> 00:14:15.160
我将使用弹簧靴支撑

00:14:13.390 --> 00:14:17.200
用于构建Web应用程序

00:14:15.160 --> 00:14:18.550
用术语来回答我们的问题

00:14:17.200 --> 00:14:21.310
你知道他们我们会回答

00:14:18.550 --> 00:14:24.640
通过指向有关用户的问题

00:14:21.310 --> 00:14:27.130
春季安全到一个存储库

00:14:24.640 --> 00:14:28.360
基于dau的身份验证管理器和

00:14:27.130 --> 00:14:30.010
我实际上需要做的所有事情

00:14:28.360 --> 00:14:32.620
必须让他们工作，但是重点

00:14:30.010 --> 00:14:34.870
我们需要某种道数据吗

00:14:32.620 --> 00:14:37.300
访问对象，可以与

00:14:34.870 --> 00:14:39.040
数据库，然后给定用户名和

00:14:37.300 --> 00:14:42.550
密码执行查询并返回一个

00:14:39.040 --> 00:14:45.820
响应，因此我们将使用JPA和

00:14:42.550 --> 00:14:47.770
我们要取h2而不是h2只是

00:14:45.820 --> 00:14:49.390
内存中嵌入式续集数据库

00:14:47.770 --> 00:14:56.079
这将使我们更容易

00:14:49.390 --> 00:15:08.490
保护，让我们命中生成并旋转

00:14:56.079 --> 00:15:13.250
这个，我们将解压出来

00:15:08.490 --> 00:15:13.250
并把它打开

00:15:24.380 --> 00:15:27.920
好吧，我们有一个，我们有几个

00:15:26.990 --> 00:15:32.180
我们需要做的事情

00:15:27.920 --> 00:15:34.010
首先提供一些配置，所以我

00:15:32.180 --> 00:15:36.500
想要这个，我将其称为

00:15:34.010 --> 00:15:38.840
正常的办公室服务

00:15:36.500 --> 00:15:41.630
冲刺云架构

00:15:38.840 --> 00:15:43.700
有一个配置服务器，你可以

00:15:41.630 --> 00:15:45.560
将此指向您的配置先生，但

00:15:43.700 --> 00:15:47.540
因为我这里没有那个设置

00:15:45.560 --> 00:15:49.310
真的不在乎我

00:15:47.540 --> 00:15:51.080
为此，我将复制一些

00:15:49.310 --> 00:15:53.770
我奠定的现有价值观

00:15:51.080 --> 00:15:56.630
围绕这个配置好吧，所以

00:15:53.770 --> 00:15:58.490
我们要说我们想允许

00:15:56.630 --> 00:16:00.590
登录以在以下级别的调试级别上运行

00:15:58.490 --> 00:16:04.280
方便，我们不阅读我们想要的

00:16:00.590 --> 00:16:06.470
再次在端口91 91上运行代码

00:16:04.280 --> 00:16:09.200
特殊的原因，所以我已经做了

00:16:06.470 --> 00:16:10.880
以前，这是我们想要的惯例

00:16:09.200 --> 00:16:12.590
在某个上下文路径下运行它

00:16:10.880 --> 00:16:14.840
我们将向所有请求

00:16:12.590 --> 00:16:16.730
授权服务器以四个开头

00:16:14.840 --> 00:16:19.700
每当发生任何事情时都向您大减AAA 

00:16:16.730 --> 00:16:22.850
它必须走这样的路，然后

00:16:19.700 --> 00:16:24.620
其他标准的OAuth端点还可以， 

00:16:22.850 --> 00:16:26.570
就是我们的总和

00:16:24.620 --> 00:16:29.000
现在让我们专注于这里的代码

00:16:26.570 --> 00:16:31.510
我们将建立一个视觉服务器

00:16:29.000 --> 00:16:33.950
他们说和授权服务器

00:16:31.510 --> 00:16:36.050
这将需要工作

00:16:33.950 --> 00:16:38.900
 JP的条款，为了做到这一点，我是

00:16:36.050 --> 00:16:40.970
将使用Lombok的编译时间

00:16:38.900 --> 00:16:42.530
我做的注释处理器

00:16:40.970 --> 00:16:44.870
我忽略要包括在内的标题

00:16:42.530 --> 00:16:48.350
生成代码时的应用程序

00:16:44.870 --> 00:16:49.250
从Spring初始值设定项和我

00:16:48.350 --> 00:16:51.410
我要做的是建立一个

00:16:49.250 --> 00:16:55.250
 JP的简单实体称为

00:16:51.410 --> 00:16:57.410
从班级帐户中扣除， 

00:16:55.250 --> 00:17:04.240
帐户将在实体处有一个实体

00:16:57.410 --> 00:17:09.860
我会说一个生成值的ID 

00:17:04.240 --> 00:17:13.280
私人长ID，然后我会说我

00:17:09.860 --> 00:17:16.240
想要一个字符串字段

00:17:13.280 --> 00:17:19.190
用户名另一个密码我

00:17:16.240 --> 00:17:20.750
想要再有一个布尔值

00:17:19.190 --> 00:17:23.150
回答问题是这个帐户

00:17:20.750 --> 00:17:25.940
积极的权利，我们将在以后看到

00:17:23.150 --> 00:17:28.550
活跃的布尔值你知道吗

00:17:25.940 --> 00:17:29.630
它实际上代表了公平

00:17:28.550 --> 00:17:31.160
的不同问题数量

00:17:29.630 --> 00:17:32.570
有关是否

00:17:31.160 --> 00:17:34.400
有效的帐户是否有效

00:17:32.570 --> 00:17:36.260
是否被锁定在那

00:17:34.400 --> 00:17:37.200
正确的东西，所以我认为

00:17:36.260 --> 00:17:39.570
是个

00:17:37.200 --> 00:17:41.249
我想在这里描述的是

00:17:39.570 --> 00:17:44.220
要用龙目岛做些短工

00:17:41.249 --> 00:17:46.799
生成构造函数的过程，您知道

00:17:44.220 --> 00:17:48.570
参数构造函数和两个字符串

00:17:46.799 --> 00:17:49.799
方法等实际上正确

00:17:48.570 --> 00:17:51.629
所以字符串可能不是一个好主意

00:17:49.799 --> 00:17:53.429
在这里，因为我们有密码，所以我们将

00:17:51.629 --> 00:17:55.289
保持原样，然后我要

00:17:53.429 --> 00:17:57.359
我要做的就是能够操纵

00:17:55.289 --> 00:18:00.480
该帐户存储库的实例，因此

00:17:57.359 --> 00:18:01.919
我会说帐户存储库对此进行了扩展

00:18:00.480 --> 00:18:04.409
 JPEG存储库，我要说的是

00:18:01.919 --> 00:18:06.299
这是一个很多的JPEG存储库

00:18:04.409 --> 00:18:09.059
板块实体，其账户类型

00:18:06.299 --> 00:18:12.720
主键是硬锁型长

00:18:09.059 --> 00:18:15.539
好吧，我现在需要坚持一些

00:18:12.720 --> 00:18:16.619
样本用户名和密码进入

00:18:15.539 --> 00:18:18.629
数据库，所以我要创建一个

00:18:16.619 --> 00:18:20.700
命令行赢家，这是一个弹性

00:18:18.629 --> 00:18:23.909
启动时将使用的组件

00:18:20.700 --> 00:18:25.440
 Ola将记录记录到您知道的数据库中

00:18:23.909 --> 00:18:28.919
它只会将数据写入数据库，因此

00:18:25.440 --> 00:18:30.869
春天来了，它会打电话给

00:18:28.919 --> 00:18:31.529
运行方法，给我们机会

00:18:30.869 --> 00:18:33.600
做任何形式的应用

00:18:31.529 --> 00:18:36.179
初始化正是

00:18:33.600 --> 00:18:38.309
我在这里做，我要去

00:18:36.179 --> 00:18:40.019
使用创建一些硬编码

00:18:38.309 --> 00:18:41.609
再次输入密码，这是一个内存

00:18:40.019 --> 00:18:44.249
我将需要重新创建数据库

00:18:41.609 --> 00:18:45.989
这些记录按需还是你

00:18:44.249 --> 00:18:47.940
在启动时知道，但是当然如果您有

00:18:45.989 --> 00:18:49.350
我的明信片续集或

00:18:47.940 --> 00:18:51.809
甲骨文不管你是什么

00:18:49.350 --> 00:18:53.460
你正在使用，那么你可以做到这一点

00:18:51.809 --> 00:18:55.759
显然你是在和真实的数据库对话

00:18:53.460 --> 00:18:58.289
但这是一个简单的简单演示

00:18:55.759 --> 00:19:01.769
让我们看看何时创建一些样本

00:18:58.289 --> 00:19:03.809
用户一天的春天，那是我我的

00:19:01.769 --> 00:19:09.799
用户名和我想要的密码

00:19:03.809 --> 00:19:09.799
云我做的好博士。尖顶P网已移动

00:19:10.279 --> 00:19:19.470
我们哪些安全性非常

00:19:15.259 --> 00:19:22.590
使用偶数密码组合很无聊

00:19:19.470 --> 00:19:24.869
我会说我想把每个

00:19:22.590 --> 00:19:25.619
字符串并拆分它，所以我有一个用户名

00:19:24.869 --> 00:19:32.359
密码

00:19:25.619 --> 00:19:34.679
请问好，然后我想去

00:19:32.359 --> 00:19:36.359
现在的每一个人

00:19:34.679 --> 00:19:37.950
得到加薪或免费绅士网

00:19:36.359 --> 00:19:39.809
那是流，我有一个数组

00:19:37.950 --> 00:19:41.609
有两个数组的方案

00:19:39.809 --> 00:19:44.070
两个元素，然后对

00:19:41.609 --> 00:19:46.149
我想说的每个元组帐户

00:19:44.070 --> 00:19:50.549
在保存您的帐户时的姿势

00:19:46.149 --> 00:19:52.749
我现在想通过井

00:19:50.549 --> 00:19:54.609
想要创建一个新的构造函数

00:19:52.749 --> 00:19:56.289
仅使用用户名密码

00:19:54.609 --> 00:20:02.289
积极的一面，我不需要

00:19:56.289 --> 00:20:05.019
实际的主键等等

00:20:02.289 --> 00:20:07.289
我们在那里，让我们看看

00:20:05.019 --> 00:20:07.289
看起来像

00:20:15.640 --> 00:20:22.510
好吧，我们要说全零

00:20:20.170 --> 00:20:25.630
那是完整的用户名是

00:20:22.510 --> 00:20:27.010
密码，最后一个是帐户

00:20:25.630 --> 00:20:28.360
活跃，现在让我们说

00:20:27.010 --> 00:20:30.580
现在每个人都很活跃

00:20:28.360 --> 00:20:33.730
如果您使用的是

00:20:30.580 --> 00:20:34.929
通过数据库，它可以动态

00:20:33.730 --> 00:20:37.630
变化可以动态地改变

00:20:34.929 --> 00:20:38.980
如果所有这些都不相关，那么

00:20:37.630 --> 00:20:40.630
很好，现在我要写一些

00:20:38.980 --> 00:20:44.679
今天有记录，我认为

00:20:40.630 --> 00:20:47.950
我们没关系，我们要做的是

00:20:44.679 --> 00:20:49.210
现在教弹簧安全刚带来

00:20:47.950 --> 00:20:51.760
安全性并添加春季安全性

00:20:49.210 --> 00:20:53.679
关于我们使用密码数据库和

00:20:51.760 --> 00:20:55.000
这是您将要使用的那种代码

00:20:53.679 --> 00:20:56.380
就像我这样写

00:20:55.000 --> 00:20:57.790
不是你说你可能会做

00:20:56.380 --> 00:20:59.380
更好的工作，但你会写

00:20:57.790 --> 00:21:01.900
这类代码

00:20:59.380 --> 00:21:03.160
集成是一种胶合代码

00:21:01.900 --> 00:21:05.919
让春季安全与您交谈

00:21:03.160 --> 00:21:07.870
身份提供商，无论您是谁

00:21:05.919 --> 00:21:09.520
十年前就知道

00:21:07.870 --> 00:21:11.950
琐事我们需要做的是告诉

00:21:09.520 --> 00:21:15.850
春季安全保障

00:21:11.950 --> 00:21:18.340
要求验证用户名

00:21:15.850 --> 00:21:21.360
无论如何，整天需要知道该怎么做

00:21:18.340 --> 00:21:26.290
春季安全的核心是

00:21:21.360 --> 00:21:28.480
听写管理器的概念

00:21:26.290 --> 00:21:30.790
春天的认证经理

00:21:28.480 --> 00:21:33.640
安全是一个非常简单的界面

00:21:30.790 --> 00:21:35.679
说给定身份验证不要

00:21:33.640 --> 00:21:38.770
专心致志，这样做Sethi 

00:21:35.679 --> 00:21:41.110
经过验证的布尔值

00:21:38.770 --> 00:21:42.940
身份验证对象设置为真

00:21:41.110 --> 00:21:45.130
 authenticated应该设置为true或

00:21:42.940 --> 00:21:47.679
错误的权利，但您应该有结果

00:21:45.130 --> 00:21:50.490
从那个认证管理器

00:21:47.679 --> 00:21:53.049
然后返回超级认证

00:21:50.490 --> 00:21:54.940
身份验证或抛出一个

00:21:53.049 --> 00:21:56.919
一系列不同的例外权利

00:21:54.940 --> 00:22:00.040
禁用的异常锁，除了一些错误

00:21:56.919 --> 00:22:03.100
凭证异常等，这是一个

00:22:00.040 --> 00:22:06.429
泛型非常抽象

00:22:03.100 --> 00:22:07.840
可以与任何我一起使用的界面

00:22:06.429 --> 00:22:09.250
实际上，根据

00:22:07.840 --> 00:22:11.140
太阳任何你能想到的都可以

00:22:09.250 --> 00:22:14.470
在此方面适合工作

00:22:11.140 --> 00:22:17.410
签约不管他们是否

00:22:14.470 --> 00:22:19.630
身份验证请求正在发生

00:22:17.410 --> 00:22:23.290
或正在根据用户名进行

00:22:19.630 --> 00:22:25.419
和密码或密钥正在传输

00:22:23.290 --> 00:22:27.700
在请求正文中或正在

00:22:25.419 --> 00:22:29.530
就...而言

00:22:27.700 --> 00:22:31.060
你知道令牌并不在乎吗

00:22:29.530 --> 00:22:32.530
它非常通用，您

00:22:31.060 --> 00:22:34.690
您可以按照我们的喜好实现它吗

00:22:32.530 --> 00:22:37.290
春天有专业

00:22:34.690 --> 00:22:39.850
支持特定的安全性

00:22:37.290 --> 00:22:40.930
您知道进入的特殊用例

00:22:39.850 --> 00:22:42.930
该问题给出了用户名和

00:22:40.930 --> 00:22:45.880
密码是有效用户，并且

00:22:42.930 --> 00:22:46.930
被称为用户的专业化

00:22:45.880 --> 00:22:50.110
详情

00:22:46.930 --> 00:22:52.060
服务，所以这些都是详细的服务

00:22:50.110 --> 00:22:55.530
具有非常简单的Java接口

00:22:52.060 --> 00:22:58.330
给定用户名的合同，您将

00:22:55.530 --> 00:23:00.790
签订或执行大合同

00:22:58.330 --> 00:23:02.740
通过键入用户详细信息

00:23:00.790 --> 00:23:04.720
包含授予的集合

00:23:02.740 --> 00:23:06.820
权威权威是

00:23:04.720 --> 00:23:09.130
真的只是一个字符串，只是一个包装

00:23:06.820 --> 00:23:10.990
在字符串周围，字符串可以

00:23:09.130 --> 00:23:13.570
成为你需要的一切

00:23:10.990 --> 00:23:15.790
可能是特定的技术

00:23:13.570 --> 00:23:17.950
您的角色或范围的概念，或

00:23:15.790 --> 00:23:20.070
权限或权限种类或

00:23:17.950 --> 00:23:21.760
不管我是什么他们基本上是

00:23:20.070 --> 00:23:25.000
权利的事情允许你

00:23:21.760 --> 00:23:26.080
让客户做对，所以我们

00:23:25.000 --> 00:23:27.970
必须输入，我们必须能够

00:23:26.080 --> 00:23:29.530
提供我们必须收集的

00:23:27.970 --> 00:23:31.330
提供用户密码，并

00:23:29.530 --> 00:23:33.220
用户的用户名，我们拥有

00:23:31.330 --> 00:23:36.490
回答这四个问题是

00:23:33.220 --> 00:23:41.170
帐户过期未锁定或锁定

00:23:36.490 --> 00:23:43.390
一起是帐户未过期是

00:23:41.170 --> 00:23:45.370
凭据未过期，可以

00:23:43.390 --> 00:23:47.170
启用，就我们而言，我只是要

00:23:45.370 --> 00:23:50.500
回答所有这四个问题

00:23:47.170 --> 00:23:54.460
相同的答案是它是活跃的

00:23:50.500 --> 00:23:55.990
当然，我们会说是的，这样

00:23:54.460 --> 00:23:57.160
应该都是真的，所以我们需要

00:23:55.990 --> 00:23:59.890
实现我们需要实现我们的

00:23:57.160 --> 00:24:02.440
自己的用户详细信息服务有

00:23:59.890 --> 00:24:03.580
当然有错误，有任何数字

00:24:02.440 --> 00:24:05.230
不同的实现方式

00:24:03.580 --> 00:24:07.090
这将与所有

00:24:05.230 --> 00:24:08.740
在不同的身份提供者

00:24:07.090 --> 00:24:10.980
后端，但出于我们的目的，我们只是

00:24:08.740 --> 00:24:17.890
将提供非常简单的帐户

00:24:10.980 --> 00:24:24.300
用户详细信息服务可以实现用户

00:24:17.890 --> 00:24:26.320
细节服务，我们将

00:24:24.300 --> 00:24:27.820
回答我们要说的问题

00:24:26.320 --> 00:24:29.920
当有人问我给它一个用户时

00:24:27.820 --> 00:24:32.470
命名我是否有任何有效用户

00:24:29.920 --> 00:24:35.530
细节，我们将真正使用我们的新产品

00:24:32.470 --> 00:24:39.040
有限帐户存储库好，那么我们

00:24:35.530 --> 00:24:44.990
创建一个构造函数并

00:24:39.040 --> 00:24:47.770
我们将其移到这里，我们可以

00:24:44.990 --> 00:24:50.000
所以我们去这些很简单

00:24:47.770 --> 00:24:53.210
实际上是特定的服务

00:24:50.000 --> 00:24:57.230
实施帐户存储库

00:24:53.210 --> 00:25:00.020
需要通过用户名查找正确传递

00:24:57.230 --> 00:25:02.420
用户名，我想导入

00:25:00.020 --> 00:25:04.340
但我将使用可选的而不是

00:25:02.420 --> 00:25:08.780
默认用户详细信息，我是Eric的我

00:25:04.340 --> 00:25:12.400
想要一个可选的使用其可选的

00:25:08.780 --> 00:25:14.900
实际上我想要一个可选帐户

00:25:12.400 --> 00:25:17.270
你知道我可以通过使用解决

00:25:14.900 --> 00:25:19.550
所以在 spring data 世界中，如果我说我

00:25:17.270 --> 00:25:21.170
想要一个可选的返回值

00:25:19.550 --> 00:25:22.850
给我一个可选的是

00:25:21.170 --> 00:25:24.500
空或包含我的记录

00:25:22.850 --> 00:25:27.980
在这种情况下寻找，所以我在这里

00:25:24.500 --> 00:25:29.390
最后说一张有它的唱片

00:25:27.980 --> 00:25:31.040
该用户名，所以我要么

00:25:29.390 --> 00:25:32.930
找到它或0，但不会

00:25:31.040 --> 00:25:34.640
希望我不止一个

00:25:32.930 --> 00:25:35.990
得到一个例外，所以我要去做

00:25:34.640 --> 00:25:38.770
我要说的好吗

00:25:35.990 --> 00:25:41.090
让我们将帐户映射到

00:25:38.770 --> 00:25:43.010
用户详细信息类型的实现

00:25:41.090 --> 00:25:48.830
具体的实现是

00:25:43.010 --> 00:25:53.470
叫用户类型，所以我说帐户

00:25:48.830 --> 00:25:56.690
点用户名帐户点密码和

00:25:53.470 --> 00:25:59.120
在这里，我需要归还所有这四个

00:25:56.690 --> 00:26:00.500
问题，所以我需要回答

00:25:59.120 --> 00:26:05.690
这个问题宁可说是

00:26:00.500 --> 00:26:07.400
现在我们有四种不同的方式

00:26:05.690 --> 00:26:08.540
最后我们需要返回

00:26:07.400 --> 00:26:10.460
授予权威的收集和

00:26:08.540 --> 00:26:14.090
我只是要用一个很方便的

00:26:10.460 --> 00:26:16.130
春季安全小实用程序类

00:26:14.090 --> 00:26:19.190
称为我要使用的授权实用程序

00:26:16.130 --> 00:26:21.040
创建一个权限列表，您知道

00:26:19.190 --> 00:26:23.180
这些只是当局

00:26:21.040 --> 00:26:26.090
在这种情况下您想要删除的任何内容

00:26:23.180 --> 00:26:29.150
只是我要去做

00:26:26.090 --> 00:26:32.210
每个管理员和用户

00:26:29.150 --> 00:26:33.950
系统，如果我这样做的话

00:26:32.210 --> 00:26:36.050
很好，否则我需要扔一个

00:26:33.950 --> 00:26:38.150
例外，请记住此处的合同

00:26:36.050 --> 00:26:40.130
春季安全性是您发现

00:26:38.150 --> 00:26:41.840
有效的用户详细信息，或者您返回或

00:26:40.130 --> 00:26:45.950
而是您在抛出异常

00:26:41.840 --> 00:26:48.670
不返回null无效

00:26:45.950 --> 00:26:50.480
选择这里，所以我要说不能

00:26:48.670 --> 00:26:54.830
找

00:26:50.480 --> 00:26:58.730
用户名还可以

00:26:54.830 --> 00:27:00.260
无论哪种方式，我们的工作都完成了

00:26:58.730 --> 00:27:03.650
我们已经尽力满足了

00:27:00.260 --> 00:27:05.330
该合同，这又是

00:27:03.650 --> 00:27:06.710
他们说这只是股票标准

00:27:05.330 --> 00:27:10.630
那种弹簧的安全性

00:27:06.710 --> 00:27:13.010
你几年前写的东西

00:27:10.630 --> 00:27:14.960
这已经很不错了，我们已经

00:27:13.010 --> 00:27:17.530
你知道参加这里的比赛，但是我们

00:27:14.960 --> 00:27:22.430
仍然没有做好，我们仍然需要

00:27:17.530 --> 00:27:23.480
教Spring Security ooofff了解什么

00:27:22.430 --> 00:27:25.310
我们刚刚完成，我们还需要教

00:27:23.480 --> 00:27:26.870
为我们带来的客户带来安全

00:27:25.310 --> 00:27:30.010
想要我们想要站起来

00:27:26.870 --> 00:27:37.040
让我们创建一个报价服务

00:27:30.010 --> 00:27:37.430
配置扩展完整服务器我

00:27:37.040 --> 00:27:42.490
抱歉

00:27:37.430 --> 00:27:42.490
继续服务

00:27:45.309 --> 00:27:52.880
配置适配器好了，我们需要

00:27:50.029 --> 00:27:54.350
在这里不覆盖一些关键方法

00:27:52.880 --> 00:27:56.360
需要我们可以的构造函数

00:27:54.350 --> 00:27:58.669
这些都不是什么意思

00:27:56.360 --> 00:28:00.350
他们是空的，只为你

00:27:58.669 --> 00:28:02.389
有你不需要的回调

00:28:00.350 --> 00:28:04.070
实施它们，您不必使用

00:28:02.389 --> 00:28:06.500
他们，但在我们的情况下很方便

00:28:04.070 --> 00:28:08.870
我们不想配置安全性

00:28:06.500 --> 00:28:10.880
本身，所以我们将其保留为原样

00:28:08.870 --> 00:28:15.200
想要实施的是我们的作家

00:28:10.880 --> 00:28:17.960
客户和端点，所以这是一个

00:28:15.200 --> 00:28:19.610
配置类，我们将要

00:28:17.960 --> 00:28:22.279
告诉Springs安全，然后我们要

00:28:19.610 --> 00:28:26.210
创建一个授权服务器

00:28:22.279 --> 00:28:30.350
我们在那里，在和回调中

00:28:26.210 --> 00:28:32.210
我们要在配置中告诉的方法

00:28:30.350 --> 00:28:34.309
用于授权服务器端点

00:28:32.210 --> 00:28:36.889
配置告诉春天的地方

00:28:34.309 --> 00:28:39.620
安全法机制的设想

00:28:36.889 --> 00:28:42.200
委派您知道用户名和

00:28:39.620 --> 00:28:43.610
密码验证，当然

00:28:42.200 --> 00:28:45.429
在这种情况下，我们将要委托

00:28:43.610 --> 00:28:47.450
到现有的弹簧安全装置

00:28:45.429 --> 00:28:49.100
配置的身份验证管理器

00:28:47.450 --> 00:28:50.929
将为我们自动配置

00:28:49.100 --> 00:28:52.159
你知道那已经很奇怪了

00:28:50.929 --> 00:28:54.549
将可用，我们可以拒绝它

00:28:52.159 --> 00:28:58.809
所以我要去做些什么或说

00:28:54.549 --> 00:29:01.610
私人最终认证管理员

00:28:58.809 --> 00:29:07.880
注入这个我将创建一个构造函数

00:29:01.610 --> 00:29:09.980
我们将其传递给该静态对象

00:29:07.880 --> 00:29:13.970
分配经理人人都对

00:29:09.980 --> 00:29:16.370
我们很荣幸

00:29:13.970 --> 00:29:18.289
您知道我们的认证经理

00:29:16.370 --> 00:29:19.519
我们拥有的胶水

00:29:18.289 --> 00:29:21.529
连接这两个不同的权利

00:29:19.519 --> 00:29:23.450
系统，最后我们要讲

00:29:21.529 --> 00:29:26.510
春季安全性很多

00:29:23.450 --> 00:29:29.240
我们希望允许的客户，如果

00:29:26.510 --> 00:29:30.470
您曾经使用过Facebook或KPI 

00:29:29.240 --> 00:29:32.029
你知道有一个你知道

00:29:30.470 --> 00:29:34.220
开发者Facebook或开发者

00:29:32.029 --> 00:29:36.250
 Google的Twitter开发人员通常

00:29:34.220 --> 00:29:38.840
门户网站，您可以在其中注册

00:29:36.250 --> 00:29:41.360
任意客户对您的建议

00:29:38.840 --> 00:29:43.899
是你知道春天的提示android 

00:29:41.360 --> 00:29:45.289
客户可能是你知道你的

00:29:43.899 --> 00:29:47.659
嵌入式的

00:29:45.289 --> 00:29:49.340
用Facebook的流程登录

00:29:47.659 --> 00:29:51.320
无论哪种方式，您都可以提供

00:29:49.340 --> 00:29:54.139
用户名或客户ID和

00:29:51.320 --> 00:29:56.149
客户机密并指定

00:29:54.139 --> 00:29:58.190
您想要支持的流程

00:29:56.149 --> 00:29:59.010
您的特定用例，通常

00:29:58.190 --> 00:30:00.630
有某种

00:29:59.010 --> 00:30:02.250
您填写的表格，他们

00:30:00.630 --> 00:30:05.160
被添加到数据库人员

00:30:02.250 --> 00:30:07.020
可能在另一个人之后

00:30:05.160 --> 00:30:08.160
一边盯着它，并确认

00:30:07.020 --> 00:30:09.930
效果了解并要求

00:30:08.160 --> 00:30:11.400
有效的……适用的青年案例

00:30:09.930 --> 00:30:14.010
但就我们而言，我们只是要

00:30:11.400 --> 00:30:15.930
建立一个硬编码的客户清单

00:30:14.010 --> 00:30:18.390
贾斯汀向一位客户收费的事实，但

00:30:15.930 --> 00:30:19.740
再一次，你知道你是否

00:30:18.390 --> 00:30:22.200
某种没有理由你不能

00:30:19.740 --> 00:30:24.150
将此指向正在使用的数据源

00:30:22.200 --> 00:30:26.760
安全的数据库模式

00:30:24.150 --> 00:30:28.770
个人资料提供，或者您可以提供

00:30:26.760 --> 00:30:30.900
您自己的客户实施

00:30:28.770 --> 00:30:35.420
再次详细说明服务合同

00:30:30.900 --> 00:30:38.070
工厂客户详细服务联系方式为

00:30:35.420 --> 00:30:39.450
或多或少类似于您

00:30:38.070 --> 00:30:42.600
输入您要说的用户详细信息

00:30:39.450 --> 00:30:44.100
这里给定客户ID返回客户

00:30:42.600 --> 00:30:45.870
详细信息，以便您可以为您提供

00:30:44.100 --> 00:30:48.210
在我们中的实现

00:30:45.870 --> 00:30:49.950
如果我很高兴使用内存

00:30:48.210 --> 00:30:54.950
版本说我要建立

00:30:49.950 --> 00:30:58.200
具有秘密的html5客户端

00:30:54.950 --> 00:31:01.760
密码，我想说我

00:30:58.200 --> 00:31:04.290
支持我可以支持的密码流程

00:31:01.760 --> 00:31:06.270
授权码及所有其他

00:31:04.290 --> 00:31:08.190
像这样的单词是一个非常阁楼安排

00:31:06.270 --> 00:31:10.670
我可以在这里放多个值，但是

00:31:08.190 --> 00:31:12.990
现在只要做密码， 

00:31:10.670 --> 00:31:15.240
我要说的是我想要公开ID 

00:31:12.990 --> 00:31:18.030
在这种情况下，范围没有任何意义

00:31:15.240 --> 00:31:20.820
但这是我想要的范围

00:31:18.030 --> 00:31:25.530
提出请求时请参阅支持

00:31:20.820 --> 00:31:26.400
好吧，那是一个客户， 

00:31:25.530 --> 00:31:29.460
再次没有理由你不能

00:31:26.400 --> 00:31:31.110
建立五个客户的图像

00:31:29.460 --> 00:31:33.480
和Android Play和iOS客户端设置

00:31:31.110 --> 00:31:36.210
然后根据它们分别配置

00:31:33.480 --> 00:31:38.550
走向您的用例或

00:31:36.210 --> 00:31:40.560
您组织的客户或实际上

00:31:38.550 --> 00:31:45.120
您的任意数量的客户

00:31:40.560 --> 00:31:48.840
我想也要建立

00:31:45.120 --> 00:31:51.480
如果我们运行这个就应该这样做

00:31:48.840 --> 00:31:53.040
应该去提出要求，我已经发送了

00:31:51.480 --> 00:31:57.600
对令牌端点的有效请求，以及

00:31:53.040 --> 00:31:59.550
作为有效的访问令牌得到反映

00:31:57.600 --> 00:32:02.030
我们刚刚做了什么，让我们开始吧

00:31:59.550 --> 00:32:02.030
此代码

00:32:51.950 --> 00:32:56.720
好，所以应用程序启动了

00:32:53.810 --> 00:32:59.600
在端口91和91上运行，我要去

00:32:56.720 --> 00:33:01.730
在这里使用邮递员浏览器插件

00:32:59.600 --> 00:33:03.470
简化请求的任务

00:33:01.730 --> 00:33:08.890
一个令牌，所以请记住我们所说的

00:33:03.470 --> 00:33:13.670
 190 191将向

00:33:08.890 --> 00:33:16.010
 91 91您是ba令牌，所以这是

00:33:13.670 --> 00:33:18.860
我们提供的自定义上下文路径

00:33:16.010 --> 00:33:20.510
这是实际的标准iso auth 

00:33:18.860 --> 00:33:24.710
我们要去的端点

00:33:20.510 --> 00:33:26.330
致电以及我们发送请求表格时

00:33:24.710 --> 00:33:28.160
说我们接受应用程序JSON 

00:33:26.330 --> 00:33:30.200
我要发送授权给

00:33:28.160 --> 00:33:32.660
输入基本授权标头

00:33:30.200 --> 00:33:34.280
我们发送的授权是

00:33:32.660 --> 00:33:36.950
在这种情况下，用户名和密码为

00:33:34.280 --> 00:33:38.420
客户ID和客户代码回显

00:33:36.950 --> 00:33:40.460
客户的秘密，而不是我们

00:33:38.420 --> 00:33:42.980
发送H 2 O 5和密码

00:33:40.460 --> 00:33:46.400
确实与此标题html5对应

00:33:42.980 --> 00:33:48.380
密码，我们将发送

00:33:46.400 --> 00:33:50.990
身体几个参数将

00:33:48.380 --> 00:33:54.110
给我发送您知道的密码

00:33:50.990 --> 00:33:56.030
用户名通过

00:33:54.110 --> 00:33:58.100
用户名本身，您可能知道我的名字

00:33:56.030 --> 00:34:00.260
并输入我们要授予的密码

00:33:58.100 --> 00:34:03.350
试图在这种情况下使用密码

00:34:00.260 --> 00:34:05.900
授予该范围的授权类型

00:34:03.350 --> 00:34:07.790
再次使用任意字符串的客户ID 

00:34:05.900 --> 00:34:10.610
和客户的秘密，所以如果我们这样做

00:34:07.790 --> 00:34:13.700
要求我们应该回来，我们这样做

00:34:10.610 --> 00:34:17.690
我们可以使用的访问令牌的方式

00:34:13.700 --> 00:34:19.730
然后发送到任何受保护的服务

00:34:17.690 --> 00:34:25.540
我可以送这只猫的尸体

00:34:19.730 --> 00:34:25.540
请求此令牌，而不是使用

00:34:25.720 --> 00:34:39.560
要求看起来像这个卷发-H 

00:34:32.679 --> 00:34:45.919
授权熊粘贴和一些URL 

00:34:39.560 --> 00:34:47.750
通讯栏正确，这样给您的就是

00:34:45.919 --> 00:34:49.460
只要我们提供的服务

00:34:47.750 --> 00:34:53.780
呼叫确切的保留服务器是

00:34:49.460 --> 00:34:56.120
配置为-验证令牌

00:34:53.780 --> 00:34:58.600
并与我们的授权服务器联系

00:34:56.120 --> 00:35:01.520
那行不通，所以我们去了

00:34:58.600 --> 00:35:04.550
您现在可以使用该授权

00:35:01.520 --> 00:35:05.869
具有任何有效或客户端的服务器

00:35:04.550 --> 00:35:07.789
春季生态系统

00:35:05.869 --> 00:35:10.910
 Spring Cloud Security提供OAuth 

00:35:07.789 --> 00:35:13.369
客户，第一种春天也是如此

00:35:10.910 --> 00:35:16.970
社会权利，尽管有一些工作

00:35:13.369 --> 00:35:19.130
正在做以融合客户故事

00:35:16.970 --> 00:35:21.650
用于春季云安全和

00:35:19.130 --> 00:35:24.440
春季社交，实际上甚至还有

00:35:21.650 --> 00:35:27.619
相当基本的返工

00:35:24.440 --> 00:35:31.160
客户端上的OAuth支持发生在

00:35:27.619 --> 00:35:34.490
春季安全OAuth移入

00:35:31.160 --> 00:35:35.599
春季安全性适当，我们将看到

00:35:34.490 --> 00:35:38.180
这实际上很有趣

00:35:35.599 --> 00:35:41.809
空间，我们将看到

00:35:38.180 --> 00:35:45.559
功能发展相当迅速

00:35:41.809 --> 00:35:47.539
容纳很多新的你知道的

00:35:45.559 --> 00:35:50.269
这些对微服务的要求

00:35:47.539 --> 00:35:53.420
几天来我们都没有在谈论这个

00:35:50.269 --> 00:35:56.359
关于开放ID的所有分期付款

00:35:53.420 --> 00:35:57.859
这是一种标准的

00:35:56.359 --> 00:36:01.000
连接不同种类的

00:35:57.859 --> 00:36:05.930
特定端点的应用程序

00:36:01.000 --> 00:36:07.009
需要与

00:36:05.930 --> 00:36:10.400
象征自己

00:36:07.009 --> 00:36:12.799
我们还没有在谈论JWT 

00:36:10.400 --> 00:36:14.150
这种情况下，这个方案每个客户

00:36:12.799 --> 00:36:15.980
每个客户都需要与

00:36:14.150 --> 00:36:18.769
每当收到其他版本

00:36:15.980 --> 00:36:22.279
请求主体中的令牌，如果您的

00:36:18.769 --> 00:36:29.269
令牌是自包含的，也就是说

00:36:22.279 --> 00:36:30.799
是否具有带符号的值

00:36:29.269 --> 00:36:32.809
否则你会说话

00:36:30.799 --> 00:36:34.730
到主体中的授权服务器

00:36:32.809 --> 00:36:38.420
令牌本身，那么他们就可以

00:36:34.730 --> 00:36:39.769
是不是你知道在飞行中打开包装

00:36:38.420 --> 00:36:41.630
需要实际做出额外的跳跃， 

00:36:39.769 --> 00:36:44.930
将其称为访问授权服务器， 

00:36:41.630 --> 00:36:47.000
您可以将OAuth与Java或jetty JWT结合使用

00:36:44.930 --> 00:36:49.460
令牌是另一个非常独特的

00:36:47.000 --> 00:36:50.990
可能性还好吧

00:36:49.460 --> 00:36:53.289
非常感谢您，我们将再见

00:36:50.990 --> 00:36:53.289
下次

00:37:00.610 --> 00:37:02.670
您

