WEBVTT
Kind: captions
Language: zh-Hans

00:00:27.150 --> 00:00:31.420
嗨，春季粉丝们欢迎来到另一个

00:00:29.590 --> 00:00:32.560
在此安装弹簧提示

00:00:31.420 --> 00:00:34.540
我们将要介绍的春季技巧

00:00:32.560 --> 00:00:36.850
看看新的千分尺框架

00:00:34.540 --> 00:00:38.590
对，千分之一秒是一个

00:00:36.850 --> 00:00:40.989
作为产品的另一个项目

00:00:38.590 --> 00:00:42.250
独立于被领导的春天

00:00:40.989 --> 00:00:43.690
通过关键，但当然是开放的

00:00:42.250 --> 00:00:46.239
这类项目，所以很享受

00:00:43.690 --> 00:00:47.860
来自许多不同的贡献

00:00:46.239 --> 00:00:49.840
谁想要使其成为最佳工具

00:00:47.860 --> 00:00:51.030
他们特殊的用例是薄荷

00:00:49.840 --> 00:00:53.860
它意味着对供应商是中立的

00:00:51.030 --> 00:00:55.210
应用程序指标外观，我真的

00:00:53.860 --> 00:00:56.140
很像这里的描述

00:00:55.210 --> 00:00:59.590
因为很合适

00:00:56.140 --> 00:01:02.020
就像SL f4j，但对于指标

00:00:59.590 --> 00:01:04.149
该框架的目标是捕获

00:01:02.020 --> 00:01:06.160
指标并及时发布

00:01:04.149 --> 00:01:08.110
系列数据库和监控系统

00:01:06.160 --> 00:01:11.020
像Prometheus和Netflix一样

00:01:08.110 --> 00:01:13.090
图集和信号FX和波前以及

00:01:11.020 --> 00:01:16.660
云手表，数据狗和石墨

00:01:13.090 --> 00:01:18.729
和神经节，JMX和Influx DB以及

00:01:16.660 --> 00:01:20.560
新的文物和统计资料T等很多

00:01:18.729 --> 00:01:22.630
在不同的时间这里的数据库和

00:01:20.560 --> 00:01:26.200
您知道这些数据库已经过优化

00:01:22.630 --> 00:01:28.960
用于管理密钥，而我使用的是

00:01:26.200 --> 00:01:31.630
您可以知道数字

00:01:28.960 --> 00:01:34.720
到该数字的全部历史

00:01:31.630 --> 00:01:37.119
因此您可以使用这些工具来绘制

00:01:34.720 --> 00:01:40.479
您可以看到一段时间内的数字趋势

00:01:37.119 --> 00:01:43.540
例如您的山峰和山谷

00:01:40.479 --> 00:01:46.900
你可以查询一下来开车吗

00:01:43.540 --> 00:01:48.729
推导信息以驱动推导

00:01:46.900 --> 00:01:51.010
洞察力，而不是数字

00:01:48.729 --> 00:01:53.350
然后利用这些见识来推动

00:01:51.010 --> 00:01:54.490
更改代码，您也可以使用

00:01:53.350 --> 00:01:56.470
提醒您可以将其用于所有

00:01:54.490 --> 00:01:58.720
关于您的事情

00:01:56.470 --> 00:02:01.299
应用程序健康和很多人

00:01:58.720 --> 00:02:03.729
转到时间序列数据库并

00:02:01.299 --> 00:02:07.679
这样的监控工具可以了解

00:02:03.729 --> 00:02:09.880
了解信息的延迟

00:02:07.679 --> 00:02:11.340
执行某些部分

00:02:09.880 --> 00:02:14.049
应用程序正在执行等等

00:02:11.340 --> 00:02:17.950
指标旨在捕获

00:02:14.049 --> 00:02:21.130
汇总汇总的种类

00:02:17.950 --> 00:02:24.630
特定交换的状态

00:02:21.130 --> 00:02:28.870
不捕获个人的例子

00:02:24.630 --> 00:02:30.730
个人交流对，所以如果我想

00:02:28.870 --> 00:02:34.750
了解你知道平均水平

00:02:30.730 --> 00:02:36.700
然后呼叫端点的等待时间

00:02:34.750 --> 00:02:39.070
这是一个很棒的工具T 

00:02:36.700 --> 00:02:39.700
因为我可以采样所有不同的

00:02:39.070 --> 00:02:41.980
要求

00:02:39.700 --> 00:02:43.180
已经到了十点，我得到了

00:02:41.980 --> 00:02:44.830
数字，然后我可以总结一下

00:02:43.180 --> 00:02:46.150
一起除以

00:02:44.830 --> 00:02:48.160
样品，然后去那是我的

00:02:46.150 --> 00:02:50.920
这就是我的平均水平，例如

00:02:48.160 --> 00:02:53.260
金属，我也可以使用统计数据

00:02:50.920 --> 00:02:55.450
查看所有数字并得出

00:02:53.260 --> 00:02:56.950
像第95个百分点

00:02:55.450 --> 00:02:58.480
中位数对所有这些不同

00:02:56.950 --> 00:03:00.489
我想要的有趣数字

00:02:58.480 --> 00:03:01.720
了解延迟何时发生

00:03:00.489 --> 00:03:04.900
但是我想看一个特定的

00:03:01.720 --> 00:03:07.599
交换有关我的事，乔希然后我做了

00:03:04.900 --> 00:03:09.879
在一周前和我知道的网站上

00:03:07.599 --> 00:03:11.440
想看看那是哪里

00:03:09.879 --> 00:03:13.120
请求去了，花了多长时间等等

00:03:11.440 --> 00:03:14.799
在那这是错的

00:03:13.120 --> 00:03:17.319
在这种情况下，您将使用的工作工具

00:03:14.799 --> 00:03:18.940
这是要跟踪的，因此指标很好

00:03:17.319 --> 00:03:21.510
进行广告分类以获得大图片

00:03:18.940 --> 00:03:24.579
数字，它们可以帮助您

00:03:21.510 --> 00:03:25.540
了解你知道的运动

00:03:24.579 --> 00:03:26.769
数据通过系统，他们可以

00:03:25.540 --> 00:03:28.019
帮助您了解各种其他

00:03:26.769 --> 00:03:31.150
与您的应用有关的事情

00:03:28.019 --> 00:03:32.380
说对了，所以对

00:03:31.150 --> 00:03:35.019
在您的系统中有这些防御系统

00:03:32.380 --> 00:03:37.420
组织和良好的平台

00:03:35.019 --> 00:03:39.400
当然像Cloud Foundry这样的站起来

00:03:37.420 --> 00:03:41.380
并自动支持这些指标

00:03:39.400 --> 00:03:43.109
开箱即用，所以如果您使用的是Cloud 

00:03:41.380 --> 00:03:45.220
铸造厂有媒体注册处

00:03:43.109 --> 00:03:47.139
在那里执行千分尺

00:03:45.220 --> 00:03:49.000
会自动与

00:03:47.139 --> 00:03:51.250
很多不同很多不同的方式

00:03:49.000 --> 00:03:52.900
现在使用这个项目不是我

00:03:51.250 --> 00:03:53.920
说这不是春天的一部分，而是

00:03:52.900 --> 00:03:55.930
可以使用的单独项目

00:03:53.920 --> 00:03:57.519
独立于弹簧

00:03:55.930 --> 00:04:00.160
已经有不同的项目

00:03:57.519 --> 00:04:02.500
支持和开箱即用，包括

00:04:00.160 --> 00:04:04.540
例如汽车ACP，我想我看到了

00:04:02.500 --> 00:04:06.340
他们将有千分尺

00:04:04.540 --> 00:04:09.880
代码本身内置的出版物

00:04:06.340 --> 00:04:11.380
 rabbitmq Java客户端将支持

00:04:09.880 --> 00:04:16.299
我的意思是你知道你知道我们

00:04:11.380 --> 00:04:17.979
看到mccomber在

00:04:16.299 --> 00:04:20.919
正在使用不同的Java项目

00:04:17.979 --> 00:04:21.970
如slf Virginia或log4j或其他某种形式

00:04:20.919 --> 00:04:24.070
像这样的图书馆

00:04:21.970 --> 00:04:25.090
嵌入式，您只需要使用

00:04:24.070 --> 00:04:27.340
如果你知道，它将是一个

00:04:25.090 --> 00:04:29.200
常见的这种货币

00:04:27.340 --> 00:04:31.440
现在用例为什么这为什么要用千分尺

00:04:29.200 --> 00:04:34.570
而不是像

00:04:31.440 --> 00:04:36.430
很好地删除向导指标，答案是

00:04:34.570 --> 00:04:37.900
首先，在某些情况下，我们仍然

00:04:36.430 --> 00:04:40.080
使用滴管异或度量库

00:04:37.900 --> 00:04:42.039
但是更大的答案是

00:04:40.080 --> 00:04:43.750
取代放置向导指标

00:04:42.039 --> 00:04:46.000
库，因为它支持维

00:04:43.750 --> 00:04:48.400
指标是一件大事

00:04:46.000 --> 00:04:50.320
这里最大的特点

00:04:48.400 --> 00:04:51.669
这就是维的想法

00:04:50.320 --> 00:04:52.810
指标，所以当我们谈论尺寸时

00:04:51.669 --> 00:04:54.190
指标

00:04:52.810 --> 00:04:56.350
我们只需要你知道

00:04:54.190 --> 00:05:01.630
区别于分层

00:04:56.350 --> 00:05:04.450
指标，所以假设我打开了此文件

00:05:01.630 --> 00:05:07.810
好的，现在我要说我想要

00:05:04.450 --> 00:05:10.180
捕获所有HTML请求，因此

00:05:07.810 --> 00:05:11.830
我会说请求这的HTTP是一个

00:05:10.180 --> 00:05:13.600
我可以捕获的分级指标权利

00:05:11.830 --> 00:05:16.419
每次有新要求时

00:05:13.600 --> 00:05:18.190
我可以对该计数+1，也可以保留

00:05:16.419 --> 00:05:20.470
持续时间或其他任何条件，让我们

00:05:18.190 --> 00:05:23.740
说我也想现在捕获所有

00:05:20.470 --> 00:05:24.910
 ACB收到的请求和我

00:05:23.740 --> 00:05:27.610
也想将其与众不同

00:05:24.910 --> 00:05:29.500
那些实际上是张贴的，让我们

00:05:27.610 --> 00:05:33.400
说我也想得到我也想得到

00:05:29.500 --> 00:05:34.840
区别于那些

00:05:33.400 --> 00:05:37.990
具有JSON的请求，所以我现在

00:05:34.840 --> 00:05:39.640
正确添加JSON和XML，然后让我们

00:05:37.990 --> 00:05:41.440
说我也想捕捉

00:05:39.640 --> 00:05:42.820
区域在其中

00:05:41.440 --> 00:05:45.070
发出了请求，您知道哪个

00:05:42.820 --> 00:05:47.440
哪些服务器得到了它们的实例

00:05:45.070 --> 00:05:50.410
我的服务器在不同的云中

00:05:47.440 --> 00:05:52.810
美国东部和我们这样的提供者地区

00:05:50.410 --> 00:05:53.950
西方，所以我可以说让我们看看是什么

00:05:52.810 --> 00:05:58.090
正确的方法我想我可以说

00:05:53.950 --> 00:06:00.370
美国东部也就在这里

00:05:58.090 --> 00:06:02.590
可能是我们西部，所以就准备好了

00:06:00.370 --> 00:06:05.290
打破这些，理想情况下，我会

00:06:02.590 --> 00:06:06.640
必须保持你知道的能力

00:06:05.290 --> 00:06:09.400
最有效地查询此类数据

00:06:06.640 --> 00:06:10.660
在非分层系统中，我必须

00:06:09.400 --> 00:06:12.340
保持不同的计数写

00:06:10.660 --> 00:06:13.630
不同的数字，不同的指标

00:06:12.340 --> 00:06:16.060
所有这些都是为了深入挖掘

00:06:13.630 --> 00:06:17.560
我不得不说这是全部

00:06:16.060 --> 00:06:19.090
那些是帖子和JSON的

00:06:17.560 --> 00:06:21.250
所有在我们里面的人的数量

00:06:19.090 --> 00:06:22.960
 West他们是帖子和JSON，所以

00:06:21.250 --> 00:06:24.970
很难有一个

00:06:22.960 --> 00:06:27.220
指标服务的激增

00:06:24.970 --> 00:06:28.630
现在变得很难管理什么

00:06:27.220 --> 00:06:31.770
如果相反，你可以说好，我要

00:06:28.630 --> 00:06:35.380
有一个指标称为HTML请求， 

00:06:31.770 --> 00:06:37.330
我将拥有标签标签，这些标签会给我额外

00:06:35.380 --> 00:06:38.410
信息丰富了该指标，但

00:06:37.330 --> 00:06:43.020
他们本身不是指标

00:06:38.410 --> 00:06:48.910
哦，该地区是美国东部， 

00:06:43.020 --> 00:06:52.090
方法是获取，您知道

00:06:48.910 --> 00:06:54.130
内容类型就是我想知道的

00:06:52.090 --> 00:06:56.550
正确的JSON，因此您可以进行各种

00:06:54.130 --> 00:06:58.990
那里的东西和一个层次

00:06:56.550 --> 00:07:00.310
系统不是那么容易建立模型

00:06:58.990 --> 00:07:01.990
这种复杂的多维

00:07:00.310 --> 00:07:04.659
数据，当然不是那么容易

00:07:01.990 --> 00:07:06.260
很好地查询您的尺寸数据

00:07:04.659 --> 00:07:08.540
像网络一样了解时间序列数据库

00:07:06.260 --> 00:07:09.910
听，普罗米修斯将进行查询

00:07:08.540 --> 00:07:13.880
并与此类数据进行交互

00:07:09.910 --> 00:07:15.830
微风，所以我们对此表示支持

00:07:13.880 --> 00:07:18.080
现在适当的地方说一些

00:07:15.830 --> 00:07:19.130
 ap某些系统，例如Gen X不支持

00:07:18.080 --> 00:07:21.530
你会发现千分尺

00:07:19.130 --> 00:07:24.590
实际上在这种情况下委托给

00:07:21.530 --> 00:07:25.910
对JMX的拖放向导指标支持，因此

00:07:24.590 --> 00:07:27.620
有了那个就是那个

00:07:25.910 --> 00:07:29.090
对这种臭味的基本了解

00:07:27.620 --> 00:07:30.110
让我们继续构建一个应用程序

00:07:29.090 --> 00:07:31.970
我们将继续建立一个

00:07:30.110 --> 00:07:33.440
像往常一样开始申请

00:07:31.970 --> 00:07:35.210
那年春天，IO，我们将建立一个

00:07:33.440 --> 00:07:36.560
这里使用spring的新应用

00:07:35.210 --> 00:07:41.060
启动到哦，执行器将

00:07:36.560 --> 00:07:42.200
使用H2 JPA Web支持和Lombok可以

00:07:41.060 --> 00:07:43.880
现在我要叫这个演示

00:07:42.200 --> 00:07:45.140
千分尺，我们要点击生成

00:07:43.880 --> 00:07:47.360
这些给了我们一个新的项目

00:07:45.140 --> 00:07:51.020
将在我们的IDE中打开它

00:07:47.360 --> 00:07:52.490
总是，这个项目将只是

00:07:51.020 --> 00:07:53.570
我们实际上不会使用所有这些

00:07:52.490 --> 00:07:57.830
我们不会构建网络应用程序的东西

00:07:53.570 --> 00:07:59.330
或与您交谈了解2jp或进行数据

00:07:57.830 --> 00:08:01.280
来源我只想证明

00:07:59.330 --> 00:08:03.140
这些东西都是自动的

00:08:01.280 --> 00:08:06.770
为您装备，所以在我们得到之前

00:08:03.140 --> 00:08:09.380
虽然，让我们来看看

00:08:06.770 --> 00:08:11.120
 API千分尺API独立

00:08:09.380 --> 00:08:12.800
 spring boot ，所以现在暂时忽略

00:08:11.120 --> 00:08:15.280
这是春天的事实

00:08:12.800 --> 00:08:18.590
假设我有这个

00:08:15.280 --> 00:08:20.480
终结点，我们将创建一个新的

00:08:18.590 --> 00:08:22.490
创建新的千分尺时的终点

00:08:20.480 --> 00:08:23.780
独立于Spring Boot和

00:08:22.490 --> 00:08:25.550
您这样做的方式是使用电表

00:08:23.780 --> 00:08:27.530
注册表是免疫注册表

00:08:25.550 --> 00:08:28.490
春季启动时，API的核心

00:08:27.530 --> 00:08:29.600
世界，这将是自动的

00:08:28.490 --> 00:08:31.790
为您配置，因此您可以

00:08:29.600 --> 00:08:34.040
注入它，你知道你想要什么

00:08:31.790 --> 00:08:35.390
是媒体的不同实现

00:08:34.040 --> 00:08:37.160
注册表，您可以看到我们有一个

00:08:35.390 --> 00:08:38.690
复合电表注册表

00:08:37.160 --> 00:08:40.460
您知道要注册的区域步骤等

00:08:38.690 --> 00:08:42.169
我知道拖放向导魔术计注册表

00:08:40.460 --> 00:08:44.210
这只是一个适配器，所以我的意思是

00:08:42.169 --> 00:08:46.420
您知道注册表的复合表和

00:08:44.210 --> 00:08:49.340
复合复合意味着注册表

00:08:46.420 --> 00:08:51.890
然后有其他仪表链

00:08:49.340 --> 00:08:54.220
注册表，这些都是注册表

00:08:51.890 --> 00:08:57.130
特定的适配器，如果您会在这里

00:08:54.220 --> 00:09:03.350
我们要走了，我想说让我们使用

00:08:57.130 --> 00:09:04.780
千分尺注册表Prometheus和

00:09:03.350 --> 00:09:07.670
版本当然是千分尺

00:09:04.780 --> 00:09:08.990
版本，这是其中的属性

00:09:07.670 --> 00:09:10.310
 spring boot ，这就是你知道的

00:09:08.990 --> 00:09:12.290
春天的心情为我管理

00:09:10.310 --> 00:09:14.600
幸好不必管我

00:09:12.290 --> 00:09:16.520
还要使用jmx，所以我有jmx和

00:09:14.600 --> 00:09:18.020
普罗米修斯，我要做的就是我要去

00:09:16.520 --> 00:09:19.140
对书记官长说，以便我

00:09:18.020 --> 00:09:21.300
注册表爸爸

00:09:19.140 --> 00:09:22.649
新的JMX做了一个注册表，我可以

00:09:21.300 --> 00:09:23.910
配置配置，但我不会

00:09:22.649 --> 00:09:25.860
麻烦运行此代码，让您

00:09:23.910 --> 00:09:28.350
看看这里发生了什么

00:09:25.860 --> 00:09:29.579
 Prometheus仪表注册表以及所有这些

00:09:28.350 --> 00:09:31.769
对，所以现在我们有两个不同的

00:09:29.579 --> 00:09:33.570
声明现在我们可以根据

00:09:31.769 --> 00:09:36.269
媒体注册表界面

00:09:33.570 --> 00:09:38.970
注册局MR等于电表行业

00:09:36.269 --> 00:09:41.459
我们可以说e mr dot config我们可以

00:09:38.970 --> 00:09:43.950
配置所有人都通用的东西

00:09:41.459 --> 00:09:45.060
过滤器或系统中的所有指标

00:09:43.950 --> 00:09:47.370
我们可以说例如常见标签

00:09:45.060 --> 00:09:49.500
等于说地区，说我想要

00:09:47.370 --> 00:09:54.600
解决该财产得到

00:09:49.500 --> 00:09:57.750
你知道这里的云区域

00:09:54.600 --> 00:10:01.589
就在任何地方，所以我要加入

00:09:57.750 --> 00:10:03.600
来自环境的区域属性

00:10:01.589 --> 00:10:04.829
变量，这将作为其序言

00:10:03.600 --> 00:10:07.050
给我一个尺寸，它将成为一个标签

00:10:04.829 --> 00:10:08.880
那将被添加到每一个

00:10:07.050 --> 00:10:10.769
指标让我们计算一下

00:10:08.880 --> 00:10:13.050
在这个应用程序中，一旦完成

00:10:10.769 --> 00:10:15.750
我现在可以开始使用收集指标

00:10:13.050 --> 00:10:17.160
不同类型的仪表和顶部

00:10:15.750 --> 00:10:19.079
液位计使用注册表类型

00:10:17.160 --> 00:10:20.370
有三种类型的仪表

00:10:19.079 --> 00:10:22.649
一个计数器是一个数字

00:10:20.370 --> 00:10:26.130
随时间增加递减，因此

00:10:22.649 --> 00:10:31.649
逐步加1或加10或加5所以

00:10:26.130 --> 00:10:33.269
你知道我下订单了，我可以

00:10:31.649 --> 00:10:35.820
然后增加它，或者我可以增加它

00:10:33.269 --> 00:10:38.070
你知道我什么都没做或只是

00:10:35.820 --> 00:10:40.519
加一我也可以加

00:10:38.070 --> 00:10:43.880
负2 123对，我可以做

00:10:40.519 --> 00:10:48.630
以这种方式减少我可以创建

00:10:43.880 --> 00:10:50.579
量规是具有

00:10:48.630 --> 00:10:53.310
有界值，所以一个常见的例子是

00:10:50.579 --> 00:10:55.170
他们衡量汽车的速度

00:10:53.310 --> 00:10:58.800
车速表会告诉你你

00:10:55.170 --> 00:11:00.390
知道你可以从1到120 

00:10:58.800 --> 00:11:03.510
例如每小时每小时20英里

00:11:00.390 --> 00:11:04.529
在美国，那是必然的

00:11:03.510 --> 00:11:06.420
这是你的车的上限

00:11:04.529 --> 00:11:08.850
电子限制或机械限制

00:11:06.420 --> 00:11:10.680
以某种方式限制以阻止你

00:11:08.850 --> 00:11:12.959
比任何事情都快

00:11:10.680 --> 00:11:14.430
结果就是无论您的速度如何

00:11:12.959 --> 00:11:16.500
将会有一些数字

00:11:14.430 --> 00:11:18.510
在0和那之间，然后是上限

00:11:16.500 --> 00:11:19.769
因此，如果

00:11:18.510 --> 00:11:22.680
你只是在试图

00:11:19.769 --> 00:11:24.810
捕捉一个波动的状态

00:11:22.680 --> 00:11:27.990
该范围内的数字

00:11:24.810 --> 00:11:29.640
好吧，速度可能就是你知道我

00:11:27.990 --> 00:11:31.980
现在要十二点了

00:11:29.640 --> 00:11:32.640
 55无论如何，我可以将其捕获

00:11:31.980 --> 00:11:34.410
时间

00:11:32.640 --> 00:11:36.270
每次我捕捉到这将是

00:11:34.410 --> 00:11:38.190
记录在时间序列数据库中

00:11:36.270 --> 00:11:40.290
权利或在某些注册表中

00:11:38.190 --> 00:11:42.990
排序，然后最后我们有了一个计时器

00:11:40.290 --> 00:11:46.080
计时器是我最大的花销

00:11:42.990 --> 00:11:48.110
我们可以摆脱指标的有用的东西

00:11:46.080 --> 00:11:51.500
像我的商业工具，在这里我可以说

00:11:48.110 --> 00:11:56.190
处理一份工作需要多长时间

00:11:51.500 --> 00:11:57.660
转换照片工作，在这里我可以做

00:11:56.190 --> 00:12:02.030
可以提供您知道我可以做到的标签

00:11:57.660 --> 00:12:05.040
我想要，但我也可以说记录下

00:12:02.030 --> 00:12:06.960
持续时间对，我可以给它一个持续时间

00:12:05.040 --> 00:12:09.810
我可以说录制这个硬编码

00:12:06.960 --> 00:12:15.030
持续时间可以知道12毫秒

00:12:09.810 --> 00:12:16.860
对，我可以用

00:12:15.030 --> 00:12:18.450
可运行的权利，所以非常

00:12:16.860 --> 00:12:20.640
便捷便捷的获取方式

00:12:18.450 --> 00:12:22.890
那里的数据我可以说你知道吗

00:12:20.640 --> 00:12:23.970
如果我在这里有些昂贵和缓慢

00:12:22.890 --> 00:12:25.800
想获得结果值，如果我不这样做

00:12:23.970 --> 00:12:28.530
从中得到返回值

00:12:25.800 --> 00:12:30.450
处理我就像系统绝版

00:12:28.530 --> 00:12:32.040
你好，世界，而不是说

00:12:30.450 --> 00:12:33.840
打个比方说你好世界

00:12:32.040 --> 00:12:35.400
我想记录对不起，我想

00:12:33.840 --> 00:12:43.110
返回你好世界而不是那样做

00:12:35.400 --> 00:12:45.930
我可以说我要使用新的

00:12:43.110 --> 00:12:51.090
供应商，所以是新的供应商

00:12:45.930 --> 00:12:52.970
字符串，我将返回世界

00:12:51.090 --> 00:12:55.650
结果现在返回给我

00:12:52.970 --> 00:12:59.430
在这里给我回馈

00:12:55.650 --> 00:13:02.130
另一边，有问候你

00:12:59.430 --> 00:13:03.660
知道在这里，所以喂养告诉了世界， 

00:13:02.130 --> 00:13:05.520
我花了很长时间才创建

00:13:03.660 --> 00:13:08.880
我可以知道想象做些什么

00:13:05.520 --> 00:13:10.620
工作或做某事然后

00:13:08.880 --> 00:13:12.270
需要一些时间，然后

00:13:10.620 --> 00:13:13.560
那就是记录的，还有一些

00:13:12.270 --> 00:13:15.510
你知道那不是很好

00:13:13.560 --> 00:13:16.860
这里可以使用的重载

00:13:15.510 --> 00:13:18.420
过载也适用于量规

00:13:16.860 --> 00:13:20.370
确实向您展示了如何捕获

00:13:18.420 --> 00:13:23.040
这里是固定数字，但最多

00:13:20.370 --> 00:13:26.400
捕获量规的有趣方法是

00:13:23.040 --> 00:13:27.750
赋予它正确的功能

00:13:26.400 --> 00:13:30.210
而不是我给你一个

00:13:27.750 --> 00:13:31.590
每次我都可以硬编码的号码

00:13:30.210 --> 00:13:34.530
给它一个功能，以便每当它

00:13:31.590 --> 00:13:37.710
要求可以产生最新的价值

00:13:34.530 --> 00:13:41.360
所以说我有这个方法

00:13:37.710 --> 00:13:45.010
说我有一堂你知道有状态的课

00:13:41.360 --> 00:13:52.550
慢状态

00:13:45.010 --> 00:13:54.050
没事，它有一个什么

00:13:52.550 --> 00:13:59.290
好方法，假设我有很多

00:13:54.050 --> 00:14:04.700
正确的客户，所以public int得到

00:13:59.290 --> 00:14:06.740
客户在这里登录系统

00:14:04.700 --> 00:14:09.200
我可以保留随机的数学点

00:14:06.740 --> 00:14:11.750
无论我是几千倍

00:14:09.200 --> 00:14:13.339
只是在这里产生一些随机数据

00:14:11.750 --> 00:14:22.760
诠释甚至更好，但那只是做

00:14:13.339 --> 00:14:24.680
新的随机点next int好了，可以

00:14:22.760 --> 00:14:26.270
我就是那个篮板

00:14:24.680 --> 00:14:29.240
想想，所以说我有这个光束

00:14:26.270 --> 00:14:32.900
一种缓慢的有状态的东西

00:14:29.240 --> 00:14:34.310
我知道我可以问它如何

00:14:32.900 --> 00:14:38.320
我有很多顾客我有顾客

00:14:34.310 --> 00:14:43.610
在系统中，这样客户服务

00:14:38.320 --> 00:14:45.380
新的缓慢的有状态的事情，现在以后

00:14:43.610 --> 00:14:47.950
我要有一个可以跟踪的量规

00:14:45.380 --> 00:14:53.300
对我来说，所以我可以说

00:14:47.950 --> 00:14:56.210
登录的客户传递指向

00:14:53.300 --> 00:14:59.060
客户服务，并给它一个新的

00:14:56.210 --> 00:15:01.910
双重功能，在这里我只是说

00:14:59.060 --> 00:15:04.339
这就是所谓的客户服务点获取

00:15:01.910 --> 00:15:05.990
客户已登录，所以我实际上有

00:15:04.339 --> 00:15:07.390
我是这个方便的小lambda 

00:15:05.990 --> 00:15:09.410
实际上给任何东西一个指针

00:15:07.390 --> 00:15:11.780
它会留给我参考

00:15:09.410 --> 00:15:13.520
并将其作为参数传递给我

00:15:11.780 --> 00:15:18.380
可以在此lambda中使用，然后我可以

00:15:13.520 --> 00:15:19.850
用它，所以我可以说慢慢

00:15:18.380 --> 00:15:21.500
对，这就是我所拥有的

00:15:19.850 --> 00:15:23.540
在这种情况下，当然

00:15:21.500 --> 00:15:25.370
这可能是方法参考，我

00:15:23.540 --> 00:15:26.600
可以说，所以你知道这是

00:15:25.370 --> 00:15:28.850
指向有状态源的指针

00:15:26.600 --> 00:15:30.410
那个指针调用得到的东西

00:15:28.850 --> 00:15:32.030
客户登录系统后， 

00:15:30.410 --> 00:15:33.260
记录该值，以便无论何时何地

00:15:32.030 --> 00:15:35.600
每当它需要它的时候

00:15:33.260 --> 00:15:38.720
尝试发布或同步这些

00:15:35.600 --> 00:15:41.600
后端注册表的指标

00:15:38.720 --> 00:15:43.910
你知道这会叫我们，我们不会

00:15:41.600 --> 00:15:44.660
必须不断为此做出贡献

00:15:43.910 --> 00:15:46.279
如果我们有一些只是

00:15:44.660 --> 00:15:47.570
在自己更新自己的那种关闭

00:15:46.279 --> 00:15:49.580
自己的状态，那么这是一种很棒的方法

00:15:47.570 --> 00:15:50.660
可以的捕捉，所以我不在了

00:15:49.580 --> 00:15:51.800
不同会使您超负荷

00:15:50.660 --> 00:15:53.540
方便的思考方式

00:15:51.800 --> 00:15:55.130
指标，现在让我们继续使用

00:15:53.540 --> 00:15:56.810
所有的弹簧靴都可以

00:15:55.130 --> 00:15:57.770
让我们继续前进，带回春天

00:15:56.810 --> 00:15:59.600
开机

00:15:57.770 --> 00:16:01.850
看看春天的Booga给了我们什么

00:15:59.600 --> 00:16:03.020
我们现在只有一个，您知道非常基本的

00:16:01.850 --> 00:16:05.960
春季良好的应用

00:16:03.020 --> 00:16:08.390
好的，很好，我要

00:16:05.960 --> 00:16:11.090
创建一个简单的光束

00:16:08.390 --> 00:16:14.680
需要的应用程序运行程序

00:16:11.090 --> 00:16:18.110
遗嘱执行人服务的优势

00:16:14.680 --> 00:16:21.170
预定的执行人服务， 

00:16:18.110 --> 00:16:24.590
将成为新的执行人

00:16:21.170 --> 00:16:28.580
安排线程池一并很好地使用

00:16:24.590 --> 00:16:31.010
那会说返回参数，我们

00:16:28.580 --> 00:16:33.740
会用来安排一些工作，所以

00:16:31.010 --> 00:16:35.150
这个圆点预定了固定汇率，我是

00:16:33.740 --> 00:16:37.100
要创建一个新的Rena碗， 

00:16:35.150 --> 00:16:39.650
我们要每500个运行一次

00:16:37.100 --> 00:16:42.650
以毫秒为单位使用

00:16:39.650 --> 00:16:44.870
五毫秒之间的间隔

00:16:42.650 --> 00:16:47.570
它会在500毫秒后开始

00:16:44.870 --> 00:16:49.520
然后每五个运行一次

00:16:47.570 --> 00:16:53.000
毫秒，如果知道的话

00:16:49.520 --> 00:16:55.400
如果你知道这需要一个

00:16:53.000 --> 00:16:57.500
假设确实有600毫秒

00:16:55.400 --> 00:16:59.600
第二个将在

00:16:57.500 --> 00:17:00.710
第一个已经完成，所以如果你

00:16:59.600 --> 00:17:02.180
做一个固定的利率，那么你想

00:17:00.710 --> 00:17:03.980
确保完成您不想

00:17:02.180 --> 00:17:07.880
让一切都自己堆砌起来

00:17:03.980 --> 00:17:12.320
现在您可以按固定的时间安排

00:17:07.880 --> 00:17:13.790
要移动固定延迟率，我认为是

00:17:12.320 --> 00:17:16.280
我认为延迟时间是

00:17:13.790 --> 00:17:17.870
一种避免他们知道的方法

00:17:16.280 --> 00:17:19.100
试图错开

00:17:17.870 --> 00:17:21.860
一个在下一个之前完成

00:17:19.100 --> 00:17:23.180
开始，所以您想知道

00:17:21.860 --> 00:17:24.710
差异，我想我有

00:17:23.180 --> 00:17:26.330
对，在这种情况下，我有对的

00:17:24.710 --> 00:17:28.220
但就我们而言，这并不重要

00:17:26.330 --> 00:17:29.720
我们只是要发布一个指标，所以我们

00:17:28.220 --> 00:17:31.610
有什么可以合作的，所以我

00:17:29.720 --> 00:17:33.710
我要做的是发布一个

00:17:31.610 --> 00:17:34.700
此处使用仪表注册表进行度量

00:17:33.710 --> 00:17:36.020
我在这里注入

00:17:34.700 --> 00:17:37.550
而且我们不必配置正确的

00:17:36.020 --> 00:17:38.930
这是一件好事，这是

00:17:37.550 --> 00:17:40.330
春天的靴子当然是春天

00:17:38.930 --> 00:17:42.260
启动时可以自动配置

00:17:40.330 --> 00:17:45.290
复合仪表注册中心本身

00:17:42.260 --> 00:17:47.000
有权使用DMX和Prometheus 

00:17:45.290 --> 00:17:48.740
计价器，一切都完成了

00:17:47.000 --> 00:17:50.180
我们自动感谢的存在

00:17:48.740 --> 00:17:53.330
这些图书馆对手工艺品的洗礼

00:17:50.180 --> 00:17:55.040
这些依赖关系，所以我们现在可以说

00:17:53.330 --> 00:17:56.360
遇到注册表，我想做什么

00:17:55.040 --> 00:17:58.010
有人使用计时器好吧，我要

00:17:56.360 --> 00:17:59.350
创建一个计时器，假设我正在做一些

00:17:58.010 --> 00:18:04.640
这项工作需要一些时间，所以

00:17:59.350 --> 00:18:08.860
转换照片任务好了，我想

00:18:04.640 --> 00:18:08.860
记录裁判指标

00:18:09.240 --> 00:18:15.950
在这里，我要说我想要

00:18:12.810 --> 00:18:17.550
记录迭代

00:18:15.950 --> 00:18:21.240
自从我要给它以来的毫秒数

00:18:17.550 --> 00:18:22.500
几毫秒，我会知道

00:18:21.240 --> 00:18:29.550
我想只是喜欢这个

00:18:22.500 --> 00:18:32.040
所以下一个新的随机思想int和

00:18:29.550 --> 00:18:39.210
 int的内部是什么

00:18:32.040 --> 00:18:44.550
必然是下一个int是

00:18:39.210 --> 00:18:46.860
种子不，不是吗，所以我该怎么办

00:18:44.550 --> 00:18:49.520
我想将其乘以

00:18:46.860 --> 00:18:49.520
等于

00:18:50.480 --> 00:18:56.430
好吧，我想我可以将其映射

00:18:53.640 --> 00:19:00.120
只是为了确保随机点

00:18:56.430 --> 00:19:08.010
一千次随机好吧，我是

00:19:00.120 --> 00:19:12.000
要保存所有这些，我们会说

00:19:08.010 --> 00:19:17.580
很长很长R，我会好好考虑的

00:19:12.000 --> 00:19:22.830
睡得好，所以我要说

00:19:17.580 --> 00:19:24.840
这项工作花了我很多秒钟

00:19:22.830 --> 00:19:27.360
这是毫秒，所以也许

00:19:24.840 --> 00:19:28.950
应该是嗯，你知道这不是一个非常

00:19:27.360 --> 00:19:30.240
两种方式都不是很多时间

00:19:28.950 --> 00:19:31.920
但无论有多少

00:19:30.240 --> 00:19:34.860
大概大于零，那是

00:19:31.920 --> 00:19:36.000
不到一千，我们

00:19:34.860 --> 00:19:38.100
要睡觉，我们要赢得胜利

00:19:36.000 --> 00:19:41.100
记录不同的时间

00:19:38.100 --> 00:19:42.480
反映这个持续时间好吗

00:19:41.100 --> 00:19:44.850
人造的，因为我不，我不

00:19:42.480 --> 00:19:48.540
其实坐在这里等那么久

00:19:44.850 --> 00:19:49.950
现在有我的更新代码

00:19:48.540 --> 00:19:51.140
要运行它将注册矩阵

00:19:49.950 --> 00:19:55.140
会看到满足那些指标

00:19:51.140 --> 00:19:56.220
反映在正在运行的系统中

00:19:55.140 --> 00:19:59.430
那是一种选择

00:19:56.220 --> 00:20:00.600
我想在

00:19:59.430 --> 00:20:03.030
很好的应用程序

00:20:00.600 --> 00:20:04.410
作为那部分的一部分

00:20:03.030 --> 00:20:07.200
执行器，所以我要继续说

00:20:04.410 --> 00:20:08.580
想要公开所有指标

00:20:07.200 --> 00:20:10.140
端点将所有执行器安装到位

00:20:08.580 --> 00:20:12.720
我只能说告诉我健康

00:20:10.140 --> 00:20:14.610
逗号指标，但我想显示所有

00:20:12.720 --> 00:20:18.140
他们，然后我将重新启动

00:20:14.610 --> 00:20:18.140
带有此代码的应用程序

00:20:22.220 --> 00:20:25.980
我们会看到Spring Boot可以完成所有工作

00:20:24.960 --> 00:20:29.960
对我们来说，我们已经拥有的工作

00:20:25.980 --> 00:20:33.480
该端点正常运行

00:20:29.960 --> 00:20:34.410
本地主机：8080用于窗扇执行器，我们

00:20:33.480 --> 00:20:36.030
去那里，我们可以看到一些

00:20:34.410 --> 00:20:38.970
不同的终点，那就是你

00:20:36.030 --> 00:20:40.710
知道我们可以在其他节目上

00:20:38.970 --> 00:20:43.110
这些不同的终点，但让我们

00:20:40.710 --> 00:20:44.460
在这里查看指标端点

00:20:43.110 --> 00:20:45.570
在指标上，我们可以看到所有这些

00:20:44.460 --> 00:20:46.320
不同的指标

00:20:45.570 --> 00:20:48.030
计算的

00:20:46.320 --> 00:20:49.740
你知道会自动为我们计算

00:20:48.030 --> 00:20:51.600
在春季启动之前，像重新登录一样

00:20:49.740 --> 00:20:53.070
事件jvm信息信息

00:20:51.600 --> 00:20:55.830
受到的启发

00:20:53.070 --> 00:20:58.050
观众的例子

00:20:55.830 --> 00:20:59.610
 Netflix的图书馆数量少于某人

00:20:58.050 --> 00:21:02.130
确实在幕后，所以所有这些东西

00:20:59.610 --> 00:21:06.660
就像你知道经过考验的你知道

00:21:02.130 --> 00:21:08.100
经过现场测试的技术

00:21:06.660 --> 00:21:11.160
洞悉JVM在做什么

00:21:08.100 --> 00:21:13.590
这反映在这里，我们有

00:21:11.160 --> 00:21:15.090
 Tomcat之类的东西

00:21:13.590 --> 00:21:19.080
线程生动活泼的小城堡装

00:21:15.090 --> 00:21:24.120
并卸载了他们的Kartik RCP 

00:21:19.080 --> 00:21:25.320
连接缓存访问方便您知道

00:21:24.120 --> 00:21:28.110
所有你想要的东西

00:21:25.320 --> 00:21:30.540
想要包括我们的自定义指标

00:21:28.110 --> 00:21:32.100
是转换照片任务，如果我们看

00:21:30.540 --> 00:21:33.960
此时，您注意到该端点是

00:21:32.100 --> 00:21:35.820
与我们所拥有的有些不同

00:21:33.960 --> 00:21:38.490
之前和 spring boot 1.5如此再次哦

00:21:35.820 --> 00:21:40.980
我知道春天会发生什么

00:21:38.490 --> 00:21:42.480
我们已经知道您已弃用

00:21:40.980 --> 00:21:44.970
柜台服务和仪表服务

00:21:42.480 --> 00:21:47.880
以及所有来自

00:21:44.970 --> 00:21:50.880
 spring boot 1.1 X一切都荡然无存

00:21:47.880 --> 00:21:52.800
可以用千分尺代替

00:21:50.880 --> 00:21:57.080
认为超集是取代

00:21:52.800 --> 00:22:01.500
有些介绍说我们不

00:21:57.080 --> 00:22:02.640
我们不知道我们不想要人

00:22:01.500 --> 00:22:04.950
觉得他们必须跳到

00:22:02.640 --> 00:22:06.300
不知道能用千分尺

00:22:04.950 --> 00:22:08.880
所以有一个桥库

00:22:06.300 --> 00:22:10.050
可以与弹簧靴1x一起使用

00:22:08.880 --> 00:22:12.180
允许您在其中使用千分尺

00:22:10.050 --> 00:22:12.990
较旧的环境，也是你

00:22:12.180 --> 00:22:15.500
知道重要的是要了解

00:22:12.990 --> 00:22:17.970
虽然我们不再，你知道我们不

00:22:15.500 --> 00:22:20.190
特别是下降的是他们的指标

00:22:17.970 --> 00:22:22.200
在某些情况下我们仍然使用它，因此

00:22:20.190 --> 00:22:24.890
我确实提到了一些系统

00:22:22.200 --> 00:22:28.830
更适合自己

00:22:24.890 --> 00:22:31.320
分层信息和我们之一

00:22:28.830 --> 00:22:35.010
 jmx所以实际上，如果你看这个

00:22:31.320 --> 00:22:36.810
 MX Meter注册表的后台

00:22:35.010 --> 00:22:38.790
正在使用下降预留仪表

00:22:36.810 --> 00:22:41.310
注册表，它正在使用DMX报告程序

00:22:38.790 --> 00:22:43.080
所以你知道很多不同的适配器

00:22:41.310 --> 00:22:45.600
在这种情况下，因为

00:22:43.080 --> 00:22:46.890
这是JMX的分层注册表，并且

00:22:45.600 --> 00:22:47.520
它不支持尺寸

00:22:46.890 --> 00:22:49.140
无论如何指标

00:22:47.520 --> 00:22:51.120
为什么要重新发明，对，所以我们

00:22:49.140 --> 00:22:53.910
只需使用有效的方法，这就是为什么我们

00:22:51.120 --> 00:22:56.370
得到很好的支持，所以现在我们

00:22:53.910 --> 00:22:57.780
在该信息中有铟

00:22:56.370 --> 00:22:59.220
输出在这里，我们可以看看

00:22:57.780 --> 00:23:00.600
详细信息在这里，即使

00:22:59.220 --> 00:23:01.590
端点不同，您仍然可以获得

00:23:00.600 --> 00:23:03.540
详细信息，但您必须深入了解

00:23:01.590 --> 00:23:04.740
您必须向下钻取的原因是

00:23:03.540 --> 00:23:06.570
因为有不同的尺寸

00:23:04.740 --> 00:23:08.160
好的，所以这里没有标签

00:23:06.570 --> 00:23:10.290
这个，但让我们来看一个

00:23:08.160 --> 00:23:13.530
最肯定的是有标签是

00:23:10.290 --> 00:23:18.090
说我们有多少个HTTP请求

00:23:13.530 --> 00:23:19.980
因此HTTP服务器现在请求此指标

00:23:18.090 --> 00:23:23.670
不会那么有用

00:23:19.980 --> 00:23:25.350
对，所以这是一个HTTP服务器请求

00:23:23.670 --> 00:23:26.310
点击那个，你可以看到

00:23:25.350 --> 00:23:29.310
只有几个不同

00:23:26.310 --> 00:23:30.660
我们称为端点，但您知道

00:23:29.310 --> 00:23:33.120
我们可以看到帐户

00:23:30.660 --> 00:23:35.010
总时间和最大值

00:23:33.120 --> 00:23:36.240
特别要求所有反映

00:23:35.010 --> 00:23:37.860
在统计中

00:23:36.240 --> 00:23:39.480
顶部，但我们也有这些不同

00:23:37.860 --> 00:23:41.040
标记这些不同的尺寸，我们

00:23:39.480 --> 00:23:43.380
可以用来向下钻取，所以我们可以说我

00:23:41.040 --> 00:23:45.600
想要查找所有属于HT的请求

00:23:43.380 --> 00:23:48.120
 H类型的开始就可以了，所以您可以

00:23:45.600 --> 00:23:49.680
说标签等于方法等于键， 

00:23:48.120 --> 00:23:51.270
它只会向您显示此请求

00:23:49.680 --> 00:23:52.920
当然在这种情况下我没有当你

00:23:51.270 --> 00:23:54.780
向我们购买任何东西，因为所有要求都是

00:23:52.920 --> 00:23:55.890
得到，但是你知道你可以看到

00:23:54.780 --> 00:23:59.130
有用的是能够钻

00:23:55.890 --> 00:24:01.980
以这种方式按标签向下，但按键值

00:23:59.130 --> 00:24:05.850
地位或关键价值

00:24:01.980 --> 00:24:07.170
以及键和值对这些对您

00:24:05.850 --> 00:24:09.510
可以按状态下钻，例如

00:24:07.170 --> 00:24:11.520
地址是404是200 

00:24:09.510 --> 00:24:14.520
您可以执行复杂的查询，这是

00:24:11.520 --> 00:24:16.140
只是我们时刻的执行器

00:24:14.520 --> 00:24:18.750
您知道的系列数据库工具

00:24:16.140 --> 00:24:20.670
普罗米修斯会做得更好

00:24:18.750 --> 00:24:22.470
可视化此信息，以便

00:24:20.670 --> 00:24:24.720
让我们来谈谈，让我们来看看

00:24:22.470 --> 00:24:26.310
在我曾经参加过的普罗米修斯

00:24:24.720 --> 00:24:29.970
 1990年港口的背景和

00:24:26.310 --> 00:24:30.510
普罗米修斯是一种新的

00:24:29.970 --> 00:24:32.250
品种

00:24:30.510 --> 00:24:34.860
我认为时间序列数据库

00:24:32.250 --> 00:24:36.540
从soundcloud.com出来是你

00:24:34.860 --> 00:24:39.210
知道我们经过大规模测试的作品

00:24:36.540 --> 00:24:40.140
知道它运作良好，而Netflix就是这么做的

00:24:39.210 --> 00:24:41.490
是另一个出来的

00:24:40.140 --> 00:24:44.320
 Netflix，所以我们再次知道一个可行

00:24:41.490 --> 00:24:46.630
以及很多不同的地方

00:24:44.320 --> 00:24:47.799
旨在很好地解决这个问题， 

00:24:46.630 --> 00:24:50.490
这个有一个非常非常

00:24:47.799 --> 00:24:53.409
复杂的图形子系统

00:24:50.490 --> 00:24:56.289
图集，所以在这里我们可以看一下

00:24:53.409 --> 00:25:00.220
与转换有关的信息

00:24:56.289 --> 00:25:09.700
摄影任务，如果我们看一下，我们可以

00:25:00.220 --> 00:25:13.179
看到变换照片任务了吗

00:25:09.700 --> 00:25:24.509
该代码是不会发生

00:25:13.179 --> 00:25:24.509
 500个任务

00:25:26.419 --> 00:25:38.700
普罗米修斯变换照片测试服务

00:25:32.840 --> 00:25:40.740
所以算一下执行，你可以看到

00:25:38.700 --> 00:25:42.539
那现在没有没有

00:25:40.740 --> 00:25:44.070
你知道这里没有区别

00:25:42.539 --> 00:25:46.860
数据永远只是一张图

00:25:44.070 --> 00:25:47.789
一条趋势线让我们减少

00:25:46.860 --> 00:25:49.049
这里的窗户很多

00:25:47.789 --> 00:25:50.250
所以你可以在这里看到楼梯的台阶

00:25:49.049 --> 00:25:52.440
在最后一分钟才做了

00:25:50.250 --> 00:25:54.840
不同的例子楼梯在那里

00:25:52.440 --> 00:25:56.370
现在是五分钟我想我

00:25:54.840 --> 00:25:57.659
想知道你有不同

00:25:56.370 --> 00:26:01.590
尺寸在这里，让我们继续

00:25:57.659 --> 00:26:03.120
更改此数据一件事你知道的一件事

00:26:01.590 --> 00:26:08.580
您可以更改此日期的操作

00:26:03.120 --> 00:26:11.580
当然是使用

00:26:08.580 --> 00:26:13.890
这个水表这个水表注册表

00:26:11.580 --> 00:26:15.570
这里的东西很方便

00:26:13.890 --> 00:26:16.679
做到的方式，但也有这些

00:26:15.570 --> 00:26:18.659
 api是正确的版本，因此您拥有这些

00:26:16.679 --> 00:26:21.450
生成器api，您可以使用它们来

00:26:18.659 --> 00:26:24.120
你知道要建立更复杂的吗

00:26:21.450 --> 00:26:25.679
对坟墓的种种贡献

00:26:24.120 --> 00:26:30.270
知道注册表，所以我可以说可以

00:26:25.679 --> 00:26:32.820
说一个计时器点生成器点转换

00:26:30.270 --> 00:26:34.679
摄影任务我可以说我想

00:26:32.820 --> 00:26:36.620
支持持续时间或持续时间

00:26:34.679 --> 00:26:39.210
您知道的SLA涉及

00:26:36.620 --> 00:26:42.750
毫秒是一路上升

00:26:39.210 --> 00:26:44.460
几秒到十秒，所以我想说

00:26:42.750 --> 00:26:47.010
想要支持那些之间的SLA 

00:26:44.460 --> 00:26:50.520
两个我要支持发布

00:26:47.010 --> 00:26:53.760
我想拥有的百分比直方图

00:26:50.520 --> 00:26:56.279
自定义标签在这里，标签就是你

00:26:53.760 --> 00:26:57.720
知道我可以配置每个

00:26:56.279 --> 00:26:59.820
我在这里可以肯定地做到这一点

00:26:57.720 --> 00:27:01.830
对，这是一个好主意，实际上我们可以

00:26:59.820 --> 00:27:03.929
也这样做，所以我们可以

00:27:01.830 --> 00:27:06.929
在此处发布标签，但可以说

00:27:03.929 --> 00:27:09.450
发布什么是标签的标签

00:27:06.929 --> 00:27:10.440
标签将是将

00:27:09.450 --> 00:27:11.669
检查，因为它会可变

00:27:10.440 --> 00:27:17.610
好吧，我们会做一些不同的事情

00:27:11.669 --> 00:27:20.340
在这里，所以你知道JPEG格式Ryan 

00:27:17.610 --> 00:27:24.240
的格式可以为math.random大于

00:27:20.340 --> 00:27:27.840
 0.5你知道PNG希望是

00:27:24.240 --> 00:27:29.039
开放的网络不是jpg 

00:27:27.840 --> 00:27:35.280
对，所以我们就在那里，有我的

00:27:29.039 --> 00:27:36.570
自定义标签，我将其记录为注册

00:27:35.280 --> 00:27:38.399
而不是会议注册表

00:27:36.570 --> 00:27:39.840
在那里，然后我们记录下来，这就是我的

00:27:38.399 --> 00:27:42.150
习俗

00:27:39.840 --> 00:27:44.640
以公制为单位，我可以吗？ 

00:27:42.150 --> 00:27:45.929
用...做各种非常动态的事情

00:27:44.640 --> 00:27:47.549
这些建设者有相当于

00:27:45.929 --> 00:27:49.260
柜台和仪表和

00:27:47.549 --> 00:27:51.000
甚至还有一些仪表

00:27:49.260 --> 00:27:52.080
仪表不可用

00:27:51.000 --> 00:27:54.150
注册表界面，您也可以

00:27:52.080 --> 00:27:55.919
贡献一点

00:27:54.150 --> 00:27:57.480
他们不是很普遍

00:27:55.919 --> 00:27:58.890
我们可以保证他们在所有

00:27:57.480 --> 00:28:02.850
不同的支持界面，因此

00:27:58.890 --> 00:28:06.029
也例如长时间计时器或长时间任务

00:28:02.850 --> 00:28:08.010
计时器很长的测试计时器就像

00:28:06.029 --> 00:28:09.840
计时器，除了它有一个

00:28:08.010 --> 00:28:10.890
截止日期，这意味着有时间

00:28:09.840 --> 00:28:12.630
系统应该做什么

00:28:10.890 --> 00:28:14.370
提醒说这已经超出

00:28:12.630 --> 00:28:15.990
某种截止日期，所以考虑一下

00:28:14.370 --> 00:28:19.230
计时器适合小型

00:28:15.990 --> 00:28:21.330
持续性工作，例如调整大小

00:28:19.230 --> 00:28:23.490
好吧，如果我有很长的照片

00:28:21.330 --> 00:28:24.960
任务计时器，也许我正在处理你

00:28:23.490 --> 00:28:26.580
知道几个演出是TB级的数据

00:28:24.960 --> 00:28:28.169
无论工作本来应该

00:28:26.580 --> 00:28:30.419
大概要花10分钟

00:28:28.169 --> 00:28:31.770
您预计平均需要10 

00:28:30.419 --> 00:28:33.419
分钟，但由于某种原因有人

00:28:31.770 --> 00:28:34.679
它已经运行了三个小时

00:28:33.419 --> 00:28:37.700
您想找出那个系统

00:28:34.679 --> 00:28:39.809
已经用了两个小时零五十分钟

00:28:37.700 --> 00:28:41.940
在事实或您想找到之后

00:28:39.809 --> 00:28:44.279
结束那件事

00:28:41.940 --> 00:28:46.289
分配的时间表和如此长的考验

00:28:44.279 --> 00:28:46.799
计时器可以发布您知道的某种

00:28:46.289 --> 00:28:49.380
反向通道

00:28:46.799 --> 00:28:51.000
通知告诉您某事

00:28:49.380 --> 00:28:51.960
我做错了，这些很多

00:28:51.000 --> 00:28:53.970
这些不同的时间这些数据库

00:28:51.960 --> 00:28:56.820
将支持基于

00:28:53.970 --> 00:28:59.700
关于那种截止日期

00:28:56.820 --> 00:29:00.960
正确的自定义截止日期，让您

00:28:59.700 --> 00:29:02.789
也可以使用它

00:29:00.960 --> 00:29:04.260
对于更长的更长的工作，但不是全部

00:29:02.789 --> 00:29:05.880
系统支持，因此我们不支持

00:29:04.260 --> 00:29:07.919
我们不会在需要中浮出水面

00:29:05.880 --> 00:29:09.090
注册表界面在那里，所以你

00:29:07.919 --> 00:29:11.940
现在这里有很多不同的选择

00:29:09.090 --> 00:29:15.059
我告诉你如何在这里注册标签

00:29:11.940 --> 00:29:16.470
对，我们早先看过了

00:29:15.059 --> 00:29:18.240
提前，我们开始这个并获得一些流量

00:29:16.470 --> 00:29:20.100
在此之前，我们研究了

00:29:18.240 --> 00:29:21.870
我们可以使用config进行配置

00:29:20.100 --> 00:29:23.299
仪表注册表中的方法，那就是

00:29:21.870 --> 00:29:25.409
一种选择，您实际上可以

00:29:23.299 --> 00:29:27.600
您可以使用该仪表

00:29:25.409 --> 00:29:29.460
创建事物时注册

00:29:27.600 --> 00:29:32.909
在任何指标被贡献之前

00:29:29.460 --> 00:29:34.620
使用电表注册表定制器和

00:29:32.909 --> 00:29:37.950
这是一个回调接口

00:29:34.620 --> 00:29:39.750
您之前任何指向注册表的指针

00:29:37.950 --> 00:29:40.980
米已添加到

00:29:39.750 --> 00:29:43.320
我们已添加到

00:29:40.980 --> 00:29:45.299
仪表行业，所以在这里我可以说Richie 

00:29:43.320 --> 00:29:49.590
鸭配置常用标签，我不能

00:29:45.299 --> 00:29:50.990
说地区将等于你

00:29:49.590 --> 00:29:53.750
知道让我们说这是

00:29:50.990 --> 00:29:55.640
假设注入该区域，等等

00:29:53.750 --> 00:29:59.290
某种全局配置

00:29:55.640 --> 00:30:02.330
该节点唯一的，所以我将说字符串

00:29:59.290 --> 00:30:07.490
我会说这是你的地区

00:30:02.330 --> 00:30:09.830
地区或美国西部还可以，所以我要去

00:30:07.490 --> 00:30:11.180
如果将“美国西部”用作默认值， 

00:30:09.830 --> 00:30:13.370
环境变量区域不

00:30:11.180 --> 00:30:14.630
存在，当然在这种情况下

00:30:13.370 --> 00:30:17.120
不存在，所以它永远只是我们

00:30:14.630 --> 00:30:19.580
西方在这种情况下，你知道那是一个

00:30:17.120 --> 00:30:22.400
很普通的配置方式

00:30:19.580 --> 00:30:25.070
跨越所有不同事物的事物

00:30:22.400 --> 00:30:27.440
另一个不同的指标

00:30:25.070 --> 00:30:28.820
你可以做得很好的事情

00:30:27.440 --> 00:30:32.090
知道另一种改变

00:30:28.820 --> 00:30:34.730
默认行为是配置自定义

00:30:32.090 --> 00:30:36.820
属性，所以我在这里例如

00:30:34.730 --> 00:30:39.860
衡量指标的管理层

00:30:36.820 --> 00:30:42.050
以为我可以说所有等于假， 

00:30:39.860 --> 00:30:44.030
如果我这样做，那都是一个特殊的关键字

00:30:42.050 --> 00:30:46.010
在这里它将禁用发布，并且

00:30:44.030 --> 00:30:47.240
不仅是所有指标的累积

00:30:46.010 --> 00:30:50.330
我正在切割的那些，但都在

00:30:47.240 --> 00:30:52.280
我可以说的我可以使用的系统

00:30:50.330 --> 00:30:53.660
以JVM开头的一切都会

00:30:52.280 --> 00:30:56.270
如果我这样做对所有人都禁用

00:30:53.660 --> 00:30:57.620
 JVM阻碍了一切

00:30:56.270 --> 00:31:01.040
从JVM开始将被禁用

00:30:57.620 --> 00:31:03.050
包括JVM在内，我可以

00:31:01.040 --> 00:31:04.970
如果我也禁用例如HTTP权限

00:31:03.050 --> 00:31:06.380
想这样做，你可以做一些非常友好的

00:31:04.970 --> 00:31:07.820
有趣的白色点亮的白色列表

00:31:06.380 --> 00:31:10.760
或白色标签或不对不起白色

00:31:07.820 --> 00:31:14.090
清单或变量，例如

00:31:10.760 --> 00:31:16.490
您还可以配置自定义属性

00:31:14.090 --> 00:31:20.600
过滤器和自定义配置，所以我

00:31:16.490 --> 00:31:24.250
可以说我想要HTTP 

00:31:20.600 --> 00:31:26.770
服务器请求我想要一个

00:31:24.250 --> 00:31:30.230
我要捕获的百分位数

00:31:26.770 --> 00:31:32.720
现在的房子和我的分布

00:31:30.230 --> 00:31:34.490
想要以0.5为目标并指向9 

00:31:32.720 --> 00:31:36.920
五好吧，我可以

00:31:34.490 --> 00:31:38.720
为他们配置该指标

00:31:36.920 --> 00:31:41.240
朋友，您可以在

00:31:38.720 --> 00:31:42.980
除您之外的所有事物的通用方法

00:31:41.240 --> 00:31:45.200
也可以做这样的事情

00:31:42.980 --> 00:31:48.560
使用仪表自定义配置

00:31:45.200 --> 00:31:51.290
过滤器，所以这是一个仪表过滤器和一个

00:31:48.560 --> 00:31:52.970
仪表过滤器只是它是一个过滤器

00:31:51.290 --> 00:31:55.820
得到处理的机会

00:31:52.970 --> 00:31:57.920
运行，或者看看每个部委

00:31:55.820 --> 00:31:59.990
采样的每个指标或

00:31:57.920 --> 00:32:01.580
捕获并进入

00:31:59.990 --> 00:32:04.430
有机会决定是否

00:32:01.580 --> 00:32:06.350
该指标将被保留，或者

00:32:04.430 --> 00:32:07.670
它基本上被忽略了，当我

00:32:06.350 --> 00:32:08.780
说被忽略，表示未收集

00:32:07.670 --> 00:32:10.220
它没有发布到时间序列

00:32:08.780 --> 00:32:12.350
数据库或只是监视系统

00:32:10.220 --> 00:32:15.440
这只是一种忽略，所以我可以

00:32:12.350 --> 00:32:16.880
实际上和这里的一样细

00:32:15.440 --> 00:32:19.280
我可以说我想接受你知道

00:32:16.880 --> 00:32:20.360
任何以JVM开头的

00:32:19.280 --> 00:32:22.310
我们之前的例子

00:32:20.360 --> 00:32:23.930
如果名称以JVM开头，那么一切

00:32:22.310 --> 00:32:26.030
忽略它，否则让一切

00:32:23.930 --> 00:32:27.140
仔细检查一下指标

00:32:26.030 --> 00:32:29.060
我还没有启动应用程序

00:32:27.140 --> 00:32:32.690
现在，如果您查看指标

00:32:29.060 --> 00:32:34.280
在这里的端点，我们可以看到很多JVM 

00:32:32.690 --> 00:32:38.360
他们很多在那里开始

00:32:34.280 --> 00:32:40.550
令牌JVM让我们返回并添加它

00:32:38.360 --> 00:32:51.800
启动时，简单的仪表过滤器

00:32:40.550 --> 00:32:53.750
应用程序，您会了解更多关于JVM的知识

00:32:51.800 --> 00:32:55.360
这些指标全都消失了

00:32:53.750 --> 00:32:57.680
完全消失了，他们没有被

00:32:55.360 --> 00:32:59.090
发表于此，所以这是一个

00:32:57.680 --> 00:33:01.100
那很方便，你可以做所有的事情

00:32:59.090 --> 00:33:02.480
仪表有趣的事情

00:33:01.100 --> 00:33:04.610
过滤器，您甚至可以撰写和

00:33:02.480 --> 00:33:06.920
成为创建复合仪表过滤器

00:33:04.610 --> 00:33:09.500
等等，或者只是阅读您的注册表

00:33:06.920 --> 00:33:11.510
一堆有钱的人，好吧，我们已经

00:33:09.500 --> 00:33:13.520
现在有许多不同的方法

00:33:11.510 --> 00:33:15.800
更改应用程序以更改

00:33:13.520 --> 00:33:18.170
默认为电表注册表定制器

00:33:15.800 --> 00:33:20.000
将是最有用的

00:33:18.170 --> 00:33:25.210
我们也有一个叫做

00:33:20.000 --> 00:33:29.000
仪表活页夹仪表活页夹是一个接口

00:33:25.210 --> 00:33:31.340
当春天的心情出现时，这是一部分

00:33:29.000 --> 00:33:33.800
千分尺API的外观，但弹簧启动

00:33:31.340 --> 00:33:36.020
知道这一点，你得到一个你是

00:33:33.800 --> 00:33:37.430
给了注册表的指针，你

00:33:36.020 --> 00:33:40.010
可以有接口，可以有对象

00:33:37.430 --> 00:33:41.900
知道如何解压信息

00:33:40.010 --> 00:33:44.510
从不同的地方提取有用的指标

00:33:41.900 --> 00:33:47.690
子系统并贡献他们

00:33:44.510 --> 00:33:49.520
到通往注册表的路线的权利

00:33:47.690 --> 00:33:50.930
所以在这里您可能会拥有

00:33:49.520 --> 00:33:52.640
就像了解数据的东西一样

00:33:50.930 --> 00:33:56.060
弹簧靴做的正确来源

00:33:52.640 --> 00:33:58.370
实际上有一个数据源池

00:33:56.060 --> 00:34:00.050
指标对象并实现仪表

00:33:58.370 --> 00:34:02.900
活页夹它对此进行了回调

00:34:00.050 --> 00:34:04.970
仪表注册表，它也给了

00:34:02.900 --> 00:34:06.560
它也被发现它也被发现

00:34:04.970 --> 00:34:08.810
所有其他数据源连接

00:34:06.560 --> 00:34:11.540
在应用程序上下文中池，因此

00:34:08.810 --> 00:34:13.669
它使用的是事实

00:34:11.540 --> 00:34:17.030
可以同时访问注册表和

00:34:13.669 --> 00:34:19.879
数据源贡献了一些

00:34:17.030 --> 00:34:21.889
计量表注册表的指标

00:34:19.879 --> 00:34:23.780
每当的状态更新时

00:34:21.889 --> 00:34:25.309
连接脉冲改变正确，所以

00:34:23.780 --> 00:34:28.040
这是一个很好的方法，如果您想

00:34:25.309 --> 00:34:29.540
全面了解您知道的指标

00:34:28.040 --> 00:34:31.579
整套指标，您已经

00:34:29.540 --> 00:34:33.649
一些需要子系统的系统

00:34:31.579 --> 00:34:35.450
需要监视或测量的

00:34:33.649 --> 00:34:37.159
你可以在一个地方做

00:34:35.450 --> 00:34:38.899
然后重用别人可以

00:34:37.159 --> 00:34:40.700
安装仪表活页夹和

00:34:38.899 --> 00:34:42.589
应用程序上下文，它将完成所有

00:34:40.700 --> 00:34:44.210
为您工作，或者您可以将其置于“自动”状态

00:34:42.589 --> 00:34:46.429
这是很常见的配置权限

00:34:44.210 --> 00:34:48.139
这里的用例是这样做

00:34:46.429 --> 00:34:49.549
开箱即用的正确事情是你知道我

00:34:48.139 --> 00:34:51.260
可以写一个自动配置， 

00:34:49.549 --> 00:34:53.359
有定制的活页夹，我可以有一个

00:34:51.260 --> 00:34:55.429
具有仪表的自动配置

00:34:53.359 --> 00:34:57.920
注册表定制器和一些仪表

00:34:55.429 --> 00:34:59.030
过滤器，您知道何时知道

00:34:57.920 --> 00:35:00.619
当有人向我提出申请

00:34:59.030 --> 00:35:02.240
你知道我们在

00:35:00.619 --> 00:35:04.010
自动确保测量

00:35:02.240 --> 00:35:06.109
作为组织所拥有的东西

00:35:04.010 --> 00:35:08.569
您决定要测量，以便

00:35:06.109 --> 00:35:10.490
保持一致性，您将获得

00:35:08.569 --> 00:35:12.619
速度达到一致性，这是

00:35:10.490 --> 00:35:14.510
为什么又可以帮助拥有

00:35:12.619 --> 00:35:16.549
在平台级别的支持等

00:35:14.510 --> 00:35:18.260
例如，穿好衣服的日子很好看

00:35:16.549 --> 00:35:20.030
您正在使用千分尺，它将自动

00:35:18.260 --> 00:35:22.640
重新配置您的电表注册表

00:35:20.030 --> 00:35:25.549
到平台计量器注册表

00:35:22.640 --> 00:35:28.520
希望它正确很多，很多

00:35:25.549 --> 00:35:30.079
这些东西渗透的价值

00:35:28.520 --> 00:35:31.460
您所有的代码，只是

00:35:30.079 --> 00:35:32.720
只是工作而已

00:35:31.460 --> 00:35:34.549
一切都知道它知道如何

00:35:32.720 --> 00:35:36.890
使用它，以此类推，这是一个非常

00:35:34.549 --> 00:35:39.170
轻量级的库，因此无需花费

00:35:36.890 --> 00:35:40.730
你有什么事情要做，所以现在

00:35:39.170 --> 00:35:43.400
我们有这个自定义指标

00:35:40.730 --> 00:35:44.809
计时器正在计算数据

00:35:43.400 --> 00:35:47.540
现在在后台运行，让我们

00:35:44.809 --> 00:35:50.680
去我们的普罗米修斯，我们怎么说

00:35:47.540 --> 00:35:52.490
这就是所谓的这叫做

00:35:50.680 --> 00:35:57.040
转换照片任务

00:35:52.490 --> 00:35:59.240
好吧，所以转换照片任务计数

00:35:57.040 --> 00:36:02.210
你会看到现在有四个

00:35:59.240 --> 00:36:04.430
那里不同的时间序列坏了

00:36:02.210 --> 00:36:05.750
向下按格式，然后

00:36:04.430 --> 00:36:09.049
正确的区域，所以您可以看到它说

00:36:05.750 --> 00:36:10.640
地区等于我们西部，地区等于

00:36:09.049 --> 00:36:11.930
当然等于我们好难

00:36:10.640 --> 00:36:14.780
在那里编码，所以我们拥有所有这些

00:36:11.930 --> 00:36:16.640
这里有不同的值，我们可以

00:36:14.780 --> 00:36:18.829
看他们的特定部分，看看

00:36:16.640 --> 00:36:23.210
如果可以的话，一些特定的尺寸

00:36:18.829 --> 00:36:26.089
可以说，我的康复等于我们的西部

00:36:23.210 --> 00:36:27.030
当然，这是两个相同的

00:36:26.089 --> 00:36:29.400
他们是对的

00:36:27.030 --> 00:36:31.400
我们也可以说我想要那种身份

00:36:29.400 --> 00:36:33.990
看一切都相等

00:36:31.400 --> 00:36:37.400
所以我可以这样说

00:36:33.990 --> 00:36:39.900
正则表达式点查询输入

00:36:37.400 --> 00:36:41.310
执行或不给我那个

00:36:39.900 --> 00:36:43.050
这种情况就是一切，但你可能会

00:36:41.310 --> 00:36:44.819
具有来自不同地区的指标

00:36:43.050 --> 00:36:46.470
都积累在这个

00:36:44.819 --> 00:36:48.270
输出在这里，所以我会告诉你所有

00:36:46.470 --> 00:36:50.640
所有形式的指标

00:36:48.270 --> 00:36:51.810
转换照片任务的第二计数，然后

00:36:50.640 --> 00:36:53.760
会向您显示所有在

00:36:51.810 --> 00:36:55.020
美国，但是这会忽略所有

00:36:53.760 --> 00:36:56.099
那些来自亚洲的

00:36:55.020 --> 00:36:59.069
示例或您可能拥有的任何权利

00:36:56.099 --> 00:37:00.359
不同架构中的不同指标

00:36:59.069 --> 00:37:02.339
在那里，您可以使用常规的新鲜度

00:37:00.359 --> 00:37:09.349
描述你可以做否​​定，所以我

00:37:02.339 --> 00:37:12.210
可以说你知道不等于我们西部

00:37:09.349 --> 00:37:14.790
好吧，执行那个，那给了我

00:37:12.210 --> 00:37:16.349
这两个对，这是一个我猜这些

00:37:14.790 --> 00:37:22.640
是那些与我们不匹配的

00:37:16.349 --> 00:37:25.410
也可以做格式不等于PNG 

00:37:22.640 --> 00:37:29.089
对，就是这样，这就是

00:37:25.410 --> 00:37:30.750
对应于jpg的数据

00:37:29.089 --> 00:37:32.400
你知道你可以做的很复杂

00:37:30.750 --> 00:37:33.750
在这里清理，您可以创建很多

00:37:32.400 --> 00:37:35.819
像这样的不同图和

00:37:33.750 --> 00:37:38.460
并通过系统将它们可视化

00:37:35.819 --> 00:37:39.750
时间，并投入一些

00:37:38.460 --> 00:37:43.640
在您的某处监视系统

00:37:39.750 --> 00:37:49.079
这样组织，然后用它来驱动

00:37:43.640 --> 00:37:50.790
用它来驱动你知道的屏幕

00:37:49.079 --> 00:37:53.250
例如标记或协会或警报

00:37:50.790 --> 00:37:56.160
甚至更好，所以我们现在有一个，你知道一个

00:37:53.250 --> 00:37:58.020
我们已经非常非常非常简短地讨论了

00:37:56.160 --> 00:38:01.369
我的kamar中的功能数量

00:37:58.020 --> 00:38:03.660
看着那是你知道的聪明

00:38:01.369 --> 00:38:05.520
自动为您收集指标

00:38:03.660 --> 00:38:07.380
用于数据源利用

00:38:05.520 --> 00:38:09.750
而不是队列连接文件

00:38:07.380 --> 00:38:12.750
描述符使用率日志回事件正常运行时间

00:38:09.750 --> 00:38:15.329
和Tom Kent使用CPU使用率和spring 

00:38:12.750 --> 00:38:17.430
 ABC和网络通量要求闪电逗

00:38:15.329 --> 00:38:18.990
我们已经看过您知道它可以支持

00:38:17.430 --> 00:38:22.520
休息模板Layton看到的东西

00:38:18.990 --> 00:38:24.750
我们还支持捕获JVM 

00:38:22.520 --> 00:38:27.240
指标包括各种利用率

00:38:24.750 --> 00:38:28.920
内存缓冲池相关统计信息

00:38:27.240 --> 00:38:31.380
垃圾回收线程利用率

00:38:28.920 --> 00:38:33.900
加载和卸载的类数

00:38:31.380 --> 00:38:35.130
我们已经看过了

00:38:33.900 --> 00:38:37.440
千分尺从仪表开始

00:38:35.130 --> 00:38:39.790
注册表并扩展以查看

00:38:37.440 --> 00:38:43.450
仪表计时器和

00:38:39.790 --> 00:38:46.030
和柜台，我们看着这一切

00:38:43.450 --> 00:38:47.320
插入弹簧靴，当然我们

00:38:46.030 --> 00:38:49.240
看了一些自动支持

00:38:47.320 --> 00:38:51.850
我们到这里来出版

00:38:49.240 --> 00:38:53.920
指标，我们现在没有这样做

00:38:51.850 --> 00:38:55.869
真的触动春天的心情

00:38:53.920 --> 00:38:58.060
发布这些指标是一种

00:38:55.869 --> 00:38:59.650
有趣的是，在这种情况下，我们

00:38:58.060 --> 00:39:03.220
现在使用Prometheus是Prometheus 

00:38:59.650 --> 00:39:06.070
基于极点的您知道的监控系统

00:39:03.220 --> 00:39:07.780
它从您的服务中提取数据

00:39:06.070 --> 00:39:11.440
服务必须浮出水面

00:39:07.780 --> 00:39:15.340
使其拉动，使弹簧靴自动

00:39:11.440 --> 00:39:19.420
这里的配置自动站立

00:39:15.340 --> 00:39:21.430
称为执行器Prometheus的端点

00:39:19.420 --> 00:39:24.010
该端点的格式为

00:39:21.430 --> 00:39:25.540
您的Prometheus引擎将

00:39:24.010 --> 00:39:28.750
期望能够看到能够

00:39:25.540 --> 00:39:30.520
现在读取数据，此端点是您

00:39:28.750 --> 00:39:32.650
知道它看起来很奇怪，但这是

00:39:30.520 --> 00:39:34.840
普罗米修斯现在期望什么

00:39:32.650 --> 00:39:36.250
您使用的是直型千分尺

00:39:34.840 --> 00:39:38.650
有一个您可以使用的API 

00:39:36.250 --> 00:39:40.060
那会给你一个字符串，所有的你

00:39:38.650 --> 00:39:42.940
然后要做的就是站起来

00:39:40.060 --> 00:39:44.380
 HTTP端点并将Prometheus指向它

00:39:42.940 --> 00:39:45.580
那会起作用，但是弹簧靴只是

00:39:44.380 --> 00:39:47.410
为您做所有这一切，所以

00:39:45.580 --> 00:39:49.570
已经在这里为您完成，然后

00:39:47.410 --> 00:39:52.570
你必须为我配置

00:39:49.570 --> 00:39:53.980
知道这个端点，所以你去

00:39:52.570 --> 00:39:56.500
你的配置文件的例子，我有一个

00:39:53.980 --> 00:39:59.200
配置文件在这里localhost 8080 ammo和

00:39:56.500 --> 00:40:00.730
我已经在我的转义配置中配置了

00:39:59.200 --> 00:40:02.500
我的脚本配置在那里

00:40:00.730 --> 00:40:04.420
职位名称为Springwood作动器

00:40:02.500 --> 00:40:08.170
度量路径等于执行器Prometheus 

00:40:04.420 --> 00:40:10.720
目标是该主机在端口中

00:40:08.170 --> 00:40:12.220
所以我现在知道了

00:40:10.720 --> 00:40:14.560
配置文件并告诉

00:40:12.220 --> 00:40:15.970
 Prometheus从我的节点提取数据

00:40:14.560 --> 00:40:17.680
这只是我可以做的一个例子

00:40:15.970 --> 00:40:19.750
你知道五个不同的目标吗？ 

00:40:17.680 --> 00:40:21.280
它会自动提取指标

00:40:19.750 --> 00:40:25.840
从所有这五个不同的

00:40:21.280 --> 00:40:28.450
这就是你这样告诉

00:40:25.840 --> 00:40:32.500
普罗米修斯从我的读取数据

00:40:28.450 --> 00:40:34.030
另一方面，我可能会为

00:40:32.500 --> 00:40:36.609
我有一些其他服务，例如石墨

00:40:34.030 --> 00:40:38.619
向其推送指标，以便客户端

00:40:36.609 --> 00:40:40.690
那是我的微服务需要

00:40:38.619 --> 00:40:42.880
将他的指标发布到石墨，然后

00:40:40.690 --> 00:40:44.160
石墨必须积累，并且

00:40:42.880 --> 00:40:46.840
使它们正确

00:40:44.160 --> 00:40:49.960
双方都有弊端

00:40:46.840 --> 00:40:51.850
这种情况下，如果我使用基于拉

00:40:49.960 --> 00:40:53.770
系统，那么我不必拥有

00:40:51.850 --> 00:40:55.630
自定义库，没有

00:40:53.770 --> 00:40:57.610
如何用Java与Prometheus对话

00:40:55.630 --> 00:40:59.140
没什么大不了的

00:40:57.610 --> 00:41:02.920
社区这没什么大不了的，但是

00:40:59.140 --> 00:41:03.940
也许没有，也许也许

00:41:02.920 --> 00:41:06.280
用语言工作

00:41:03.940 --> 00:41:08.170
不是现成的客户端库

00:41:06.280 --> 00:41:09.610
所以你有点自己想

00:41:08.170 --> 00:41:11.700
制定协议以发布指标

00:41:09.610 --> 00:41:14.830
石墨化的事实证明

00:41:11.700 --> 00:41:17.890
石墨使用一些深度玛雅统计数据

00:41:14.830 --> 00:41:20.500
 Steph看到或支持密度，因此

00:41:17.890 --> 00:41:21.640
 Steph看到了一个超级简单的协议，但

00:41:20.500 --> 00:41:23.110
即使那里有很多

00:41:21.640 --> 00:41:24.310
它的不同口味有数据狗

00:41:23.110 --> 00:41:28.210
有Etsy，我的意思是

00:41:24.310 --> 00:41:30.580
获取统计数据D数据人员的不同方法

00:41:28.210 --> 00:41:31.690
 C口味，您知道您必须

00:41:30.580 --> 00:41:34.210
当你写一个

00:41:31.690 --> 00:41:37.090
客户与这些交谈与这些交谈

00:41:34.210 --> 00:41:39.130
支持这种口味和其他功能的工具

00:41:37.090 --> 00:41:39.930
其他营销系统具有的协议

00:41:39.130 --> 00:41:42.100
协议远不止这些

00:41:39.930 --> 00:41:43.840
复杂或复杂

00:41:42.100 --> 00:41:45.220
我的意思是按扣T已死

00:41:43.840 --> 00:41:47.320
简单甚至没有

00:41:45.220 --> 00:41:51.220
安全机制，您只需要

00:41:47.320 --> 00:41:52.510
在令牌中漏斗

00:41:51.220 --> 00:41:54.580
用其他东西代替

00:41:52.510 --> 00:41:55.870
本身就很有用

00:41:54.580 --> 00:41:57.310
替换它并给它使用

00:41:55.870 --> 00:41:59.020
令牌权是因为没有

00:41:57.310 --> 00:42:01.150
内置的机制，所以如果你

00:41:59.020 --> 00:42:03.340
如果您使用的是语言

00:42:01.150 --> 00:42:05.620
和没有它的技术

00:42:03.340 --> 00:42:07.350
与监控对话的能力

00:42:05.620 --> 00:42:09.750
系统，您需要做任何事情

00:42:07.350 --> 00:42:16.150
真正使一切复杂

00:42:09.750 --> 00:42:18.040
然后有要求推

00:42:16.150 --> 00:42:21.400
该系统的指标将不会

00:42:18.040 --> 00:42:22.960
太好了，你可以压倒一切

00:42:21.400 --> 00:42:25.000
您可能能够发送的系统

00:42:22.960 --> 00:42:26.740
一次有太多要求

00:42:25.000 --> 00:42:28.330
下游系统将读取

00:42:26.740 --> 00:42:29.500
数据，你会知道吗

00:42:28.330 --> 00:42:31.030
尝试尽快阅读它，但是

00:42:29.500 --> 00:42:34.780
如果您发送的邮件超出了我的承受能力， 

00:42:31.030 --> 00:42:37.180
另一方面会摔倒

00:42:34.780 --> 00:42:38.980
在这种情况下，系统正在进行轮询

00:42:37.180 --> 00:42:41.980
根据您对普罗米修斯的了解，它在做

00:42:38.980 --> 00:42:44.650
基于极点的指标积累

00:42:41.980 --> 00:42:45.760
看了您在

00:42:44.650 --> 00:42:47.170
实际的终点，我们看着他们

00:42:45.760 --> 00:42:49.120
和结束的Prometheus端点

00:42:47.170 --> 00:42:50.710
终点是普罗米修斯的终点

00:42:49.120 --> 00:42:53.220
需要做它的工作，不是这样的

00:42:50.710 --> 00:42:55.240
任何人都可以说HTTP很重要

00:42:53.220 --> 00:42:56.380
这些几乎任何语言或协议

00:42:55.240 --> 00:42:58.120
天将有能力站起来

00:42:56.380 --> 00:43:01.150
 Prometheus可以的HTTP端点

00:42:58.120 --> 00:43:04.930
然后用来使状态

00:43:01.150 --> 00:43:06.460
应用程序没什么大不了的

00:43:04.930 --> 00:43:07.690
很容易，它也有好处

00:43:06.460 --> 00:43:10.759
存在

00:43:07.690 --> 00:43:12.019
普罗米修斯（Prometheus）过时的普罗米修斯（Prometheus）不是

00:43:10.759 --> 00:43:13.809
会尝试每天摄取更多

00:43:12.019 --> 00:43:16.579
然后它可以处理正确的

00:43:13.809 --> 00:43:18.769
希望自己能活着，你知道

00:43:16.579 --> 00:43:20.660
在不知所措之前停下来

00:43:18.769 --> 00:43:23.839
这方面，这是我认为更好的

00:43:20.660 --> 00:43:25.220
适用于更具弹性的系统的解决方案，但

00:43:23.839 --> 00:43:27.890
这确实意味着现在每个微服务

00:43:25.220 --> 00:43:29.450
必须承担起责任

00:43:27.890 --> 00:43:31.519
向上站PN点，所以我猜

00:43:29.450 --> 00:43:32.990
问题是你想要吗

00:43:31.519 --> 00:43:34.819
负责配置

00:43:32.990 --> 00:43:36.499
客户发布指标或希望

00:43:34.819 --> 00:43:39.140
负责配置

00:43:36.499 --> 00:43:40.880
 HTTP端点以提供以下指标

00:43:39.140 --> 00:43:43.430
然后可以通过某种方式摄取

00:43:40.880 --> 00:43:44.539
编写代码的两种方式

00:43:43.430 --> 00:43:47.619
这只是问题

00:43:44.539 --> 00:43:49.609
您想要进行的权衡和

00:43:47.619 --> 00:43:50.749
坚固性和弹性

00:43:49.609 --> 00:43:53.539
您期望的特征

00:43:50.749 --> 00:43:54.589
从您的系统上可以，所以我们已经

00:43:53.539 --> 00:43:55.700
看了很多不同的东西

00:43:54.589 --> 00:43:56.990
我们已经研究了如何配置

00:43:55.700 --> 00:43:58.460
应用程序查看所有的指标

00:43:56.990 --> 00:44:00.019
支持这里我们看了一些

00:43:58.460 --> 00:44:01.039
不同的配置方式

00:44:00.019 --> 00:44:02.869
包括各种回调

00:44:01.039 --> 00:44:06.140
接口以及其中的属性

00:44:02.869 --> 00:44:07.309
 spring boot ，我们看了一些

00:44:06.140 --> 00:44:09.019
不同使注册表静音

00:44:07.309 --> 00:44:10.789
我们在这里的实现

00:44:09.019 --> 00:44:12.739
 classpath，我们谈到了一些

00:44:10.789 --> 00:44:14.869
我们甚至没有在网站上看到

00:44:12.739 --> 00:44:16.369
例如Cloud Foundry中的一个

00:44:14.869 --> 00:44:18.140
知道我们刚刚开始斯科特

00:44:16.369 --> 00:44:19.249
服务显然这是一个主题

00:44:18.140 --> 00:44:20.900
亲爱的我附近有一个

00:44:19.249 --> 00:44:23.029
您可以并且应该做的事情数量

00:44:20.900 --> 00:44:25.849
支持您的可观察性

00:44:23.029 --> 00:44:27.680
组织和千分尺是一个真正的

00:44:25.849 --> 00:44:29.420
正确的步骤非常有力

00:44:27.680 --> 00:44:30.950
方向，这样我的朋友谢谢

00:44:29.420 --> 00:44:31.849
你这么多看我希望你得到

00:44:30.950 --> 00:44:34.089
这样的事情，我们会见到你

00:44:31.849 --> 00:44:34.089
下次

00:44:40.440 --> 00:44:42.500
您

