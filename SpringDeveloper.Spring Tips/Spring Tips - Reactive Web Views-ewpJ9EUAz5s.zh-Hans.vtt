WEBVTT
Kind: captions
Language: zh-Hans

00:00:24.640 --> 00:00:28.660
嗨，春季粉丝们欢迎来到另一个

00:00:26.920 --> 00:00:30.100
在此安装Spring 提示

00:00:28.660 --> 00:00:32.500
我们将要看的分期付款

00:00:30.100 --> 00:00:34.450
反应性观点，我的意思是

00:00:32.500 --> 00:00:37.600
我们将要看常规的HTTP 

00:00:34.450 --> 00:00:39.160
但着眼于利用

00:00:37.600 --> 00:00:41.199
反应式编程以构建更多

00:00:39.160 --> 00:00:42.580
交互式动态视图，这不是

00:00:41.199 --> 00:00:44.680
我们需要做的事情是的

00:00:42.580 --> 00:00:45.820
我想你可以从以前

00:00:44.680 --> 00:00:48.250
视频如何做一些我们要做的事

00:00:45.820 --> 00:00:50.949
要说的就是服务于

00:00:48.250 --> 00:00:52.120
事件和WebSockets，但是有一些

00:00:50.949 --> 00:00:53.890
这里更多的可能性以及我的原因

00:00:52.120 --> 00:00:56.410
想谈谈这一切是因为我

00:00:53.890 --> 00:00:59.199
感觉好像有一类

00:00:56.410 --> 00:01:00.220
我们想要的地方存在的应用程序

00:00:59.199 --> 00:01:02.320
有一点动感

00:01:00.220 --> 00:01:05.379
页面上的行为，而不必

00:01:02.320 --> 00:01:07.000
完全使用完整的客户端权限， 

00:01:05.379 --> 00:01:10.049
这些就是这些

00:01:07.000 --> 00:01:12.340
我想是或我认为是

00:01:10.049 --> 00:01:16.090
部门部门的申请

00:01:12.340 --> 00:01:18.250
是您知道的应用程序

00:01:16.090 --> 00:01:19.690
我不像Gmail那样动态

00:01:18.250 --> 00:01:22.299
有很多应用

00:01:19.690 --> 00:01:25.630
这是真的，我认为我们很友善

00:01:22.299 --> 00:01:27.189
 Manjula乱翼的位置此时

00:01:25.630 --> 00:01:29.370
我认为可以公平地说

00:01:27.189 --> 00:01:32.230
客户端编程JavaScript 

00:01:29.370 --> 00:01:34.330
编程要复杂得多

00:01:32.230 --> 00:01:35.980
我可以请你做的所有事情

00:01:34.330 --> 00:01:38.260
在Java的服务器端

00:01:35.980 --> 00:01:41.140
春天吧，所以在这一点上

00:01:38.260 --> 00:01:42.790
这个，你知道疯狂的数量

00:01:41.140 --> 00:01:45.370
必须生成的代码，以及

00:01:42.790 --> 00:01:46.720
转译和编译，你们都知道

00:01:45.370 --> 00:01:48.430
这些东西只是为了能够

00:01:46.720 --> 00:01:51.100
角度项目和项目的优势

00:01:48.430 --> 00:01:52.450
反应，我什至使用角度和

00:01:51.100 --> 00:01:54.430
有一个很好的图书馆叫做

00:01:52.450 --> 00:01:55.750
 vu dat j / s这也很好

00:01:54.430 --> 00:01:58.450
有很多不错的选择，我

00:01:55.750 --> 00:02:00.159
粉丝，但如果您要做的是

00:01:58.450 --> 00:02:01.840
增加一点动态行为

00:02:00.159 --> 00:02:03.550
到页面，然后可能会有点

00:02:01.840 --> 00:02:05.920
过度杀伤，尤其是如果你没有

00:02:03.550 --> 00:02:08.140
之前视频中的技能等

00:02:05.920 --> 00:02:09.970
我说过Vaadin 

00:02:08.140 --> 00:02:13.000
这是基于组件模型的方式

00:02:09.970 --> 00:02:14.890
生成标记和dom元素，以及

00:02:13.000 --> 00:02:17.680
页面和CSS以及所有这些东西

00:02:14.890 --> 00:02:19.900
从一开始就知道UI 

00:02:17.680 --> 00:02:23.200
框架翼状组件模型

00:02:19.900 --> 00:02:25.090
反过来反过来变成JavaScript 

00:02:23.200 --> 00:02:28.150
组件对，这非常有趣

00:02:25.090 --> 00:02:29.590
方法，你知道它看起来不错，我

00:02:28.150 --> 00:02:32.170
认为还可以，如果我们想要更多

00:02:29.590 --> 00:02:33.610
动态HTML和所有其他内容，但如果

00:02:32.170 --> 00:02:35.620
你只是想像一个，如果你只有一个

00:02:33.610 --> 00:02:37.420
具有良好CSS和其他所有功能的HTML页面

00:02:35.620 --> 00:02:38.069
东西，你只想添加一些否认

00:02:37.420 --> 00:02:39.599
行为

00:02:38.069 --> 00:02:44.790
只要知道就可以完成很多工作

00:02:39.599 --> 00:02:46.290
一点JavaScript，我认为

00:02:44.790 --> 00:02:48.090
对许多人来说，这比

00:02:46.290 --> 00:02:49.680
我朝相反的方向走

00:02:48.090 --> 00:02:51.959
怀疑这会更容易

00:02:49.680 --> 00:02:53.579
像我这样的人

00:02:51.959 --> 00:02:55.709
服务器方面的技能，但不是

00:02:53.579 --> 00:02:59.489
我需要我的客户流利

00:02:55.709 --> 00:03:01.319
朋友Matt Mabel等

00:02:59.489 --> 00:03:03.150
流利或刚出生的人

00:03:01.319 --> 00:03:06.480
那个客户端世界，谁不

00:03:03.150 --> 00:03:09.840
处理不断变化的思想

00:03:06.480 --> 00:03:12.959
那就是那个世界的风景

00:03:09.840 --> 00:03:15.180
转移到客户端的自然选择

00:03:12.959 --> 00:03:17.489
当您使用诸如react和

00:03:15.180 --> 00:03:19.019
他们开始占领一个角度

00:03:17.489 --> 00:03:20.549
越来越多的

00:03:19.019 --> 00:03:24.000
屏幕上显示的东西

00:03:20.549 --> 00:03:27.150
所以在那一刻，春天变得非常

00:03:24.000 --> 00:03:28.980
站立HTTP服务的有用方法

00:03:27.150 --> 00:03:32.609
对，你有一个WebSockets你

00:03:28.980 --> 00:03:34.709
具有基于HTTP的API是REST API，但是您

00:03:32.609 --> 00:03:36.810
消耗浏览器客户端的所有内容

00:03:34.709 --> 00:03:38.939
客户端JavaScript客户端和

00:03:36.810 --> 00:03:42.569
那你就知道你是否开始使用角

00:03:38.939 --> 00:03:45.690
并对实际渲染的工作做出反应

00:03:42.569 --> 00:03:49.199
包含标记的视图被掩埋

00:03:45.690 --> 00:03:51.000
在JavaScript代码中，当然

00:03:49.199 --> 00:03:52.260
这创造了非常动态的体验

00:03:51.000 --> 00:03:54.030
但这意味着你现在有一个东西

00:03:52.260 --> 00:03:57.209
纯粹是JavaScript的所有CSS 

00:03:54.030 --> 00:03:58.590
所有Dom元素所有HTML全部

00:03:57.209 --> 00:04:01.650
他们看到的所有标记

00:03:58.590 --> 00:04:03.180
一切实际上都已实现

00:04:01.650 --> 00:04:05.430
多亏了运行的JavaScript代码

00:04:03.180 --> 00:04:07.579
页面加载哪个时

00:04:05.430 --> 00:04:11.519
当然搜索引擎不一定

00:04:07.579 --> 00:04:12.840
凝视着他们看不到什么

00:04:11.519 --> 00:04:15.150
在那里发生他们需要页面

00:04:12.840 --> 00:04:18.570
本身，以便他们可以对其进行索引等等

00:04:15.150 --> 00:04:20.340
有一种趋势，我们去了我们

00:04:18.570 --> 00:04:22.380
在客户端世界中看到人们

00:04:20.340 --> 00:04:25.620
是什么时候他们采取他们的

00:04:22.380 --> 00:04:26.880
他们的客户端渲染器并使用

00:04:25.620 --> 00:04:29.039
在服务器端，这些

00:04:26.880 --> 00:04:30.780
是所谓的同构应用

00:04:29.039 --> 00:04:32.120
这些是我认为这些是

00:04:30.780 --> 00:04:36.960
他们自己很有趣

00:04:32.120 --> 00:04:39.330
使用渲染的应用程序

00:04:36.960 --> 00:04:42.780
服务器上的静态模板种类

00:04:39.330 --> 00:04:43.800
一边，但他们也造就了你

00:04:42.780 --> 00:04:46.520
知道他们也是这样建造的

00:04:43.800 --> 00:04:48.900
相同的模板相同的视图是

00:04:46.520 --> 00:04:50.650
建立在具有完全

00:04:48.900 --> 00:04:51.760
相同输入相同标记

00:04:50.650 --> 00:04:53.669
一样的东西都一样的模板

00:04:51.760 --> 00:04:55.479
只是现在

00:04:53.669 --> 00:04:57.100
重新生成它正在更新

00:04:55.479 --> 00:04:59.860
客户，这是用来帮助

00:04:57.100 --> 00:05:01.030
更新已经存在的HTML页面

00:04:59.860 --> 00:05:04.389
加载，所以效果是你已经

00:05:01.030 --> 00:05:05.919
此静态预渲染的缓冲区

00:05:04.389 --> 00:05:07.270
从

00:05:05.919 --> 00:05:08.530
服务器到客户端并加载

00:05:07.270 --> 00:05:11.530
超快速，无需计算

00:05:08.530 --> 00:05:13.240
需要加载标记，然后您

00:05:11.530 --> 00:05:16.090
具有相同的模板库

00:05:13.240 --> 00:05:18.520
在客户端上使用相同的视图逻辑

00:05:16.090 --> 00:05:20.470
然后呈现的JavaScript版本

00:05:18.520 --> 00:05:22.419
使用JavaScript然后呈现

00:05:20.470 --> 00:05:23.800
你知道一系列的Dom节点

00:05:22.419 --> 00:05:25.419
看起来和你得到的完全一样

00:05:23.800 --> 00:05:27.130
当您在服务器端渲染它时

00:05:25.419 --> 00:05:28.510
当然，好处是您

00:05:27.130 --> 00:05:30.699
得到非常快的负载，然后您就可以

00:05:28.510 --> 00:05:33.430
逐步增强这些页面

00:05:30.699 --> 00:05:36.030
现在那只会发生

00:05:33.430 --> 00:05:37.690
当您将所有视图卸载到

00:05:36.030 --> 00:05:39.789
客户端JavaScript只有

00:05:37.690 --> 00:05:42.460
当您这样做时的要求，但如果您

00:05:39.789 --> 00:05:43.630
具有服务器端视图（如果有） 

00:05:42.460 --> 00:05:45.699
服务器端模板，只想

00:05:43.630 --> 00:05:47.740
添加一些动态行为似乎

00:05:45.699 --> 00:05:49.210
一点点，似乎一座桥太远了

00:05:47.740 --> 00:05:51.940
让我一路走到

00:05:49.210 --> 00:05:53.050
客户端，然后尝试获取

00:05:51.940 --> 00:05:56.080
客户端具有相同的渲染

00:05:53.050 --> 00:05:57.520
引擎为什么不仅仅使用您就知道了

00:05:56.080 --> 00:05:59.470
服务器端渲染引擎进行渲染

00:05:57.520 --> 00:06:01.870
页面，然后更新

00:05:59.470 --> 00:06:03.970
你在乎，这不是一个老

00:06:01.870 --> 00:06:06.910
我当然是说你是你的意思

00:06:03.970 --> 00:06:08.830
毫无疑问，你们中的一些人会记得

00:06:06.910 --> 00:06:10.750
我们以前称Ajax的天数

00:06:08.830 --> 00:06:12.400
现在我们就称它为HTTP 

00:06:10.750 --> 00:06:13.990
您可以从

00:06:12.400 --> 00:06:16.510
浏览器，但在我们将其称为Ajax和

00:06:13.990 --> 00:06:18.190
在2004年之前，我们谈论过

00:06:16.510 --> 00:06:20.199
称为dhtml的东西，我认为

00:06:18.190 --> 00:06:23.260
没有HTML的区别是

00:06:20.199 --> 00:06:26.410
只是动态页面，没有任何排序

00:06:23.260 --> 00:06:28.660
讨论或您了解

00:06:26.410 --> 00:06:30.970
这些页面如何交流

00:06:28.660 --> 00:06:32.710
与后端，它最终成为

00:06:30.970 --> 00:06:34.599
浏览器客户端可以

00:06:32.710 --> 00:06:35.919
调用后端服务

00:06:34.599 --> 00:06:37.449
说他们不再受限于

00:06:35.919 --> 00:06:39.099
他们的沙盒，这使他们能够

00:06:37.449 --> 00:06:40.750
从中驱动页面更新

00:06:39.099 --> 00:06:43.000
服务器上的信息，我们致电

00:06:40.750 --> 00:06:44.800
那我和阿贾克斯（Ajax）还有一个

00:06:43.000 --> 00:06:46.660
 Ajax的很多应用

00:06:44.800 --> 00:06:47.979
你知道的那个非常简单的模型

00:06:46.660 --> 00:06:50.770
有您要更新的常规页面

00:06:47.979 --> 00:06:51.870
动态地可能会有用，如果

00:06:50.770 --> 00:06:54.010
你想开箱即用

00:06:51.870 --> 00:06:55.060
快速启动并运行，所以我们要

00:06:54.010 --> 00:06:56.590
我要做的是建造一点

00:06:55.060 --> 00:06:59.140
应用程序，我们将使用

00:06:56.590 --> 00:07:00.810
反应式网络支持就在这里，让我们

00:06:59.140 --> 00:07:02.850
说反应性

00:07:00.810 --> 00:07:05.690
好的意见，我们将使用龙目岛

00:07:02.850 --> 00:07:07.620
我们将使用反应式网络支持

00:07:05.690 --> 00:07:08.490
以及何时使用时间叶

00:07:07.620 --> 00:07:11.400
好的，这是服务器端

00:07:08.490 --> 00:07:15.139
我命中的模板引擎生成我

00:07:11.400 --> 00:07:15.139
要在这里打开

00:07:21.460 --> 00:07:26.520
现在我们有了一个全新的应用程序， 

00:07:30.390 --> 00:07:36.150
我们只是要采取某种方式

00:07:33.730 --> 00:07:39.670
相同问题有多种不同的方式

00:07:36.150 --> 00:07:41.560
首先，让我们尝试一下

00:07:39.670 --> 00:07:43.090
我们将创建一个SSE端点， 

00:07:41.560 --> 00:07:44.590
所以我要我做的不是你

00:07:43.090 --> 00:07:46.330
知道我已经完成了其他视频

00:07:44.590 --> 00:07:48.100
这些东西中的每一个，所以我不会

00:07:46.330 --> 00:07:49.360
在我要去的事情上流连忘返

00:07:48.100 --> 00:07:52.960
我要做的就是创建一个制作人

00:07:49.360 --> 00:07:55.360
会产生更新

00:07:52.960 --> 00:08:00.570
每个发布者都会产生更新的发布者

00:07:55.360 --> 00:08:03.310
让我们说第二个好吧，所以这将是一个

00:08:00.570 --> 00:08:06.040
产生更新子类型的Spring bean 

00:08:03.310 --> 00:08:14.850
问候好

00:08:06.040 --> 00:08:18.940
字符串消息和欢迎发布者

00:08:14.850 --> 00:08:23.080
字符串名称，我们将说通量是从

00:08:18.940 --> 00:08:26.650
产生新供应商的物流

00:08:23.080 --> 00:08:28.840
我们要说的只是返回一个新

00:08:26.650 --> 00:08:31.890
如此流血，绿色就会有

00:08:28.840 --> 00:08:34.120
消息，我给它一个构造函数

00:08:31.890 --> 00:08:41.550
好吧，那是没有工作的

00:08:34.120 --> 00:08:41.550
构造函数，我们会说我是名字

00:08:42.510 --> 00:08:50.260
会给它时间，所以他们有一个

00:08:45.880 --> 00:08:53.590
想法什么时候完成的

00:08:50.260 --> 00:08:55.000
好东西，这是一个很好的lambda， 

00:08:53.590 --> 00:08:57.160
我当然想错开

00:08:55.000 --> 00:08:58.480
引入1秒的延迟，所以我们有一个

00:08:57.160 --> 00:08:59.920
希望能够跟着她

00:08:58.480 --> 00:09:03.880
肉眼

00:08:59.920 --> 00:09:05.080
好，那将是一个Spring 梁

00:09:03.880 --> 00:09:08.140
这就是我们的光束，我们要创建一个

00:09:05.080 --> 00:09:09.220
服务和事件视图，这是我们

00:09:08.140 --> 00:09:13.480
只是要创建一个服务事件

00:09:09.220 --> 00:09:18.520
流s查看读数控制器

00:09:13.480 --> 00:09:21.970
好了，这个控制器只是一个

00:09:18.520 --> 00:09:23.710
常规spring MVC或spring web flex in 

00:09:21.970 --> 00:09:25.810
在这种情况下，我们使用反应式网络

00:09:23.710 --> 00:09:27.100
一遍又一遍地支持我

00:09:25.810 --> 00:09:29.320
我创建了一个流，它将

00:09:27.100 --> 00:09:31.000
一个会不断更新的值，因此

00:09:29.320 --> 00:09:33.400
它将继续产生新的价值和新的

00:09:31.000 --> 00:09:34.710
永远永久更新

00:09:33.400 --> 00:09:36.360
第二个，所以我要用那个

00:09:34.710 --> 00:09:39.570
在这里创建一个你的我们会说

00:09:36.360 --> 00:09:42.990
创建ssee视图

00:09:39.570 --> 00:09:45.000
好的问候，你知道吗

00:09:42.990 --> 00:09:46.050
可以说我们可能想要我的名字

00:09:45.000 --> 00:09:48.800
不确定是否会实际购买我们

00:09:46.050 --> 00:09:50.640
任何东西，所以我会摆脱它

00:09:48.800 --> 00:09:51.870
其实我们可以有一个名字为什么不

00:09:50.640 --> 00:09:55.830
我们有一个名字，所以我们保留这个名字

00:09:51.870 --> 00:09:59.870
在SC页面中，我们会说出名字

00:09:55.830 --> 00:10:03.560
我们会说问候的发行人打招呼

00:09:59.870 --> 00:10:06.960
我们将其用作路径变量

00:10:03.560 --> 00:10:09.240
字符串名称还可以，为了

00:10:06.960 --> 00:10:12.480
这我要打招呼

00:10:09.240 --> 00:10:14.160
像这样的制作人，您可以创建

00:10:12.480 --> 00:10:16.350
构造函数，或者您可以开始做为

00:10:14.160 --> 00:10:17.850
我最近常做的事是

00:10:16.350 --> 00:10:20.420
只需使用妈妈钱必要的文章

00:10:17.850 --> 00:10:24.120
我最终给出的构造函数只是

00:10:20.420 --> 00:10:26.580
太简单了，不要不这样做，所以

00:10:24.120 --> 00:10:29.940
我要做的是我要说什么时候

00:10:26.580 --> 00:10:31.410
有人称这个端点生活在

00:10:29.940 --> 00:10:33.690
我们要发送的那个端点

00:10:31.410 --> 00:10:36.630
文本事件流的内容类型，例如

00:10:33.690 --> 00:10:38.610
那，我们会说一个制作人点招呼

00:10:36.630 --> 00:10:40.530
在名称中传递path变量

00:10:38.610 --> 00:10:41.940
这个名字好了，我们怎么使用

00:10:40.530 --> 00:10:44.340
从客户那里，很简单，让我们

00:10:41.940 --> 00:10:45.780
只需在目录中创建一个页面

00:10:44.340 --> 00:10:48.180
叫做static，所以我们要创建一个

00:10:45.780 --> 00:10:49.830
静态资产目录春季，但将

00:10:48.180 --> 00:10:51.600
自动为

00:10:49.830 --> 00:10:54.630
客户端的静态目录

00:10:51.600 --> 00:10:58.620
我将其称为ssee点HTML和

00:10:54.630 --> 00:10:59.880
我们只是写信给

00:10:58.620 --> 00:11:02.340
我并不为之骄傲的事情

00:10:59.880 --> 00:11:04.080
但嘿，你知道我是我为你做的

00:11:02.340 --> 00:11:08.060
我们要写一些JavaScript好的

00:11:04.080 --> 00:11:13.230
因此添加事件监听器加载功能e 

00:11:08.060 --> 00:11:15.750
我们将有一个更新ID为

00:11:13.230 --> 00:11:20.330
将要更新，我们要说VAR 

00:11:15.750 --> 00:11:24.060
 es等于新的事件源，因此HTTP 

00:11:20.330 --> 00:11:25.770
本地主机8080和端点

00:11:24.060 --> 00:11:30.480
要打来的，这是这里的问候

00:11:25.770 --> 00:11:32.190
名字s SE问候名字，我们有

00:11:30.480 --> 00:11:34.890
提示它为

00:11:32.190 --> 00:11:38.550
为名称本身，所以这样做

00:11:34.890 --> 00:11:44.150
我要问名字我要问用户

00:11:38.550 --> 00:11:49.700
一个可以打招呼的名字

00:11:44.150 --> 00:11:53.810
很好，很快就过去了

00:11:49.700 --> 00:11:58.940
随着事件的到来，我们将使用

00:11:53.810 --> 00:12:01.250
消息事件，然后更新

00:11:58.940 --> 00:12:04.870
我们的黎明元素和我们的达兰元素

00:12:01.250 --> 00:12:08.050
是更新，所以我要说吧更新

00:12:04.870 --> 00:12:14.500
等于ID的文档点获取元素

00:12:08.050 --> 00:12:17.770
更新将显示更新点内部HTML 

00:12:14.500 --> 00:12:23.000
等于不想做我想说

00:12:17.770 --> 00:12:24.920
这个加消息加上这个好吧

00:12:23.000 --> 00:12:26.120
一点点加价II不知道我是

00:12:24.920 --> 00:12:29.270
不爱也许我可以

00:12:26.120 --> 00:12:30.860
实际上有一个嵌套的元素

00:12:29.270 --> 00:12:32.750
一直是h1，然后在里面

00:12:30.860 --> 00:12:34.130
可能已经更新了，但是您可以

00:12:32.750 --> 00:12:36.230
想象任何不平凡的

00:12:34.130 --> 00:12:37.850
你知道你可能会得到更多的东西

00:12:36.230 --> 00:12:40.580
复杂的对象而不仅仅是问候

00:12:37.850 --> 00:12:43.460
对象，所以您知道您想要

00:12:40.580 --> 00:12:45.170
收集数据，然后建立Dom 

00:12:43.460 --> 00:12:46.700
动态围绕它的树等等

00:12:45.170 --> 00:12:48.440
你可以想象这将如何工作

00:12:46.700 --> 00:12:51.100
其实我要回去的

00:12:48.440 --> 00:12:53.029
如果消息数据将是一个

00:12:51.100 --> 00:12:53.810
发表阅读，所以我不是真的

00:12:53.029 --> 00:12:56.510
想要我吗

00:12:53.810 --> 00:12:58.550
我只是想让名字正确，你怎么知道我

00:12:56.510 --> 00:13:01.820
想要消息而不是我会得到

00:12:58.550 --> 00:13:05.510
他们的消息，所以我要说问候

00:13:01.820 --> 00:13:07.310
名称地图问候得到消息，所以我现在

00:13:05.510 --> 00:13:09.140
发回字符串的发布者，然后

00:13:07.310 --> 00:13:11.120
至少如果我不能正常工作

00:13:09.140 --> 00:13:13.040
把它放在h1之间就不会

00:13:11.120 --> 00:13:15.260
是某种你知道不会是h1 

00:13:13.040 --> 00:13:17.540
比问候语的JSON表示形式

00:13:15.260 --> 00:13:18.080
然后是h1就只是h1然后

00:13:17.540 --> 00:13:20.209
讯息

00:13:18.080 --> 00:13:22.370
好吧，哥们，你可以看到你必须

00:13:20.209 --> 00:13:24.410
让双方都同意这一点，让我们

00:13:22.370 --> 00:13:27.380
尝试一下，这是一个 spring boot 

00:13:24.410 --> 00:13:29.060
直到X应用程序，所以我将使用

00:13:27.380 --> 00:13:30.620
李作为初始化我的一件事

00:13:29.060 --> 00:13:32.510
没有做，但我应该做的

00:13:30.620 --> 00:13:36.730
回到初始化是使用

00:13:32.510 --> 00:13:42.040
开发工具，所以现在完成了

00:13:36.730 --> 00:13:42.040
可以编译您启动应用程序

00:13:42.370 --> 00:13:44.870
好的

00:13:43.580 --> 00:13:48.830
启动并运行，让我们尝试一下

00:13:44.870 --> 00:13:51.220
再次摆脱第一

00:13:48.830 --> 00:13:51.220
编译

00:13:52.260 --> 00:13:57.790
好吧，现在我们在做饭

00:13:54.459 --> 00:13:58.930
加快一点，所以我有一个

00:13:57.790 --> 00:14:02.529
应用程序启动并运行

00:13:58.930 --> 00:14:04.839
请访问SSC上的页面，对不起，我们致电

00:14:02.529 --> 00:14:09.730
它是SSC最小的数量，所以SSC点

00:14:04.839 --> 00:14:16.690
 HTML，我们要迎接春天的粉丝

00:14:09.730 --> 00:14:26.370
 Boop Spring粉丝我做了JavaScript吗

00:14:16.690 --> 00:14:26.370
错误SSC 500什么

00:14:34.190 --> 00:14:41.700
多值哦，这是一个 rest controller 

00:14:38.160 --> 00:14:44.640
朋友，这是一个 rest controller ，嗯，我

00:14:41.700 --> 00:14:45.810
应该知道你知道我能想到

00:14:44.640 --> 00:14:47.370
很多人知道我

00:14:45.810 --> 00:14:49.260
应该是其中之一

00:14:47.370 --> 00:14:52.050
没关系，我将使用开发工具

00:14:49.260 --> 00:14:57.390
重新启动，就可以了，我们要

00:14:52.050 --> 00:15:00.480
说春天的粉丝们没事，我们在那里

00:14:57.390 --> 00:15:02.010
所以每一秒钟都会得到一个新的

00:15:00.480 --> 00:15:04.020
更新，我们正在更新此元素

00:15:02.010 --> 00:15:06.270
在客户端，还不错

00:15:04.020 --> 00:15:07.410
最后完成实际的标记

00:15:06.270 --> 00:15:09.120
在客户端上，我们实际上正在修改

00:15:07.410 --> 00:15:10.980
这样客户就可以了

00:15:09.120 --> 00:15:14.790
好吧，我想现在是另一种方式

00:15:10.980 --> 00:15:17.150
是使用WebSockets，所以我们做

00:15:14.790 --> 00:15:20.580
 WebSockets将做WebSocket 

00:15:17.150 --> 00:15:22.200
配置和WebSocket代码中

00:15:20.580 --> 00:15:24.420
这只是给我一个配置类

00:15:22.200 --> 00:15:27.450
我将创造一束简单的光束

00:15:24.420 --> 00:15:30.510
 URL处理程序映射，这将

00:15:27.450 --> 00:15:32.100
成为具有信息的东西

00:15:30.510 --> 00:15:33.660
春天需要了解Spring 网

00:15:32.100 --> 00:15:36.690
 flex需要了解以便

00:15:33.660 --> 00:15:38.280
正确安装到您的端点

00:15:36.690 --> 00:15:43.430
消费到外面好吗

00:15:38.280 --> 00:15:48.810
有这个映射的I / O，我们会说ws 

00:15:43.430 --> 00:15:51.870
 bean 好吧，我们需要提供一个

00:15:48.810 --> 00:15:53.160
 WebSocket处理程序WebSocket处理程序

00:15:51.870 --> 00:15:55.200
我们将定义一个分钟， 

00:15:53.160 --> 00:16:02.690
业务逻辑存在，但我们需要

00:15:55.200 --> 00:16:02.690
好的，所以wsh的地图还可以

00:16:05.709 --> 00:16:09.579
你为什么不高兴

00:16:15.270 --> 00:16:18.620
设置你的

00:16:26.450 --> 00:16:29.450
好

00:16:37.280 --> 00:16:46.760
哦，我忘了将此更新为11 

00:16:39.710 --> 00:16:49.640
为什么还行，所以行家在那里可以导入

00:16:46.760 --> 00:16:50.660
我们走了，我正在清楚地失去理智

00:16:49.640 --> 00:16:54.530
但至少我能弄清楚

00:16:50.660 --> 00:16:59.810
现在我们需要一个WebSocket处理程序

00:16:54.530 --> 00:17:01.670
适配器好吧，我们需要有趣的

00:16:59.810 --> 00:17:03.680
 WebSocket处理程序是我们的业务

00:17:01.670 --> 00:17:05.060
反对，这就是我们要做的事情

00:17:03.680 --> 00:17:07.819
要创造出真正产生的

00:17:05.060 --> 00:17:09.439
流的响应基本上在

00:17:07.819 --> 00:17:10.699
为了做到这一点，我们将要创建

00:17:09.439 --> 00:17:13.520
我们的问候，我们要注入我们的

00:17:10.699 --> 00:17:15.890
问候制作人并将其用于

00:17:13.520 --> 00:17:17.959
定义此WebSocket处理程序，这样

00:17:15.890 --> 00:17:19.819
网站的工作可以进入很简单

00:17:17.959 --> 00:17:21.949
当客户端JavaScript客户端

00:17:19.819 --> 00:17:23.780
连接到服务器，有一个

00:17:21.949 --> 00:17:26.060
从进行升级的交易所

00:17:23.780 --> 00:17:27.650
 HTTP到WebSockets，最后

00:17:26.060 --> 00:17:29.660
会话被创建，然后

00:17:27.650 --> 00:17:31.250
当我们参与其中时，服务器会给我们

00:17:29.660 --> 00:17:33.380
会话参考，我们可以

00:17:31.250 --> 00:17:35.450
用这个说好，客户做了什么

00:17:33.380 --> 00:17:37.550
发送给我们，让我们接收数据

00:17:35.450 --> 00:17:40.340
我们得到的是WebSocket的发布者

00:17:37.550 --> 00:17:42.320
消息，对于每个WebSocket消息，我

00:17:40.340 --> 00:17:44.990
想要打开邮件包装并获取

00:17:42.320 --> 00:17:47.510
文字，实际上是

00:17:44.990 --> 00:17:49.160
名字打招呼当然有

00:17:47.510 --> 00:17:51.260
只会是一个价值，但仍然是

00:17:49.160 --> 00:17:52.670
发布商现在要做什么

00:17:51.260 --> 00:17:55.250
想以这个名字来问候

00:17:52.670 --> 00:17:56.780
把它变成

00:17:55.250 --> 00:17:58.700
问候权发回

00:17:56.780 --> 00:18:01.310
客户更新了阅读数据流，因此

00:17:58.700 --> 00:18:05.300
我要说名字打招呼

00:18:01.310 --> 00:18:08.750
平面图以要问候的名称

00:18:05.300 --> 00:18:10.820
问题并使用生产者打招呼

00:18:08.750 --> 00:18:15.160
要打招呼的那个名字

00:18:10.820 --> 00:18:18.320
我是问候的发布者，好的回复

00:18:15.160 --> 00:18:19.490
好了，现在读数很好

00:18:18.320 --> 00:18:20.750
但是我实际上我真的想要

00:18:19.490 --> 00:18:25.790
该文本，所以我要说

00:18:20.750 --> 00:18:28.340
映射g gr dot得到的响应读数

00:18:25.790 --> 00:18:34.300
好消息，那会给我一个

00:18:28.340 --> 00:18:37.010
正确的字符串响应字符串， 

00:18:34.300 --> 00:18:39.890
最终从那里我想做的是

00:18:37.010 --> 00:18:41.930
我想将其作为一系列文本发送

00:18:39.890 --> 00:18:44.300
表示不像短信的消息

00:18:41.930 --> 00:18:48.410
但是就像WebSocket短信一样

00:18:44.300 --> 00:18:54.290
所以我们说字符串响应映射字符串

00:18:48.410 --> 00:18:56.960
关于短信的问候会议

00:18:54.290 --> 00:18:59.330
通过，那给了我们一个

00:18:56.960 --> 00:19:00.800
我们发布的WebSocket消息的发布者

00:18:59.330 --> 00:19:05.240
可以发回给客户

00:19:00.800 --> 00:19:06.770
这样好吧，现在都在一起怎么

00:19:05.240 --> 00:19:09.800
您知道我们通常会做什么吗

00:19:06.770 --> 00:19:10.850
首先要清理干净

00:19:09.800 --> 00:19:16.610
的中间变量，因为

00:19:10.850 --> 00:19:20.840
他们没有在这里添加任何东西，好东西，所以

00:19:16.610 --> 00:19:21.950
有我们的阅读出版商

00:19:20.840 --> 00:19:23.350
我们正在做的是说我们播种了

00:19:21.950 --> 00:19:26.510
数据映射将其交给发布者

00:19:23.350 --> 00:19:28.730
等等，如果你真的很优雅

00:19:26.510 --> 00:19:30.350
考虑一下，我有点喜欢

00:19:28.730 --> 00:19:31.580
其实你想要什么以及

00:19:30.350 --> 00:19:33.950
当然这也可以是lambda，所以

00:19:31.580 --> 00:19:35.090
这是我们基于整个WebSocket的

00:19:33.950 --> 00:19:36.620
需要输入和

00:19:35.090 --> 00:19:38.030
响应输出没有路径

00:19:36.620 --> 00:19:40.010
这里的变量显然没有路径

00:19:38.030 --> 00:19:41.540
 WebSocket端点的变量，但

00:19:40.010 --> 00:19:43.070
没关系，因为我们可以知道

00:19:41.540 --> 00:19:45.350
服务器发送的事件是单向的

00:19:43.070 --> 00:19:47.660
通信协议WebSockets是

00:19:45.350 --> 00:19:49.640
双向的，所以我可以

00:19:47.660 --> 00:19:51.290
从WebSocket客户端发送数据获取

00:19:49.640 --> 00:19:53.960
响应数据等等

00:19:51.290 --> 00:19:56.900
好吧，有了它，我们有了

00:19:53.960 --> 00:20:00.460
 WebSocket处理程序现在我们需要一个页面，因此

00:19:56.900 --> 00:20:05.720
让我们在此处创建一个新文件

00:20:00.460 --> 00:20:08.060
 HTML主体脚本，然后您就会知道

00:20:05.720 --> 00:20:10.430
与上证所基本相同

00:20:08.060 --> 00:20:12.440
实际上，如果您考虑一下，那么我

00:20:10.430 --> 00:20:14.180
要这样做，但有些事情是

00:20:12.440 --> 00:20:15.740
首先我们要做的是不同的

00:20:14.180 --> 00:20:18.950
更新元素，我们没事的

00:20:15.740 --> 00:20:21.560
在我们想要名字之前

00:20:18.950 --> 00:20:25.280
但我们没有使用我们没有使用

00:20:21.560 --> 00:20:28.790
我们使用网络套接字的事件源

00:20:25.280 --> 00:20:31.730
 Web套接字和我们的端点

00:20:28.790 --> 00:20:34.670
要打电话到这里叫ws 

00:20:31.730 --> 00:20:39.680
阅读，所以我们回到网络插座

00:20:34.670 --> 00:20:41.360
代码，不是HTTP，这里是WS 

00:20:39.680 --> 00:20:44.510
这是一个新的协议，对

00:20:41.360 --> 00:20:46.730
不同的协议，我们不需要

00:20:44.510 --> 00:20:49.810
这个名字，所以现在我们可以了，所以现在我们

00:20:46.730 --> 00:20:52.130
需要获取数据，我们需要获取

00:20:49.810 --> 00:20:53.900
为了迎接我而打招呼的名字

00:20:52.130 --> 00:20:56.720
我说什么时候要问一个问题

00:20:53.900 --> 00:21:01.420
这个插座打开了，让我们发送一个

00:20:56.720 --> 00:21:01.420
要求说WS发送

00:21:01.549 --> 00:21:07.440
这个名字对我们已经拥有的名字

00:21:04.229 --> 00:21:09.839
提示然后输入数据

00:21:07.440 --> 00:21:11.669
回到“消息上”列

00:21:09.839 --> 00:21:13.529
那和以前的时候完全一样

00:21:11.669 --> 00:21:15.629
回来，然后我们将更新

00:21:13.529 --> 00:21:17.609
 HTML与消息数据相同

00:21:15.629 --> 00:21:19.349
事情适用于我们的WebSocket 

00:21:17.609 --> 00:21:21.690
我们只是发送字符串的代码

00:21:19.349 --> 00:21:27.409
我们不发送JSON，但是我们

00:21:21.690 --> 00:21:27.409
不需要好，所以现在我们可以做

00:21:28.819 --> 00:21:44.419
这样就好了，这里的HTML已经死了

00:21:35.759 --> 00:21:48.509
你是春天，你知道春天WebSocket 

00:21:44.419 --> 00:21:50.549
粉丝们好

00:21:48.509 --> 00:21:53.279
所以我们是完全不同的技术

00:21:50.549 --> 00:21:56.519
现在使用交互式双向网络

00:21:53.279 --> 00:21:57.869
套接字API是，但是我们得到了相同的结果

00:21:56.519 --> 00:21:59.519
效果，您可以看到它正在更新

00:21:57.869 --> 00:22:01.469
今晚大约每隔一秒钟

00:21:59.519 --> 00:22:03.029
将数据向下发送回

00:22:01.469 --> 00:22:04.229
客户，这是活的好吧

00:22:03.029 --> 00:22:05.099
就是这个原因

00:22:04.229 --> 00:22:07.529
你会关心这些

00:22:05.099 --> 00:22:10.409
事情很活泼，如果我聊天

00:22:07.529 --> 00:22:12.299
消息或股票行情自动收录器或时钟

00:22:10.409 --> 00:22:13.559
这种情况下的滴答钟

00:22:12.299 --> 00:22:15.149
友好的信息或类似的东西

00:22:13.559 --> 00:22:17.819
随便你能想像什么

00:22:15.149 --> 00:22:19.769
一直在不断更新II 

00:22:17.819 --> 00:22:21.629
将结果错开一秒钟，但

00:22:19.769 --> 00:22:24.299
没有理由不能成为新事物

00:22:21.629 --> 00:22:25.769
我假设每纳秒就值

00:22:24.299 --> 00:22:27.719
您的浏览器不介意创建Dom 

00:22:25.769 --> 00:22:28.919
节点并迅速摧毁它们

00:22:27.719 --> 00:22:30.959
顺便说一句，如果他们确实关心

00:22:28.919 --> 00:22:32.940
那是你的好理由

00:22:30.959 --> 00:22:34.739
关心诸如反应之类的事情

00:22:32.940 --> 00:22:36.839
实际上创建了一个虚拟DOM，并且可以

00:22:34.739 --> 00:22:38.489
尽量减少垃圾收集

00:22:36.839 --> 00:22:42.359
在Dom本身中创建的对象

00:22:38.489 --> 00:22:45.469
因为那不便宜，但是嗯

00:22:42.359 --> 00:22:47.579
所以我们现在有了这个

00:22:45.469 --> 00:22:49.649
最终涉足

00:22:47.579 --> 00:22:50.969
创建HTML标记，这很漂亮

00:22:49.649 --> 00:22:53.159
容易摆脱一些惊人的

00:22:50.969 --> 00:22:56.069
如果您正在使用，知道更新

00:22:53.159 --> 00:22:58.079
内部HTML我记得当内部HTML 

00:22:56.069 --> 00:23:01.079
不支持HTML 

00:22:58.079 --> 00:23:02.190
浏览器等以便更新

00:23:01.079 --> 00:23:03.839
您实际上必须创建的Dom 

00:23:02.190 --> 00:23:05.759
您会说文档创建的Dom元素

00:23:03.839 --> 00:23:07.049
元素，然后您将获得一个节点和

00:23:05.759 --> 00:23:09.029
然后你为它设计属性

00:23:07.049 --> 00:23:10.259
您可以将其附加到父节点上

00:23:09.029 --> 00:23:12.329
知道你最终做了很多建设者

00:23:10.259 --> 00:23:13.650
 JavaScript中的代码只是为了修改

00:23:12.329 --> 00:23:16.050
 Dom因为你不信任你

00:23:13.650 --> 00:23:17.760
在那些日子里，HTML能够持续工作

00:23:16.050 --> 00:23:20.280
很久以前就过去了

00:23:17.760 --> 00:23:22.170
我们大多数人，但是那说明你会

00:23:20.280 --> 00:23:23.550
你知道你可能会发现自己

00:23:22.170 --> 00:23:27.900
在某些情况下，您正在做

00:23:23.550 --> 00:23:30.450
到Dom修改它并

00:23:27.900 --> 00:23:32.550
进入用户界面

00:23:30.450 --> 00:23:34.800
 JavaScript代码，我不想

00:23:32.550 --> 00:23:36.360
我只是不，我宁愿去

00:23:34.800 --> 00:23:38.160
生产如此有趣

00:23:36.360 --> 00:23:40.730
这里的机会是

00:23:38.160 --> 00:23:43.470
在时间上独特的支持

00:23:40.730 --> 00:23:46.140
服务器发送事件的反应式

00:23:43.470 --> 00:23:51.150
更新视图，所以我们要做的是

00:23:46.140 --> 00:23:57.150
我们将创建一个时间叶子视图

00:23:51.150 --> 00:24:00.300
管制员好吧，这将是及时的

00:23:57.150 --> 00:24:02.760
查看读数控制器，这是什么

00:24:00.300 --> 00:24:04.710
要去做，这将是一个常规

00:24:02.760 --> 00:24:09.390
控制器不是 rest controller 

00:24:04.710 --> 00:24:10.350
会在问候页面中加载您知道的内容

00:24:09.390 --> 00:24:12.840
可以是任何东西

00:24:10.350 --> 00:24:16.170
问候点JSP问候点您知道

00:24:12.840 --> 00:24:17.760
 PHP不这样做，也不查看任何内容，或者

00:24:16.170 --> 00:24:22.170
您可能还记得旧的支柱

00:24:17.760 --> 00:24:24.750
对吧，我要渲染首字母

00:24:22.170 --> 00:24:27.120
在这里查看，所有要做的就是

00:24:24.750 --> 00:24:28.920
它会呈现问候语HTML 

00:24:27.120 --> 00:24:32.100
模板，这是尼克的时间

00:24:28.920 --> 00:24:34.500
现在，模板时间叶是服务器端

00:24:32.100 --> 00:24:36.300
框架是服务器端渲染

00:24:34.500 --> 00:24:37.980
引擎而不是模板引擎

00:24:36.300 --> 00:24:39.750
您可以用来呈现页面，所以我们

00:24:37.980 --> 00:24:42.330
春天会在这里创建一个新文件夹

00:24:39.750 --> 00:24:44.220
开机会自动渲染或制作

00:24:42.330 --> 00:24:45.740
可用它将安装到所有视图

00:24:44.220 --> 00:24:49.320
在源主要资源中

00:24:45.740 --> 00:24:51.060
模板，它将自动配置为

00:24:49.320 --> 00:24:52.350
如果发现一个

00:24:51.060 --> 00:24:54.330
像及时模板引擎

00:24:52.350 --> 00:24:57.090
速度或自由标记或其他任何东西

00:24:54.330 --> 00:24:58.500
路径垫，所以有静态的

00:24:57.090 --> 00:25:01.100
模板，我们将创建一个新的

00:24:58.500 --> 00:25:04.620
在这里查看有关HTML的问候

00:25:01.100 --> 00:25:06.720
现在这是一个页面，其内容将

00:25:04.620 --> 00:25:08.010
由服务器端权限更新

00:25:06.720 --> 00:25:10.620
它实际上将由服务器解析

00:25:08.010 --> 00:25:12.450
然后像JSP一样预处理

00:25:10.620 --> 00:25:17.790
更优雅，更快捷

00:25:12.450 --> 00:25:21.270
而且没有内联Java代码，所以我们

00:25:17.790 --> 00:25:24.999
我们要做的是说ID等于

00:25:21.270 --> 00:25:32.169
问候阻止好吗

00:25:24.999 --> 00:25:34.209
然后在里面我要去参观

00:25:32.169 --> 00:25:37.059
酒吧中的每条记录以及

00:25:34.209 --> 00:25:39.159
数据还可以，所以我将使用

00:25:37.059 --> 00:25:42.879
四个时间片中的属性

00:25:39.159 --> 00:25:45.059
阅读问候属性或

00:25:42.879 --> 00:25:51.399
仅仅赋予模型属性

00:25:45.059 --> 00:25:55.629
在那里呈现该字符串的问候

00:25:51.399 --> 00:25:57.069
你是，那就是我的标记

00:25:55.629 --> 00:25:59.079
确实需要跳一点点哦

00:25:57.069 --> 00:25:59.799
我应该把它放在体内

00:25:59.079 --> 00:26:01.359
重要

00:25:59.799 --> 00:26:04.809
哦，是任何人都可以，很好

00:26:01.359 --> 00:26:06.669
这样我就不需要加价了

00:26:04.809 --> 00:26:09.999
我最重要的是

00:26:06.669 --> 00:26:11.409
我要像我要保持的一样

00:26:09.999 --> 00:26:13.569
我要做的是发送短信， 

00:26:11.409 --> 00:26:15.279
但我仍然会保持样式正确

00:26:13.569 --> 00:26:19.409
否则我仍然可以修改

00:26:15.279 --> 00:26:24.249
代码中的任何内容，所以我的颜色正确

00:26:19.409 --> 00:26:31.049
颜色你知道红色或任何皇家

00:26:24.249 --> 00:26:31.049
蓝绿色好吧，所以有一个绿色

00:26:32.069 --> 00:26:35.499
绿色还可以

00:26:33.759 --> 00:26:38.379
所以现在我有了标记

00:26:35.499 --> 00:26:40.239
模板本身中没有

00:26:38.379 --> 00:26:42.939
我要发送的服务器端只是

00:26:40.239 --> 00:26:44.259
常规文本正文，您可以想象

00:26:42.939 --> 00:26:46.179
这将如何呈现第一次

00:26:44.259 --> 00:26:49.299
如果您见过时间，这将呈现

00:26:46.179 --> 00:26:50.949
时间片或任何其他类型的视图

00:26:49.299 --> 00:26:52.989
我创建了模型的模板引擎

00:26:50.949 --> 00:26:55.599
属性在这里，那将是

00:26:52.989 --> 00:26:57.159
加载到生产者端的内存中

00:26:55.599 --> 00:26:58.419
在服务器上，然后服务器是

00:26:57.159 --> 00:26:59.829
将采用此模板

00:26:58.419 --> 00:27:01.569
合并模型属性

00:26:59.829 --> 00:27:03.819
带有模型元素的模板

00:27:01.569 --> 00:27:05.769
模型只是一张美化的地图

00:27:03.819 --> 00:27:07.539
基本上在服务器上的字典

00:27:05.769 --> 00:27:09.039
一边，它会说评估

00:27:07.539 --> 00:27:10.899
那东西的内容，你知道什么

00:27:09.039 --> 00:27:12.309
是上下文中的模板含义

00:27:10.899 --> 00:27:14.469
根据模型中的数据

00:27:12.309 --> 00:27:15.819
它会把它渲染成一个

00:27:14.469 --> 00:27:18.189
字符串缓冲区，它将发送给

00:27:15.819 --> 00:27:18.999
直接给客户当然，我们

00:27:18.189 --> 00:27:22.119
在这里不能做到这一点

00:27:18.999 --> 00:27:23.529
对了，我们有一个视图，其数据将

00:27:22.119 --> 00:27:25.179
被这个东西吃饱了

00:27:23.529 --> 00:27:27.039
永远产生新的价值

00:27:25.179 --> 00:27:29.169
所以我们不能等到结局

00:27:27.039 --> 00:27:31.509
用尽问候模型属性

00:27:29.169 --> 00:27:33.429
只是为了呈现此页面，所以我们想要

00:27:31.509 --> 00:27:35.769
是时间片的一个不错的功能

00:27:33.429 --> 00:27:37.569
允许我们进行服务和事件视图

00:27:35.769 --> 00:27:37.910
我认为这很酷，所以我们

00:27:37.569 --> 00:27:40.220
需要

00:27:37.910 --> 00:27:46.490
一点点代码，我们保存了窗口点

00:27:40.220 --> 00:27:49.640
添加eventlistener加载函数和VAR 

00:27:46.490 --> 00:27:51.560
 es等于新的事件源以及什么

00:27:49.640 --> 00:27:55.610
我们要去连接

00:27:51.560 --> 00:27:58.220
另一个事件源在这里及时

00:27:55.610 --> 00:28:03.320
端点少，所以找到这个端点

00:27:58.220 --> 00:28:08.480
要说价值等于阅读观点

00:28:03.320 --> 00:28:11.990
没关系，我们接下来是

00:28:08.480 --> 00:28:14.270
期望查询参数可以，然后

00:28:11.990 --> 00:28:17.450
产生的服务将是一个

00:28:14.270 --> 00:28:20.530
像这样服务于事件流，但是

00:28:17.450 --> 00:28:22.940
我们将渲染页面渲染更新

00:28:20.530 --> 00:28:24.950
查看，以便客户实际查看

00:28:22.940 --> 00:28:27.050
因此，在通话时，我们将呈现一个

00:28:24.950 --> 00:28:28.550
 Sweeney是这里的一种特殊语法

00:28:27.050 --> 00:28:32.990
该模板称为殴打，但在

00:28:28.550 --> 00:28:34.430
特别渲染该块而不是

00:28:32.990 --> 00:28:36.950
整个东西就是这个块

00:28:34.430 --> 00:28:38.960
重新评估该区块以进行

00:28:36.950 --> 00:28:40.310
你必须有时间写

00:28:38.960 --> 00:28:42.200
您正在使用及时清除，所以我要

00:28:40.310 --> 00:28:44.830
创建一个模型属性，它将

00:28:42.200 --> 00:28:47.320
为此在模型属性中

00:28:44.830 --> 00:28:50.750
这里的问候和

00:28:47.320 --> 00:28:52.700
问候本身就是我的数据

00:28:50.750 --> 00:29:00.280
出版商，所以阅读等于并且会

00:28:52.700 --> 00:29:03.920
注入问候制作人的好东西

00:29:00.280 --> 00:29:06.700
这一步制片人打招呼和

00:29:03.920 --> 00:29:12.100
当然我们需要视图我们需要名称

00:29:06.700 --> 00:29:16.700
所以我在这里表达一个要求

00:29:12.100 --> 00:29:18.400
奇怪的名字，它将是你

00:29:16.700 --> 00:29:21.860
知道美元符号对不起问号

00:29:18.400 --> 00:29:24.020
名称等于然后是某些东西，我们将

00:29:21.860 --> 00:29:29.800
注入那里，所以我要通过

00:29:24.020 --> 00:29:29.800
在这将给我们带来一连串的

00:29:29.830 --> 00:29:36.200
元素正确，实际上在这种情况下

00:29:33.370 --> 00:29:38.450
因为我拥有，因为我就是

00:29:36.200 --> 00:29:40.190
使用标准的服务器端生成

00:29:38.450 --> 00:29:41.210
我实际上可以呈现消息的东西

00:29:40.190 --> 00:29:43.690
在这里我真的可以说问候

00:29:41.210 --> 00:29:47.180
点我们叫它什么

00:29:43.690 --> 00:29:48.320
问候制作人问候消息，所以我

00:29:47.180 --> 00:29:51.140
认为我们可以做到，我们可以做到

00:29:48.320 --> 00:29:52.670
说问候点消息

00:29:51.140 --> 00:29:54.080
好的，那您会参考

00:29:52.670 --> 00:29:56.690
服务器端的元素最少

00:29:54.080 --> 00:30:02.090
应该很好，所以我们有这个

00:29:56.690 --> 00:30:06.110
终点好吧，这是一个流，以

00:30:02.090 --> 00:30:11.330
在我们那里创建数据

00:30:06.110 --> 00:30:12.830
其实还可以，所以

00:30:11.330 --> 00:30:16.179
我们的客户要做的是

00:30:12.830 --> 00:30:23.059
要从事件源调用

00:30:16.179 --> 00:30:28.490
所以像这样的localhost 8080 

00:30:23.059 --> 00:30:35.500
 es添加事件侦听器负载，我们

00:30:28.490 --> 00:30:41.000
抱歉，留言功能e我要说的是

00:30:35.500 --> 00:30:42.559
消息点数据的阶段是

00:30:41.000 --> 00:30:44.030
标记您知道的服务

00:30:42.559 --> 00:30:47.230
更新了标记，我们只是要说

00:30:44.030 --> 00:30:50.330
让我们更新该更新块，好吧

00:30:47.230 --> 00:30:55.669
更新块等于文档点获取

00:30:50.330 --> 00:31:00.919
通过ID读取来阻止的元素

00:30:55.669 --> 00:31:03.040
说更新块内部HTML等于

00:31:00.919 --> 00:31:06.590
数据还可以

00:31:03.040 --> 00:31:07.010
所以我基本上是在告诉服务器

00:31:06.590 --> 00:31:10.490
侧

00:31:07.010 --> 00:31:13.910
嘿，处理这段文字是

00:31:10.490 --> 00:31:15.440
您知道服务器端的此HTML 

00:31:13.910 --> 00:31:17.600
以此来评估它

00:31:15.440 --> 00:31:19.760
模板，然后将其发送回

00:31:17.600 --> 00:31:22.700
客户当然也知道模板

00:31:19.760 --> 00:31:25.490
在服务器端将有这个

00:31:22.700 --> 00:31:26.720
反应性数据流，当然我

00:31:25.490 --> 00:31:28.190
想要发回给我的客户

00:31:26.720 --> 00:31:29.780
我实际上不能使用常规发行商

00:31:28.190 --> 00:31:32.750
我几乎忘了

00:31:29.780 --> 00:31:34.760
变化，我必须有一个变量

00:31:32.750 --> 00:31:38.240
是新的反应物，这是

00:31:34.760 --> 00:31:39.260
魔术就这样发生并缝起来

00:31:38.240 --> 00:31:41.990
说这将要做的是

00:31:39.260 --> 00:31:43.970
要读它，我们同意这个事实

00:31:41.990 --> 00:31:45.490
一个元素具有

00:31:43.970 --> 00:31:49.549
坐在这是缓冲区发出

00:31:45.490 --> 00:31:51.890
好吧，我将说变量，然后添加

00:31:49.549 --> 00:31:53.809
那就是那就是那

00:31:51.890 --> 00:31:55.700
实际上允许我们工作，所以这是一个

00:31:53.809 --> 00:31:57.830
服务器端视图，我返回一个字符串

00:31:55.700 --> 00:31:59.960
解决视图，但这是一个

00:31:57.830 --> 00:32:02.860
服务一个事件流，就在您看到我时

00:31:59.960 --> 00:32:04.630
之前使用更像HTTP的方法

00:32:02.860 --> 00:32:07.960
服务API，但这是一种观点

00:32:04.630 --> 00:32:10.120
不同和嗯，应该工作

00:32:07.960 --> 00:32:11.470
现在让我们看看我已经拥有了一切

00:32:10.120 --> 00:32:14.470
我有模板问候的地方

00:32:11.470 --> 00:32:17.049
该HTML将在何时呈现

00:32:14.470 --> 00:32:20.770
你去及时一些配置

00:32:17.049 --> 00:32:23.830
要去问候吗，否则我们

00:32:20.770 --> 00:32:27.840
会叫这个问候更新好吗

00:32:23.830 --> 00:32:35.910
我们要去我们的页面这里更新

00:32:27.840 --> 00:32:39.580
好吧，让我们重新开始吧

00:32:35.910 --> 00:32:42.520
好东西，所以我们怎么称呼我们

00:32:39.580 --> 00:32:47.559
称之为WS，我们不想要那个

00:32:42.520 --> 00:32:52.530
我想一个人殴打我

00:32:47.559 --> 00:32:52.530
正确的时间叶问候做哦

00:32:54.990 --> 00:33:04.059
问候更新会显示400100，这是什么

00:32:58.720 --> 00:33:12.490
错误哦，我需要一个参数名称等于

00:33:04.059 --> 00:33:18.840
嗯，春天的粉丝不是400坏吗

00:33:12.490 --> 00:33:18.840
请求问候吗

00:33:22.840 --> 00:33:27.870
渲染称为问候的视图

00:33:24.909 --> 00:33:27.870
就在这里

00:33:32.960 --> 00:33:41.450
让我们尝试重新启动它

00:33:36.170 --> 00:33:46.850
到底是什么问题

00:33:41.450 --> 00:33:49.790
这里没有朋友的名字我

00:33:46.850 --> 00:33:57.280
认为是我认为

00:33:49.790 --> 00:34:03.740
哦，好吧，不，那不好吧，所以

00:33:57.280 --> 00:34:07.540
我们再试一次，那是一个很好的选择

00:34:03.740 --> 00:34:09.920
点，我们确实需要更新

00:34:07.540 --> 00:34:12.470
端点，不是吗，是的，我们需要

00:34:09.920 --> 00:34:14.900
在这里好，那我们从哪里得到的

00:34:12.470 --> 00:34:18.920
再试一次，所以在我们的JavaScript中

00:34:14.900 --> 00:34:21.140
我们需要的问候模板中的代码

00:34:18.920 --> 00:34:23.960
说名字等于然后给它一个

00:34:21.140 --> 00:34:26.660
名称，因此VAR名称等于Windows点

00:34:23.960 --> 00:34:29.530
提示窗口提示我们应该给谁

00:34:26.660 --> 00:34:32.330
和以前一样打招呼，然后

00:34:29.530 --> 00:34:34.070
显然你会做得更好

00:34:32.330 --> 00:34:40.910
强大的代码，或者你们都编码这些

00:34:34.070 --> 00:34:44.290
变量，但是标签标签Yolo可以，也可以

00:34:40.910 --> 00:34:44.290
九点命令

00:34:52.800 --> 00:35:01.410
我不知道它是否开始让我们尝试

00:34:54.630 --> 00:35:08.960
再次重启就可以了

00:35:01.410 --> 00:35:14.330
所以春天他们继续，你可以看到

00:35:08.960 --> 00:35:14.330
网络上发生了什么

00:35:14.420 --> 00:35:24.210
这是请求和响应

00:35:17.540 --> 00:35:27.870
查询字符串，我们正在获取文本

00:35:24.210 --> 00:35:29.100
事件流和

00:35:27.870 --> 00:35:31.950
回来实际上是加价

00:35:29.100 --> 00:35:33.180
本身呈现在服务器端，因此

00:35:31.950 --> 00:35:35.040
你可以人为地做

00:35:33.180 --> 00:35:37.770
服务器端的业务逻辑

00:35:35.040 --> 00:35:39.630
你知道你可以渲染出来吗

00:35:37.770 --> 00:35:41.250
对象，你知道你可以看到它说

00:35:39.630 --> 00:35:43.140
你好春季需求ID参考

00:35:41.250 --> 00:35:44.580
名称，但客户端不知道

00:35:43.140 --> 00:35:46.980
关于JSON对象的结构

00:35:44.580 --> 00:35:48.690
只有在服务器端

00:35:46.980 --> 00:35:50.280
我们取消引用Ted属性，并且

00:35:48.690 --> 00:35:51.990
然后将其加载到模板中，这样

00:35:50.280 --> 00:35:54.690
你不是，你没有暴露任何

00:35:51.990 --> 00:35:56.970
您不是JSON的JavaScript 

00:35:54.690 --> 00:35:58.860
您的对象只是然后使用它们

00:35:56.970 --> 00:36:01.560
为这里建立标记

00:35:58.860 --> 00:36:03.600
在大教堂的元素，所以我认为

00:36:01.560 --> 00:36:04.860
这是一个很酷的功能，很好的工作时间

00:36:03.600 --> 00:36:06.960
叶我喜欢那实际上是非常

00:36:04.860 --> 00:36:08.250
很好，你可以想象股票行情

00:36:06.960 --> 00:36:09.420
和聊天消息以及您所知道的

00:36:08.250 --> 00:36:10.980
很多事情可能会更容易

00:36:09.420 --> 00:36:13.050
你可以把它变成流

00:36:10.980 --> 00:36:14.460
像那样，我确定还有其他事情

00:36:13.050 --> 00:36:17.850
你可以做的很有趣

00:36:14.460 --> 00:36:20.820
这有可能得到这个

00:36:17.850 --> 00:36:22.980
有点效果

00:36:20.820 --> 00:36:25.080
那位博士Dave父亲正在研究and或

00:36:22.980 --> 00:36:27.240
曾经为免费标记工作过一点

00:36:25.080 --> 00:36:29.790
我想我不确定那个地方

00:36:27.240 --> 00:36:32.070
在任何项目中，但如果您ping 

00:36:29.790 --> 00:36:33.330
我，我就能找到它，也许你

00:36:32.070 --> 00:36:34.800
可以刷掉它或与人分享

00:36:33.330 --> 00:36:38.010
或者我可以将您指向右边

00:36:34.800 --> 00:36:39.780
我希望任何一种方式都可以

00:36:38.010 --> 00:36:41.460
您喜欢这个，一如既往的感谢

00:36:39.780 --> 00:36:43.820
值得观看，我们将拭目以待

00:36:41.460 --> 00:36:43.820
下次你

00:36:49.460 --> 00:36:51.520
您

