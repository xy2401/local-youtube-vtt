WEBVTT
Kind: captions
Language: zh-Hans

00:00:15.560 --> 00:00:19.050
 iSpring粉丝在本期的

00:00:18.030 --> 00:00:20.160
春天的技巧，我们要看看

00:00:19.050 --> 00:00:22.380
使用的不同选择

00:00:20.160 --> 00:00:24.029
带有弹簧启动的servlet容器

00:00:22.380 --> 00:00:26.070
应用或从勺子跳板

00:00:24.029 --> 00:00:27.810
应用程序当然包括

00:00:26.070 --> 00:00:29.960
斯普林伍德的嵌入式容器

00:00:27.810 --> 00:00:34.020
支持开箱即用

00:00:29.960 --> 00:00:35.520
红头下一个项目到Eclipse 

00:00:34.020 --> 00:00:37.379
码头项目和Apache Tomcat 

00:00:35.520 --> 00:00:39.989
项目，然后我们还要看

00:00:37.379 --> 00:00:41.699
基于Spring Boot的应用程序

00:00:39.989 --> 00:00:44.100
可以部署到servlet容器中

00:00:41.699 --> 00:00:46.980
现在我想区分所有

00:00:44.100 --> 00:00:49.200
来自其他网站的支持

00:00:46.980 --> 00:00:52.020
例如Spring 5的运行时

00:00:49.200 --> 00:00:54.719
这是由于今年夏天的反应

00:00:52.020 --> 00:00:55.980
基于neti的租金，这就是支持

00:00:54.719 --> 00:00:57.780
例如，您可能会在

00:00:55.980 --> 00:00:59.460
 Play框架

00:00:57.780 --> 00:01:01.680
基于servlet的

00:00:59.460 --> 00:01:04.410
规范，因此在此讨论中

00:01:01.680 --> 00:01:07.340
我们将专注于服务

00:01:04.410 --> 00:01:10.170
特别是我们要谈论的是

00:01:07.340 --> 00:01:11.220
操作嵌入式的选项

00:01:10.170 --> 00:01:13.710
容器，然后我们要谈谈

00:01:11.220 --> 00:01:15.720
关于与您整合的选项

00:01:13.710 --> 00:01:17.670
知道一个独立的容器或

00:01:15.720 --> 00:01:20.490
任何或实际上任何Java EE应用程序

00:01:17.670 --> 00:01:21.869
通过扩展正确的服务器，所以我们要

00:01:20.490 --> 00:01:24.240
建立您的应用程序，我们将其称为

00:01:21.869 --> 00:01:27.090
我们的演示应用程序或任何您

00:01:24.240 --> 00:01:28.799
称它为servlet demo以及何时

00:01:27.090 --> 00:01:30.840
我们引进Springs建立网站

00:01:28.799 --> 00:01:32.009
应用程序，我们将构建一个简单的

00:01:30.840 --> 00:01:35.119
休息点

00:01:32.009 --> 00:01:39.360
我们可以与之合作的

00:01:35.119 --> 00:01:41.880
你知道我在这里做的一件事

00:01:39.360 --> 00:01:43.020
是我保留了默认设置

00:01:41.880 --> 00:01:46.200
在这里，我保留了默认设置

00:01:43.020 --> 00:01:47.610
作为点罐应用

00:01:46.200 --> 00:01:49.979
现在我可以选择选择

00:01:47.610 --> 00:01:51.210
点战争，但会将这个点罐变成

00:01:49.979 --> 00:01:52.920
一场点战之后，我们将看到

00:01:51.210 --> 00:01:55.320
有一些好处，这样做

00:01:52.920 --> 00:01:57.869
好吧，现在我已经有了一个应用程序， 

00:01:55.320 --> 00:01:59.340
运行我们来修改我们的代码

00:01:57.869 --> 00:02:01.290
简单的休息控制器，所以我们会说

00:01:59.340 --> 00:02:06.920
上课问候

00:02:01.290 --> 00:02:12.000
休息控制器可以休息控制器

00:02:06.920 --> 00:02:16.760
在获得映射问候时，我会说

00:02:12.000 --> 00:02:21.060
字符串问候语映射

00:02:16.760 --> 00:02:23.599
当我们打开一个空集合时

00:02:21.060 --> 00:02:26.310
问候

00:02:23.599 --> 00:02:28.050
你好世界，这不是介绍

00:02:26.310 --> 00:02:29.519
这是一个几乎是空的收藏

00:02:28.050 --> 00:02:31.500
会有一个属性，可以是

00:02:29.519 --> 00:02:33.420
变成了JSON映射，所以如果我们

00:02:31.500 --> 00:02:35.940
运行此应用程序，只需运行

00:02:33.420 --> 00:02:38.580
在本地计算机上的应用程序，我们应该

00:02:35.940 --> 00:02:40.560
看到默认情况下在端口8080上旋转

00:02:38.580 --> 00:02:43.920
那是因为

00:02:40.560 --> 00:02:45.690
当然，Spring Boot嵌入了Apache 

00:02:43.920 --> 00:02:48.569
当您引入Tomcat时，默认情况下

00:02:45.690 --> 00:02:49.440
网络支持我给它做了一个映射

00:02:48.569 --> 00:02:51.480
问候

00:02:49.440 --> 00:02:54.120
当你春天时，弹簧启动开始

00:02:51.480 --> 00:02:56.610
起来，但要是全部嵌入到Apache中

00:02:54.120 --> 00:02:58.799
 Tomcat servlet容器，直到我们得到一个

00:02:56.610 --> 00:03:02.040
湿工作网络服务器对我们可用

00:02:58.799 --> 00:03:04.200
开箱即用，这是一个servlet 

00:03:02.040 --> 00:03:05.700
正确的容器，所以您可以做所有的事情

00:03:04.200 --> 00:03:08.099
在不同的事情上

00:03:05.700 --> 00:03:11.099
使用Tomcat的服务器容器权利

00:03:08.099 --> 00:03:12.870
这是一个servlet容器

00:03:11.099 --> 00:03:14.670
最终是什么弹簧靴子

00:03:12.870 --> 00:03:16.980
这样做是自动配置

00:03:14.670 --> 00:03:18.660
 Spring MVC调度程序servlet和

00:03:16.980 --> 00:03:20.760
框架servlet等为您服务

00:03:18.660 --> 00:03:22.019
对，所有事情都为您完成

00:03:20.760 --> 00:03:23.010
幕后以及我们的方式

00:03:22.019 --> 00:03:24.209
这样做是因为我们正在嵌入

00:03:23.010 --> 00:03:26.250
 Tomcat，然后我们使用

00:03:24.209 --> 00:03:28.049
 Servlet的编程能力

00:03:26.250 --> 00:03:29.639
通过那个规范来

00:03:28.049 --> 00:03:31.410
以编程方式配置所有

00:03:29.639 --> 00:03:32.760
您知道的相关对象

00:03:31.410 --> 00:03:34.739
基础设施

00:03:32.760 --> 00:03:36.959
需要成为一个有效的网络框架

00:03:34.739 --> 00:03:38.579
在servlet引擎之上，您可以

00:03:36.959 --> 00:03:39.870
参加所有的春天

00:03:38.579 --> 00:03:41.730
让您现在有机会参加

00:03:39.870 --> 00:03:44.069
您可以注册过滤器和

00:03:41.730 --> 00:03:45.569
和servlet以及您可以注册

00:03:44.069 --> 00:03:47.730
应注册的自定义内容

00:03:45.569 --> 00:03:49.019
与一个servlet容器一起，让我们

00:03:47.730 --> 00:03:51.690
假设我想建立一个自定义

00:03:49.019 --> 00:03:55.200
过滤器正确，我可以说组件类

00:03:51.690 --> 00:03:57.630
我的自定义过滤器实现了filter和

00:03:55.200 --> 00:03:59.910
这是一个Java servlet Jobbik servlet 

00:03:57.630 --> 00:04:03.269
过滤器正确，我是说你知道传统

00:03:59.910 --> 00:04:04.400
那种错误的东西进口

00:04:03.269 --> 00:04:07.889
一

00:04:04.400 --> 00:04:09.359
 Java代码过滤器还可以，我们要

00:04:07.889 --> 00:04:10.950
在中情局中覆盖三种方法

00:04:09.359 --> 00:04:13.260
方法，我们只有三种方法

00:04:10.950 --> 00:04:16.349
在这里，让我们继续并记录您的身份

00:04:13.260 --> 00:04:21.180
布丁的证明让我们创建一个

00:04:16.349 --> 00:04:23.970
记录，我们只记录每个方法

00:04:21.180 --> 00:04:27.570
那里看到其他参数了吗

00:04:23.970 --> 00:04:30.930
这个日志中有信息，他们只是

00:04:27.570 --> 00:04:34.500
配置好

00:04:30.930 --> 00:04:37.199
我们想在这里使用另一种日志方法

00:04:34.500 --> 00:04:44.039
说我们已经收到了请求

00:04:37.199 --> 00:04:48.270
新的过滤器servlet请求一个servlet 

00:04:44.039 --> 00:04:50.310
回应，我不会注册

00:04:48.270 --> 00:04:52.289
不会记录过滤链，但我会

00:04:50.310 --> 00:04:56.120
调用proce方法正确，这是

00:04:52.289 --> 00:04:58.860
 Servlet API的合同是

00:04:56.120 --> 00:05:00.210
完成后调用过滤器链

00:04:58.860 --> 00:05:01.560
预处理后的东西

00:05:00.210 --> 00:05:03.779
要求，所以每一个要求

00:05:01.560 --> 00:05:05.580
到应用程序将被路由

00:05:03.779 --> 00:05:07.529
通过所有的过滤器

00:05:05.580 --> 00:05:09.509
适用和适用的

00:05:07.529 --> 00:05:11.159
在这种情况下，过滤器将获得

00:05:09.509 --> 00:05:13.050
有机会做某事然后递给它

00:05:11.159 --> 00:05:16.050
到链中的下一个过滤器

00:05:13.050 --> 00:05:19.860
是一条链，直到最后一个也要登录

00:05:16.050 --> 00:05:21.930
正确的销毁方法，所以销毁非常

00:05:19.860 --> 00:05:24.060
好，如果我们重新启动它，这已经是

00:05:21.930 --> 00:05:26.159
我们已经可以看到结果了

00:05:24.060 --> 00:05:27.240
仅通过注册组件权利

00:05:26.159 --> 00:05:30.210
我们有习惯，我们不必交谈

00:05:27.240 --> 00:05:31.589
不需要的servlet容器

00:05:30.210 --> 00:05:33.810
做任何特别的事情，我们只需要

00:05:31.589 --> 00:05:36.360
声明正确类型的spring bean 

00:05:33.810 --> 00:05:38.849
它会自动插入

00:05:36.360 --> 00:05:41.069
该请求，以便我们可以看到我的自定义

00:05:38.849 --> 00:05:43.830
过滤器已经到位了

00:05:41.069 --> 00:05:45.210
我们可以看到的应用程序过滤器配置

00:05:43.830 --> 00:05:46.830
细节，让我们继续

00:05:45.210 --> 00:05:48.150
向我们的申请提出要求

00:05:46.830 --> 00:05:50.789
终结点这里我只是这些

00:05:48.150 --> 00:05:53.189
点击命令R，您可以看到

00:05:50.789 --> 00:05:54.689
发生这种情况时，它说做过滤器和

00:05:53.189 --> 00:05:56.250
然后它向我们显示了请求的外观

00:05:54.689 --> 00:05:56.899
请求是旁边的响应

00:05:56.250 --> 00:06:00.060
这些是

00:05:56.899 --> 00:06:02.129
响应子类型中的httpservletrequest 

00:06:00.060 --> 00:06:04.589
 Tomcat和传递到我们的

00:06:02.129 --> 00:06:06.569
该方法的要求还是我们得到

00:06:04.589 --> 00:06:09.029
过滤器API的优势现在

00:06:06.569 --> 00:06:11.250
过滤器通常具有某种意义上的

00:06:09.029 --> 00:06:12.810
优先订购某种优先级

00:06:11.250 --> 00:06:14.129
同样，您知道您可能想要

00:06:12.810 --> 00:06:16.319
配置除

00:06:14.129 --> 00:06:18.479
实际类型本身，所以为此

00:06:16.319 --> 00:06:21.389
你可以注册所谓的

00:06:18.479 --> 00:06:23.430
 servlet注册光束或过滤器

00:06:21.389 --> 00:06:27.389
注册，这是一个过滤器

00:06:23.430 --> 00:06:30.860
对准光束，在这种情况下，我是

00:06:27.389 --> 00:06:33.060
会返回过滤器对准光束

00:06:30.860 --> 00:06:34.740
新的过滤器注册意味着我

00:06:33.060 --> 00:06:36.240
要做到这一点，以便该过滤器不会

00:06:34.740 --> 00:06:40.860
让我春天，我将实例化它

00:06:36.240 --> 00:06:43.050
我自己对我的自定义过滤器插头

00:06:40.860 --> 00:06:46.199
进入这里的管道，我要说

00:06:43.050 --> 00:06:47.610
我的自定义过滤器，我可以指定所有

00:06:46.199 --> 00:06:49.830
我可以在这里说其他方式

00:06:47.610 --> 00:06:50.540
你知道我可以添加初始化

00:06:49.830 --> 00:06:52.250
参数

00:06:50.540 --> 00:06:54.020
和URL模式参数我可以说

00:06:52.250 --> 00:06:55.340
无论是同步还是不可以

00:06:54.020 --> 00:06:57.770
你知道我可以指定所有东西

00:06:55.340 --> 00:06:59.300
您希望指定何时

00:06:57.770 --> 00:07:04.520
以编程方式注册过滤器

00:06:59.300 --> 00:07:06.380
使用Servlet 3.1 API，包括

00:07:04.520 --> 00:07:08.720
订购权，因此您可以将其指定为

00:07:06.380 --> 00:07:09.890
好吧，你也可以得到一些

00:07:08.720 --> 00:07:12.050
效果还可以下单

00:07:09.890 --> 00:07:13.940
只是通过按顺序使用权利，如果你

00:07:12.050 --> 00:07:15.530
只是你去那里

00:07:13.940 --> 00:07:19.550
我会正确点菜，所以如果您指定一个

00:07:15.530 --> 00:07:21.140
在底部组件上编号

00:07:19.550 --> 00:07:22.160
把它留在一个组件上，那么你就不会

00:07:21.140 --> 00:07:24.170
需要这个，所以你不需要过滤

00:07:22.160 --> 00:07:26.510
配准光束以订购

00:07:24.170 --> 00:07:28.190
春天的命令，它带来了上下文，但

00:07:26.510 --> 00:07:29.180
但是你知道的其他一切，如果你

00:07:28.190 --> 00:07:31.130
想要指定所有其他东西

00:07:29.180 --> 00:07:33.950
必须在过滤器注册上这样做

00:07:31.130 --> 00:07:35.180
在我们的情况下，它不是真的买

00:07:33.950 --> 00:07:37.340
我们可以配置其他任何东西

00:07:35.180 --> 00:07:38.420
我将其保持原样，我们开始

00:07:37.340 --> 00:07:41.390
我们可以确认所有的一切

00:07:38.420 --> 00:07:42.800
仍然按预期工作，现在

00:07:41.390 --> 00:07:45.430
值得了解的还有一个

00:07:42.800 --> 00:07:50.930
 servlet注册b9 servlet 

00:07:45.430 --> 00:07:51.950
配准束和servlet 

00:07:50.930 --> 00:07:53.930
如果您愿意，注册豆很棒

00:07:51.950 --> 00:07:56.120
注册servlet的任何servlet权限

00:07:53.930 --> 00:07:57.230
呃，你习惯使用的一些循环

00:07:56.120 --> 00:07:58.520
也许您使用的不是

00:07:57.230 --> 00:08:00.170
由spring框架为您管理

00:07:58.520 --> 00:08:02.330
已经，这件事的好处是

00:08:00.170 --> 00:08:03.620
您可以将这些光束自动

00:08:02.330 --> 00:08:05.900
配置，因此您实际上可以做

00:08:03.620 --> 00:08:07.250
您可以做的非常有活力的事情

00:08:05.900 --> 00:08:10.070
将它们放在自动配置类中

00:08:07.250 --> 00:08:11.330
也就是说，这是一个新的课程

00:08:10.070 --> 00:08:14.420
在春天列举

00:08:11.330 --> 00:08:18.800
汽车下厂入门

00:08:14.420 --> 00:08:20.630
例如配置在这里说

00:08:18.800 --> 00:08:22.670
在启用自动配置，然后

00:08:20.630 --> 00:08:25.280
显示Java类列表，如果您的

00:08:22.670 --> 00:08:27.430
驱动程序配置类Liz居住在

00:08:25.280 --> 00:08:31.270
他们，并在该枚举

00:08:27.430 --> 00:08:34.099
响应条件注释

00:08:31.270 --> 00:08:35.720
这样您就可以注册，或者Matt男子是

00:08:34.099 --> 00:08:38.360
基于动态排序的不同事物

00:08:35.720 --> 00:08:39.500
为您提供的测试

00:08:38.360 --> 00:08:41.390
当然，我们有一些非常

00:08:39.500 --> 00:08:44.710
开箱即用的有用条件

00:08:41.390 --> 00:08:46.880
好吧，但您知道是否要使用

00:08:44.710 --> 00:08:48.110
其他一些你可以写的

00:08:46.880 --> 00:08:50.180
你自己的条件和条件

00:08:48.110 --> 00:08:52.190
旋转好吧，那就是你的方式

00:08:50.180 --> 00:08:53.690
注册自定义过滤器并对其进行选通

00:08:52.190 --> 00:08:55.790
您可以利用较低的

00:08:53.690 --> 00:08:58.250
 Servlet内部的某种机械

00:08:55.790 --> 00:09:00.110
容器而无需部署到

00:08:58.250 --> 00:09:02.210
您可能需要的标准服务器容器

00:09:00.110 --> 00:09:04.610
为servlet配置事物

00:09:02.210 --> 00:09:06.980
容器，有一个

00:09:04.610 --> 00:09:08.239
监视属性得到很好的支持

00:09:06.980 --> 00:09:10.639
跨越所有不同的嵌入式

00:09:08.239 --> 00:09:12.350
容器选项，例如，我可以

00:09:10.639 --> 00:09:15.470
指定端口权为其服务端口

00:09:12.350 --> 00:09:19.189
等于80 10对，我也可以指定

00:09:15.470 --> 00:09:22.579
 SSL之类的东西，所以我可以说服务器SSL 

00:09:19.189 --> 00:09:25.069
然后我将密钥库

00:09:22.579 --> 00:09:26.809
信任还是你知道是否应该

00:09:25.069 --> 00:09:29.059
被启用还是不知道

00:09:26.809 --> 00:09:32.989
的东西，这在一个一致的作品

00:09:29.059 --> 00:09:36.379
跨越Tomcat和码头

00:09:32.989 --> 00:09:37.999
我还可以指定压缩

00:09:36.379 --> 00:09:40.309
 gzip压缩特别正确，所以

00:09:37.999 --> 00:09:44.119
我可以说好吧，让我们启用它， 

00:09:40.309 --> 00:09:46.549
让我们将其指向任何可以响应的内容

00:09:44.119 --> 00:09:49.489
与JSON中的应用程序，所以这是一个

00:09:46.549 --> 00:09:52.160
以逗号分隔的mime类型列表

00:09:49.489 --> 00:09:53.480
应该被压缩等等

00:09:52.160 --> 00:10:00.999
有了这个我可以重新启动

00:09:53.480 --> 00:10:00.999
应用程序什么也没做

00:10:01.660 --> 00:10:07.519
现在，如果我默认发出以下请求

00:10:04.699 --> 00:10:10.369
卷曲，我会不带要求

00:10:07.519 --> 00:10:12.019
没有除编码以外的内容

00:10:10.369 --> 00:10:16.459
在那里，我会发出类似的请求

00:10:12.019 --> 00:10:19.939
首先摆脱它，你可以

00:10:16.459 --> 00:10:21.499
看到它失败了，因为我打电话给了

00:10:19.939 --> 00:10:25.999
错误端口上的错误端点

00:10:21.499 --> 00:10:27.980
读数可能是10，它向我们显示了你好

00:10:25.999 --> 00:10:30.470
世界，有结果，在

00:10:27.980 --> 00:10:33.290
响应内容类型为application 

00:10:30.470 --> 00:10:35.449
杰森不是在没有压缩只是

00:10:33.290 --> 00:10:37.669
但现在让我们重新回顾一下并带来

00:10:35.449 --> 00:10:38.839
在正确的标题中有正确的

00:10:37.669 --> 00:10:41.269
标头和正确的端口

00:10:38.839 --> 00:10:42.739
正确的端点，所以我会说内容

00:10:41.269 --> 00:10:44.899
我要说我要接受

00:10:42.739 --> 00:10:46.489
我想要的gzip类型的编码

00:10:44.899 --> 00:10:48.499
叫那个端点，我什么时候得到

00:10:46.489 --> 00:10:50.239
二进制数据返回这是压缩数据

00:10:48.499 --> 00:10:53.569
现在这是更有效的

00:10:50.239 --> 00:10:55.850
显然在这种情况下

00:10:53.569 --> 00:10:57.709
我回传给你们所有的人

00:10:55.850 --> 00:11:00.049
推文值得的字符可能不是

00:10:57.709 --> 00:11:01.730
那很重要，但是如果我要返回一个

00:11:00.049 --> 00:11:03.709
大量的JSON可能是

00:11:01.730 --> 00:11:05.869
浏览器会做的一件非常有价值的事情

00:11:03.709 --> 00:11:07.549
自动为您解码并

00:11:05.869 --> 00:11:09.679
这种K压缩可以是

00:11:07.549 --> 00:11:12.079
超级有用，尤其是对于静态而言

00:11:09.679 --> 00:11:14.360
资源，例如CSS文件和

00:11:12.079 --> 00:11:16.669
图像不好，也许更多

00:11:14.360 --> 00:11:18.540
因此使用JavaScript和CSS，但无论哪种方式

00:11:16.669 --> 00:11:21.490
从中得到很多好处

00:11:18.540 --> 00:11:23.170
启用压缩gzip压缩

00:11:21.490 --> 00:11:24.370
您的应用程序和Spring Boot使

00:11:23.170 --> 00:11:25.870
这样做很简单，所以您可以

00:11:24.370 --> 00:11:28.180
指定各种不同的方式

00:11:25.870 --> 00:11:29.800
您想要压缩它们的东西，或者

00:11:28.180 --> 00:11:31.660
不压缩它们，你也可以说我

00:11:29.800 --> 00:11:33.069
希望我的资源链是

00:11:31.660 --> 00:11:34.720
在源主中提供服务

00:11:33.069 --> 00:11:36.160
资源目录

00:11:34.720 --> 00:11:39.730
诸如JavaScript文件之类的东西

00:11:36.160 --> 00:11:41.379
您的CSS文件等等

00:11:39.730 --> 00:11:42.879
那些将是

00:11:41.379 --> 00:11:44.949
直接通过管道传输到客户端，或者

00:11:42.879 --> 00:11:47.259
甚至还可以从CDN投放

00:11:44.949 --> 00:11:49.149
那些可以被gzip压缩为

00:11:47.259 --> 00:11:50.889
好吧，如果你有东西

00:11:49.149 --> 00:11:52.509
买的不是不稳定的，不是

00:11:50.889 --> 00:11:53.920
会发生很大变化，而且很沉重

00:11:52.509 --> 00:11:56.259
他们很胖，很多

00:11:53.920 --> 00:11:58.779
最差的JSON，例如CSS和

00:11:56.259 --> 00:12:03.430
 JavaScript往往是一个理想的选择

00:11:58.779 --> 00:12:06.610
现在有些选择还可以

00:12:03.430 --> 00:12:08.980
能够配置引擎很好

00:12:06.610 --> 00:12:11.379
或特定于嵌入式服务器容器的

00:12:08.980 --> 00:12:13.209
功能，我有属性

00:12:11.379 --> 00:12:15.310
为您暴露了很多

00:12:13.209 --> 00:12:17.649
很好，所以有服务器点Tomcat 

00:12:15.310 --> 00:12:20.769
正确服务Tomcat tot星号

00:12:17.649 --> 00:12:24.040
例如我想要的标题

00:12:20.769 --> 00:12:26.230
我要公开的标题

00:12:24.040 --> 00:12:28.060
做一个转发，例如号码

00:12:26.230 --> 00:12:29.199
我想要最大数量的线程

00:12:28.060 --> 00:12:31.509
线程和最大池工作

00:12:29.199 --> 00:12:34.089
我要接受的连接数

00:12:31.509 --> 00:12:35.560
基本目录我有多少个处理器

00:12:34.089 --> 00:12:38.800
希望后台访问日志

00:12:35.560 --> 00:12:39.610
配置，我的意思是实际上任何都可以

00:12:38.800 --> 00:12:42.370
您想得到的任何东西

00:12:39.610 --> 00:12:44.949
指定大部分是在这里，我们

00:12:42.370 --> 00:12:45.880
我们不能做具体的事情，或者我们

00:12:44.949 --> 00:12:47.620
不能通用

00:12:45.880 --> 00:12:49.060
配置属性，例如

00:12:47.620 --> 00:12:50.649
端口或SSL或压缩或

00:12:49.060 --> 00:12:52.689
像这样的东西有时

00:12:50.649 --> 00:12:54.850
您知道容器的特定属性

00:12:52.689 --> 00:12:57.339
这同样适用于拖曳

00:12:54.850 --> 00:12:59.410
这是一些访问日志配置

00:12:57.339 --> 00:13:01.389
选项，并且您知道您的I / O线程

00:12:59.410 --> 00:13:04.980
以及您想要多少个工作线程

00:13:01.389 --> 00:13:07.329
码头也一样，这里还有JD 

00:13:04.980 --> 00:13:08.949
没有最大职位的情况下有多少人

00:13:07.329 --> 00:13:10.949
似乎在所有情况下都通用的尺寸

00:13:08.949 --> 00:13:13.269
其中三个传入的数量

00:13:10.949 --> 00:13:14.620
受体线程，这是常见的

00:13:13.269 --> 00:13:19.809
我将成为另一个命名的财产

00:13:14.620 --> 00:13:22.110
至少跨越Tomcat和码头

00:13:19.809 --> 00:13:25.600
 Blob对象可以，您可以

00:13:22.110 --> 00:13:26.769
随意配置这些东西，但是

00:13:25.600 --> 00:13:27.870
有时能够

00:13:26.769 --> 00:13:29.769
与容器互动

00:13:27.870 --> 00:13:31.389
以编程方式在这里，我们只是

00:13:29.769 --> 00:13:31.960
指定属性，您可以获得

00:13:31.389 --> 00:13:34.990
一些完成

00:13:31.960 --> 00:13:36.880
通过放置一些属性

00:13:34.990 --> 00:13:38.590
不同的属性文件并使用

00:13:36.880 --> 00:13:41.650
个人资料，以便您了解应用程序

00:13:38.590 --> 00:13:42.880
 -码头将是一套配置

00:13:41.650 --> 00:13:45.430
代表一组配置

00:13:42.880 --> 00:13:48.370
仅适用的配置属性

00:13:45.430 --> 00:13:50.440
当您激活了

00:13:48.370 --> 00:13:52.300
码头概况，你大概可以

00:13:50.440 --> 00:13:54.070
仅在您运行

00:13:52.300 --> 00:13:55.120
名为jetty的应用程序，但对

00:13:54.070 --> 00:13:57.370
能够以编程方式进行交互

00:13:55.120 --> 00:13:59.560
还有这些东西，所以 spring boot 

00:13:57.370 --> 00:14:01.660
功能很多，很方便

00:13:59.560 --> 00:14:04.290
回调最有用的

00:14:01.660 --> 00:14:06.540
 money是嵌入式servlet容器

00:14:04.290 --> 00:14:13.360
定制器，所以在这里我们要说我的

00:14:06.540 --> 00:14:15.150
定制程序实现嵌入式容器

00:14:13.360 --> 00:14:19.480
 [音乐] 

00:14:15.150 --> 00:14:21.280
定制器的权利，这是一个常规

00:14:19.480 --> 00:14:23.050
春天意味着什么，所以我们只是

00:14:21.280 --> 00:14:24.730
在那里重写该方法，我们得到一个

00:14:23.050 --> 00:14:27.400
有机会与

00:14:24.730 --> 00:14:29.350
容器在这里我们可以设置很多

00:14:27.400 --> 00:14:31.120
我们在和中看到的属性

00:14:29.350 --> 00:14:33.310
属性事物的应用

00:14:31.120 --> 00:14:34.840
像压缩一样， 

00:14:33.310 --> 00:14:36.760
压缩支持，以便您传递新的

00:14:34.840 --> 00:14:38.800
适当压缩对象

00:14:36.760 --> 00:14:40.630
再次配置或上下文路径

00:14:38.800 --> 00:14:44.530
这就是你

00:14:40.630 --> 00:14:47.230
可以在这里指定上下文上下文

00:14:44.530 --> 00:14:50.830
打包在那里，这是正确的

00:14:47.230 --> 00:14:55.300
是因为这变成了对

00:14:50.830 --> 00:14:58.650
这样的权利，所以常见的事情在这里

00:14:55.300 --> 00:15:00.550
以此为中心公开

00:14:58.650 --> 00:15:03.130
可配置的收纳婴儿车容器

00:15:00.550 --> 00:15:06.520
那说有时候对我们很有用

00:15:03.130 --> 00:15:07.810
说沮丧，并操纵具体

00:15:06.520 --> 00:15:14.820
基础容器的功能如此

00:15:07.810 --> 00:15:18.160
如果Tomcat嵌入了servlet容器

00:15:14.820 --> 00:15:23.350
可从中分配该类的工厂

00:15:18.160 --> 00:15:29.860
容器不给课，然后萨德勒

00:15:23.350 --> 00:15:33.480
我1TC铸造它通过另一个

00:15:29.860 --> 00:15:36.220
容器是其中正确的类型

00:15:33.480 --> 00:15:37.600
看一下它的Tomcat嵌入的子类型

00:15:36.220 --> 00:15:40.180
 servlet容器工厂是的

00:15:37.600 --> 00:15:41.950
如果它可以分配给这个

00:15:40.180 --> 00:15:46.370
这将无论如何都会起作用，我可以说

00:15:41.950 --> 00:15:51.800
日志点在此处剪切日志

00:15:46.370 --> 00:15:58.830
早就回来了，很好的日志

00:15:51.800 --> 00:16:00.420
记录技术信息是Tomcat可以，所以我们进入了

00:15:58.830 --> 00:16:03.480
 Tomcat，我们可以做一些特定的事情

00:16:00.420 --> 00:16:05.460
还有使用向下转换类型

00:16:03.480 --> 00:16:08.250
在这里我们可以访问集合

00:16:05.460 --> 00:16:09.840
的连接器定制程序是这些

00:16:08.250 --> 00:16:11.550
实际反应的事物

00:16:09.840 --> 00:16:14.070
实际底层tomcat中的请求

00:16:11.550 --> 00:16:16.650
引擎，我们可以访问上下文

00:16:14.070 --> 00:16:19.710
定制器等很多功能

00:16:16.650 --> 00:16:21.200
我们为您提供支持，我们向您展示

00:16:19.710 --> 00:16:24.150
作为这两个的实现

00:16:21.200 --> 00:16:25.830
我们插入的接口

00:16:24.150 --> 00:16:27.180
为您收藏，您可以

00:16:25.830 --> 00:16:28.620
如果你有东西，你也是一样

00:16:27.180 --> 00:16:31.230
要补充一点，那就不是很好

00:16:28.620 --> 00:16:32.490
受支持的开箱即用

00:16:31.230 --> 00:16:34.110
您知道插入的理想场所

00:16:32.490 --> 00:16:36.500
这些之一的实现

00:16:34.110 --> 00:16:38.610
最好的豆子类型

00:16:36.500 --> 00:16:39.870
现在最好的选择是

00:16:38.610 --> 00:16:41.670
这里的属性，你也可以得到

00:16:39.870 --> 00:16:42.930
阀门可以得到您正在编码的

00:16:41.670 --> 00:16:45.030
您可以获得基本目录

00:16:42.930 --> 00:16:46.560
设置协议可以设置肠子

00:16:45.030 --> 00:16:49.410
可以做各种各样的低级

00:16:46.560 --> 00:16:50.550
东西，这是这个，这对应更多

00:16:49.410 --> 00:16:52.710
或更少的配置

00:16:50.550 --> 00:16:54.990
在Tomcat中设置-您知道

00:16:52.710 --> 00:16:56.790
此时的Catalina配置XML 

00:16:54.990 --> 00:16:58.770
现在你正在处理

00:16:56.790 --> 00:17:00.540
具体实施细节

00:16:58.770 --> 00:17:02.010
容器，希望您还没有

00:17:00.540 --> 00:17:03.060
希望这样做，您不需要

00:17:02.010 --> 00:17:05.250
做到这一点，但是很高兴认识你

00:17:03.060 --> 00:17:09.089
其他人也一样吗

00:17:05.250 --> 00:17:10.860
正确，因此如果嵌入式嵌入式服务器

00:17:09.089 --> 00:17:15.329
集装箱工厂那类是

00:17:10.860 --> 00:17:24.500
可从容器类分配，然后我们

00:17:15.329 --> 00:17:27.270
分配好点的班级点播

00:17:24.500 --> 00:17:30.060
通过容器，在那里

00:17:27.270 --> 00:17:32.130
这么点点，你知道添加构建

00:17:30.060 --> 00:17:34.080
定制者添加，妈妈这是

00:17:32.130 --> 00:17:36.480
另一个定制器选项不是

00:17:34.080 --> 00:17:38.220
本机如此受Tomcat本地支持

00:17:36.480 --> 00:17:39.570
或拖曳这些定制器是

00:17:38.220 --> 00:17:42.210
春季佛教对-您是什么

00:17:39.570 --> 00:17:43.710
使用这里您要插入的是

00:17:42.210 --> 00:17:46.140
这些插入的定制器

00:17:43.710 --> 00:17:47.940
容器的创建，以便您

00:17:46.140 --> 00:17:49.380
不必覆盖您的创作

00:17:47.940 --> 00:17:51.510
可以插入到

00:17:49.380 --> 00:17:52.620
的容器再次保持

00:17:51.510 --> 00:17:54.270
想到春天结束

00:17:52.620 --> 00:17:55.550
今天是一个框架

00:17:54.270 --> 00:17:58.140
实行开闭原则

00:17:55.550 --> 00:17:58.650
它是开放的，您可以更改

00:17:58.140 --> 00:18:00.450
运行

00:17:58.650 --> 00:18:02.250
没有该应用程序的行为

00:18:00.450 --> 00:18:04.170
必须实际改变弹簧本身

00:18:02.250 --> 00:18:08.780
是的，虽然你可以，但是

00:18:04.170 --> 00:18:12.720
开源，所以你好荷兰信息是

00:18:08.780 --> 00:18:15.270
知道了，让我们做最后一个

00:18:12.720 --> 00:18:17.100
码头嵌入式服务器容器厂

00:18:15.270 --> 00:18:21.600
该类点可从

00:18:17.100 --> 00:18:26.220
容器良好的课程，我们只是做

00:18:21.600 --> 00:18:30.570
同样的事情码头点类

00:18:26.220 --> 00:18:34.710
类型转换容器非常好的日志

00:18:30.570 --> 00:18:36.030
信息很好，很好，所以

00:18:34.710 --> 00:18:37.500
在那里，我们所有三个人

00:18:36.030 --> 00:18:38.610
现在我们来看一下

00:18:37.500 --> 00:18:41.670
好吧，让我们继续并运行它

00:18:38.610 --> 00:18:43.080
应该看到的是tomcat ring正确吗

00:18:41.670 --> 00:18:45.750
这应该是唯一的

00:18:43.080 --> 00:18:47.000
表示在这里起作用的法术力和

00:18:45.750 --> 00:18:50.010
只有在我们成功之后

00:18:47.000 --> 00:18:59.190
正确地将该容器签名

00:18:50.010 --> 00:19:00.990
 Tomcat也在那里，所以工作了

00:18:59.190 --> 00:19:02.310
我们确实在使用tomcat 

00:19:00.990 --> 00:19:04.530
现在您可能想知道我们如何

00:19:02.310 --> 00:19:07.110
如我所说的更改默认权限

00:19:04.530 --> 00:19:08.670
行为的默认配置

00:19:07.110 --> 00:19:10.800
带上时春季很好的应用

00:19:08.670 --> 00:19:12.720
在 spring boot 开始一个网站是也

00:19:10.800 --> 00:19:14.850
依次带来spring boot启动器

00:19:12.720 --> 00:19:16.500
您可能不想使用Tomcat的Tomcat 

00:19:14.850 --> 00:19:18.240
足够公平，是的，你可能有

00:19:16.500 --> 00:19:20.250
一些需要其他应用程序

00:19:18.240 --> 00:19:22.980
您知道的特定功能

00:19:20.250 --> 00:19:25.850
想要正确，我们不试图扭曲

00:19:22.980 --> 00:19:29.070
你的手臂在这里，所以弹簧启动启动器

00:19:25.850 --> 00:19:30.720
 tomcat将做到这一点，前提是

00:19:29.070 --> 00:19:33.360
意思是说我们要

00:19:30.720 --> 00:19:35.790
从运行时足迹中排除

00:19:33.360 --> 00:19:37.740
捆绑应用程序的应用程序

00:19:35.790 --> 00:19:39.780
做Maven时将不可用

00:19:37.740 --> 00:19:42.690
结果的依赖树

00:19:39.780 --> 00:19:45.660
神器，它将不再可用

00:19:42.690 --> 00:19:47.190
在已编译的工件罐中

00:19:45.660 --> 00:19:49.320
并且在Lib目录中，如果

00:19:47.190 --> 00:19:52.080
您好，我们现在需要替换为

00:19:49.320 --> 00:19:53.670
其他一些嵌入式服务器

00:19:52.080 --> 00:19:57.180
实施，让我们进入春季

00:19:53.670 --> 00:19:59.670
开机启动器珍妮，好吧，我要做的就是

00:19:57.180 --> 00:20:02.640
打算在一个

00:19:59.670 --> 00:20:05.250
其实tomcat的支持，如果我们这样做

00:20:02.640 --> 00:20:08.400
正确地假设我没有任何东西

00:20:05.250 --> 00:20:10.950
特定的Tomcat特定代码，这不会

00:20:08.400 --> 00:20:12.060
 JD将成为真实，所以让我们

00:20:10.950 --> 00:20:18.900
看到

00:20:12.060 --> 00:20:20.510
没关系，我们走吧，我们

00:20:18.900 --> 00:20:24.210
现在，如果我们看一下应用程序

00:20:20.510 --> 00:20:27.060
该应用程序已在端口上启动

00:20:24.210 --> 00:20:28.530
 80 10这对我们来说是可用的

00:20:27.060 --> 00:20:30.390
 ingénieur嵌入式西里尔文容器

00:20:28.530 --> 00:20:31.830
所有相同的东西都起作用，所以我们在那里

00:20:30.390 --> 00:20:33.840
如果我打电话给

00:20:31.830 --> 00:20:36.420
接受编码我得到的结果

00:20:33.840 --> 00:20:39.000
期待我们继续删除

00:20:36.420 --> 00:20:40.590
接受编码标头并获取

00:20:39.000 --> 00:20:41.640
原始JSON，因此再次受支持

00:20:40.590 --> 00:20:44.460
正确地跨越不同

00:20:41.640 --> 00:20:47.640
实现等等，这样我就可以

00:20:44.460 --> 00:20:56.430
做相同的事情替换

00:20:47.640 --> 00:20:58.380
拖曳并重新启动码头

00:20:56.430 --> 00:20:59.520
有我没有给我们的申请

00:20:58.380 --> 00:21:01.560
我认为有足够的时间重新启动

00:20:59.520 --> 00:21:03.660
没有给我足够的时间

00:21:01.560 --> 00:21:06.630
刷新其类路径的目录

00:21:03.660 --> 00:21:08.610
我们要嵌入的库

00:21:06.630 --> 00:21:09.930
是从一个容器里来的，所以我们现在

00:21:08.610 --> 00:21:11.960
在这些不同的地方切换

00:21:09.930 --> 00:21:15.000
我们已经研究了如何实现

00:21:11.960 --> 00:21:16.440
使用基础类型和

00:21:15.000 --> 00:21:17.940
再次，你可以做，你可以利用

00:21:16.440 --> 00:21:21.840
这些的所有不同特征

00:21:17.940 --> 00:21:23.550
通过使用那些容器

00:21:21.840 --> 00:21:26.220
定制器是正确的，这是一件事

00:21:23.550 --> 00:21:29.280
你知道一个常见的问题是

00:21:26.220 --> 00:21:31.080
我可以通过jndi绑定一些东西吗

00:21:29.280 --> 00:21:33.090
默认的Tomcat不使用Jan是的，但是

00:21:31.080 --> 00:21:35.040
如果您想站在JDI上下文中

00:21:33.090 --> 00:21:37.260
并绑定一个bean到它，然后使

00:21:35.040 --> 00:21:39.060
可用作上下文参考

00:21:37.260 --> 00:21:42.180
您的应用程序可以在

00:21:39.060 --> 00:21:45.740
例如这些定制器之一，或

00:21:42.180 --> 00:21:49.800
您可以注册自己的嵌入式

00:21:45.740 --> 00:21:51.690
 servlet容器工厂BI有两个

00:21:49.800 --> 00:21:53.400
可以在床上整理自己的Tomcat 

00:21:51.690 --> 00:21:55.470
容器Factory的值并覆盖

00:21:53.400 --> 00:21:56.970
正确的回调，我们春天

00:21:55.470 --> 00:21:59.130
 butjust默认提供这些bean 

00:21:56.970 --> 00:22:01.050
然后它传递到传递

00:21:59.130 --> 00:22:04.940
进入定制器，但您可以

00:22:01.050 --> 00:22:04.940
像这样提供自己的豆

00:22:05.840 --> 00:22:10.800
在这里您可以覆盖任何您想要的

00:22:08.730 --> 00:22:12.930
您可以覆盖发布过程

00:22:10.800 --> 00:22:14.400
上下文配置上下文配置

00:22:12.930 --> 00:22:15.960
访问其他旅游提供商，您可以

00:22:14.400 --> 00:22:17.070
覆盖所有这些不同类型的

00:22:15.960 --> 00:22:19.650
所有这些回调

00:22:17.070 --> 00:22:21.000
 Springwood公开的生命周期挂钩

00:22:19.650 --> 00:22:22.140
当你想起这个

00:22:21.000 --> 00:22:25.390
应用程序，因此您可以执行以下操作

00:22:22.140 --> 00:22:26.940
在扬迪揭露事物

00:22:25.390 --> 00:22:28.809
配置其他连接器

00:22:26.940 --> 00:22:31.480
春季自动支持视图

00:22:28.809 --> 00:22:32.470
一旦完成，现在就可以

00:22:31.480 --> 00:22:34.809
决定好吧，我有这个

00:22:32.470 --> 00:22:36.520
我想把它变成一个点的应用程序

00:22:34.809 --> 00:22:37.840
浇水，你知道

00:22:36.520 --> 00:22:41.070
一些价值并将其变成一个点

00:22:37.840 --> 00:22:44.110
即使您不打算部署

00:22:41.070 --> 00:22:46.150
一定要一个servlet容器

00:22:44.110 --> 00:22:48.760
可以将它变成点点

00:22:46.150 --> 00:22:50.110
与您知道要记住的是

00:22:48.760 --> 00:22:53.500
可能部署到服务器容器

00:22:50.110 --> 00:22:55.179
举个例子，让我们

00:22:53.500 --> 00:22:57.220
这个在underwow让我们留在那里

00:22:55.179 --> 00:22:59.290
让我们把它变成我们的电线

00:22:57.220 --> 00:23:00.970
仍然有可执行的连线，是的

00:22:59.290 --> 00:23:03.400
仅仅因为这是点水就不会

00:23:00.970 --> 00:23:06.700
表示您无法使用Java-jar或更确切地说

00:23:03.400 --> 00:23:08.830
 Java-指向del R的jar那么

00:23:06.700 --> 00:23:10.419
我要做的就是我要改变

00:23:08.830 --> 00:23:16.690
包装上这是我的包装

00:23:10.419 --> 00:23:17.710
我认为我们的选择不错

00:23:16.690 --> 00:23:19.570
这是实际上我们需要添加一些

00:23:17.710 --> 00:23:22.090
我们需要添加Java代码的servlet 

00:23:19.570 --> 00:23:30.549
初始化程序，所以我将创建一个servlet 

00:23:22.090 --> 00:23:38.080
初始化器，我们会说好的创建一个新的

00:23:30.549 --> 00:23:43.600
一个初始化器，我要说

00:23:38.080 --> 00:23:48.520
这扩展了Spring Boot Servlet 

00:23:43.600 --> 00:23:49.860
初始化程序和configure方法

00:23:48.520 --> 00:23:56.049
只需要指出配置方法

00:23:49.860 --> 00:23:59.860
到我们的资源，这就是servlet 

00:23:56.049 --> 00:24:01.630
没有内侧的演示应用程序

00:23:59.860 --> 00:24:02.559
这是实际的Springwood条目

00:24:01.630 --> 00:24:05.230
这就是公共静态的地方

00:24:02.559 --> 00:24:08.500
 void mean method是正确的，所以现在有了

00:24:05.230 --> 00:24:10.450
做到了，我还没有摆脱这个

00:24:08.500 --> 00:24:12.040
对于运行时而言，仍然

00:24:10.450 --> 00:24:17.590
那里，但是现在如果我去

00:24:12.040 --> 00:24:19.179
命令行在这里CD演示或在

00:24:17.590 --> 00:24:21.370
 Downloads演示目录下载

00:24:19.179 --> 00:24:23.530
 servlet演示目录在这里，如果我去

00:24:21.370 --> 00:24:28.150
回到我的控制台

00:24:23.530 --> 00:24:30.809
 Maven的干净安装，我们应该得到一个点

00:24:28.150 --> 00:24:36.070
由于该过程而产生的战争神器

00:24:30.809 --> 00:24:37.960
好的CD目标我可以打点战

00:24:36.070 --> 00:24:42.940
现在做Java-jar 

00:24:37.960 --> 00:24:45.039
 servlet演示提升

00:24:42.940 --> 00:24:47.139
好的，我们在那里

00:24:45.039 --> 00:24:48.570
战争神器，但仍在执行

00:24:47.139 --> 00:24:52.210
因为我们还有弹簧靴

00:24:48.570 --> 00:24:54.789
现在在类路径上的Maven插件

00:24:52.210 --> 00:24:57.309
从技术上讲，不支持您

00:24:54.789 --> 00:24:59.559
将您知道的知识部署到

00:24:57.309 --> 00:25:01.629
例如野蝇应用程序或野外应用程序

00:24:59.559 --> 00:25:05.019
 fly是一个红发的JBoss应用程序

00:25:01.629 --> 00:25:07.419
服务器以前称为JBoss AAS， 

00:25:05.019 --> 00:25:09.999
而undertow是嵌入式servlet 

00:25:07.419 --> 00:25:12.369
容器子系统的一部分

00:25:09.999 --> 00:25:13.509
该应用程序服务器在同一位置

00:25:12.369 --> 00:25:16.119
您不应该真正部署的方式

00:25:13.509 --> 00:25:17.710
 Tomcat转换为Tomcat，但其中大多数会

00:25:16.119 --> 00:25:20.049
检测到它并以某种方式忽略它

00:25:17.710 --> 00:25:21.970
反对否决它，所以我可以

00:25:20.049 --> 00:25:23.289
实际上是参加这场点战

00:25:21.970 --> 00:25:24.369
有效战争及其他

00:25:23.289 --> 00:25:26.649
尊重，除了它有一个公众

00:25:24.369 --> 00:25:28.119
静态void main和可运行的我可以

00:25:26.649 --> 00:25:31.899
进行点战争并将其部署到

00:25:28.119 --> 00:25:33.480
实际知道了，所以让我们看看

00:25:31.899 --> 00:25:38.490
小服务程序

00:25:33.480 --> 00:25:42.460
点战，我有本·野蝇

00:25:38.490 --> 00:25:44.610
我拥有的独立部署

00:25:42.460 --> 00:25:48.179
我要把它放在那里

00:25:44.610 --> 00:25:51.669
我也要运行这个，这是我的

00:25:48.179 --> 00:25:53.549
独立和Wildfly应用程序以及

00:25:51.669 --> 00:25:55.509
你会看到它在旋转

00:25:53.549 --> 00:25:56.909
 Springwood应用那里是正确的

00:25:55.509 --> 00:26:02.379
这里有我们的Springwood应用程序

00:25:56.909 --> 00:26:05.169
 spring boot 1.52我们可以看到我们的NIT吗

00:26:02.379 --> 00:26:07.779
方法是正确的所以有

00:26:05.169 --> 00:26:09.070
以及我的定制工具和

00:26:07.779 --> 00:26:12.759
我一直在监听的应用程序

00:26:09.070 --> 00:26:14.019
在用于管理的此端口9999上是

00:26:12.759 --> 00:26:15.519
实际的应用是

00:26:14.019 --> 00:26:20.019
上下文，这就是服务器

00:26:15.519 --> 00:26:27.399
演示快照，你知道本地主机，所以

00:26:20.019 --> 00:26:29.200
本地主机8080问候现在是我们的

00:26:27.399 --> 00:26:31.509
其余端点正常工作

00:26:29.200 --> 00:26:34.360
一件事是行不通的

00:26:31.509 --> 00:26:35.830
例如，我们的SSL更有可能

00:26:34.360 --> 00:26:38.049
支持或压缩或其他

00:26:35.830 --> 00:26:39.129
该或自定义端口的任何

00:26:38.049 --> 00:26:41.710
我们在Springwood中指定了

00:26:39.129 --> 00:26:44.289
申请这里是一份报告

00:26:41.710 --> 00:26:45.460
你知道那东西不会

00:26:44.289 --> 00:26:48.700
工作，原因是因为

00:26:45.460 --> 00:26:51.580
我们现在在运行时内部运行

00:26:48.700 --> 00:26:51.940
并且该运行时不允许主机或

00:26:51.580 --> 00:26:54.460
抱歉

00:26:51.940 --> 00:26:57.070
来宾应用程序控制诸如

00:26:54.460 --> 00:26:58.779
应用程序服务器端口和您

00:26:57.070 --> 00:27:01.509
知道他们的连接器等等

00:26:58.779 --> 00:27:03.909
通常为单独的规则保留

00:27:01.509 --> 00:27:06.039
在传统的遗留应用程序中

00:27:03.909 --> 00:27:07.659
环境配置正确

00:27:06.039 --> 00:27:09.100
开发人员出来是要配置SSL 

00:27:07.659 --> 00:27:11.259
那应该是有人做的

00:27:09.100 --> 00:27:14.679
其他时代之前的想法

00:27:11.259 --> 00:27:16.409
当我们有两个时

00:27:14.679 --> 00:27:19.029
作业与

00:27:16.409 --> 00:27:20.110
他们不共享的开发者

00:27:19.029 --> 00:27:23.049
区域相同的代码库或

00:27:20.110 --> 00:27:25.120
责任和相同的目标

00:27:23.049 --> 00:27:26.529
这些都行不通

00:27:25.120 --> 00:27:30.220
属性是

00:27:26.529 --> 00:27:32.409
您知道ray runtime的嵌入式容器

00:27:30.220 --> 00:27:35.649
弹簧的嵌入式方面很好

00:27:32.409 --> 00:27:37.990
应用程序还可以，所以在这个 spring 技巧 中

00:27:35.649 --> 00:27:39.519
我们已经研究了如何部署

00:27:37.990 --> 00:27:42.639
应用程序如何部署应用程序

00:27:39.519 --> 00:27:44.379
作为嵌入式罐子

00:27:42.639 --> 00:27:46.809
所谓的胖子罐子然后怎么转

00:27:44.379 --> 00:27:49.059
它变成一个可以部署的法塔瓦

00:27:46.809 --> 00:27:51.340
进入标准的应用程序

00:27:49.059 --> 00:27:53.590
服务器Java EE应用程序服务器

00:27:51.340 --> 00:27:57.340
只是春天和 spring boot ，而

00:27:53.590 --> 00:28:00.700
弹簧靴保持更多的尖端或

00:27:57.340 --> 00:28:02.409
最新的个人资料，然后您

00:28:00.700 --> 00:28:04.570
您日常的Spring框架

00:28:02.409 --> 00:28:05.769
应用程序Spring Framework倾向于

00:28:04.570 --> 00:28:08.529
向后兼容性更长

00:28:05.769 --> 00:28:09.909
故事这应该仍然适用于任何东西

00:28:08.529 --> 00:28:13.389
的支持力图通过那个

00:28:09.909 --> 00:28:15.789
对，所以这可以追溯到

00:28:13.389 --> 00:28:19.539
到现在几年了

00:28:15.789 --> 00:28:21.039
对那些容器上的任何容器罚款

00:28:19.539 --> 00:28:23.679
支持这一点，并且servlet本身就是

00:28:21.039 --> 00:28:25.659
 Java Java EE的子集，因此您不必

00:28:23.679 --> 00:28:26.769
甚至需要一个Java应用服务器

00:28:25.659 --> 00:28:29.440
没有理由你不能只是

00:28:26.769 --> 00:28:32.759
例如，将这场点战部署到

00:28:29.440 --> 00:28:34.960
 Tomcat或Jenny或其他权利

00:28:32.759 --> 00:28:38.279
好，非常感谢您的收看

00:28:34.960 --> 00:28:38.279
下次再见

00:28:44.039 --> 00:28:46.100
您

