WEBVTT
Kind: captions
Language: zh-Hans

00:00:25.300 --> 00:00:29.390
嗨，春季粉丝们欢迎来到另一个

00:00:27.679 --> 00:00:30.380
在此安装弹簧提示

00:00:29.390 --> 00:00:32.360
分期付款，我们来看看

00:00:30.380 --> 00:00:34.550
在刚刚宣布的春季新品上

00:00:32.360 --> 00:00:36.260
整个云断路器项目

00:00:34.550 --> 00:00:39.530
断路器项目的重点是

00:00:36.260 --> 00:00:41.650
在井的顶部提供抽象

00:00:39.530 --> 00:00:45.290
当然其他断路器

00:00:41.650 --> 00:00:49.370
包括但不限于Netflix的

00:00:45.290 --> 00:00:51.229
 hystrix Resilience4J 阿里巴巴的前哨

00:00:49.370 --> 00:00:52.250
我在前一个春天介绍的

00:00:51.229 --> 00:00:54.949
技巧，我们也

00:00:52.250 --> 00:00:58.280
向他们介绍了hystrix和spring retry 

00:00:54.949 --> 00:01:00.409
所以这是阿里巴巴的前哨春天

00:00:58.280 --> 00:01:02.000
 J的重试历史记录和恢复力

00:01:00.409 --> 00:01:03.769
这些是支持的四个

00:01:02.000 --> 00:01:06.110
我们研究了三个断路器

00:01:03.769 --> 00:01:09.110
前几期中的那些

00:01:06.110 --> 00:01:11.210
春天的提示，我们在哪里看

00:01:09.110 --> 00:01:13.460
一般带有hystrix的断路器

00:01:11.210 --> 00:01:14.840
春天我们几年前尝试过

00:01:13.460 --> 00:01:18.409
然后最近看了阿里巴巴的

00:01:14.840 --> 00:01:21.049
春季云集成现在这些

00:01:18.409 --> 00:01:22.340
可以使用不同的技术

00:01:21.049 --> 00:01:24.170
统一的工具云

00:01:22.340 --> 00:01:25.700
这个新项目带来了抽象

00:01:24.170 --> 00:01:27.829
我们刚刚宣布支持

00:01:25.700 --> 00:01:30.350
反应性和非反应性的

00:01:27.829 --> 00:01:31.909
用例还不是通用航空，所以我们要

00:01:30.350 --> 00:01:33.560
必须添加我们的依赖Manley，但是

00:01:31.909 --> 00:01:35.479
没什么大不了的，让我们回到

00:01:33.560 --> 00:01:37.939
我在互联网上第二喜欢的地方

00:01:35.479 --> 00:01:39.259
当然，IO和

00:01:37.939 --> 00:01:41.630
我们将在这里构建一个新的应用程序

00:01:39.259 --> 00:01:45.619
我要叫这个断路器

00:01:41.630 --> 00:01:47.240
好的，我们可以使用两个2.0快照

00:01:45.619 --> 00:01:49.579
最新和最伟大的，我会带来

00:01:47.240 --> 00:01:52.789
龙目岛进入反应网络

00:01:49.579 --> 00:01:54.469
支持，没有断路器

00:01:52.789 --> 00:01:59.630
依赖还没有，所以我们需要

00:01:54.469 --> 00:02:00.920
我们需要手动添加

00:01:59.630 --> 00:02:02.979
我们可以继续并建立一个

00:02:00.920 --> 00:02:05.090
我想拥有云的应用程序

00:02:02.979 --> 00:02:07.700
我有那样的引导

00:02:05.090 --> 00:02:09.050
给我春天的乌云依赖

00:02:07.700 --> 00:02:10.910
管理你知道的行家

00:02:09.050 --> 00:02:13.250
储存库和炸弹及其所有

00:02:10.910 --> 00:02:15.080
东西，所以我可以添加依赖项

00:02:13.250 --> 00:02:16.250
需要弹簧热回路

00:02:15.080 --> 00:02:21.190
断路器，我不必担心

00:02:16.250 --> 00:02:21.190
剩下的没事

00:02:21.700 --> 00:02:33.030
在那打开一个外壳

00:02:28.599 --> 00:02:33.030
下载ueo断路器

00:02:50.770 --> 00:02:54.740
好的，我们将添加

00:02:53.330 --> 00:02:56.990
我们需要的一种依赖，所以我要

00:02:54.740 --> 00:03:00.080
下一个毫升去棕榈吧，我们只是

00:02:56.990 --> 00:03:02.450
要添加零零，你知道一个

00:03:00.080 --> 00:03:03.950
春天云的快照版本

00:03:02.450 --> 00:03:18.310
启动断路器项目

00:03:03.950 --> 00:03:18.310
好吧，依存关系春天云

00:03:18.430 --> 00:03:22.430
 J so的断路器弹性

00:03:20.930 --> 00:03:24.140
我们要带我们来

00:03:22.430 --> 00:03:26.000
 J实施的弹性

00:03:24.140 --> 00:03:27.620
当然，这将反过来

00:03:26.000 --> 00:03:29.780
带来我们需要的其他一切

00:03:27.620 --> 00:03:30.950
忽略了指定Java十一点

00:03:29.780 --> 00:03:33.830
春天的初始化器，所以我会做

00:03:30.950 --> 00:03:35.450
就在这里，我要打Maven 

00:03:33.830 --> 00:03:38.270
重新导入带来所有依赖

00:03:35.450 --> 00:03:39.650
被迫重新了解

00:03:38.270 --> 00:03:42.650
我的依赖管理的布局

00:03:39.650 --> 00:03:44.120
图好，然后我们去

00:03:42.650 --> 00:03:45.260
我们的程序，所以我们要做的是

00:03:44.120 --> 00:03:48.230
将要构建一个简单的应用程序

00:03:45.260 --> 00:03:49.850
有一个Web端点和那个织带

00:03:48.230 --> 00:03:52.580
点将充当我们可以使用的客户端

00:03:49.850 --> 00:03:54.410
在其中调用和观察行为

00:03:52.580 --> 00:03:56.960
系统，但依次会调用

00:03:54.410 --> 00:03:59.060
将会失败的东西

00:03:56.960 --> 00:04:00.230
正确，现在我可以打电话给服务了

00:03:59.060 --> 00:04:02.090
建立和建立社交圈

00:04:00.230 --> 00:04:03.380
创建另一个服务并使它成为

00:04:02.090 --> 00:04:04.910
谈论另一件事的客户

00:04:03.380 --> 00:04:07.360
网络，但实际上没有必要

00:04:04.910 --> 00:04:10.700
因为我需要关心的是

00:04:07.360 --> 00:04:12.320
客户的行为

00:04:10.700 --> 00:04:14.240
尊重其他事情，如果

00:04:12.320 --> 00:04:15.620
该客户抛出异常

00:04:14.240 --> 00:04:18.709
关心那个例外是否是因为

00:04:15.620 --> 00:04:20.000
网络通话或其他任何正确的方式

00:04:18.709 --> 00:04:21.620
在断路器不在乎

00:04:20.000 --> 00:04:23.780
只是知道你在打电话

00:04:21.620 --> 00:04:26.570
就其而言可能会失败

00:04:23.780 --> 00:04:29.000
可能什么都对，所以我们

00:04:26.570 --> 00:04:35.240
从一个非常简单的感觉开始

00:04:29.000 --> 00:04:41.240
服务还可以，班级感觉服务和

00:04:35.240 --> 00:04:44.120
使它成为服务bean非常感谢

00:04:41.240 --> 00:04:49.180
对，我们的感觉服务正在发展

00:04:44.120 --> 00:04:53.600
我们将使用它来生成一个

00:04:49.180 --> 00:04:57.150
串起某种问候

00:04:53.600 --> 00:05:03.250
发布者字符串

00:04:57.150 --> 00:05:05.650
好吧，实际上这可能是我的单声道

00:05:03.250 --> 00:05:08.919
假设它可能是一个很好的单声道

00:05:05.650 --> 00:05:11.530
是的，让我们来问候一下字符串名称

00:05:08.919 --> 00:05:13.630
但你知道名字可能是

00:05:11.530 --> 00:05:14.680
让我们将名称设为可选

00:05:13.630 --> 00:05:18.639
可以做的名字

00:05:14.680 --> 00:05:20.130
指定或不指定，以便我们有一个

00:05:18.639 --> 00:05:22.780
引入可变性的方式

00:05:20.130 --> 00:05:24.340
触发异常好吗

00:05:22.780 --> 00:05:25.810
通常不会设计一个程序

00:05:24.340 --> 00:05:27.370
如果您有一个可选的选项，它将失败

00:05:25.810 --> 00:05:29.139
不返回全部内容

00:05:27.370 --> 00:05:32.289
可选，但我想将其用作

00:05:29.139 --> 00:05:33.699
我们强制该程序的一种方式

00:05:32.289 --> 00:05:35.680
在一定条件下抛出异常

00:05:33.699 --> 00:05:38.470
条件，该条件将是

00:05:35.680 --> 00:05:41.800
名称中没有任何价值

00:05:38.470 --> 00:05:44.970
我们要做的就是说我们

00:05:41.800 --> 00:05:49.630
具有返回值或URL或

00:05:44.970 --> 00:05:55.630
问候，我猜到目前为止，问候等于

00:05:49.630 --> 00:05:59.590
命名点图，我们基本上

00:05:55.630 --> 00:06:11.070
说好，如果字符串在那里，那么我们

00:05:59.590 --> 00:06:11.070
打个招呼字符串好吧，否则

00:06:12.539 --> 00:06:16.330
好吧，我想这就是我们真正想要的

00:06:14.470 --> 00:06:17.560
返回发布还是我们不这样做，所以我们想要

00:06:16.330 --> 00:06:27.789
返回带有该字符串的发布者

00:06:17.560 --> 00:06:33.220
所以单点就可以了

00:06:27.789 --> 00:06:35.320
否则单点错误就可以了

00:06:33.220 --> 00:06:38.530
将在

00:06:35.320 --> 00:06:40.570
如果您不返回，则管道

00:06:38.530 --> 00:06:41.830
不提供字符串，可以是任何字符串

00:06:40.570 --> 00:06:43.000
例外，我没有使用第二点

00:06:41.830 --> 00:06:44.259
例外，因为这是一个例外

00:06:43.000 --> 00:06:46.690
就在眼前，这并不重要

00:06:44.259 --> 00:06:47.770
我们使用什么，所以我想我只想要

00:06:46.690 --> 00:06:49.570
让我什至不需要

00:06:47.770 --> 00:06:55.210
我是中间变量吗

00:06:49.570 --> 00:06:56.650
可以说归还好东西

00:06:55.210 --> 00:06:59.320
对，所以现在有我的小服务

00:06:56.650 --> 00:07:01.570
让我们建立一个HTTP端点

00:06:59.320 --> 00:07:04.000
依次将其称为

00:07:01.570 --> 00:07:06.029
取决于行为还可以

00:07:04.000 --> 00:07:10.060
所以我们在这里创建一个救援卷轴

00:07:06.029 --> 00:07:10.490
我在这里使用反应式API，但是

00:07:10.060 --> 00:07:11.539
它是

00:07:10.490 --> 00:07:13.340
这是你实际上可以想到的想法

00:07:11.539 --> 00:07:15.500
返回可以使用非反应性

00:07:13.340 --> 00:07:16.970
断路器支持以及

00:07:15.500 --> 00:07:18.710
一个单独的类型，我将告诉您

00:07:16.970 --> 00:07:20.720
告诉你看起来会在哪里

00:07:18.710 --> 00:07:22.479
不同但没关系吧

00:07:20.720 --> 00:07:25.930
实际上对我来说更有趣

00:07:22.479 --> 00:07:30.710
这对于反应式代码很好

00:07:25.930 --> 00:07:37.699
但是他们都支持，所以休息

00:07:30.710 --> 00:07:41.479
控制器好，我们该怎么办

00:07:37.699 --> 00:07:45.080
我们将要有一个构造函数

00:07:41.479 --> 00:07:51.050
我要说私​​人决赛失败

00:07:45.080 --> 00:07:55.039
服务还可以，我要去

00:07:51.050 --> 00:08:03.349
注入情感的构造函数

00:07:55.039 --> 00:08:06.949
服务还好吧，我们要

00:08:03.349 --> 00:08:18.500
有一个端点日期得到映射

00:08:06.949 --> 00:08:23.000
被称为小麦，所以类型的发布者

00:08:18.500 --> 00:08:25.909
调整弦，我们要

00:08:23.000 --> 00:08:27.729
可选，我们将接受可选请求

00:08:25.909 --> 00:08:30.310
参数正确，所以你给我们起个名字

00:08:27.729 --> 00:08:38.560
我们将把它传递给

00:08:30.310 --> 00:08:42.339
基础服务还可以

00:08:38.560 --> 00:08:47.440
好东西，我们要说回来了

00:08:42.339 --> 00:08:50.149
感觉服务点打招呼

00:08:47.440 --> 00:08:51.560
传递名字，所以你知道你是否

00:08:50.149 --> 00:08:55.610
表示如果您请求HTTP GET 

00:08:51.560 --> 00:08:58.760
请求以四个斜杠打招呼

00:08:55.610 --> 00:09:00.170
标记名称等于您知道四个小节

00:08:58.760 --> 00:09:01.850
打电话给我就可以了

00:09:00.170 --> 00:09:04.010
如果你回来，如果你只是保存这样的

00:09:01.850 --> 00:09:05.209
我们会没有很好的参数

00:09:04.010 --> 00:09:08.329
当然，我们知道战斗会导致

00:09:05.209 --> 00:09:10.760
空指针异常对单二

00:09:08.329 --> 00:09:13.399
错误没有指针，所以我们要保护

00:09:10.760 --> 00:09:14.540
针对这种失败，所以这是一个

00:09:13.399 --> 00:09:16.700
我们可以在哪里使用的一个很好的例子

00:09:14.540 --> 00:09:18.800
断路器，所以我们要注入

00:09:16.700 --> 00:09:20.089
我们的断路器工厂，还有

00:09:18.800 --> 00:09:22.310
实际上两个轴承有一个电路

00:09:20.089 --> 00:09:24.260
断路器工厂或无功电路

00:09:22.310 --> 00:09:28.250
断路器工厂可以吗

00:09:24.260 --> 00:09:36.880
当然我自然要注入

00:09:28.250 --> 00:09:36.880
反应性好吧，这就是

00:09:37.450 --> 00:09:46.580
专用最终断路器还是它

00:09:44.450 --> 00:09:56.090
无功断路器对这个工具

00:09:46.580 --> 00:09:58.790
在那里好，所以我们将使用电路

00:09:56.090 --> 00:10:05.540
断路器工厂创建实例

00:09:58.790 --> 00:10:10.370
然后藏起来好吧，我会成为

00:10:05.540 --> 00:10:12.730
叫做小麦，我们现在可以把它包起来

00:10:10.370 --> 00:10:16.220
回报出版商的东西

00:10:12.730 --> 00:10:17.630
结果等于这个权利，这很冷

00:10:16.220 --> 00:10:18.890
现在还没有流

00:10:17.630 --> 00:10:20.870
实际上执行了我们没有

00:10:18.890 --> 00:10:21.710
订阅了它，所以它没有做

00:10:20.870 --> 00:10:25.850
还没有

00:10:21.710 --> 00:10:29.450
所以可以说我们把这个点电路

00:10:25.850 --> 00:10:32.300
断路器点跑，我们刚过去的寒冷

00:10:29.450 --> 00:10:33.710
流，它将应用默认

00:10:32.300 --> 00:10:35.450
所有断路器的配置

00:10:33.710 --> 00:10:38.180
在系统中，我提供一个

00:10:35.450 --> 00:10:39.730
我们可以使用的后备行为

00:10:38.180 --> 00:10:42.650
提供看起来像这样的功能

00:10:39.730 --> 00:10:45.350
好吧，所以想法是

00:10:42.650 --> 00:10:47.690
某种异常，我们返回一个

00:10:45.350 --> 00:10:56.650
字符串的发布者可以，所以我们

00:10:47.690 --> 00:11:04.150
你能知道单声道吗

00:10:56.650 --> 00:11:06.200
最终世界还不错lambda 

00:11:04.150 --> 00:11:07.700
好吧，有我们的有我们的

00:11:06.200 --> 00:11:09.260
问候端点和我们的失败

00:11:07.700 --> 00:11:10.820
使网络能够

00:11:09.260 --> 00:11:13.700
可以使它使用反应式

00:11:10.820 --> 00:11:15.710
 Web客户端或我们的套接字

00:11:13.700 --> 00:11:17.180
请求者或其他任何我可以肯定的权利

00:11:15.710 --> 00:11:19.040
可以想象你会如何

00:11:17.180 --> 00:11:22.850
此时的响应式网络通话是

00:11:19.040 --> 00:11:24.230
现在不是这个视频的重点

00:11:22.850 --> 00:11:27.650
电路要记住的事情

00:11:24.230 --> 00:11:29.390
这里的断路器使用greet作为字符串

00:11:27.650 --> 00:11:31.660
这是我给你的任意信息流

00:11:29.390 --> 00:11:33.650
它的名字，这样你就可以定义

00:11:31.660 --> 00:11:35.870
在其他地方进行配置

00:11:33.650 --> 00:11:38.010
正确，因此您可以实际配置

00:11:35.870 --> 00:11:40.050
断路器的细节

00:11:38.010 --> 00:11:42.000
再见那个字符串ID，这就是你的方式

00:11:40.050 --> 00:11:43.050
将此断路器链接到

00:11:42.000 --> 00:11:44.850
您将定义的配置

00:11:43.050 --> 00:11:47.280
其他地方我们还没有指定

00:11:44.850 --> 00:11:50.220
配置，以便我们获得默认排序

00:11:47.280 --> 00:11:51.570
通用全局配置让我们

00:11:50.220 --> 00:11:55.010
看看这看起来怎么样，让我们​​看看

00:11:51.570 --> 00:12:00.900
现在看起来像什么localhost 

00:11:55.010 --> 00:12:05.030
等待名称等于taja 

00:12:00.900 --> 00:12:07.920
好吧，我们得到了，然后鲍勃，有一个

00:12:05.030 --> 00:12:11.010
现在可以了如果我们掉线怎么办

00:12:07.920 --> 00:12:13.710
你好世界的名字正确的电路

00:12:11.010 --> 00:12:14.730
调用了断路器，因此您可以看到

00:12:13.710 --> 00:12:18.450
那很有趣，我们得到了

00:12:14.730 --> 00:12:21.620
一些一些非常简单的行为，但是

00:12:18.450 --> 00:12:25.080
我们可以看到它现在如何工作

00:12:21.620 --> 00:12:26.010
断路器很漂亮，它正在做

00:12:25.080 --> 00:12:27.750
对的事情对了，我们正在得到我们的

00:12:26.010 --> 00:12:31.170
默认回退，我们控制着

00:12:27.750 --> 00:12:33.840
服务失败，我们能够

00:12:31.170 --> 00:12:36.510
表现或添加一些其他行为

00:12:33.840 --> 00:12:37.860
我们需要，我们只是用这个包装

00:12:36.510 --> 00:12:41.430
小lambda，这非常简单

00:12:37.860 --> 00:12:42.630
这样做可以，所以我喜欢，但是我想要

00:12:41.430 --> 00:12:44.490
配置它，我想覆盖一些

00:12:42.630 --> 00:12:48.570
在这里配置并指定

00:12:44.490 --> 00:12:50.910
例如，如果

00:12:48.570 --> 00:12:53.220
例如，一条正在被

00:12:50.910 --> 00:12:54.480
调用花费的时间太长了，我想

00:12:53.220 --> 00:12:55.710
为此配置默认行为

00:12:54.480 --> 00:12:59.610
所以我要做的是

00:12:55.710 --> 00:13:00.690
覆盖默认的重发反应

00:12:59.610 --> 00:13:08.780
弹性锻造断路器

00:13:00.690 --> 00:13:08.780
工厂我会提供光束的

00:13:10.460 --> 00:13:23.720
这样我就可以回应原因

00:13:21.420 --> 00:13:27.420
 J Sikora工厂，所以有我的工厂

00:13:23.720 --> 00:13:31.020
工厂等于这个，我想

00:13:27.420 --> 00:13:32.430
我也要先配置一些东西

00:13:31.020 --> 00:13:34.500
很远的地方，以便您可以

00:13:32.430 --> 00:13:36.330
覆盖您可以为您做到的

00:13:34.500 --> 00:13:37.800
知道我要去的所有工厂

00:13:36.330 --> 00:13:39.150
为此覆盖它，我可以

00:13:37.800 --> 00:13:41.250
以及在此配置的东西，所以我

00:13:39.150 --> 00:13:44.700
要配置默认行为

00:13:41.250 --> 00:13:46.500
例子，而你这样做的方式就是你

00:13:44.700 --> 00:13:48.630
给出一个对应于的字符串

00:13:46.500 --> 00:13:51.090
要配置的ID，您

00:13:48.630 --> 00:13:55.050
使用config提供配置

00:13:51.090 --> 00:13:58.370
建造者，所以我以及何时建造新的

00:13:55.050 --> 00:14:00.540
弹性打造配置构建器

00:13:58.370 --> 00:14:05.340
传递我得到的ID 

00:14:00.540 --> 00:14:07.200
那是s，然后我将其称为

00:14:05.340 --> 00:14:10.230
我这里有一些选择

00:14:07.200 --> 00:14:12.860
指定时间的选项

00:14:10.230 --> 00:14:15.750
限制器，所以时间限制器配置， 

00:14:12.860 --> 00:14:18.089
自定义鸭嘴，我要去

00:14:15.750 --> 00:14:21.300
指定超时时间和

00:14:18.089 --> 00:14:23.550
我要指定的持续时间是五

00:14:21.300 --> 00:14:26.730
没问题，所以我要说

00:14:23.550 --> 00:14:28.620
我会在五秒钟后

00:14:26.730 --> 00:14:29.520
我正在呼叫的端点需要更长的时间

00:14:28.620 --> 00:14:31.350
超过五秒钟

00:14:29.520 --> 00:14:33.930
荒谬的时间很长

00:14:31.350 --> 00:14:36.440
应该没有什么希望

00:14:33.930 --> 00:14:38.310
五秒钟，但如果这样做

00:14:36.440 --> 00:14:39.900
触发断路器，您将

00:14:38.310 --> 00:14:41.880
获取默认的后备行为

00:14:39.900 --> 00:14:43.560
在这种情况下就是您想要的

00:14:41.880 --> 00:14:45.630
想要一些断路器配置，我们可以

00:14:43.560 --> 00:14:51.300
只需使用断路器配置

00:14:45.630 --> 00:14:56.310
默认的权利，所以你去和

00:14:51.300 --> 00:14:58.410
当然这很适合lambda 

00:14:56.310 --> 00:14:59.970
东西还好，所以这是我的默认设置

00:14:58.410 --> 00:15:01.830
现在我做了配置，所以您可以

00:14:59.970 --> 00:15:06.020
将特定的断路器配置为

00:15:01.830 --> 00:15:08.670
好吧，你可以说工厂点

00:15:06.020 --> 00:15:12.020
配置第二个参数

00:15:08.670 --> 00:15:14.280
是字符串ID的Varitek数组吗

00:15:12.020 --> 00:15:16.620
这些是这个的ID 

00:15:14.280 --> 00:15:18.180
配置应适用，以便您可以

00:15:16.620 --> 00:15:19.770
说希腊语，您可以提供

00:15:18.180 --> 00:15:22.290
就像我所做的那样在那里进行配置

00:15:19.770 --> 00:15:23.520
默认值，然后将Greek指定为

00:15:22.290 --> 00:15:24.480
第二个参数

00:15:23.520 --> 00:15:26.850
那将意味着

00:15:24.480 --> 00:15:30.000
该配置仅适用于

00:15:26.850 --> 00:15:31.890
特定的断路器好吗

00:15:30.000 --> 00:15:33.630
现在为了首先为了我们

00:15:31.890 --> 00:15:36.960
看到这一点，我们需要介绍

00:15:33.630 --> 00:15:39.270
一点时间进入我们的

00:15:36.960 --> 00:15:43.770
流动在这里好，所以我们要做的是

00:15:39.270 --> 00:15:47.580
我们将推迟发布

00:15:43.770 --> 00:15:52.920
数据，所以我们要说将此映射到

00:15:47.580 --> 00:15:56.160
字符串或其他错误，但我们想要

00:15:52.920 --> 00:16:00.300
延迟所有元素，所以让我们

00:15:56.160 --> 00:16:02.460
说是几秒钟的葡萄干，我们想要

00:16:00.300 --> 00:16:04.950
那秒算是

00:16:02.460 --> 00:16:10.880
我们动态到达，所以我再次

00:16:04.950 --> 00:16:13.680
我这样做是为了存根

00:16:10.880 --> 00:16:22.250
放慢速度，回想一下，所以我要

00:16:13.680 --> 00:16:24.780
说长数学点随机十倍

00:16:22.250 --> 00:16:26.760
好吧，我现在要创建第二个

00:16:24.780 --> 00:16:28.680
论据，如果是你

00:16:26.760 --> 00:16:31.740
知道是不是五六七，如果

00:16:28.680 --> 00:16:35.190
你知道五岁以上

00:16:31.740 --> 00:16:36.210
也许等于五那么当然

00:16:35.190 --> 00:16:38.160
否则触发断路器

00:16:36.210 --> 00:16:40.140
它会返回正常值，所以

00:16:38.160 --> 00:16:42.210
我们引入了延迟速度

00:16:40.140 --> 00:16:45.170
该发布者发布了该项目

00:16:42.210 --> 00:16:45.170
被发表

00:16:52.000 --> 00:17:09.880
好吧，我们实际上应该让

00:16:58.660 --> 00:17:12.159
指出花了多长时间，我将记录

00:17:09.880 --> 00:17:19.770
以及它，所以我们可以看到应该

00:17:12.159 --> 00:17:19.770
已经归还，到目前为止

00:17:24.699 --> 00:17:35.770
好吧，不，你知道我们需要什么

00:17:32.410 --> 00:17:35.770
把它放在这里

00:17:52.590 --> 00:18:09.779
好吧，摆脱这个好东西

00:18:02.100 --> 00:18:16.250
东西，所以现在返回这个给它小睡

00:18:09.779 --> 00:18:19.650
好，那是我们的弦

00:18:16.250 --> 00:18:22.409
在QuickTime上录制此视频，以便

00:18:19.650 --> 00:18:28.770
这使我的CPU抓取所有内容

00:18:22.409 --> 00:18:32.419
超慢的log4j好吧，所以那里

00:18:28.770 --> 00:18:32.419
我们现在去重新启动

00:18:41.600 --> 00:18:48.660
好的，所以工作名称等于Bob 

00:18:45.680 --> 00:18:49.800
九秒钟，这将触发

00:18:48.660 --> 00:18:52.260
您刚刚在其中得到的断路器

00:18:49.800 --> 00:18:54.690
五秒钟后进入世界

00:18:52.260 --> 00:18:57.210
一秒钟，我们把它拿回来

00:18:54.690 --> 00:18:58.710
八分之一秒会告诉我们

00:18:57.210 --> 00:19:01.910
世界，因为那不仅仅是

00:18:58.710 --> 00:19:04.680
五秒钟，所以你走了

00:19:01.910 --> 00:19:06.690
六点，我们再次打招呼，你可以看到

00:19:04.680 --> 00:19:07.980
他们在底部的日志，你可以

00:19:06.690 --> 00:19:10.320
看看它正在为我们做些什么

00:19:07.980 --> 00:19:12.270
但要花很长时间，所以它是一个电路

00:19:10.320 --> 00:19:13.890
代表客户行事的断路器

00:19:12.270 --> 00:19:16.610
说不不，我等不了这么久

00:19:13.890 --> 00:19:20.490
要走了，这就是世界

00:19:16.610 --> 00:19:23.429
好的，所以我们可以看到电路

00:19:20.490 --> 00:19:26.429
断路器，您知道它运作完美

00:19:23.429 --> 00:19:27.840
效果很好，很容易将其添加到

00:19:26.429 --> 00:19:31.679
现有的代码库并不会增加太多

00:19:27.840 --> 00:19:34.020
更多，等等，仍然还有事情

00:19:31.679 --> 00:19:36.420
有些事情要做，你知道我

00:19:34.020 --> 00:19:39.170
认为有讨论的讨论

00:19:36.420 --> 00:19:40.830
关于添加对注释的支持

00:19:39.170 --> 00:19:41.160
不知道我不知道那会是什么

00:19:40.830 --> 00:19:43.170
看起来像

00:19:41.160 --> 00:19:45.540
瑞安·巴克斯特（Ryan Baxter）和团队正在努力

00:19:43.170 --> 00:19:48.059
这当然总是渴望

00:19:45.540 --> 00:19:49.830
得到反馈，所以如果您喜欢

00:19:48.059 --> 00:19:53.690
同性恋问题或您是否发送邮件

00:19:49.830 --> 00:19:56.429
在我是github的git er上

00:19:53.690 --> 00:19:57.990
经过认证的软件社区

00:19:56.429 --> 00:20:01.370
很棒的社区频道或

00:19:57.990 --> 00:20:04.440
 Twitter广告Spring Cloud也有

00:20:01.370 --> 00:20:06.330
也许是动态的用例

00:20:04.440 --> 00:20:07.890
是的，您知道以编程方式添加了一个

00:20:06.330 --> 00:20:09.600
以编程方式打开纱丽程序

00:20:07.890 --> 00:20:10.800
然后合上断路器

00:20:09.600 --> 00:20:13.260
各种有趣的可能性

00:20:10.800 --> 00:20:15.090
除此之外，但重要的东西

00:20:13.260 --> 00:20:17.970
现在在这里，所以这是

00:20:15.090 --> 00:20:19.740
对人们来说实际上是一个不错的前进方向

00:20:17.970 --> 00:20:22.710
谁试图将其代码移至

00:20:19.740 --> 00:20:25.650
例如，这可以移动他们的代码

00:20:22.710 --> 00:20:28.710
来自历史，例如

00:20:25.650 --> 00:20:31.230
由...进入维护模式

00:20:28.710 --> 00:20:32.520
 Netflix，因此，如果您使用它，这是一个

00:20:31.230 --> 00:20:34.080
摆脱它的好机会

00:20:32.520 --> 00:20:36.360
您可以使用历史记录

00:20:34.080 --> 00:20:38.429
实际上是一个hystrix实现

00:20:36.360 --> 00:20:39.990
我是我，我将以

00:20:38.429 --> 00:20:42.870
如果您有类似J的复原力

00:20:39.990 --> 00:20:45.900
还没有投资或

00:20:42.870 --> 00:20:47.490
对hystrix的依赖性我将与我一起写

00:20:45.900 --> 00:20:51.560
朋友感谢您的收看

00:20:47.490 --> 00:20:51.560
总是，我们下次见

00:20:57.850 --> 00:20:59.910
您

