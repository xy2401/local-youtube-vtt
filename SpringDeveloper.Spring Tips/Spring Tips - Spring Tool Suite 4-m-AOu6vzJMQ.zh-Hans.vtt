WEBVTT
Kind: captions
Language: zh-Hans

00:00:26.040 --> 00:00:30.510
欢迎来到另一期

00:00:28.380 --> 00:00:32.279
春天的技巧，这是我们的分期付款

00:00:30.510 --> 00:00:35.760
来看看 spring tool suite 

00:00:32.279 --> 00:00:37.830
现在有很多新功能

00:00:35.760 --> 00:00:39.809
 spring tool suite 4，我们将

00:00:37.830 --> 00:00:41.790
只专注于其中的一些

00:00:39.809 --> 00:00:44.340
现在开始在这里启动项目

00:00:41.790 --> 00:00:46.739
这是一个新版本，不是GA 

00:00:44.340 --> 00:00:51.150
 Thea首先，最终版本将是

00:00:46.739 --> 00:00:53.430
我希望明年的某个时候

00:00:51.150 --> 00:00:55.920
明年下半年左右，所以有很多

00:00:53.430 --> 00:00:57.989
伟大的事物已经在这里，我们可以

00:00:55.920 --> 00:01:00.600
我们期待着更多

00:00:57.989 --> 00:01:03.150
迈向最终版本，所以我已经

00:01:00.600 --> 00:01:04.229
在这里打开了 spring tool suite 

00:01:03.150 --> 00:01:05.339
我们要把一个新的项目，你知道

00:01:04.229 --> 00:01:08.220
像往常一样会创造一个全新的

00:01:05.339 --> 00:01:13.440
项目在这里给它第二次

00:01:08.220 --> 00:01:16.740
稳定在那里，我们现在开始新的开始

00:01:13.440 --> 00:01:19.110
项目很好，我们要放一个新的

00:01:16.740 --> 00:01:21.510
只是一个普通的老专家和一个项目

00:01:19.110 --> 00:01:30.810
下一个Java项目，我将在网上使用

00:01:21.510 --> 00:01:35.250
支持，我将使用h2 

00:01:30.810 --> 00:01:38.330
配置属性支持，我们将

00:01:35.250 --> 00:01:42.900
使用开发工具进行实时重载和

00:01:38.330 --> 00:01:45.570
我想我们会用别的想要你的东西

00:01:42.900 --> 00:01:47.430
这是H2网络支持JPA 

00:01:45.570 --> 00:01:49.920
很好，实际上我们不需要JP，我们不需要

00:01:47.430 --> 00:01:52.050
在这种情况下需要h2非常简单

00:01:49.920 --> 00:01:54.810
例子，我认为就足够了

00:01:52.050 --> 00:01:56.100
当然具有可观察性的执行器

00:01:54.810 --> 00:01:57.840
出于运营方面的考虑，我们将添加

00:01:56.100 --> 00:01:59.130
以及，我们接下来要点击

00:01:57.840 --> 00:02:01.170
这将生成一个新项目， 

00:01:59.130 --> 00:02:02.340
然后带入我们的ID，这又是

00:02:01.170 --> 00:02:03.810
非常方便，我们本可以去

00:02:02.340 --> 00:02:05.310
从我拥有的那个春天开始，然后

00:02:03.810 --> 00:02:07.800
下载zip文件并解压缩，然后

00:02:05.310 --> 00:02:09.300
那么您知道去文件导入了

00:02:07.800 --> 00:02:11.849
选择行家，然后选择项目

00:02:09.300 --> 00:02:13.620
但这要简单得多，结果

00:02:11.849 --> 00:02:15.420
我们在IDE中有一个项目吗

00:02:13.620 --> 00:02:17.069
再次这不一定是新的

00:02:15.420 --> 00:02:18.450
功能而不是 spring tool suite 

00:02:17.069 --> 00:02:20.610
因为这很方便

00:02:18.450 --> 00:02:23.040
这里所有的东西，我们就去

00:02:20.610 --> 00:02:25.379
用一个创建一个简单的应用程序

00:02:23.040 --> 00:02:30.060
简单的休息，以便课堂阅读

00:02:25.379 --> 00:02:31.739
 rest controller 和 rest controller 

00:02:30.060 --> 00:02:35.500
将有一个端点获取映射

00:02:31.739 --> 00:02:39.850
高弦高

00:02:35.500 --> 00:02:47.050
我们会回去打招呼的，所以这是

00:02:39.850 --> 00:02:48.370
我们的 rest controller ，我将导入

00:02:47.050 --> 00:02:51.700
正确的类型可以确保所有这些

00:02:48.370 --> 00:02:54.250
是的，很好，我们要

00:02:51.700 --> 00:02:57.720
运行这个，这又是这个

00:02:54.250 --> 00:02:59.380
在IDE中启动应用程序，它将

00:02:57.720 --> 00:03:01.420
为我们的 spring boot 贡献力量

00:02:59.380 --> 00:03:03.490
仪表板这也是另一个

00:03:01.420 --> 00:03:06.040
我所有的时间之一

00:03:03.490 --> 00:03:07.720
spring tool最喜欢的功能

00:03:06.040 --> 00:03:09.640
在这里用于Eclipse和任何ID，并在

00:03:07.720 --> 00:03:11.830
一般是这个 spring boot 仪表板

00:03:09.640 --> 00:03:13.300
这个仪表板给我一个

00:03:11.830 --> 00:03:15.220
一览所有事物

00:03:13.300 --> 00:03:16.540
我正在使用的所有应用程序或

00:03:15.220 --> 00:03:18.520
他们是否在同一个多模块中

00:03:16.540 --> 00:03:21.970
是否行家，我都能看到他们

00:03:18.520 --> 00:03:24.520
这甚至会告诉我你知道让

00:03:21.970 --> 00:03:26.920
我安装运行Spring Cloud Services 

00:03:24.520 --> 00:03:28.900
像Eureka服务注册表一样

00:03:26.920 --> 00:03:30.459
知道配置服务器的压缩增益等

00:03:28.900 --> 00:03:32.980
我可以单击此按钮，然后

00:03:30.459 --> 00:03:34.120
得到那些，我可以启动

00:03:32.980 --> 00:03:36.490
他们，如果我需要的话

00:03:34.120 --> 00:03:37.860
简单地模拟一种工作方式

00:03:36.490 --> 00:03:39.970
 Microsoft环境我的本地计算机

00:03:37.860 --> 00:03:40.989
所以我们有了应用程序

00:03:39.970 --> 00:03:42.040
它正在运行，您会注意到第一个

00:03:40.989 --> 00:03:45.250
当您运行时发生的事情

00:03:42.040 --> 00:03:46.660
应用是注释

00:03:45.250 --> 00:03:48.310
因为应用程序本身成为

00:03:46.660 --> 00:03:50.380
突出显示的右侧，您可以看到有一个

00:03:48.310 --> 00:03:53.560
小 spring boot 徽章和

00:03:50.380 --> 00:03:56.890
那里的装订线和

00:03:53.560 --> 00:03:58.120
您正在为该应用程序玩吗

00:03:56.890 --> 00:04:00.070
补充了这些额外的信息

00:03:58.120 --> 00:04:01.720
当您将鼠标悬停在

00:04:00.070 --> 00:04:03.730
注释，因此此风险控制者

00:04:01.720 --> 00:04:06.269
注释突出显示，这意味着

00:04:03.730 --> 00:04:08.739
控制器正在扮演的演员

00:04:06.269 --> 00:04:11.860
我们可以看到我们可以确认

00:04:08.739 --> 00:04:14.200
通过查看这里的属性

00:04:11.860 --> 00:04:15.820
这个 spring boot 仪表板，您将

00:04:14.200 --> 00:04:18.220
请注意，我们有很多

00:04:15.820 --> 00:04:19.570
信息在这里，我们有要求

00:04:18.220 --> 00:04:21.540
点映射显示了我

00:04:19.570 --> 00:04:23.860
例如我贡献的投入

00:04:21.540 --> 00:04:25.630
这是静态分析，所以这是

00:04:23.860 --> 00:04:27.580
实际上是正在绘制的信息

00:04:25.630 --> 00:04:31.600
从应用程序的源代码

00:04:27.580 --> 00:04:33.760
本身在设计时就存在

00:04:31.600 --> 00:04:35.680
不一定有任何运行时条件

00:04:33.760 --> 00:04:37.630
然而虽然有这个 bean 

00:04:35.680 --> 00:04:39.520
这个 bean 是彻底的

00:04:37.630 --> 00:04:41.380
完全基于运行时

00:04:39.520 --> 00:04:43.150
信息基于

00:04:41.380 --> 00:04:45.010
我们从执行器得到

00:04:43.150 --> 00:04:46.550
这样我们就可以在这里服务，如果我

00:04:45.010 --> 00:04:48.500
去

00:04:46.550 --> 00:04:49.639
在这里的搜索字段中，我可以看到

00:04:48.500 --> 00:04:51.410
我有一个招募的服装主管

00:04:49.639 --> 00:04:52.340
在此代码页中没有

00:04:51.410 --> 00:04:53.960
依赖关系，现在不是

00:04:52.340 --> 00:04:56.030
注入任何东西，以便

00:04:53.960 --> 00:04:57.650
在运行时提供信息

00:04:56.030 --> 00:05:00.710
如果您查看是否将鼠标悬停在所有

00:04:57.650 --> 00:05:01.759
这个你可以看到这个过程

00:05:00.710 --> 00:05:03.500
端点正在运行，您可以看到

00:05:01.759 --> 00:05:05.330
到底要去哪里

00:05:03.500 --> 00:05:06.860
我再次得到的是信息

00:05:05.330 --> 00:05:09.500
我们在运行时得到的不是

00:05:06.860 --> 00:05:10.759
编译时间，这样一来， 

00:05:09.500 --> 00:05:13.909
 Spring工具套件中的功能是

00:05:10.759 --> 00:05:15.500
在增加方面做得更多

00:05:13.909 --> 00:05:18.319
你的经历而你知道

00:05:15.500 --> 00:05:20.990
在运行时使用代码并

00:05:18.319 --> 00:05:22.669
那是非常非常有用的东西

00:05:20.990 --> 00:05:25.550
我认为它提供了很多

00:05:22.669 --> 00:05:27.080
您无法合理理解的信息

00:05:25.550 --> 00:05:28.310
希望从源代码中挖掘

00:05:27.080 --> 00:05:30.500
一个人，否则你必须创建一个

00:05:28.310 --> 00:05:32.509
 spring boot 的完整模型

00:05:30.500 --> 00:05:33.860
本身做得正确，并且可以

00:05:32.509 --> 00:05:36.199
我们接下来的下一件事，我真的

00:05:33.860 --> 00:05:37.909
就像这是因为他们已经搬家了

00:05:36.199 --> 00:05:39.550
除了一些工具

00:05:37.909 --> 00:05:41.599
设计用于支持更多静态

00:05:39.550 --> 00:05:43.130
基于xml的确定性排序

00:05:41.599 --> 00:05:44.599
 Springwood应用仍然

00:05:43.130 --> 00:05:47.240
如果您需要额外安装

00:05:44.599 --> 00:05:48.259
的东西，但不是

00:05:47.240 --> 00:05:49.969
默认情况下在这里，因为您不会

00:05:48.259 --> 00:05:52.550
任何误报我一件事

00:05:49.969 --> 00:05:55.460
与任何想法斗争，特别是

00:05:52.550 --> 00:05:59.030
更现代的ID，例如Eclipse和

00:05:55.460 --> 00:06:00.680
而且您知道智能支持

00:05:59.030 --> 00:06:03.710
 NetBeans等是它们具有

00:06:00.680 --> 00:06:04.909
试图建模所有的东西

00:06:03.710 --> 00:06:07.340
春天试图做，他们创造

00:06:04.909 --> 00:06:08.930
该反馈在

00:06:07.340 --> 00:06:10.880
代码本身，但大多数情况下是

00:06:08.930 --> 00:06:12.800
假阳性那里有错误

00:06:10.880 --> 00:06:14.300
只是根本不是这样的菜

00:06:12.800 --> 00:06:16.219
运行得很好，编译也很好， 

00:06:14.300 --> 00:06:17.479
你最终不得不在这里禁用它

00:06:16.219 --> 00:06:19.430
我们还没有你，我们只有

00:06:17.479 --> 00:06:21.710
工作代码，绿色，干净

00:06:19.430 --> 00:06:23.090
工作，我并没有被所有人束缚

00:06:21.710 --> 00:06:26.539
这些错误和快速修复

00:06:23.090 --> 00:06:28.190
真的适用，所以我们非常非常高兴

00:06:26.539 --> 00:06:30.139
现在有一个非常简单的应用程序，让我们

00:06:28.190 --> 00:06:33.740
让我们看看我们能否走得更好

00:06:30.139 --> 00:06:36.380
首先，我可以使用控件6 

00:06:33.740 --> 00:06:38.599
中的符号导航

00:06:36.380 --> 00:06:40.669
当前的代码页，这也向我显示

00:06:38.599 --> 00:06:42.110
我可以导航你知道我可以看到我

00:06:40.669 --> 00:06:46.310
有我可以去的高端点

00:06:42.110 --> 00:06:48.770
如果我再次击中控制键6我就是你知道我

00:06:46.310 --> 00:06:50.539
我订婚时可以再次击中它，所以我

00:06:48.770 --> 00:06:53.000
击中控制6然后击中控制杆

00:06:50.539 --> 00:06:54.199
再次向我展示了导航

00:06:53.000 --> 00:06:55.759
当前的导航选项

00:06:54.199 --> 00:06:57.710
工作空间而不是当前

00:06:55.759 --> 00:06:58.909
在这种情况下的代码页说我只

00:06:57.710 --> 00:07:00.139
只有一个代码页，它们位于

00:06:58.909 --> 00:07:01.819
他们是海湾相同的文件

00:07:00.139 --> 00:07:03.620
其中之一，但很高兴知道

00:07:01.819 --> 00:07:05.840
你还有这些选择

00:07:03.620 --> 00:07:08.300
那真的很方便

00:07:05.840 --> 00:07:10.639
您浏览这些不同的注释

00:07:08.300 --> 00:07:12.800
你可以看到它们的组成

00:07:10.639 --> 00:07:14.539
 spring bootie应用程序本身

00:07:12.800 --> 00:07:16.460
Spring 书的配置是

00:07:14.539 --> 00:07:20.300
本身就是一个配置

00:07:16.460 --> 00:07:21.919
组件正确，您可以看到其余部分

00:07:20.300 --> 00:07:23.840
控制器是内部控制器， 

00:07:21.919 --> 00:07:27.650
组成所有这些你知道的东西

00:07:23.840 --> 00:07:29.960
这是组成的注释

00:07:27.650 --> 00:07:31.999
春季的中期注释

00:07:29.960 --> 00:07:35.479
运行时才是导致春天的原因

00:07:31.999 --> 00:07:37.009
尊重您知道某些合同或

00:07:35.479 --> 00:07:38.719
它知道某些义务

00:07:37.009 --> 00:07:41.240
 rest controller 既是控制器又是控制器

00:07:38.719 --> 00:07:42.830
组件，或者说控制器是一个

00:07:41.240 --> 00:07:44.900
组件，所以它知道所有这些，而且

00:07:42.830 --> 00:07:46.610
能够为我们做某些事情，但是

00:07:44.900 --> 00:07:48.349
如果您盯着代码，那不是

00:07:46.610 --> 00:07:50.750
在-不是，可能不是立即

00:07:48.349 --> 00:07:52.849
直观地知道这是有效的，因为

00:07:50.750 --> 00:07:54.469
它本身就是刻板印象

00:07:52.849 --> 00:07:58.509
注释，以便在此处获得反馈

00:07:54.469 --> 00:08:04.219
超级方便，现在我们控制了6 

00:07:58.509 --> 00:08:06.830
如果我们再做一次的话，再做两次

00:08:04.219 --> 00:08:08.900
控件中的正斜杠6 

00:08:06.830 --> 00:08:10.009
导航选项，我们获得运行时

00:08:08.900 --> 00:08:12.560
信息，所以你刚才在那看到的

00:08:10.009 --> 00:08:13.699
以前是静态分析，但在这里我们

00:08:12.560 --> 00:08:15.080
获取我们获得的运行时信息

00:08:13.699 --> 00:08:18.169
有关哪些端点的信息

00:08:15.080 --> 00:08:20.089
如果我们暴露在应用程序的思想

00:08:18.169 --> 00:08:24.139
单击一个，例如，它打开了

00:08:20.089 --> 00:08:25.610
网络浏览器，并向我显示输入

00:08:24.139 --> 00:08:27.229
对，所以现在非常方便

00:08:25.610 --> 00:08:29.509
我这里有一个简单的例子

00:08:27.229 --> 00:08:31.039
一个简单的端点，让我想

00:08:29.509 --> 00:08:33.380
参数化这个我可以创建一个

00:08:31.039 --> 00:08:35.510
我可以贡献的财产

00:08:33.380 --> 00:08:37.370
其余的控制器，所以让我们打开

00:08:35.510 --> 00:08:39.199
应用程序应用程序属性文件，这是

00:08:37.370 --> 00:08:41.060
您知道要查找的默认位置

00:08:39.199 --> 00:08:42.740
 spring boot 的配置

00:08:41.060 --> 00:08:47.510
应用程序，因此我们将创建一个

00:08:42.740 --> 00:08:49.339
新会议的名称属性正确

00:08:47.510 --> 00:08:52.010
我们要说问候名字等于

00:08:49.339 --> 00:08:53.029
现在的世界，您首先注意到

00:08:52.010 --> 00:08:54.470
使开发工具在后台运行

00:08:53.029 --> 00:08:58.279
这样就可以实时重新加载所有内容

00:08:54.470 --> 00:09:00.110
我击中保存任何东西的时间

00:08:58.279 --> 00:09:01.670
给我分析表明我

00:09:00.110 --> 00:09:03.010
此属性不存在，不在

00:09:01.670 --> 00:09:06.649
任何配置属性

00:09:03.010 --> 00:09:08.720
整个类路径中的元数据，因此

00:09:06.649 --> 00:09:11.149
知道这不是你知道的

00:09:08.720 --> 00:09:12.500
没有配置属性POJO 

00:09:11.149 --> 00:09:14.810
具有此属性

00:09:12.500 --> 00:09:16.340
它仍然有效，所以黄色而不是红色

00:09:14.810 --> 00:09:17.510
但是你仍然知道它在努力

00:09:16.340 --> 00:09:19.700
试图给我们一个线索，我们

00:09:17.510 --> 00:09:22.450
可以做得更好，让我们看看是否可以解决

00:09:19.700 --> 00:09:24.940
这里的东西问候属性和

00:09:22.450 --> 00:09:28.930
我们将其配置

00:09:24.940 --> 00:09:35.530
属性问候

00:09:28.930 --> 00:09:37.490
私有字符串名称，我们将使用

00:09:35.530 --> 00:09:41.090
控制一个并产生一些吸气剂

00:09:37.490 --> 00:09:42.590
和设置器并启用配置

00:09:41.090 --> 00:09:43.210
属性如此友好的配置

00:09:42.590 --> 00:09:48.380
属性

00:09:43.210 --> 00:09:50.120
问候属性点类，我们

00:09:48.380 --> 00:09:51.380
打开这个属性文件，在那里

00:09:50.120 --> 00:09:52.670
现在，如果您返回应用程序

00:09:51.380 --> 00:09:54.410
立即知道的属性

00:09:52.670 --> 00:09:56.300
我们现在已经修复它的事实可以

00:09:54.410 --> 00:09:57.830
给我们悬停信息等等

00:09:56.300 --> 00:09:58.970
这与其用途是一致的

00:09:57.830 --> 00:10:00.920
其他一切，如果你做服务器

00:09:58.970 --> 00:10:03.230
例如，端口等于八十

00:10:00.920 --> 00:10:05.570
您会看到它知道哪个端口

00:10:03.230 --> 00:10:07.610
是的，它知道你知道的东西

00:10:05.570 --> 00:10:09.980
本质上的文档

00:10:07.610 --> 00:10:13.130
它给了我们很多反馈

00:10:09.980 --> 00:10:15.950
该工具马上就可以了，现在我已经

00:10:13.130 --> 00:10:21.350
有了这个M控制器，我们可以看到

00:10:15.950 --> 00:10:22.430
如果不使用rest控制器

00:10:21.350 --> 00:10:23.900
您在此处向下滚动可以显示

00:10:22.430 --> 00:10:25.280
在这个过程中运行，它不是

00:10:23.900 --> 00:10:30.530
注入其他任何东西

00:10:25.280 --> 00:10:33.350
对，如果你去我们的休息管理员

00:10:30.530 --> 00:10:35.530
现在注入，让我们现在注入

00:10:33.350 --> 00:10:40.430
问候属性，因此会议

00:10:35.530 --> 00:10:43.760
属性PP，我们将

00:10:40.430 --> 00:10:48.380
在这里生成一个构造函数

00:10:43.760 --> 00:10:50.560
很好，所以有

00:10:48.380 --> 00:10:55.370
当我这样做的时候我会打招呼

00:10:50.560 --> 00:10:58.780
这个GP得了名字，我们从

00:10:55.370 --> 00:11:03.200
终结点，现在我就这样做了

00:10:58.780 --> 00:11:06.230
可以看到

00:11:03.200 --> 00:11:08.640
光束本身

00:11:06.230 --> 00:11:09.960
注射你知道我可以看到这是

00:11:08.640 --> 00:11:13.020
根据课程I的运行时信息

00:11:09.960 --> 00:11:14.220
可以看到光束注入了

00:11:13.020 --> 00:11:16.020
在这里绿化属性，就在此

00:11:14.220 --> 00:11:19.290
再次悬停，这是运行时信息

00:11:16.020 --> 00:11:20.850
与静态无缝融合的一种

00:11:19.290 --> 00:11:23.100
分析等反馈

00:11:20.850 --> 00:11:24.390
我们到达这里，这是

00:11:23.100 --> 00:11:25.530
增强，所以你仍然有一些

00:11:24.390 --> 00:11:27.840
如果没有的话，会得到有用的结果

00:11:25.530 --> 00:11:29.190
运行此代码，您知道不是

00:11:27.840 --> 00:11:30.390
没错，但是当您运行

00:11:29.190 --> 00:11:32.220
应用程序可以为您提供更多

00:11:30.390 --> 00:11:34.110
信息包括例如

00:11:32.220 --> 00:11:36.810
 bean 与之相关，所以这是一个

00:11:34.110 --> 00:11:37.680
我想到的不同观点

00:11:36.810 --> 00:11:39.090
我们将获得的信息

00:11:37.680 --> 00:11:43.400
在这里和那里以及属性视图

00:11:39.090 --> 00:11:47.090
对，因此请求映射bean一般

00:11:43.400 --> 00:11:50.070
现在，一件事可能令人生畏

00:11:47.090 --> 00:11:51.930
 spring boot ，你知道新的 spring boot 

00:11:50.070 --> 00:11:53.970
用户找出哪个对象

00:11:51.930 --> 00:11:56.580
供应商哪些对象在起作用

00:11:53.970 --> 00:11:58.080
如你所知春季

00:11:56.580 --> 00:12:00.420
引导您是否可以有条件

00:11:58.080 --> 00:12:01.980
创建或贡献对象

00:12:00.420 --> 00:12:03.750
使用条件的对象图

00:12:01.980 --> 00:12:05.780
注释和任何其他注释

00:12:03.750 --> 00:12:10.560
那是男人和一个元注释

00:12:05.780 --> 00:12:14.010
有条件的，让他们让我们做这个

00:12:10.560 --> 00:12:16.140
将此绿色属性对象置为bean或

00:12:14.010 --> 00:12:17.820
宁愿我们休息一下

00:12:16.140 --> 00:12:18.750
有条件的控制器，所以我们要

00:12:17.820 --> 00:12:21.720
做这个护发素，我们要说

00:12:18.750 --> 00:12:23.790
有条件哦，我不懂课

00:12:21.720 --> 00:12:28.350
如果类Java点郎那个字符串

00:12:23.790 --> 00:12:29.640
在类路径上，那么这个bean将

00:12:28.350 --> 00:12:31.380
被注册，将有助于您

00:12:29.640 --> 00:12:32.760
可以看到，当

00:12:31.380 --> 00:12:34.350
我们启动的一个应用是

00:12:32.760 --> 00:12:36.180
突出显示 bean 显然在那里

00:12:34.350 --> 00:12:37.920
因为班上的旅行字符串

00:12:36.180 --> 00:12:41.520
存在，它向我们展示了

00:12:37.920 --> 00:12:44.520
这种情况，所以我们知道

00:12:41.520 --> 00:12:46.890
 bean在进程ID 1401 v中运行

00:12:44.520 --> 00:12:48.870
我们可以看到它叫做

00:12:46.890 --> 00:12:52.140
一切都如我们所期望的

00:12:48.870 --> 00:12:55.470
再次将此条件更改为名称

00:12:52.140 --> 00:12:59.190
当然等于java.lang foo 

00:12:55.470 --> 00:13:00.330
我们开始的地方不存在，现在您

00:12:59.190 --> 00:13:02.100
可以看到那意味着剩下的

00:13:00.330 --> 00:13:03.720
控制器不再突出显示

00:13:02.100 --> 00:13:04.950
对，这表明这个 bean 不是

00:13:03.720 --> 00:13:06.630
在运行时出现

00:13:04.950 --> 00:13:10.440
然后我们可以通过再次确认

00:13:06.630 --> 00:13:11.800
要控制六控制六四

00:13:10.440 --> 00:13:14.110
削减

00:13:11.800 --> 00:13:15.569
而寻找高右高不会

00:13:14.110 --> 00:13:17.339
不再存在，它不在运行时

00:13:15.569 --> 00:13:20.679
图形

00:13:17.339 --> 00:13:22.360
这是运行时反馈此分析

00:13:20.679 --> 00:13:23.980
发生了什么，什么是什么

00:13:22.360 --> 00:13:25.779
你知道这实际上可以使

00:13:23.980 --> 00:13:28.689
例如，调试东西非常容易

00:13:25.779 --> 00:13:30.879
所以说如果我删除此评论

00:13:28.689 --> 00:13:32.999
它将重新启动自己， 

00:13:30.879 --> 00:13:35.290
一切都会恢复到我们所期望的

00:13:32.999 --> 00:13:37.329
我这里有一个应用程序

00:13:35.290 --> 00:13:38.579
将此应用程序移动到云中

00:13:37.329 --> 00:13:40.839
我要做的是我要去我的

00:13:38.579 --> 00:13:43.600
文件系统，我将创建一个新的

00:13:40.839 --> 00:13:46.929
文件，该文件将是云

00:13:43.600 --> 00:13:52.480
铸造清单yamo如此明显

00:13:46.929 --> 00:13:53.769
点y mo和待处理的清单是

00:13:52.480 --> 00:13:54.879
非常简单的文档不必

00:13:53.769 --> 00:13:57.639
有那么多你可以给它一个

00:13:54.879 --> 00:14:04.179
例如名字，所以我就打电话

00:13:57.639 --> 00:14:05.170
这个STS现场演示很好，您可以

00:14:04.179 --> 00:14:06.339
您还可以在这里进行其他各种操作

00:14:05.170 --> 00:14:08.199
你知道你可以看到

00:14:06.339 --> 00:14:10.239
支持此清单的工具

00:14:08.199 --> 00:14:11.679
文件，这是一个山药哦，对，这是一个山药

00:14:10.239 --> 00:14:14.410
会提出申请，但这也是众筹

00:14:11.679 --> 00:14:15.850
清单，并且有一组特定的

00:14:14.410 --> 00:14:17.470
您可以放入此文件中的内容等等

00:14:15.850 --> 00:14:19.269
这实际上是由工具支持的

00:14:17.470 --> 00:14:22.660
在Spring工具套件中

00:14:19.269 --> 00:14:24.490
所以我们可以在这里指定其他所有内容

00:14:22.660 --> 00:14:26.259
例如记忆和所有这些东西

00:14:24.490 --> 00:14:27.610
但就我们的目的而言，就足够了

00:14:26.259 --> 00:14:30.129
它离开它，所以导致

00:14:27.610 --> 00:14:32.709
在那里，然后我们实际上可以现在

00:14:30.129 --> 00:14:34.240
部署到众筹，所以我要

00:14:32.709 --> 00:14:36.549
只需添加云即可找到用户

00:14:34.240 --> 00:14:38.850
目标我要登录我会说星巴克

00:14:36.549 --> 00:14:38.850
男人

00:14:41.400 --> 00:14:46.670
好的，我们将点击选择空间

00:14:47.270 --> 00:14:51.240
会问我选择一个

00:14:49.830 --> 00:15:01.940
组织和我要选择的空间

00:14:51.240 --> 00:15:01.940
来自Eng的影片再次完成

00:15:02.900 --> 00:15:07.500
这将需要几秒钟

00:15:05.850 --> 00:15:09.120
这里连接平台互动

00:15:07.500 --> 00:15:10.770
使用它进行所有此类身份验证

00:15:09.120 --> 00:15:11.970
你可以看到它正在尝试你的东西

00:15:10.770 --> 00:15:13.650
知道尝试获取所有应用程序

00:15:11.970 --> 00:15:15.540
实例，我们在那里，所以我们有一个

00:15:13.650 --> 00:15:18.420
整个服务和应用程序

00:15:15.540 --> 00:15:20.100
可供我们使用，现在我们可以

00:15:18.420 --> 00:15:23.010
部署我们的应用程序，以便删除

00:15:20.100 --> 00:15:24.330
现有的再见，所以我可以

00:15:23.010 --> 00:15:25.920
做我将要执行的命令

00:15:24.330 --> 00:15:27.660
行，我们也将从这里开始

00:15:25.920 --> 00:15:30.840
而且我们要他们采取

00:15:27.660 --> 00:15:33.090
这个演示，我只是部署

00:15:30.840 --> 00:15:35.160
拖放它会提示我说

00:15:33.090 --> 00:15:36.150
我想使用

00:15:35.160 --> 00:15:38.250
您刚刚的清单文件

00:15:36.150 --> 00:15:40.530
创建并检测到我们将给它

00:15:38.250 --> 00:15:42.650
一个演示在这里的名字，它将有

00:15:40.530 --> 00:15:44.940
它需要建立一切的一切

00:15:42.650 --> 00:15:47.940
水合该定义并扩展它

00:15:44.940 --> 00:15:49.020
进入应用程序，依此类推

00:15:47.940 --> 00:15:53.040
能够做到，我认为它需要运行

00:15:49.020 --> 00:15:54.540
正确的应用程序，它将看起来

00:15:53.040 --> 00:15:55.860
在应用程序将推动它

00:15:54.540 --> 00:15:58.410
平台将看到传入

00:15:55.860 --> 00:16:00.960
神器，它将了解

00:15:58.410 --> 00:16:02.940
这是一个Java应用程序，它正在运行

00:16:00.960 --> 00:16:03.870
创建具有以下内容的文件系统

00:16:02.940 --> 00:16:06.090
运行该程序所需的一切

00:16:03.870 --> 00:16:09.600
包括jdk或

00:16:06.090 --> 00:16:11.550
如果我们使用的是Tomcat，它将使用JRE 

00:16:09.600 --> 00:16:13.410
你知道我们是否必须加点

00:16:11.550 --> 00:16:15.390
战争，它会下载一个补丁

00:16:13.410 --> 00:16:17.640
 Tomcat最新，最强大的安装

00:16:15.390 --> 00:16:19.080
然后为我们运行

00:16:17.640 --> 00:16:21.090
例子，所以它将做所有的事情

00:16:19.080 --> 00:16:23.760
对我们而言，C必须无缝地位于

00:16:21.090 --> 00:16:25.050
我们可以看到所有反映的场景

00:16:23.760 --> 00:16:27.420
在控制台中，所以我们再次

00:16:25.050 --> 00:16:29.550
设法获取或发起新的

00:16:27.420 --> 00:16:31.050
项目编辑得到很多反馈

00:16:29.550 --> 00:16:32.430
在我们开发和编辑时

00:16:31.050 --> 00:16:34.710
并一直住在ID中

00:16:32.430 --> 00:16:36.600
离开我们可以打开端点

00:16:34.710 --> 00:16:38.790
等等，我们可以对其进行更改

00:16:36.600 --> 00:16:41.280
然后可以将其打包为平台

00:16:38.790 --> 00:16:43.830
像Cloud Foundry一样获得明智的反馈

00:16:41.280 --> 00:16:45.570
在那里，然后无缝地

00:16:43.830 --> 00:16:47.790
工具拖动将其部署到平台

00:16:45.570 --> 00:16:49.560
对，所以这是一个非常不错的体验

00:16:47.790 --> 00:16:51.420
对，这使您能够移动

00:16:49.560 --> 00:16:53.400
从概念迅速发展到

00:16:51.420 --> 00:16:55.350
一天结束时的客户

00:16:53.400 --> 00:16:55.740
我们想要的以及您的每一步

00:16:55.350 --> 00:16:57.930
我们的方式

00:16:55.740 --> 00:17:00.420
现在获得了更多的帮助

00:16:57.930 --> 00:17:02.100
生产样例显然我

00:17:00.420 --> 00:17:04.580
我会不断整合吗

00:17:02.100 --> 00:17:07.770
管道，因此有新的支持

00:17:04.580 --> 00:17:10.020
大堂大堂C是我们的

00:17:07.770 --> 00:17:14.520
关键的岗位融合

00:17:10.020 --> 00:17:17.070
您知道的基础设施职位

00:17:14.520 --> 00:17:18.840
常规CI工具，这是一个

00:17:17.070 --> 00:17:19.920
设计用于处理连续性的工具

00:17:18.840 --> 00:17:21.990
整合与分配

00:17:19.920 --> 00:17:24.060
不部署分布式系统

00:17:21.990 --> 00:17:26.460
只是个别的整体应用

00:17:24.060 --> 00:17:28.200
还有一个你知道那里是一个莫

00:17:26.460 --> 00:17:29.760
的配置文件，以及

00:17:28.200 --> 00:17:31.260
那里也有工具

00:17:29.760 --> 00:17:33.090
这是很自然的事情，所以没有

00:17:31.260 --> 00:17:34.620
说我想玩这个玩

00:17:33.090 --> 00:17:36.690
所以我们去那里有我们的应用程序

00:17:34.620 --> 00:17:39.570
它已经启动并运行了，我们可以在这里看到

00:17:36.690 --> 00:17:42.300
对，我们拥有所有这些信息

00:17:39.570 --> 00:17:43.380
我们对您有了解

00:17:42.300 --> 00:17:45.390
我们可以在网络浏览器中打开它

00:17:43.380 --> 00:17:48.540
这是我们的应用程序正在运行

00:17:45.390 --> 00:17:50.190
在Cloud Foundry上还活着，我打个招呼

00:17:48.540 --> 00:17:51.900
它说你好世界，所以我们已经

00:17:50.190 --> 00:17:53.280
设法部署应用程序

00:17:51.900 --> 00:17:55.320
更改它，我们可以查看以下日志

00:17:53.280 --> 00:17:58.020
现在该应用程序全部在ID中

00:17:55.320 --> 00:18:00.810
这就是你知道这一切非常

00:17:58.020 --> 00:18:03.260
本身很有用，速度更快

00:18:00.810 --> 00:18:05.100
更苗条更有效

00:18:03.260 --> 00:18:07.380
不断涌现的工具套件体验

00:18:05.100 --> 00:18:08.670
与之相反，更多有用的信息

00:18:07.380 --> 00:18:10.410
噪声，您知道信噪比

00:18:08.670 --> 00:18:12.990
这比我们的要好得多

00:18:10.410 --> 00:18:14.910
恩，但是如果那一切

00:18:12.990 --> 00:18:17.340
将会非常有趣

00:18:14.910 --> 00:18:21.060
强大的发布，我当然很高兴

00:18:17.340 --> 00:18:22.050
我很高兴升级，但这是一个

00:18:21.060 --> 00:18:23.580
我们还没有真正谈论过的事情

00:18:22.050 --> 00:18:25.410
这就是我们拥有的所有工具

00:18:23.580 --> 00:18:28.590
到目前为止看着这里

00:18:25.410 --> 00:18:30.930
改进的运行时元数据

00:18:28.590 --> 00:18:33.270
分析，它给你

00:18:30.930 --> 00:18:35.330
洞察力为您所知

00:18:33.270 --> 00:18:38.520
 Cloud Foundry的清单清单

00:18:35.330 --> 00:18:39.720
所有这些东西都是基于某种东西

00:18:38.520 --> 00:18:41.790
称为语言服务器

00:18:39.720 --> 00:18:43.590
源自Microsoft的协议

00:18:41.790 --> 00:18:45.300
 Visual Studio代码开源项目

00:18:43.590 --> 00:18:47.460
语言服务器只是一个协议

00:18:45.300 --> 00:18:50.370
这是一个独立的流程

00:18:47.460 --> 00:18:52.680
与工具相邻的ID和

00:18:50.370 --> 00:18:54.690
为您分析代码，并且有一个

00:18:52.680 --> 00:18:58.530
 ID与

00:18:54.690 --> 00:19:01.410
交互是IDE的语言服务器

00:18:58.530 --> 00:19:03.920
不可知的，所以虽然它始于

00:19:01.410 --> 00:19:06.390
其他ID具有的Visual Studio代码

00:19:03.920 --> 00:19:07.740
开始实施那个spring tool

00:19:06.390 --> 00:19:09.390
套件现在正在使用这些语言

00:19:07.740 --> 00:19:09.670
服务器，但那些语言服务器是

00:19:09.390 --> 00:19:12.550
所有

00:19:09.670 --> 00:19:13.930
也可用于其他想法

00:19:12.550 --> 00:19:15.070
可以在Visual Studio代码中使用它

00:19:13.930 --> 00:19:18.190
可以在spring工具套件中使用它

00:19:15.070 --> 00:19:20.140
它是一个原子，我听到你从

00:19:18.190 --> 00:19:21.640
我看到的是有人在看

00:19:20.140 --> 00:19:24.070
为Emacs实现它，我的意思是你

00:19:21.640 --> 00:19:26.500
真的知道天空是极限

00:19:24.070 --> 00:19:29.170
现在有一个真正的工作室代码和原子

00:19:26.500 --> 00:19:32.050
显然是 spring tool suite 

00:19:29.170 --> 00:19:35.550
支持，让我们来看看

00:19:32.050 --> 00:19:37.660
我们刚刚在其中创建的项目

00:19:35.550 --> 00:19:39.010
要解码的视频，所以我要转到

00:19:37.660 --> 00:19:42.630
这个项目是那个

00:19:39.010 --> 00:19:45.040
我们就在正确的地方，所以如果我们去这里

00:19:42.630 --> 00:19:48.430
你可以看到它说回家吉朗

00:19:45.040 --> 00:19:49.870
文档测试是演示的，去这里

00:19:48.430 --> 00:19:52.030
您的长文件的所在地

00:19:49.870 --> 00:19:53.950
对于演示，我将运行该应用程序

00:19:52.030 --> 00:19:55.960
我会打代码，现在要记住语言

00:19:53.950 --> 00:19:57.700
服务器是一个单独的过程

00:19:55.960 --> 00:19:59.590
独立于任何事物而运行的事物

00:19:57.700 --> 00:20:01.960
特定的工具，所以如果我打开这个

00:19:59.590 --> 00:20:03.790
代码，因为它在一个

00:20:01.960 --> 00:20:06.420
 spring tool suite ，您可以看到

00:20:03.790 --> 00:20:09.190
一秒钟它获得相同的运行时间

00:20:06.420 --> 00:20:10.420
我可以看到所有的元数据

00:20:09.190 --> 00:20:12.010
我可以在里面看到的信息

00:20:10.420 --> 00:20:13.810
鼠标悬停在这里时， spring tool suite 

00:20:12.010 --> 00:20:18.010
这些这些不同的徘徊，所以如果

00:20:13.810 --> 00:20:21.100
如果我将鼠标悬停在上面，我会得到相同的结果

00:20:18.010 --> 00:20:22.840
我可以使用控件导航的信息

00:20:21.100 --> 00:20:25.120
 P，那让我看看

00:20:22.840 --> 00:20:27.040
不同的代码页，例如，如果我这样做

00:20:25.120 --> 00:20:29.380
会告诉我静态分析

00:20:27.040 --> 00:20:30.790
给我看看例如注释

00:20:29.380 --> 00:20:32.050
他们只是在休息之前就被看到了

00:20:30.790 --> 00:20:34.330
控制器由控制器组成

00:20:32.050 --> 00:20:36.250
控制器和组件，它将向我显示

00:20:34.330 --> 00:20:38.890
现在进行符合道德的静态分析

00:20:36.250 --> 00:20:40.360
也分析了高端点，所以

00:20:38.890 --> 00:20:44.380
我得到的一切就像以前一样

00:20:40.360 --> 00:20:47.050
如果还有T和Ctrl T， 

00:20:44.380 --> 00:20:49.240
我做一个四斜杠，你知道你知道哈希

00:20:47.050 --> 00:20:52.930
可以看到斜杠的标记正斜杠

00:20:49.240 --> 00:20:54.700
所有的运行时扩充视图

00:20:52.930 --> 00:20:57.100
端点也一样，所以我

00:20:54.700 --> 00:20:58.630
可以单击它并打开打开

00:20:57.100 --> 00:21:00.970
浏览器显示端点

00:20:58.630 --> 00:21:03.640
然后它现在正在运行

00:21:00.970 --> 00:21:05.440
当然，在这种情况下，我已经运行了

00:21:03.640 --> 00:21:06.610
在spring tool中的应用还可以

00:21:05.440 --> 00:21:09.340
让我们继续并在这里关闭它

00:21:06.610 --> 00:21:10.780
然后回到这里，你会

00:21:09.340 --> 00:21:15.010
也欣赏您可以运行的东西

00:21:10.780 --> 00:21:17.650
在vs代码内部，所以如果我点击

00:21:15.010 --> 00:21:19.990
点击运行，它将创建一个运行

00:21:17.650 --> 00:21:21.340
配置和第一次

00:21:19.990 --> 00:21:22.960
它创建了一个配置，但它

00:21:21.340 --> 00:21:25.080
不一定会启动它，是的

00:21:22.960 --> 00:21:26.830
在这种情况下再做一次五

00:21:25.080 --> 00:21:28.840
我们去了，所以现在

00:21:26.830 --> 00:21:29.980
在Visual内部启动应用程序

00:21:28.840 --> 00:21:32.200
我们使用的Studio代码相同

00:21:29.980 --> 00:21:34.360
您知道Microsoft的调试器

00:21:32.200 --> 00:21:37.029
贡献给Visual Studio代码

00:21:34.360 --> 00:21:38.380
相同的机器，所以这就是

00:21:37.029 --> 00:21:42.010
工作非常复杂

00:21:38.380 --> 00:21:45.070
虫虫吧，你不知道我不确定

00:21:42.010 --> 00:21:46.840
它与一个

00:21:45.070 --> 00:21:49.029
在Eclipse中，但是非常非常非常

00:21:46.840 --> 00:21:50.080
有用的非常实用的支持

00:21:49.029 --> 00:21:52.690
现在要记住的一件事是

00:21:50.080 --> 00:21:53.799
那一切的总和

00:21:52.690 --> 00:21:57.130
您在Visual Studio中使用的位置

00:21:53.799 --> 00:21:58.770
代码是你知道这是一个非常

00:21:57.130 --> 00:22:02.140
开源协作

00:21:58.770 --> 00:22:03.730
用于Visual的启动器斜线调试器

00:22:02.140 --> 00:22:06.309
 Studio代码由Microsoft提供

00:22:03.730 --> 00:22:09.279
 Red语言本身的Java语言工具

00:22:06.309 --> 00:22:12.220
戴上 spring boot ，就知道了支持

00:22:09.279 --> 00:22:15.340
对于Cloud Foundry for Concours 

00:22:12.220 --> 00:22:16.419
为了波什这是分开的

00:22:15.340 --> 00:22:19.210
 spring boot 本身就是所有

00:22:16.419 --> 00:22:21.880
关键的，所以你知道有很多

00:22:19.210 --> 00:22:24.340
东西在这里无缝地融合在一起

00:22:21.880 --> 00:22:27.610
一种在工具中使用的语言

00:22:24.340 --> 00:22:29.320
不可知论的方式，那实际上是一种

00:22:27.610 --> 00:22:31.990
我最喜欢的Visual功能

00:22:29.320 --> 00:22:34.510
我在这里的工作室代码是

00:22:31.990 --> 00:22:37.090
我在这里不是很好的Java支持

00:22:34.510 --> 00:22:39.159
我很确定它是否与

00:22:37.090 --> 00:22:41.799
像 spring tool suite ，但我

00:22:39.159 --> 00:22:43.450
确实也对

00:22:41.799 --> 00:22:44.529
例如，dotnet可以，如果

00:22:43.450 --> 00:22:46.090
您所在的企业

00:22:44.529 --> 00:22:48.940
你必须处理这两个

00:22:46.090 --> 00:22:50.740
不错的选择，我可以得到一个能干的网

00:22:48.940 --> 00:22:53.289
在这里编辑IDE 

00:22:50.740 --> 00:22:56.169
我可以做打字稿，例如

00:22:53.289 --> 00:22:57.610
 Microsoft起源于您的语言

00:22:56.169 --> 00:23:01.510
我知道很多事情我可以在这里做

00:22:57.610 --> 00:23:02.919
在一个工具中只有一个ID， 

00:23:01.510 --> 00:23:07.330
相同的工具相同的机器

00:23:02.919 --> 00:23:08.770
击键等等，所以我们得到了一个

00:23:07.330 --> 00:23:10.779
好吧，我们得到了很多，我们得到了很多

00:23:08.770 --> 00:23:13.330
现在可以使用的事实

00:23:10.779 --> 00:23:16.770
其他工具spring tool

00:23:13.330 --> 00:23:24.210
春季I / O页面

00:23:16.770 --> 00:23:27.039
工具页面已更新或对不起

00:23:24.210 --> 00:23:30.399
博客今天才更新

00:23:27.039 --> 00:23:33.789
记录所有物品的释放

00:23:30.399 --> 00:23:34.929
他们知道新功能，所以如果您

00:23:33.789 --> 00:23:36.200
想看更多，你想学习

00:23:34.929 --> 00:23:37.490
如何安装

00:23:36.200 --> 00:23:40.240
你知道来自不同的市场

00:23:37.490 --> 00:23:42.230
等等这里有指示

00:23:40.240 --> 00:23:43.460
我们鼓励您尝试一点点

00:23:42.230 --> 00:23:45.590
踢你知道踢轮胎， 

00:23:43.460 --> 00:23:47.899
反馈，我们总是很乐意拥有更多

00:23:45.590 --> 00:23:50.740
输入，并非常感谢

00:23:47.899 --> 00:23:50.740
看，下次见

00:23:57.340 --> 00:23:59.400
您

