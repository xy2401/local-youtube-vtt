WEBVTT
Kind: captions
Language: zh-Hans

00:00:25.410 --> 00:00:30.070
嗨， Spring 粉丝们欢迎来到另一个

00:00:27.849 --> 00:00:31.930
Spring 的特别分期提示

00:00:30.070 --> 00:00:33.640
是另一种中期

00:00:31.930 --> 00:00:35.890
 Spring 小隔间发作

00:00:33.640 --> 00:00:37.270
因为我想带给你一些东西

00:00:35.890 --> 00:00:40.110
刚刚放下一个

00:00:37.270 --> 00:00:43.300
掌握Spring Framework 

00:00:40.110 --> 00:00:44.980
网络NBC不是FN编程模型，所以如果

00:00:43.300 --> 00:00:46.839
您曾经使用过Spring 卷材助焊剂

00:00:44.980 --> 00:00:49.390
功能反应终点样式

00:00:46.839 --> 00:00:51.040
现在可用于 Spring 并接收

00:00:49.390 --> 00:00:54.699
基于应用的servlet 

00:00:51.040 --> 00:00:56.260
应用程序，这不是

00:00:54.699 --> 00:01:00.309
反应性的东西只是为 Spring MVC 

00:00:56.260 --> 00:01:03.059
对，这是等效或

00:01:00.309 --> 00:01:05.860
与地址控制器样式类似

00:01:03.059 --> 00:01:07.000
但是对于 Spring MVC来说，这是非常酷的

00:01:05.860 --> 00:01:09.220
对，这当然是可能的

00:01:07.000 --> 00:01:11.830
因为Spring Framework 和spring MVC 

00:01:09.220 --> 00:01:13.479
所有这些都假设一个Java基线， 

00:01:11.830 --> 00:01:16.259
所以当我们介绍该功能时

00:01:13.479 --> 00:01:19.289
用于 Spring webflix的DSL响应式

00:01:16.259 --> 00:01:21.670
人们真的很喜欢它，还有一个共同点

00:01:19.289 --> 00:01:23.020
有点要求是

00:01:21.670 --> 00:01:25.330
可用于 Spring MVC 

00:01:23.020 --> 00:01:27.009
应用程序，现在

00:01:25.330 --> 00:01:29.530
发生在我愿意的主人身上

00:01:27.009 --> 00:01:31.090
给大家尝试一下，我们

00:01:29.530 --> 00:01:33.130
继续介绍一些

00:01:31.090 --> 00:01:34.930
今天的功能以及

00:01:33.130 --> 00:01:36.790
这是为了看新东西

00:01:34.930 --> 00:01:39.280
要获得它，我们当然必须使用

00:01:36.790 --> 00:01:40.240
最新最好的 spring boot 

00:01:39.280 --> 00:01:45.250
转身带来最新的最

00:01:40.240 --> 00:01:46.810
 Spring MVC网站让我看到FN我只是

00:01:45.250 --> 00:01:50.820
会带来网络内容的网络支持

00:01:46.810 --> 00:01:53.200
我将带上Lombok和开发工具， 

00:01:50.820 --> 00:01:54.579
就这样，你知道你可以带来

00:01:53.200 --> 00:01:58.030
任何其他想要您可以使用APA和

00:01:54.579 --> 00:01:59.350
你知道JDBC，你知道这些是

00:01:58.030 --> 00:02:01.689
事情只是常规的MVC 

00:01:59.350 --> 00:02:03.130
应用程序，只是我们正在使用

00:02:01.689 --> 00:02:07.930
不同的编程模型，所以我们

00:02:03.130 --> 00:02:09.549
将点击生成，默认情况下， 

00:02:07.930 --> 00:02:12.010
将导致基于tomcat 

00:02:09.549 --> 00:02:13.299
应用程序，我将改变它

00:02:12.010 --> 00:02:15.340
我将换出Tomcat并使用

00:02:13.299 --> 00:02:18.040
尽管可以使用码头或

00:02:15.340 --> 00:02:20.850
 Tomcat或您知道任何配置

00:02:18.040 --> 00:02:24.070
你甚至知道吗

00:02:20.850 --> 00:02:25.989
回到servlet部署

00:02:24.070 --> 00:02:28.150
我做了一些的 Spring 选项

00:02:25.989 --> 00:02:29.560
年前，现在你甚至可以把这个

00:02:28.150 --> 00:02:32.200
到一个点阵并将其部署到

00:02:29.560 --> 00:02:34.090
传统的Web服务器传统的

00:02:32.200 --> 00:02:36.099
 servlet容器都很好

00:02:34.090 --> 00:02:39.020
选择好选择对很多

00:02:36.099 --> 00:02:42.569
选项，让我们开始构建

00:02:39.020 --> 00:02:50.459
我将使用Java 11谢谢

00:02:42.569 --> 00:02:59.730
而且我想带上我，我

00:02:50.459 --> 00:03:06.890
将会排除Tomcat Tomcat 

00:02:59.730 --> 00:03:11.760
好的， spring boot 启动器的Tomcat ID 

00:03:06.890 --> 00:03:12.989
好吧，所以我被排除在外了

00:03:11.760 --> 00:03:14.580
每种方式这只是一个基本

00:03:12.989 --> 00:03:19.220
应用程序就可以开始

00:03:14.580 --> 00:03:19.220
像这样开始吧

00:03:24.490 --> 00:03:30.110
现在我要使用一些不错的新

00:03:27.770 --> 00:03:32.690
Spring 内部的属性

00:03:30.110 --> 00:03:37.010
开机，你知道我有正负

00:03:32.690 --> 00:03:38.840
你用这个我没有这些

00:03:37.010 --> 00:03:40.310
属性无关紧要，但我不

00:03:38.840 --> 00:03:41.540
我在类方法上没有KP吗

00:03:40.310 --> 00:03:45.280
但是如果我做到了，那就是我会用的

00:03:41.540 --> 00:03:45.280
好吧，我们开始

00:03:50.440 --> 00:03:59.740
好吧，现在让我们看看它的外观

00:03:53.710 --> 00:04:04.720
就像这样，假设我有一流的产品

00:03:59.740 --> 00:04:09.720
没事，私下或实际上更好

00:04:04.720 --> 00:04:15.280
还可以的人，所以私有字符串名称

00:04:09.720 --> 00:04:17.260
数据中的私有长ID完全是它的

00:04:15.280 --> 00:04:21.340
没有args构造函数，只是基本的

00:04:17.260 --> 00:04:28.680
东西没什么好看的，想要

00:04:21.340 --> 00:04:38.170
创建私人的班级服务

00:04:28.680 --> 00:04:49.560
最终集人新人集

00:04:38.170 --> 00:04:49.560
乔什的第一人称基因

00:04:51.330 --> 00:05:05.810
塔米的三个

00:05:00.300 --> 00:05:09.509
好了，所以这里有几个名字

00:05:05.810 --> 00:05:11.099
不，不，我不能离开那超出

00:05:09.509 --> 00:05:12.659
我只是无法填补网络的商人不会

00:05:11.099 --> 00:05:14.310
批准好吧好，现在我们有了

00:05:12.659 --> 00:05:19.740
设定人

00:05:14.310 --> 00:05:23.490
哦，好吧，这只是一组非常简单的结尾

00:05:19.740 --> 00:05:25.979
通过ID和in指向此处的人

00:05:23.490 --> 00:05:30.810
回顾我希望我曾经用过

00:05:25.979 --> 00:05:38.389
 spring data JPA，但您知道诸如

00:05:30.810 --> 00:05:49.759
生活过滤器PP获得的ID等于ID 

00:05:38.389 --> 00:05:54.560
首先找到否则扔你知道

00:05:49.759 --> 00:05:57.340
非法论点例外好吗你知道

00:05:54.560 --> 00:06:02.630
人

00:05:57.340 --> 00:06:05.030
医生好名字都看那个身份证

00:06:02.630 --> 00:06:09.620
对，所以这可以，所以这是

00:06:05.030 --> 00:06:11.150
只是一个非常简单的服务，现在我们可以

00:06:09.620 --> 00:06:16.340
创建我们的端点好了，我们可以创建

00:06:11.150 --> 00:06:18.200
这样我们的端点集中

00:06:16.340 --> 00:06:19.580
使用功能反应风格，但

00:06:18.200 --> 00:06:22.940
不是不是没有反应这只是一个

00:06:19.580 --> 00:06:29.890
功能样式，因此网络abc FN样式

00:06:22.940 --> 00:06:33.950
正确，因此路由器功能服务器会做出响应

00:06:29.890 --> 00:06:36.140
路线并使用建造者，所以

00:06:33.950 --> 00:06:39.620
反应性函数中的两个构建器

00:06:36.140 --> 00:06:41.140
风格对吧，就是说路由器

00:06:39.620 --> 00:06:45.710
功能

00:06:41.140 --> 00:06:48.650
路线或那条路线，然后放

00:06:45.710 --> 00:06:51.550
要求我得到这样的

00:06:48.650 --> 00:06:51.550
处理程序功能

00:06:51.840 --> 00:06:58.650
你甚至可以一起改变它

00:06:53.730 --> 00:06:59.550
并路由您知道的帖子或其他内容

00:06:58.650 --> 00:07:01.860
对，你可以做所有类似的事情

00:06:59.550 --> 00:07:04.260
一切仍然有效，但这也是

00:07:01.860 --> 00:07:06.150
被我认为已经被这个

00:07:04.260 --> 00:07:10.440
我非常喜欢的另一种风格

00:07:06.150 --> 00:07:13.320
路线，所以你可以说回避你

00:07:10.440 --> 00:07:18.690
知道那里的建设者带来了

00:07:13.320 --> 00:07:21.870
我可以说我提供给您的人很好

00:07:18.690 --> 00:07:24.600
阻碍功能，然后您建立

00:07:21.870 --> 00:07:28.380
整个事情都可以建立，好吧，等等

00:07:24.600 --> 00:07:31.680
这里的工作是注射人

00:07:28.380 --> 00:07:34.919
服务PS好的，我要提供一个

00:07:31.680 --> 00:07:36.389
服务器响应时间可以了

00:07:34.919 --> 00:07:38.370
请注意，对于身体参数I 

00:07:36.389 --> 00:07:38.910
不必全部指定顾问

00:07:38.370 --> 00:07:41.130
对

00:07:38.910 --> 00:07:43.470
实际上，无需指定

00:07:41.130 --> 00:07:45.450
都是因为它们不像在那儿旋转

00:07:43.470 --> 00:07:48.660
 web flex我们在世界上返回的地方

00:07:45.450 --> 00:07:50.850
 T将要转到的类型T的发布者

00:07:48.660 --> 00:07:53.340
随着时间流逝而被消耗掉， 

00:07:50.850 --> 00:07:56.250
因此我不能认为我有

00:07:53.340 --> 00:07:57.600
您认识的出版商的整体

00:07:56.250 --> 00:08:00.840
我无法将整个内容传递给JSON 

00:07:57.600 --> 00:08:01.919
为Jason编组在这里纳税

00:08:00.840 --> 00:08:04.890
将整个事情传递

00:08:01.919 --> 00:08:07.410
我发送Mac的身体已经过去了

00:08:04.890 --> 00:08:09.360
知道一个人扑向了

00:08:07.410 --> 00:08:11.729
消息转换器，他们应该是消息

00:08:09.360 --> 00:08:13.500
转换器，所以它可以找出什么

00:08:11.729 --> 00:08:14.700
你知道那是不会尝试的

00:08:13.500 --> 00:08:15.630
弄清楚每个站立的日子

00:08:14.700 --> 00:08:21.750
只是弄清楚整个事情

00:08:15.630 --> 00:08:23.220
所以PS点都可以了

00:08:21.750 --> 00:08:26.280
一点点替换为那个替换

00:08:23.220 --> 00:08:29.729
 Lambda使用静态导入，并且

00:08:26.280 --> 00:08:33.780
瞧，好，这是我的功能分类

00:08:29.729 --> 00:08:37.050
 Web柔性样式或FN的Web柔性

00:08:33.780 --> 00:08:38.339
样式终结点，但不是网络

00:08:37.050 --> 00:08:41.339
正确阻止，让我们看看实际情况

00:08:38.339 --> 00:08:45.300
在这里，我将重新编译0.6秒

00:08:41.339 --> 00:08:48.630
看到事情开始点人

00:08:45.300 --> 00:08:50.880
好，所以有我的申请样本

00:08:48.630 --> 00:08:52.020
可以正常工作的数据好，让我们

00:08:50.880 --> 00:08:55.170
说我想削减另一个终点

00:08:52.020 --> 00:08:56.860
通过ID给我数据

00:08:55.170 --> 00:09:05.510
所以ID 

00:08:56.860 --> 00:09:06.530
在这里由ID定义的文档正文PS可以吗

00:09:05.510 --> 00:09:08.200
我想获得路径

00:09:06.530 --> 00:09:15.740
变量，所以我说是路径变量

00:09:08.200 --> 00:09:25.100
 ID并将其转变为长期可用

00:09:15.740 --> 00:09:31.120
与重建前一样好点二

00:09:25.100 --> 00:09:34.880
五九秒-那是三

00:09:31.120 --> 00:09:37.250
四个等，所以很容易制作

00:09:34.880 --> 00:09:39.590
更改这只是我协助的服务器

00:09:37.250 --> 00:09:42.320
网络服务器，当然一直都在

00:09:39.590 --> 00:09:43.930
你可以看到我一直在使用underwow 

00:09:42.320 --> 00:09:46.580
就在这里X和IO在哪里

00:09:43.930 --> 00:09:47.840
包底下的东西，所以我在那里

00:09:46.580 --> 00:09:49.700
知道这只是一个普通的servlet 

00:09:47.840 --> 00:09:52.280
像我说的我可以包装的容器

00:09:49.700 --> 00:09:55.720
这是一场点战，它是树干，所以你

00:09:52.280 --> 00:09:57.710
知道这是一个很好的例子

00:09:55.720 --> 00:09:59.030
阅读，当然你可以做到

00:09:57.710 --> 00:10:04.360
事情，所以你可以说好，我想添加

00:09:59.030 --> 00:10:07.640
这样人就可以救人

00:10:04.360 --> 00:10:13.340
我想说些什么

00:10:07.640 --> 00:10:20.480
人点添加您不认识的新人

00:10:13.340 --> 00:10:24.019
名字，我想我想私下做

00:10:20.480 --> 00:10:29.819
最终原子长

00:10:24.019 --> 00:10:32.790
计数器等于零补品长，这里

00:10:29.819 --> 00:10:37.459
我应该做这个温度

00:10:32.790 --> 00:10:44.389
触摸增量或获得增量

00:10:37.459 --> 00:10:44.389
好吧好吧，所以我们在那里

00:10:46.320 --> 00:10:49.040
好的

00:11:02.810 --> 00:11:08.580
没有数据库不是一个很好的数据库

00:11:05.370 --> 00:11:11.370
所有人，但嘿，你可能知道

00:11:08.580 --> 00:11:12.800
应该同步好了，所以我们有

00:11:11.370 --> 00:11:20.610
现在我们要添加一个帖子

00:11:12.800 --> 00:11:22.380
端点发布人，在这里打破这个

00:11:20.610 --> 00:11:25.260
进入完整的lambda，我要

00:11:22.380 --> 00:11:29.070
说给我来的身体

00:11:25.260 --> 00:11:31.580
作为一个人的要求我

00:11:29.070 --> 00:11:36.240
可以带人来

00:11:31.580 --> 00:11:40.740
但是对于状态栏，我会说给我

00:11:36.240 --> 00:11:50.010
我们名字的名字，我会说公关

00:11:40.740 --> 00:11:55.080
不要保存或PS以保存新人，好吗

00:11:50.010 --> 00:11:56.610
我们的结果等于然后我要

00:11:55.080 --> 00:11:59.220
发送回去，所以我要创建一个新的

00:11:56.610 --> 00:12:08.010
你在，你在一个箱子里

00:11:59.220 --> 00:12:13.170
人员/ id，因此结果获得ID即可

00:12:08.010 --> 00:12:16.620
哦，URI，最后是我们成熟的回应

00:12:13.170 --> 00:12:21.120
这也是响应文档创建错误的原因

00:12:16.620 --> 00:12:25.410
并传递结果好看的东西

00:12:21.120 --> 00:12:32.460
这样就可以清理了

00:12:25.410 --> 00:12:35.540
我想像一下，实际上这可能是

00:12:32.460 --> 00:12:39.960
这么好清理身体的人

00:12:35.540 --> 00:12:43.590
点类好，所以我们有实际的

00:12:39.960 --> 00:12:45.240
代码，您不需要这个，这就是我们的

00:12:43.590 --> 00:12:46.260
发布端点，您可以看到您无法

00:12:45.240 --> 00:12:48.210
吃，你可以做各种有趣的事

00:12:46.260 --> 00:12:50.550
您可以在这里添加的东西，您知道它是

00:12:48.210 --> 00:12:52.920
只是完全期望，但请注意

00:12:50.550 --> 00:12:54.870
一句话，我们把东西附在

00:12:52.920 --> 00:12:57.150
这里的Builder对象好吧，我有一个

00:12:54.870 --> 00:12:59.070
我要添加这些的构建器

00:12:57.150 --> 00:13:01.460
端点，然后我就可以很好地构建

00:12:59.070 --> 00:13:05.130
你知道吗我可以说好

00:13:01.460 --> 00:13:06.750
那么math.random大于第5点

00:13:05.130 --> 00:13:09.270
然后才想添加一些东西

00:13:06.750 --> 00:13:11.310
到艾迪德（Aidid）都接近它

00:13:09.270 --> 00:13:13.950
我可以做一些动态的事情

00:13:11.310 --> 00:13:16.770
程序化我可以读取配置

00:13:13.950 --> 00:13:19.530
从数据库中，我可以从配置中读取

00:13:16.770 --> 00:13:21.600
文件或其他我可以回应的内容

00:13:19.530 --> 00:13:23.820
正确的外部事物，我不必添加

00:13:21.600 --> 00:13:25.110
通过我的 Spring MVC风格

00:13:23.820 --> 00:13:26.940
注释，我们将明白我的意思

00:13:25.110 --> 00:13:29.150
一秒钟在这里，这是我们开始

00:13:26.940 --> 00:13:29.150
这个

00:13:30.090 --> 00:13:42.330
好吧，让我们尝试发送一些数据

00:13:34.850 --> 00:13:48.270
卷曲减去H含量类型的应用

00:13:42.330 --> 00:13:52.550
杰森-是的，应该有点接近

00:13:48.270 --> 00:13:52.550
到880左右

00:13:56.650 --> 00:14:05.010
名字等于鲍勃好吧错误哦

00:14:01.960 --> 00:14:05.010
我没有重启

00:14:18.430 --> 00:14:22.950
重新启动也许是我的开发工具

00:14:20.680 --> 00:14:22.950
工作中

00:14:23.920 --> 00:14:34.970
问题，所以这是本地主机：8080人

00:14:30.189 --> 00:14:41.899
看到一个不变的集合

00:14:34.970 --> 00:14:48.350
当然如此新-中心，我想要

00:14:41.899 --> 00:14:50.679
最初的数据来自那里我们

00:14:48.350 --> 00:14:50.679
开始

00:14:57.440 --> 00:15:01.770
好吧，我们去吧，如果我又有了鲍勃

00:14:59.850 --> 00:15:03.740
你可以看到我们正在增加它

00:15:01.770 --> 00:15:06.660
被添加，所以现在我回到

00:15:03.740 --> 00:15:08.790
浏览器去这里的人在那里

00:15:06.660 --> 00:15:14.279
我们有五个和六个，我们有两个

00:15:08.790 --> 00:15:16.860
现在不同的鲍勃如果我要你怎么办

00:15:14.279 --> 00:15:18.600
知道我提到过的混搭

00:15:16.860 --> 00:15:20.010
 Spring 的MVC风格，使您仍然可以

00:15:18.600 --> 00:15:46.020
这样做是Spring MVC应用程序

00:15:20.010 --> 00:15:48.350
好的，那是控制器你好，我们

00:15:46.020 --> 00:15:48.350
建立

00:16:05.380 --> 00:16:08.400
不存在

00:16:10.880 --> 00:16:14.050
只是重新启动

00:16:16.939 --> 00:16:19.939
好的

00:16:20.070 --> 00:16:26.860
但你似乎无法混合搭配

00:16:23.020 --> 00:16:29.800
现在我去找人，所以我可以

00:16:26.860 --> 00:16:31.060
分享，你知道我可以轻松带走我的

00:16:29.800 --> 00:16:33.280
现有的应用程序，但如果他是

00:16:31.060 --> 00:16:35.040
带给我C风格的控制器或

00:16:33.280 --> 00:16:39.160
让我弹起C控制器srini，然后

00:16:35.040 --> 00:16:41.290
逐渐添加网站，您知道网站MVC点F 

00:16:39.160 --> 00:16:42.340
 M样式的端点在这里，很棒

00:16:41.290 --> 00:16:44.590
因为我的意思是我可以利用

00:16:42.340 --> 00:16:46.660
我现有的业务逻辑全是

00:16:44.590 --> 00:16:49.270
建立在布道后面，我

00:16:46.660 --> 00:16:52.360
可以使用这种新样式，而不必

00:16:49.270 --> 00:16:54.490
一次完成全部迁移对吧，我

00:16:52.360 --> 00:16:56.710
我不能用我可以重用的东西

00:16:54.490 --> 00:16:58.480
东西一块面板，这毕竟是

00:16:56.710 --> 00:16:59.920
在一天结束时，一个servlet 

00:16:58.480 --> 00:17:01.780
我正在运行的应用程序权

00:16:59.920 --> 00:17:03.880
在炉子上放一个容器，例如

00:17:01.780 --> 00:17:05.589
我看着这个我可以说哦，好吧，给我

00:17:03.880 --> 00:17:07.480
 servlet请求很好

00:17:05.589 --> 00:17:08.709
就在那里玩应该服务

00:17:07.480 --> 00:17:12.069
请求，我可以做我想做的一切

00:17:08.709 --> 00:17:13.180
这样你就知道了

00:17:12.069 --> 00:17:15.310
 Cookie或任何其他内容的上下文映射

00:17:13.180 --> 00:17:16.780
所有这些东西和以前一样，如果

00:17:15.310 --> 00:17:18.339
你想要它在那里它就是那里

00:17:16.780 --> 00:17:21.699
我们根本没有试图隐藏它

00:17:18.339 --> 00:17:23.530
只是更方便了，所以

00:17:21.699 --> 00:17:26.170
您什么时候会像往常一样使用

00:17:23.530 --> 00:17:28.720
 Spring 网同样如此

00:17:26.170 --> 00:17:30.130
 flex您可以使用功能性的

00:17:28.720 --> 00:17:31.810
风格，如果你想拥有所有

00:17:30.130 --> 00:17:33.730
这样路由到一个地方

00:17:31.810 --> 00:17:36.490
我在这里路由，我也有

00:17:33.730 --> 00:17:38.380
这里的处理程序逻辑，我们将讨论

00:17:36.490 --> 00:17:40.540
一秒钟，但路由在这里

00:17:38.380 --> 00:17:42.220
都在一个地方，而这里

00:17:40.540 --> 00:17:43.960
路由匹配，您知道

00:17:42.220 --> 00:17:45.910
谓词搞砸了代码

00:17:43.960 --> 00:17:47.410
基础和在不同的包中

00:17:45.910 --> 00:17:50.170
您可以找到 rest controller 或

00:17:47.410 --> 00:17:52.960
控制器，所以很高兴能够

00:17:50.170 --> 00:17:56.230
将所有其他东西集中在这里

00:17:52.960 --> 00:17:57.790
是如果您想控制得到什么

00:17:56.230 --> 00:17:59.860
我可以在这里动态注册

00:17:57.790 --> 00:18:01.450
根据某些外部条件决定

00:17:59.860 --> 00:18:03.640
是否注册某些东西

00:18:01.450 --> 00:18:05.250
而一旦您定义

00:18:03.640 --> 00:18:07.870
这种方法很难分类

00:18:05.250 --> 00:18:09.490
撤消或不注册您的方法

00:18:07.870 --> 00:18:10.900
只需在代码中将其注释掉

00:18:09.490 --> 00:18:13.120
动态地没有人

00:18:10.900 --> 00:18:15.870
在运行时注册的东西

00:18:13.120 --> 00:18:22.300
现在回到此代码

00:18:15.870 --> 00:18:22.890
这还不错，这里还不错

00:18:22.300 --> 00:18:25.750
要么

00:18:22.890 --> 00:18:27.700
但是这里有三行

00:18:25.750 --> 00:18:29.920
代码并开始复杂化和搜索

00:18:27.700 --> 00:18:33.550
浑浊的这个物质功能是如此非常

00:18:29.920 --> 00:18:37.590
这里的常见模式是创建一个

00:18:33.550 --> 00:18:40.230
处理程序，所以一个人处理程序不起来

00:18:37.590 --> 00:18:42.340
特定的步骤没有特定的

00:18:40.230 --> 00:18:43.480
 Spring 的刻板印象称为处理程序

00:18:42.340 --> 00:18:47.200
这不是温柔的或类似的东西

00:18:43.480 --> 00:18:49.170
但是它的运作方式就是你你知道

00:18:47.200 --> 00:18:53.410
你还记得这里的处理函数

00:18:49.170 --> 00:18:58.540
这是一个功能性的界面，因此请实施

00:18:53.410 --> 00:19:00.040
处理程序功能服务器响应和

00:18:58.540 --> 00:19:04.680
那是合同，那么你可以

00:19:00.040 --> 00:19:06.190
只是在这里摆脱这部分

00:19:04.680 --> 00:19:12.810
然后你去

00:19:06.190 --> 00:19:15.810
所以我说把所有的保留

00:19:12.810 --> 00:19:15.810
好的

00:19:16.800 --> 00:19:24.660
好的，先生回应点以及我们

00:19:21.510 --> 00:19:27.750
想做的和我要去之前一样

00:19:24.660 --> 00:19:31.710
提取例如这个

00:19:27.750 --> 00:19:35.840
逻辑实际上我们是第一个

00:19:31.710 --> 00:19:38.770
要做的是这个，所以他们只是

00:19:35.840 --> 00:19:41.260
这里

00:19:38.770 --> 00:19:52.779
我需要在工作中向他人灌输

00:19:41.260 --> 00:19:56.200
我想为资料库人服务

00:19:52.779 --> 00:19:57.520
一些服务的好东西，只是

00:19:56.200 --> 00:19:58.960
现在可以使用方法委托

00:19:57.520 --> 00:20:02.529
参考，所以这样做的好处

00:19:58.960 --> 00:20:03.850
方法是，您将获得最好的

00:20:02.529 --> 00:20:07.990
两个世界都可以将路由合二为一

00:20:03.850 --> 00:20:09.970
的地方，但你得到业务逻辑

00:20:07.990 --> 00:20:12.909
隔离很容易就知道

00:20:09.970 --> 00:20:16.750
测试过的东西，你不会糊涂

00:20:12.909 --> 00:20:18.100
直到pH值，我都会得到所有代码

00:20:16.750 --> 00:20:23.039
保留，只是使用一种方法

00:20:18.100 --> 00:20:23.039
引用同一件事吧

00:20:23.580 --> 00:20:38.070
我会凭身份证预订的

00:20:34.350 --> 00:20:39.809
当然是

00:20:38.070 --> 00:20:42.290
 [音乐] 

00:20:39.809 --> 00:20:53.690
好

00:20:42.290 --> 00:20:56.840
人事服务还不错

00:20:53.690 --> 00:20:59.480
得到阿迪的预定，然后

00:20:56.840 --> 00:21:01.549
最后是你再次知道的帖子

00:20:59.480 --> 00:21:04.910
我们只是在开玩笑，我们只是在做Java 

00:21:01.549 --> 00:21:06.620
规则在这里，你必须有一个方法

00:21:04.910 --> 00:21:10.549
可以在功能上代替

00:21:06.620 --> 00:21:11.750
贷款或单一非抽象方法

00:21:10.549 --> 00:21:14.120
在功能界面上，那是

00:21:11.750 --> 00:21:15.890
我在这里做什么，所以最后一个是

00:21:14.120 --> 00:21:19.780
建议或创意人命令

00:21:15.890 --> 00:21:19.780
处理职位的人

00:21:35.470 --> 00:21:38.650
好吧

00:21:40.900 --> 00:21:43.650
好

00:21:46.070 --> 00:21:52.000
而这个将其提取出来

00:22:19.000 --> 00:22:26.860
好吧，pH值，我会把人贴好

00:22:24.549 --> 00:22:28.000
好东西好，现在更干净了

00:22:26.860 --> 00:22:30.220
你可以看到我有路线

00:22:28.000 --> 00:22:31.419
处理程序逻辑代理命令

00:22:30.220 --> 00:22:33.490
点击这个去它在

00:22:31.419 --> 00:22:35.140
东西，即使它很大

00:22:33.490 --> 00:22:38.200
不是单独的记录支付代码

00:22:35.140 --> 00:22:40.120
您单独的单独包装，但现在

00:22:38.200 --> 00:22:41.559
您还可以了解所有逻辑

00:22:40.120 --> 00:22:47.020
所有路由逻辑，因此请尝试更改

00:22:41.559 --> 00:22:49.090
你知道人们的农场路线吗

00:22:47.020 --> 00:22:49.960
当然好了没有

00:22:49.090 --> 00:22:54.539
原因你做不到

00:22:49.960 --> 00:22:54.539
因为他们路由，因为这

00:22:58.540 --> 00:23:04.240
好吧，还不错，不错，狗也不错

00:23:01.790 --> 00:23:09.799
当然可以，但是你可以

00:23:04.240 --> 00:23:12.320
现在让我们开始看看

00:23:09.799 --> 00:23:13.490
我们的应用程序正在工作之一

00:23:12.320 --> 00:23:14.900
关于登顶的美好的事情

00:23:13.490 --> 00:23:16.580
宫颈，因为您可以使用所有

00:23:14.900 --> 00:23:22.420
业务逻辑，所以让我们确保

00:23:16.580 --> 00:23:22.420
一切正常，我们去

00:23:23.020 --> 00:23:26.020
发布

00:23:26.830 --> 00:23:33.370
好吧，鲍勃·鲍勃好吧，那是

00:23:31.180 --> 00:23:34.990
现在工作，我们可以使用现有的

00:23:33.370 --> 00:23:36.310
基础设施也要记住

00:23:34.990 --> 00:23:38.620
您之前在servlet中所做的事情

00:23:36.310 --> 00:23:41.790
 API，然后在 Spring ABC中

00:23:38.620 --> 00:23:49.840
继续工作，所以上课简单

00:23:41.790 --> 00:23:51.790
过滤器扩展了通用过滤器，我

00:23:49.840 --> 00:23:53.890
只是要创建一个servlet过滤器而已

00:23:51.790 --> 00:23:57.100
定期弹出Poupon的过滤器

00:23:53.890 --> 00:23:58.510
转为服务于

00:23:57.100 --> 00:24:01.020
注册光束，您可以直接

00:23:58.510 --> 00:24:03.900
同样注册过滤器，但是

00:24:01.020 --> 00:24:13.920
你知道这对我会变嫩

00:24:03.900 --> 00:24:13.920
好的，所以进入

00:24:18.360 --> 00:24:25.970
去链条过滤请求好吗

00:24:26.120 --> 00:24:33.210
 Xing现在是Spring MVC过滤器

00:24:30.900 --> 00:24:35.700
提供过滤器样式，但您也可以

00:24:33.210 --> 00:24:39.210
使用您还可以将过滤器挂在

00:24:35.700 --> 00:24:42.120
路由器功能本身就像它一样

00:24:39.210 --> 00:24:43.590
没有Spring 鞭弯曲所以在这里你

00:24:42.120 --> 00:24:44.850
知道相同的基本方法，如果你

00:24:43.590 --> 00:24:45.480
了解第一个，那么这是

00:24:44.850 --> 00:24:48.120
自然

00:24:45.480 --> 00:24:50.390
注销我正在做的信息是

00:24:48.120 --> 00:24:53.870
我正在注销信息，因此请登录

00:24:50.390 --> 00:24:53.870
和饮料

00:24:58.119 --> 00:25:03.059
好吧尝试

00:25:06.670 --> 00:25:20.290
水信息退出一切正常

00:25:16.559 --> 00:25:22.920
基本的过滤器，因此让您精通UM 

00:25:20.290 --> 00:25:22.920
当然不对

00:25:24.190 --> 00:25:29.630
重新启动，我们将看到哪些被调用

00:25:28.130 --> 00:25:32.630
首先，我认为您会发现

00:25:29.630 --> 00:25:34.700
 Servlet过滤器此全方位服务过滤器

00:25:32.630 --> 00:25:40.250
在过滤器挂起之前被调用

00:25:34.700 --> 00:25:42.860
关闭路由器功能，所以无论在这里

00:25:40.250 --> 00:25:45.260
进入简单的过滤器是

00:25:42.860 --> 00:25:47.360
事情在这里，仆人过滤，然后

00:25:45.260 --> 00:25:48.950
输入处理程序过滤器功能，然后

00:25:47.360 --> 00:25:51.020
然后离开亨德森去工作

00:25:48.950 --> 00:25:54.830
对，然后最后退出

00:25:51.020 --> 00:25:58.250
简单的过滤器，所以通用的夏洛特

00:25:54.830 --> 00:25:59.930
过滤器将嵌套的毛毡包裹到此

00:25:58.250 --> 00:26:04.550
附加到路由器功能

00:25:59.930 --> 00:26:06.530
非常方便，所以再次

00:26:04.550 --> 00:26:08.060
您所知道的事情仍然继续

00:26:06.530 --> 00:26:09.500
您可以重用现有风险的工作

00:26:08.060 --> 00:26:11.630
控制器，您可以将它们放在一起

00:26:09.500 --> 00:26:13.790
你有这个不错的DSL 

00:26:11.630 --> 00:26:14.900
摘掉或隐藏任何事情

00:26:13.790 --> 00:26:16.730
如果你真的有这个或蓝色斑点

00:26:14.900 --> 00:26:20.860
需要它来访问伺服

00:26:16.730 --> 00:26:23.180
每个请求中的一个请求，如果您

00:26:20.860 --> 00:26:25.820
注册过滤器并注册servlet 

00:26:23.180 --> 00:26:27.080
我们像以前一样使用它们

00:26:25.820 --> 00:26:29.270
当然这些可以部署到任何种类

00:26:27.080 --> 00:26:31.040
 II的容器替换了Tomcat 

00:26:29.270 --> 00:26:32.480
知道了，我本来可以打包的

00:26:31.040 --> 00:26:34.310
作为一个点，沃伦将其部署到服务器上

00:26:32.480 --> 00:26:35.540
那样的容器，无论您的

00:26:34.310 --> 00:26:38.660
特权给你很多

00:26:35.540 --> 00:26:40.790
灵活性，我真的希望您能尝试

00:26:38.660 --> 00:26:41.780
出来试试吧，让我们

00:26:40.790 --> 00:26:43.730
知道你喜欢什么，不喜欢什么

00:26:41.780 --> 00:26:46.280
你想见他你不知道的

00:26:43.730 --> 00:26:49.330
一如既往地感谢我的朋友们

00:26:46.280 --> 00:26:49.330
观看，我们下次见

00:26:54.669 --> 00:26:56.730
您

