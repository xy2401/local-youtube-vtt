WEBVTT
Kind: captions
Language: en

00:00:13.750 --> 00:00:16.380 align:start position:0%
 
hey<00:00:14.740><c> spring</c><00:00:15.070><c> fans</c><00:00:15.309><c> today</c><00:00:15.910><c> we're</c><00:00:16.059><c> gonna</c><00:00:16.150><c> take</c><00:00:16.359><c> a</c>

00:00:16.380 --> 00:00:16.390 align:start position:0%
hey spring fans today we're gonna take a
 

00:00:16.390 --> 00:00:17.910 align:start position:0%
hey spring fans today we're gonna take a
very<00:00:16.539><c> quick</c><00:00:16.779><c> look</c><00:00:17.080><c> and</c><00:00:17.199><c> by</c><00:00:17.500><c> the</c><00:00:17.560><c> way</c><00:00:17.680><c> I</c><00:00:17.710><c> should</c>

00:00:17.910 --> 00:00:17.920 align:start position:0%
very quick look and by the way I should
 

00:00:17.920 --> 00:00:21.029 align:start position:0%
very quick look and by the way I should
underscore<00:00:18.550><c> that</c><00:00:18.580><c> word</c><00:00:18.910><c> quick</c><00:00:19.810><c> at</c><00:00:20.470><c> the</c><00:00:20.619><c> Kotlin</c>

00:00:21.029 --> 00:00:21.039 align:start position:0%
underscore that word quick at the Kotlin
 

00:00:21.039 --> 00:00:22.800 align:start position:0%
underscore that word quick at the Kotlin
programming<00:00:21.670><c> language</c><00:00:22.000><c> the</c><00:00:22.150><c> whole</c><00:00:22.300><c> point</c><00:00:22.570><c> of</c>

00:00:22.800 --> 00:00:22.810 align:start position:0%
programming language the whole point of
 

00:00:22.810 --> 00:00:25.529 align:start position:0%
programming language the whole point of
this<00:00:23.470><c> installment</c><00:00:23.829><c> is</c><00:00:24.009><c> to</c><00:00:24.160><c> is</c><00:00:24.430><c> to</c><00:00:24.700><c> see</c><00:00:24.880><c> what</c><00:00:25.480><c> it</c>

00:00:25.529 --> 00:00:25.539 align:start position:0%
this installment is to is to see what it
 

00:00:25.539 --> 00:00:26.670 align:start position:0%
this installment is to is to see what it
looks<00:00:25.660><c> like</c><00:00:25.750><c> to</c><00:00:25.900><c> build</c><00:00:26.349><c> a</c><00:00:26.410><c> very</c><00:00:26.529><c> simple</c>

00:00:26.670 --> 00:00:26.680 align:start position:0%
looks like to build a very simple
 

00:00:26.680 --> 00:00:29.189 align:start position:0%
looks like to build a very simple
application<00:00:27.000><c> with</c><00:00:28.000><c> cotton</c><00:00:28.419><c> and</c><00:00:28.660><c> and</c><00:00:29.020><c> with</c>

00:00:29.189 --> 00:00:29.199 align:start position:0%
application with cotton and and with
 

00:00:29.199 --> 00:00:31.859 align:start position:0%
application with cotton and and with
spring<00:00:29.349><c> and</c><00:00:30.040><c> the</c><00:00:30.160><c> short</c><00:00:30.369><c> story</c><00:00:30.579><c> the</c><00:00:30.790><c> take</c><00:00:31.660><c> away</c>

00:00:31.859 --> 00:00:31.869 align:start position:0%
spring and the short story the take away
 

00:00:31.869 --> 00:00:34.020 align:start position:0%
spring and the short story the take away
I'll<00:00:32.619><c> go</c><00:00:32.890><c> ahead</c><00:00:32.950><c> and</c><00:00:33.129><c> spoil</c><00:00:33.370><c> it</c><00:00:33.430><c> is</c><00:00:33.610><c> that</c>

00:00:34.020 --> 00:00:34.030 align:start position:0%
I'll go ahead and spoil it is that
 

00:00:34.030 --> 00:00:36.360 align:start position:0%
I'll go ahead and spoil it is that
there's<00:00:34.239><c> almost</c><00:00:34.390><c> nothing</c><00:00:35.160><c> extra</c><00:00:36.160><c> that</c><00:00:36.280><c> you</c>

00:00:36.360 --> 00:00:36.370 align:start position:0%
there's almost nothing extra that you
 

00:00:36.370 --> 00:00:37.979 align:start position:0%
there's almost nothing extra that you
need<00:00:36.520><c> to</c><00:00:36.610><c> understand</c><00:00:36.969><c> in</c><00:00:37.059><c> April</c><00:00:37.360><c> in</c><00:00:37.660><c> order</c><00:00:37.899><c> to</c>

00:00:37.979 --> 00:00:37.989 align:start position:0%
need to understand in April in order to
 

00:00:37.989 --> 00:00:40.260 align:start position:0%
need to understand in April in order to
be<00:00:38.050><c> able</c><00:00:38.200><c> to</c><00:00:38.260><c> use</c><00:00:38.379><c> it</c><00:00:38.500><c> with</c><00:00:38.559><c> spring</c><00:00:39.239><c> because</c><00:00:40.239><c> it</c>

00:00:40.260 --> 00:00:40.270 align:start position:0%
be able to use it with spring because it
 

00:00:40.270 --> 00:00:42.150 align:start position:0%
be able to use it with spring because it
just<00:00:40.480><c> works</c><00:00:40.660><c> it's</c><00:00:40.899><c> a</c><00:00:40.989><c> for</c><00:00:41.770><c> those</c><00:00:41.860><c> of</c><00:00:41.980><c> you</c><00:00:42.039><c> who</c>

00:00:42.150 --> 00:00:42.160 align:start position:0%
just works it's a for those of you who
 

00:00:42.160 --> 00:00:44.760 align:start position:0%
just works it's a for those of you who
don't<00:00:42.340><c> know</c><00:00:42.399><c> Kotlin</c><00:00:43.210><c> is</c><00:00:43.300><c> a</c><00:00:43.329><c> JBM</c><00:00:43.840><c> based</c>

00:00:44.760 --> 00:00:44.770 align:start position:0%
don't know Kotlin is a JBM based
 

00:00:44.770 --> 00:00:46.020 align:start position:0%
don't know Kotlin is a JBM based
programming<00:00:45.190><c> language</c><00:00:45.520><c> it's</c><00:00:45.699><c> from</c><00:00:45.850><c> its</c>

00:00:46.020 --> 00:00:46.030 align:start position:0%
programming language it's from its
 

00:00:46.030 --> 00:00:47.729 align:start position:0%
programming language it's from its
release<00:00:46.239><c> from</c><00:00:46.390><c> the</c><00:00:46.480><c> it's</c><00:00:47.289><c> released</c><00:00:47.559><c> by</c><00:00:47.679><c> the</c>

00:00:47.729 --> 00:00:47.739 align:start position:0%
release from the it's released by the
 

00:00:47.739 --> 00:00:49.919 align:start position:0%
release from the it's released by the
folks<00:00:48.010><c> from</c><00:00:48.399><c> JetBrains</c><00:00:48.879><c> and</c><00:00:49.390><c> they've</c>

00:00:49.919 --> 00:00:49.929 align:start position:0%
folks from JetBrains and they've
 

00:00:49.929 --> 00:00:51.599 align:start position:0%
folks from JetBrains and they've
released<00:00:50.469><c> this</c><00:00:50.649><c> separate</c><00:00:51.280><c> language</c>

00:00:51.599 --> 00:00:51.609 align:start position:0%
released this separate language
 

00:00:51.609 --> 00:00:53.880 align:start position:0%
released this separate language
naturally<00:00:51.819><c> as</c><00:00:52.210><c> a</c><00:00:52.239><c> as</c><00:00:52.569><c> a</c><00:00:53.199><c> as</c><00:00:53.379><c> a</c><00:00:53.649><c> language</c>

00:00:53.880 --> 00:00:53.890 align:start position:0%
naturally as a as a as a language
 

00:00:53.890 --> 00:00:55.349 align:start position:0%
naturally as a as a as a language
developed<00:00:54.399><c> by</c><00:00:54.460><c> the</c><00:00:54.519><c> folks</c><00:00:54.760><c> at</c><00:00:54.850><c> JetBrains</c><00:00:55.239><c> it</c>

00:00:55.349 --> 00:00:55.359 align:start position:0%
developed by the folks at JetBrains it
 

00:00:55.359 --> 00:00:57.680 align:start position:0%
developed by the folks at JetBrains it
has<00:00:55.480><c> first</c><00:00:55.929><c> class</c><00:00:56.199><c> integration</c><00:00:56.980><c> with</c>

00:00:57.680 --> 00:00:57.690 align:start position:0%
has first class integration with
 

00:00:57.690 --> 00:00:59.910 align:start position:0%
has first class integration with
IntelliJ<00:00:58.690><c> but</c><00:00:58.870><c> there</c><00:00:58.989><c> are</c><00:00:59.079><c> plugins</c><00:00:59.800><c> that</c>

00:00:59.910 --> 00:00:59.920 align:start position:0%
IntelliJ but there are plugins that
 

00:00:59.920 --> 00:01:01.860 align:start position:0%
IntelliJ but there are plugins that
allow<00:00:59.979><c> you</c><00:01:00.249><c> to</c><00:01:00.339><c> work</c><00:01:00.429><c> with</c><00:01:00.670><c> it</c><00:01:00.789><c> in</c><00:01:00.969><c> other</c><00:01:01.449><c> IDs</c>

00:01:01.860 --> 00:01:01.870 align:start position:0%
allow you to work with it in other IDs
 

00:01:01.870 --> 00:01:04.290 align:start position:0%
allow you to work with it in other IDs
as<00:01:02.229><c> well</c><00:01:02.409><c> and</c><00:01:02.559><c> in</c><00:01:02.710><c> fact</c><00:01:02.739><c> I</c><00:01:03.039><c> may</c><00:01:04.030><c> be</c><00:01:04.089><c> mistaken</c>

00:01:04.290 --> 00:01:04.300 align:start position:0%
as well and in fact I may be mistaken
 

00:01:04.300 --> 00:01:06.630 align:start position:0%
as well and in fact I may be mistaken
but<00:01:04.960><c> I</c><00:01:05.170><c> think</c><00:01:05.740><c> the</c><00:01:05.860><c> Germans</c><00:01:06.220><c> folks</c><00:01:06.400><c> actually</c>

00:01:06.630 --> 00:01:06.640 align:start position:0%
but I think the Germans folks actually
 

00:01:06.640 --> 00:01:08.010 align:start position:0%
but I think the Germans folks actually
developed<00:01:07.060><c> the</c><00:01:07.150><c> Eclipse</c><00:01:07.450><c> plugin</c><00:01:07.780><c> which</c><00:01:07.930><c> i</c>

00:01:08.010 --> 00:01:08.020 align:start position:0%
developed the Eclipse plugin which i
 

00:01:08.020 --> 00:01:10.670 align:start position:0%
developed the Eclipse plugin which i
think<00:01:08.080><c> is</c><00:01:08.940><c> pretty</c><00:01:09.940><c> awesome</c>

00:01:10.670 --> 00:01:10.680 align:start position:0%
think is pretty awesome
 

00:01:10.680 --> 00:01:14.969 align:start position:0%
think is pretty awesome
so<00:01:12.030><c> spring</c><00:01:13.030><c> by</c><00:01:13.659><c> virtue</c><00:01:14.560><c> of</c><00:01:14.650><c> the</c><00:01:14.710><c> fact</c><00:01:14.770><c> that</c>

00:01:14.969 --> 00:01:14.979 align:start position:0%
so spring by virtue of the fact that
 

00:01:14.979 --> 00:01:17.760 align:start position:0%
so spring by virtue of the fact that
it's<00:01:15.100><c> a</c><00:01:15.220><c> a</c><00:01:15.430><c> JVM</c><00:01:15.909><c> citizen</c><00:01:16.420><c> it</c><00:01:17.049><c> works</c><00:01:17.229><c> naturally</c>

00:01:17.760 --> 00:01:17.770 align:start position:0%
it's a a JVM citizen it works naturally
 

00:01:17.770 --> 00:01:19.800 align:start position:0%
it's a a JVM citizen it works naturally
with<00:01:17.920><c> any</c><00:01:18.130><c> of</c><00:01:18.220><c> these</c><00:01:18.310><c> um</c><00:01:18.550><c> any</c><00:01:19.420><c> of</c><00:01:19.510><c> these</c><00:01:19.600><c> sort</c>

00:01:19.800 --> 00:01:19.810 align:start position:0%
with any of these um any of these sort
 

00:01:19.810 --> 00:01:22.320 align:start position:0%
with any of these um any of these sort
of<00:01:19.840><c> languages</c><00:01:20.830><c> on</c><00:01:20.950><c> the</c><00:01:21.100><c> JVM</c><00:01:21.370><c> that</c><00:01:21.850><c> support</c>

00:01:22.320 --> 00:01:22.330 align:start position:0%
of languages on the JVM that support
 

00:01:22.330 --> 00:01:25.320 align:start position:0%
of languages on the JVM that support
annotations<00:01:22.810><c> and</c><00:01:22.990><c> and</c><00:01:23.500><c> objects</c><00:01:24.280><c> right</c><00:01:24.490><c> so</c><00:01:24.670><c> if</c>

00:01:25.320 --> 00:01:25.330 align:start position:0%
annotations and and objects right so if
 

00:01:25.330 --> 00:01:28.110 align:start position:0%
annotations and and objects right so if
you're<00:01:25.450><c> using</c><00:01:26.310><c> Scala</c><00:01:27.310><c> that'll</c><00:01:27.640><c> work</c><00:01:27.730><c> fine</c><00:01:27.970><c> if</c>

00:01:28.110 --> 00:01:28.120 align:start position:0%
you're using Scala that'll work fine if
 

00:01:28.120 --> 00:01:30.360 align:start position:0%
you're using Scala that'll work fine if
you're<00:01:28.210><c> using</c><00:01:28.330><c> a</c><00:01:28.500><c> sale</c><00:01:29.500><c> on</c><00:01:29.620><c> that</c><00:01:29.860><c> works</c><00:01:30.130><c> fine</c>

00:01:30.360 --> 00:01:30.370 align:start position:0%
you're using a sale on that works fine
 

00:01:30.370 --> 00:01:32.490 align:start position:0%
you're using a sale on that works fine
if<00:01:30.520><c> using</c><00:01:30.790><c> groovy</c><00:01:31.480><c> it</c><00:01:31.840><c> works</c><00:01:32.050><c> fine</c><00:01:32.230><c> and</c><00:01:32.380><c> if</c>

00:01:32.490 --> 00:01:32.500 align:start position:0%
if using groovy it works fine and if
 

00:01:32.500 --> 00:01:33.870 align:start position:0%
if using groovy it works fine and if
using<00:01:32.710><c> Cottman</c><00:01:33.130><c> and</c><00:01:33.250><c> so</c><00:01:33.340><c> today</c><00:01:33.670><c> we're</c><00:01:33.760><c> gonna</c>

00:01:33.870 --> 00:01:33.880 align:start position:0%
using Cottman and so today we're gonna
 

00:01:33.880 --> 00:01:36.180 align:start position:0%
using Cottman and so today we're gonna
just<00:01:34.030><c> take</c><00:01:34.120><c> a</c><00:01:34.180><c> quick</c><00:01:34.360><c> look</c><00:01:34.630><c> at</c><00:01:34.840><c> at</c><00:01:35.620><c> Kotlin</c><00:01:36.010><c> okay</c>

00:01:36.180 --> 00:01:36.190 align:start position:0%
just take a quick look at at Kotlin okay
 

00:01:36.190 --> 00:01:38.220 align:start position:0%
just take a quick look at at Kotlin okay
so<00:01:36.250><c> we'll</c><00:01:36.460><c> build</c><00:01:36.550><c> a</c><00:01:36.780><c> beautiful</c><00:01:37.780><c> cotton</c>

00:01:38.220 --> 00:01:38.230 align:start position:0%
so we'll build a beautiful cotton
 

00:01:38.230 --> 00:01:40.470 align:start position:0%
so we'll build a beautiful cotton
example<00:01:38.650><c> here</c><00:01:38.830><c> and</c><00:01:39.030><c> i'll</c><00:01:40.030><c> build</c><00:01:40.210><c> a</c><00:01:40.360><c> web</c>

00:01:40.470 --> 00:01:40.480 align:start position:0%
example here and i'll build a web
 

00:01:40.480 --> 00:01:44.910 align:start position:0%
example here and i'll build a web
application<00:01:41.110><c> I'll</c><00:01:41.320><c> talk</c><00:01:41.530><c> to</c><00:01:41.560><c> MongoDB</c><00:01:42.390><c> and</c><00:01:43.920><c> I</c>

00:01:44.910 --> 00:01:44.920 align:start position:0%
application I'll talk to MongoDB and I
 

00:01:44.920 --> 00:01:46.170 align:start position:0%
application I'll talk to MongoDB and I
think<00:01:45.130><c> that's</c><00:01:45.250><c> you</c><00:01:45.430><c> know</c><00:01:45.490><c> we're</c><00:01:45.880><c> not</c><00:01:45.970><c> going</c><00:01:46.090><c> to</c>

00:01:46.170 --> 00:01:46.180 align:start position:0%
think that's you know we're not going to
 

00:01:46.180 --> 00:01:47.250 align:start position:0%
think that's you know we're not going to
spend<00:01:46.330><c> too</c><00:01:46.420><c> long</c><00:01:46.570><c> today</c><00:01:46.810><c> so</c><00:01:46.930><c> we'll</c><00:01:47.050><c> build</c><00:01:47.140><c> a</c>

00:01:47.250 --> 00:01:47.260 align:start position:0%
spend too long today so we'll build a
 

00:01:47.260 --> 00:01:49.080 align:start position:0%
spend too long today so we'll build a
simple<00:01:47.470><c> app</c><00:01:47.620><c> but</c><00:01:47.830><c> in</c><00:01:48.580><c> order</c><00:01:48.820><c> to</c><00:01:48.850><c> get</c><00:01:49.030><c> the</c>

00:01:49.080 --> 00:01:49.090 align:start position:0%
simple app but in order to get the
 

00:01:49.090 --> 00:01:50.460 align:start position:0%
simple app but in order to get the
cotman<00:01:49.420><c> support</c><00:01:49.720><c> you</c><00:01:49.780><c> need</c><00:01:49.930><c> to</c><00:01:49.960><c> switch</c><00:01:50.200><c> to</c><00:01:50.230><c> the</c>

00:01:50.460 --> 00:01:50.470 align:start position:0%
cotman support you need to switch to the
 

00:01:50.470 --> 00:01:52.440 align:start position:0%
cotman support you need to switch to the
full<00:01:50.590><c> version</c><00:01:50.770><c> and</c><00:01:51.100><c> then</c><00:01:51.790><c> go</c><00:01:51.940><c> down</c><00:01:52.060><c> here</c><00:01:52.300><c> to</c>

00:01:52.440 --> 00:01:52.450 align:start position:0%
full version and then go down here to
 

00:01:52.450 --> 00:01:54.210 align:start position:0%
full version and then go down here to
the<00:01:52.540><c> the</c><00:01:52.870><c> language</c><00:01:53.290><c> section</c><00:01:53.680><c> right</c><00:01:53.950><c> and</c><00:01:54.100><c> so</c>

00:01:54.210 --> 00:01:54.220 align:start position:0%
the the language section right and so
 

00:01:54.220 --> 00:01:56.760 align:start position:0%
the the language section right and so
here<00:01:54.550><c> we</c><00:01:54.640><c> can</c><00:01:54.760><c> see</c><00:01:54.880><c> the</c><00:01:55.000><c> three</c><00:01:55.510><c> well</c><00:01:56.260><c> supported</c>

00:01:56.760 --> 00:01:56.770 align:start position:0%
here we can see the three well supported
 

00:01:56.770 --> 00:01:58.830 align:start position:0%
here we can see the three well supported
you<00:01:57.400><c> know</c><00:01:57.490><c> languages</c><00:01:58.270><c> out</c><00:01:58.360><c> of</c><00:01:58.450><c> the</c><00:01:58.510><c> box</c><00:01:58.690><c> we're</c>

00:01:58.830 --> 00:01:58.840 align:start position:0%
you know languages out of the box we're
 

00:01:58.840 --> 00:02:01.200 align:start position:0%
you know languages out of the box we're
going<00:01:58.960><c> to</c><00:01:59.020><c> choose</c><00:01:59.110><c> Cottman</c><00:01:59.590><c> here</c><00:01:59.770><c> and</c><00:02:00.210><c> that's</c>

00:02:01.200 --> 00:02:01.210 align:start position:0%
going to choose Cottman here and that's
 

00:02:01.210 --> 00:02:02.790 align:start position:0%
going to choose Cottman here and that's
it<00:02:01.390><c> everything</c><00:02:01.720><c> else</c><00:02:01.870><c> is</c><00:02:02.050><c> the</c><00:02:02.110><c> same</c><00:02:02.320><c> nothing</c>

00:02:02.790 --> 00:02:02.800 align:start position:0%
it everything else is the same nothing
 

00:02:02.800 --> 00:02:04.530 align:start position:0%
it everything else is the same nothing
else<00:02:02.920><c> changes</c><00:02:03.280><c> down</c><00:02:03.430><c> here</c><00:02:03.700><c> we</c><00:02:04.240><c> don't</c><00:02:04.330><c> have</c><00:02:04.480><c> to</c>

00:02:04.530 --> 00:02:04.540 align:start position:0%
else changes down here we don't have to
 

00:02:04.540 --> 00:02:06.120 align:start position:0%
else changes down here we don't have to
do<00:02:04.630><c> anything</c><00:02:04.750><c> else</c><00:02:04.900><c> special</c><00:02:05.140><c> so</c><00:02:05.440><c> we'll</c><00:02:06.040><c> hit</c>

00:02:06.120 --> 00:02:06.130 align:start position:0%
do anything else special so we'll hit
 

00:02:06.130 --> 00:02:08.339 align:start position:0%
do anything else special so we'll hit
generate<00:02:06.550><c> and</c><00:02:07.420><c> we'll</c><00:02:07.540><c> be</c><00:02:07.630><c> given</c><00:02:07.840><c> a</c><00:02:07.930><c> zip</c><00:02:08.140><c> file</c>

00:02:08.339 --> 00:02:08.349 align:start position:0%
generate and we'll be given a zip file
 

00:02:08.349 --> 00:02:10.680 align:start position:0%
generate and we'll be given a zip file
which<00:02:08.500><c> we</c><00:02:08.590><c> can</c><00:02:08.739><c> open</c><00:02:08.830><c> up</c><00:02:09.069><c> in</c><00:02:09.160><c> our</c><00:02:09.250><c> in</c><00:02:09.519><c> our</c><00:02:10.030><c> IDE</c>

00:02:10.680 --> 00:02:10.690 align:start position:0%
which we can open up in our in our IDE
 

00:02:10.690 --> 00:02:12.839 align:start position:0%
which we can open up in our in our IDE
and<00:02:11.170><c> I</c><00:02:11.290><c> I'm</c><00:02:11.769><c> gonna</c><00:02:11.890><c> use</c><00:02:12.040><c> IntelliJ</c><00:02:12.489><c> but</c><00:02:12.640><c> again</c>

00:02:12.839 --> 00:02:12.849 align:start position:0%
and I I'm gonna use IntelliJ but again
 

00:02:12.849 --> 00:02:15.509 align:start position:0%
and I I'm gonna use IntelliJ but again
it<00:02:12.940><c> works</c><00:02:13.379><c> just</c><00:02:14.379><c> fine</c><00:02:14.560><c> and</c><00:02:14.800><c> other</c><00:02:15.099><c> languages</c>

00:02:15.509 --> 00:02:15.519 align:start position:0%
it works just fine and other languages
 

00:02:15.519 --> 00:02:17.850 align:start position:0%
it works just fine and other languages
are<00:02:15.610><c> their</c><00:02:15.819><c> IDs</c><00:02:16.030><c> although</c><00:02:16.810><c> I</c><00:02:16.840><c> don't</c><00:02:16.930><c> know</c><00:02:17.110><c> to</c>

00:02:17.850 --> 00:02:17.860 align:start position:0%
are their IDs although I don't know to
 

00:02:17.860 --> 00:02:19.110 align:start position:0%
are their IDs although I don't know to
be<00:02:17.920><c> honest</c><00:02:18.069><c> with</c><00:02:18.159><c> you</c><00:02:18.280><c> how</c><00:02:18.760><c> great</c><00:02:19.000><c> the</c>

00:02:19.110 --> 00:02:19.120 align:start position:0%
be honest with you how great the
 

00:02:19.120 --> 00:02:21.149 align:start position:0%
be honest with you how great the
experience<00:02:19.150><c> is</c><00:02:19.720><c> one</c><00:02:20.560><c> thing</c><00:02:20.739><c> is</c><00:02:20.860><c> that</c><00:02:20.950><c> cotton</c>

00:02:21.149 --> 00:02:21.159 align:start position:0%
experience is one thing is that cotton
 

00:02:21.159 --> 00:02:23.610 align:start position:0%
experience is one thing is that cotton
is<00:02:21.510><c> becoming</c><00:02:22.510><c> very</c><00:02:22.630><c> popular</c><00:02:22.780><c> these</c><00:02:23.230><c> days</c><00:02:23.290><c> it's</c>

00:02:23.610 --> 00:02:23.620 align:start position:0%
is becoming very popular these days it's
 

00:02:23.620 --> 00:02:26.340 align:start position:0%
is becoming very popular these days it's
a<00:02:23.770><c> it's</c><00:02:24.010><c> just</c><00:02:24.069><c> it's</c><00:02:24.460><c> just</c><00:02:24.730><c> gained</c><00:02:25.350><c> first-class</c>

00:02:26.340 --> 00:02:26.350 align:start position:0%
a it's just it's just gained first-class
 

00:02:26.350 --> 00:02:27.380 align:start position:0%
a it's just it's just gained first-class
support<00:02:26.560><c> in</c><00:02:26.950><c> the</c>

00:02:27.380 --> 00:02:27.390 align:start position:0%
support in the
 

00:02:27.390 --> 00:02:28.700 align:start position:0%
support in the
in<00:02:27.450><c> a</c><00:02:27.540><c> Gradle</c><00:02:27.840><c> build</c><00:02:27.870><c> tool</c><00:02:28.290><c> so</c><00:02:28.440><c> you</c><00:02:28.500><c> can</c><00:02:28.620><c> now</c>

00:02:28.700 --> 00:02:28.710 align:start position:0%
in a Gradle build tool so you can now
 

00:02:28.710 --> 00:02:31.520 align:start position:0%
in a Gradle build tool so you can now
author<00:02:28.980><c> Gradle</c><00:02:29.940><c> build</c><00:02:29.970><c> files</c><00:02:30.480><c> using</c><00:02:30.780><c> Kotlin</c>

00:02:31.520 --> 00:02:31.530 align:start position:0%
author Gradle build files using Kotlin
 

00:02:31.530 --> 00:02:33.560 align:start position:0%
author Gradle build files using Kotlin
and<00:02:31.770><c> Cartman</c><00:02:32.580><c> hasn't</c><00:02:32.760><c> been</c><00:02:32.940><c> for</c><00:02:33.150><c> a</c><00:02:33.180><c> long</c><00:02:33.330><c> time</c>

00:02:33.560 --> 00:02:33.570 align:start position:0%
and Cartman hasn't been for a long time
 

00:02:33.570 --> 00:02:36.020 align:start position:0%
and Cartman hasn't been for a long time
well<00:02:33.900><c> supported</c><00:02:34.350><c> on</c><00:02:35.070><c> Android</c><00:02:35.250><c> which</c><00:02:35.640><c> tends</c><00:02:35.910><c> to</c>

00:02:36.020 --> 00:02:36.030 align:start position:0%
well supported on Android which tends to
 

00:02:36.030 --> 00:02:38.300 align:start position:0%
well supported on Android which tends to
run<00:02:36.210><c> a</c><00:02:36.240><c> generation</c><00:02:36.720><c> or</c><00:02:36.780><c> two</c><00:02:37.010><c> behind</c><00:02:38.010><c> in</c><00:02:38.220><c> terms</c>

00:02:38.300 --> 00:02:38.310 align:start position:0%
run a generation or two behind in terms
 

00:02:38.310 --> 00:02:40.550 align:start position:0%
run a generation or two behind in terms
of<00:02:38.490><c> JVM</c><00:02:38.940><c> interoperability</c><00:02:39.930><c> so</c><00:02:40.200><c> you</c><00:02:40.290><c> can</c><00:02:40.410><c> write</c>

00:02:40.550 --> 00:02:40.560 align:start position:0%
of JVM interoperability so you can write
 

00:02:40.560 --> 00:02:43.580 align:start position:0%
of JVM interoperability so you can write
Kotlin<00:02:41.400><c> programs</c><00:02:42.330><c> that</c><00:02:42.750><c> run</c><00:02:42.990><c> on</c><00:02:43.110><c> Java</c><00:02:43.380><c> one</c>

00:02:43.580 --> 00:02:43.590 align:start position:0%
Kotlin programs that run on Java one
 

00:02:43.590 --> 00:02:46.430 align:start position:0%
Kotlin programs that run on Java one
seven<00:02:43.950><c> for</c><00:02:44.070><c> example</c><00:02:44.100><c> on</c><00:02:44.610><c> Android</c><00:02:45.240><c> and</c><00:02:46.170><c> this</c><00:02:46.320><c> is</c>

00:02:46.430 --> 00:02:46.440 align:start position:0%
seven for example on Android and this is
 

00:02:46.440 --> 00:02:48.860 align:start position:0%
seven for example on Android and this is
very<00:02:46.560><c> very</c><00:02:46.650><c> cool</c><00:02:47.040><c> because</c><00:02:47.780><c> Kotlin</c><00:02:48.780><c> is</c>

00:02:48.860 --> 00:02:48.870 align:start position:0%
very very cool because Kotlin is
 

00:02:48.870 --> 00:02:50.750 align:start position:0%
very very cool because Kotlin is
actually<00:02:49.110><c> a</c><00:02:49.140><c> superset</c><00:02:49.710><c> of</c><00:02:49.830><c> the</c><00:02:50.010><c> j</c><00:02:50.160><c> of</c><00:02:50.370><c> the</c><00:02:50.400><c> java</c>

00:02:50.750 --> 00:02:50.760 align:start position:0%
actually a superset of the j of the java
 

00:02:50.760 --> 00:02:52.550 align:start position:0%
actually a superset of the j of the java
language<00:02:50.850><c> syntax</c><00:02:51.360><c> right</c><00:02:51.690><c> it's</c><00:02:51.810><c> not</c><00:02:51.960><c> rather</c>

00:02:52.550 --> 00:02:52.560 align:start position:0%
language syntax right it's not rather
 

00:02:52.560 --> 00:02:54.260 align:start position:0%
language syntax right it's not rather
it's<00:02:52.770><c> it's</c><00:02:53.010><c> not</c><00:02:53.190><c> all</c><00:02:53.490><c> the</c><00:02:53.730><c> same</c><00:02:53.910><c> features</c><00:02:54.090><c> but</c>

00:02:54.260 --> 00:02:54.270 align:start position:0%
it's it's not all the same features but
 

00:02:54.270 --> 00:02:57.080 align:start position:0%
it's it's not all the same features but
if<00:02:55.080><c> you</c><00:02:55.230><c> were</c><00:02:55.320><c> to</c><00:02:55.440><c> sort</c><00:02:55.770><c> of</c><00:02:55.860><c> compare</c><00:02:56.550><c> checkbox</c>

00:02:57.080 --> 00:02:57.090 align:start position:0%
if you were to sort of compare checkbox
 

00:02:57.090 --> 00:02:58.640 align:start position:0%
if you were to sort of compare checkbox
by<00:02:57.240><c> checkbox</c><00:02:57.630><c> what</c><00:02:57.870><c> you</c><00:02:57.959><c> get</c><00:02:58.110><c> out</c><00:02:58.200><c> of</c><00:02:58.230><c> common</c>

00:02:58.640 --> 00:02:58.650 align:start position:0%
by checkbox what you get out of common
 

00:02:58.650 --> 00:03:00.710 align:start position:0%
by checkbox what you get out of common
versus<00:02:59.280><c> Java</c><00:02:59.459><c> you'll</c><00:02:59.670><c> find</c><00:02:59.880><c> there's</c><00:03:00.060><c> some</c>

00:03:00.710 --> 00:03:00.720 align:start position:0%
versus Java you'll find there's some
 

00:03:00.720 --> 00:03:03.740 align:start position:0%
versus Java you'll find there's some
more<00:03:00.930><c> niceties</c><00:03:01.350><c> in</c><00:03:01.380><c> Kotlin</c><00:03:01.860><c> and</c><00:03:02.280><c> and</c><00:03:02.790><c> and</c><00:03:03.360><c> and</c>

00:03:03.740 --> 00:03:03.750 align:start position:0%
more niceties in Kotlin and and and and
 

00:03:03.750 --> 00:03:05.810 align:start position:0%
more niceties in Kotlin and and and and
make<00:03:03.900><c> no</c><00:03:03.990><c> mistake</c><00:03:04.020><c> Java</c><00:03:04.500><c> age</c><00:03:04.680><c> is</c><00:03:04.890><c> certainly</c>

00:03:05.810 --> 00:03:05.820 align:start position:0%
make no mistake Java age is certainly
 

00:03:05.820 --> 00:03:07.880 align:start position:0%
make no mistake Java age is certainly
making<00:03:06.150><c> progress</c><00:03:06.750><c> and</c><00:03:07.050><c> Java</c><00:03:07.230><c> 9</c><00:03:07.440><c> looks</c><00:03:07.650><c> to</c><00:03:07.770><c> be</c><00:03:07.860><c> a</c>

00:03:07.880 --> 00:03:07.890 align:start position:0%
making progress and Java 9 looks to be a
 

00:03:07.890 --> 00:03:09.920 align:start position:0%
making progress and Java 9 looks to be a
nice<00:03:08.100><c> step</c><00:03:08.370><c> forward</c><00:03:08.760><c> and</c><00:03:08.910><c> and</c><00:03:09.060><c> so</c><00:03:09.480><c> on</c><00:03:09.600><c> but</c><00:03:09.720><c> a</c>

00:03:09.920 --> 00:03:09.930 align:start position:0%
nice step forward and and so on but a
 

00:03:09.930 --> 00:03:11.270 align:start position:0%
nice step forward and and so on but a
lot<00:03:10.200><c> of</c><00:03:10.260><c> the</c><00:03:10.320><c> features</c><00:03:10.470><c> that</c><00:03:10.650><c> were</c><00:03:10.830><c> excited</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
lot of the features that were excited
 

00:03:11.280 --> 00:03:12.949 align:start position:0%
lot of the features that were excited
about<00:03:11.340><c> in</c><00:03:11.670><c> Java</c><00:03:12.000><c> in</c><00:03:12.180><c> the</c><00:03:12.270><c> roadmap</c><00:03:12.450><c> from</c><00:03:12.720><c> Java</c>

00:03:12.949 --> 00:03:12.959 align:start position:0%
about in Java in the roadmap from Java
 

00:03:12.959 --> 00:03:15.470 align:start position:0%
about in Java in the roadmap from Java
like<00:03:13.500><c> the</c><00:03:13.680><c> the</c><00:03:13.950><c> possibility</c><00:03:14.580><c> of</c><00:03:14.670><c> having</c><00:03:14.820><c> type</c>

00:03:15.470 --> 00:03:15.480 align:start position:0%
like the the possibility of having type
 

00:03:15.480 --> 00:03:16.910 align:start position:0%
like the the possibility of having type
inference<00:03:15.840><c> for</c><00:03:16.080><c> variables</c><00:03:16.470><c> that</c><00:03:16.560><c> is</c><00:03:16.680><c> to</c><00:03:16.800><c> say</c>

00:03:16.910 --> 00:03:16.920 align:start position:0%
inference for variables that is to say
 

00:03:16.920 --> 00:03:20.210 align:start position:0%
inference for variables that is to say
Val<00:03:17.790><c> and</c><00:03:18.030><c> var</c><00:03:18.239><c> that</c><00:03:18.450><c> is</c><00:03:18.870><c> already</c><00:03:19.709><c> there</c><00:03:19.920><c> in</c>

00:03:20.210 --> 00:03:20.220 align:start position:0%
Val and var that is already there in
 

00:03:20.220 --> 00:03:21.470 align:start position:0%
Val and var that is already there in
common<00:03:20.700><c> it's</c><00:03:20.850><c> already</c><00:03:21.030><c> there</c><00:03:21.180><c> and</c><00:03:21.330><c> it's</c>

00:03:21.470 --> 00:03:21.480 align:start position:0%
common it's already there and it's
 

00:03:21.480 --> 00:03:23.390 align:start position:0%
common it's already there and it's
working<00:03:21.660><c> and</c><00:03:21.900><c> it</c><00:03:22.050><c> can</c><00:03:22.140><c> use</c><00:03:22.170><c> it</c><00:03:22.410><c> and</c><00:03:22.530><c> it</c><00:03:22.920><c> runs</c>

00:03:23.390 --> 00:03:23.400 align:start position:0%
working and it can use it and it runs
 

00:03:23.400 --> 00:03:26.750 align:start position:0%
working and it can use it and it runs
fine<00:03:23.760><c> an</c><00:03:23.940><c> older</c><00:03:24.180><c> virtual</c><00:03:24.690><c> machine</c><00:03:24.930><c> so</c><00:03:25.760><c> there's</c>

00:03:26.750 --> 00:03:26.760 align:start position:0%
fine an older virtual machine so there's
 

00:03:26.760 --> 00:03:29.660 align:start position:0%
fine an older virtual machine so there's
no<00:03:26.850><c> reason</c><00:03:27.120><c> to</c><00:03:27.170><c> to</c><00:03:28.170><c> delay</c><00:03:29.160><c> if</c><00:03:29.370><c> you</c><00:03:29.459><c> want</c><00:03:29.610><c> to</c>

00:03:29.660 --> 00:03:29.670 align:start position:0%
no reason to to delay if you want to
 

00:03:29.670 --> 00:03:30.650 align:start position:0%
no reason to to delay if you want to
play<00:03:29.760><c> with</c><00:03:29.850><c> these</c><00:03:29.970><c> features</c><00:03:30.300><c> so</c><00:03:30.330><c> let's</c><00:03:30.450><c> go</c>

00:03:30.650 --> 00:03:30.660 align:start position:0%
play with these features so let's go
 

00:03:30.660 --> 00:03:32.979 align:start position:0%
play with these features so let's go
ahead<00:03:30.840><c> and</c><00:03:30.930><c> look</c><00:03:31.500><c> at</c><00:03:31.620><c> our</c><00:03:31.739><c> application</c><00:03:32.340><c> here</c>

00:03:32.979 --> 00:03:32.989 align:start position:0%
ahead and look at our application here
 

00:03:32.989 --> 00:03:35.840 align:start position:0%
ahead and look at our application here
we're<00:03:33.989><c> gonna</c><00:03:34.080><c> open</c><00:03:34.980><c> up</c><00:03:35.280><c> our</c><00:03:35.400><c> Kotlin</c>

00:03:35.840 --> 00:03:35.850 align:start position:0%
we're gonna open up our Kotlin
 

00:03:35.850 --> 00:03:38.570 align:start position:0%
we're gonna open up our Kotlin
application<00:03:36.390><c> it's</c><00:03:36.570><c> just</c><00:03:36.870><c> a</c><00:03:36.959><c> KT</c><00:03:37.860><c> file</c><00:03:38.310><c> right</c>

00:03:38.570 --> 00:03:38.580 align:start position:0%
application it's just a KT file right
 

00:03:38.580 --> 00:03:40.550 align:start position:0%
application it's just a KT file right
inside<00:03:38.940><c> of</c><00:03:38.970><c> IntelliJ</c><00:03:39.480><c> and</c><00:03:39.630><c> the</c><00:03:40.110><c> first</c><00:03:40.380><c> thing</c>

00:03:40.550 --> 00:03:40.560 align:start position:0%
inside of IntelliJ and the first thing
 

00:03:40.560 --> 00:03:43.509 align:start position:0%
inside of IntelliJ and the first thing
you<00:03:40.680><c> see</c><00:03:40.830><c> is</c><00:03:40.950><c> we've</c><00:03:41.160><c> got</c><00:03:41.310><c> a</c><00:03:41.840><c> main</c><00:03:42.840><c> method</c>

00:03:43.509 --> 00:03:43.519 align:start position:0%
you see is we've got a main method
 

00:03:43.519 --> 00:03:46.009 align:start position:0%
you see is we've got a main method
defined<00:03:44.519><c> outside</c><00:03:44.820><c> of</c><00:03:45.180><c> the</c><00:03:45.269><c> class</c><00:03:45.480><c> and</c><00:03:45.989><c> that</c>

00:03:46.009 --> 00:03:46.019 align:start position:0%
defined outside of the class and that
 

00:03:46.019 --> 00:03:48.320 align:start position:0%
defined outside of the class and that
may<00:03:46.230><c> be</c><00:03:46.290><c> a</c><00:03:46.380><c> little</c><00:03:46.700><c> that</c><00:03:47.700><c> may</c><00:03:47.820><c> be</c><00:03:47.880><c> a</c><00:03:47.970><c> little</c><00:03:48.180><c> of</c>

00:03:48.320 --> 00:03:48.330 align:start position:0%
may be a little that may be a little of
 

00:03:48.330 --> 00:03:50.600 align:start position:0%
may be a little that may be a little of
a<00:03:48.570><c> little</c><00:03:49.170><c> bit</c><00:03:49.260><c> of</c><00:03:49.350><c> a</c><00:03:49.890><c> shocker</c><00:03:50.130><c> for</c><00:03:50.370><c> those</c><00:03:50.489><c> of</c>

00:03:50.600 --> 00:03:50.610 align:start position:0%
a little bit of a shocker for those of
 

00:03:50.610 --> 00:03:52.070 align:start position:0%
a little bit of a shocker for those of
you<00:03:50.670><c> are</c><00:03:50.790><c> used</c><00:03:50.970><c> to</c><00:03:51.030><c> Java</c><00:03:51.299><c> we</c><00:03:51.959><c> have</c><00:03:52.049><c> a</c>

00:03:52.070 --> 00:03:52.080 align:start position:0%
you are used to Java we have a
 

00:03:52.080 --> 00:03:53.509 align:start position:0%
you are used to Java we have a
standalone<00:03:52.470><c> function</c><00:03:52.769><c> here</c><00:03:53.130><c> right</c><00:03:53.310><c> there's</c>

00:03:53.509 --> 00:03:53.519 align:start position:0%
standalone function here right there's
 

00:03:53.519 --> 00:03:56.000 align:start position:0%
standalone function here right there's
no<00:03:54.200><c> requirement</c><00:03:55.200><c> that</c><00:03:55.230><c> things</c><00:03:55.470><c> be</c><00:03:55.650><c> scoped</c><00:03:55.950><c> to</c>

00:03:56.000 --> 00:03:56.010 align:start position:0%
no requirement that things be scoped to
 

00:03:56.010 --> 00:03:58.940 align:start position:0%
no requirement that things be scoped to
a<00:03:56.150><c> to</c><00:03:57.150><c> a</c><00:03:57.180><c> particular</c><00:03:57.600><c> class</c><00:03:57.780><c> another</c><00:03:58.709><c> thing</c>

00:03:58.940 --> 00:03:58.950 align:start position:0%
a to a particular class another thing
 

00:03:58.950 --> 00:04:00.470 align:start position:0%
a to a particular class another thing
that<00:03:59.100><c> you</c><00:03:59.160><c> may</c><00:03:59.280><c> notice</c><00:03:59.370><c> is</c><00:03:59.580><c> this</c><00:03:59.700><c> open</c><00:04:00.120><c> key</c>

00:04:00.470 --> 00:04:00.480 align:start position:0%
that you may notice is this open key
 

00:04:00.480 --> 00:04:03.229 align:start position:0%
that you may notice is this open key
word<00:04:00.690><c> this</c><00:04:01.560><c> is</c><00:04:01.799><c> this</c><00:04:02.100><c> is</c><00:04:02.250><c> a</c><00:04:02.280><c> requirement</c><00:04:03.060><c> when</c>

00:04:03.229 --> 00:04:03.239 align:start position:0%
word this is this is a requirement when
 

00:04:03.239 --> 00:04:04.550 align:start position:0%
word this is this is a requirement when
you're<00:04:03.450><c> using</c><00:04:03.570><c> spring</c><00:04:03.930><c> so</c><00:04:04.140><c> when</c><00:04:04.260><c> you're</c><00:04:04.350><c> when</c>

00:04:04.550 --> 00:04:04.560 align:start position:0%
you're using spring so when you're when
 

00:04:04.560 --> 00:04:06.740 align:start position:0%
you're using spring so when you're when
you're<00:04:04.709><c> using</c><00:04:04.860><c> spring</c><00:04:05.190><c> and</c><00:04:05.370><c> common</c><00:04:06.060><c> remember</c>

00:04:06.740 --> 00:04:06.750 align:start position:0%
you're using spring and common remember
 

00:04:06.750 --> 00:04:09.050 align:start position:0%
you're using spring and common remember
that<00:04:06.959><c> almost</c><00:04:07.290><c> everything</c><00:04:07.470><c> you</c><00:04:07.830><c> do</c><00:04:07.980><c> should</c><00:04:08.220><c> be</c>

00:04:09.050 --> 00:04:09.060 align:start position:0%
that almost everything you do should be
 

00:04:09.060 --> 00:04:11.210 align:start position:0%
that almost everything you do should be
open<00:04:09.450><c> and</c><00:04:09.570><c> open</c><00:04:09.989><c> in</c><00:04:10.320><c> the</c><00:04:10.530><c> cotton</c><00:04:10.830><c> world</c><00:04:11.010><c> means</c>

00:04:11.210 --> 00:04:11.220 align:start position:0%
open and open in the cotton world means
 

00:04:11.220 --> 00:04:13.580 align:start position:0%
open and open in the cotton world means
that<00:04:11.430><c> a</c><00:04:11.459><c> the</c><00:04:12.000><c> class</c><00:04:12.209><c> is</c><00:04:12.420><c> not</c><00:04:12.450><c> final</c><00:04:13.110><c> that</c><00:04:13.380><c> is</c><00:04:13.410><c> to</c>

00:04:13.580 --> 00:04:13.590 align:start position:0%
that a the class is not final that is to
 

00:04:13.590 --> 00:04:17.120 align:start position:0%
that a the class is not final that is to
say<00:04:13.739><c> by</c><00:04:14.670><c> default</c><00:04:15.000><c> classes</c><00:04:15.600><c> and</c><00:04:15.870><c> and</c><00:04:16.290><c> functions</c>

00:04:17.120 --> 00:04:17.130 align:start position:0%
say by default classes and and functions
 

00:04:17.130 --> 00:04:19.670 align:start position:0%
say by default classes and and functions
in<00:04:17.280><c> Cottman</c><00:04:18.150><c> are</c><00:04:18.359><c> the</c><00:04:18.750><c> equivalent</c><00:04:19.140><c> of</c><00:04:19.290><c> Java's</c>

00:04:19.670 --> 00:04:19.680 align:start position:0%
in Cottman are the equivalent of Java's
 

00:04:19.680 --> 00:04:21.320 align:start position:0%
in Cottman are the equivalent of Java's
final<00:04:20.250><c> key</c><00:04:20.400><c> word</c><00:04:20.549><c> they're</c><00:04:20.700><c> sealed</c><00:04:21.030><c> there</c>

00:04:21.320 --> 00:04:21.330 align:start position:0%
final key word they're sealed there
 

00:04:21.330 --> 00:04:25.100 align:start position:0%
final key word they're sealed there
they're<00:04:21.870><c> not</c><00:04:22.820><c> meant</c><00:04:23.820><c> to</c><00:04:23.880><c> be</c><00:04:23.940><c> subclass</c><00:04:24.390><c> but</c><00:04:24.660><c> you</c>

00:04:25.100 --> 00:04:25.110 align:start position:0%
they're not meant to be subclass but you
 

00:04:25.110 --> 00:04:27.110 align:start position:0%
they're not meant to be subclass but you
have<00:04:25.229><c> to</c><00:04:25.380><c> you</c><00:04:25.650><c> have</c><00:04:25.710><c> to</c><00:04:25.830><c> explicitly</c><00:04:26.460><c> toggle</c>

00:04:27.110 --> 00:04:27.120 align:start position:0%
have to you have to explicitly toggle
 

00:04:27.120 --> 00:04:28.159 align:start position:0%
have to you have to explicitly toggle
that<00:04:27.210><c> behavior</c><00:04:27.540><c> so</c><00:04:27.690><c> it's</c><00:04:27.810><c> the</c><00:04:27.930><c> default</c>

00:04:28.159 --> 00:04:28.169 align:start position:0%
that behavior so it's the default
 

00:04:28.169 --> 00:04:29.540 align:start position:0%
that behavior so it's the default
whereas<00:04:28.500><c> in</c><00:04:28.590><c> Java</c><00:04:28.770><c> everything's</c><00:04:29.160><c> open</c><00:04:29.430><c> you</c>

00:04:29.540 --> 00:04:29.550 align:start position:0%
whereas in Java everything's open you
 

00:04:29.550 --> 00:04:32.570 align:start position:0%
whereas in Java everything's open you
have<00:04:29.640><c> to</c><00:04:29.760><c> use</c><00:04:30.180><c> final</c><00:04:30.630><c> to</c><00:04:30.780><c> lock</c><00:04:31.470><c> it</c><00:04:31.620><c> in</c><00:04:31.770><c> cotton</c>

00:04:32.570 --> 00:04:32.580 align:start position:0%
have to use final to lock it in cotton
 

00:04:32.580 --> 00:04:33.740 align:start position:0%
have to use final to lock it in cotton
and<00:04:32.700><c> everything</c><00:04:33.000><c> is</c><00:04:33.120><c> locked</c><00:04:33.300><c> you</c><00:04:33.510><c> have</c><00:04:33.630><c> to</c>

00:04:33.740 --> 00:04:33.750 align:start position:0%
and everything is locked you have to
 

00:04:33.750 --> 00:04:36.320 align:start position:0%
and everything is locked you have to
open<00:04:34.500><c> it</c><00:04:34.590><c> for</c><00:04:34.860><c> everything</c><00:04:35.160><c> for</c><00:04:35.430><c> it</c><00:04:35.550><c> to</c><00:04:35.640><c> be</c><00:04:35.760><c> open</c>

00:04:36.320 --> 00:04:36.330 align:start position:0%
open it for everything for it to be open
 

00:04:36.330 --> 00:04:37.790 align:start position:0%
open it for everything for it to be open
the<00:04:36.780><c> reason</c><00:04:37.080><c> you</c><00:04:37.140><c> have</c><00:04:37.260><c> to</c><00:04:37.289><c> do</c><00:04:37.470><c> this</c><00:04:37.590><c> is</c>

00:04:37.790 --> 00:04:37.800 align:start position:0%
the reason you have to do this is
 

00:04:37.800 --> 00:04:40.159 align:start position:0%
the reason you have to do this is
because<00:04:38.330><c> spring</c><00:04:39.330><c> in</c><00:04:39.510><c> order</c><00:04:39.690><c> to</c><00:04:39.780><c> do</c><00:04:39.840><c> its</c><00:04:39.960><c> work</c>

00:04:40.159 --> 00:04:40.169 align:start position:0%
because spring in order to do its work
 

00:04:40.169 --> 00:04:40.930 align:start position:0%
because spring in order to do its work
as

00:04:40.930 --> 00:04:40.940 align:start position:0%
as
 

00:04:40.940 --> 00:04:42.070 align:start position:0%
as
dependency<00:04:41.300><c> injection</c><00:04:41.330><c> container</c><00:04:41.930><c> that</c>

00:04:42.070 --> 00:04:42.080 align:start position:0%
dependency injection container that
 

00:04:42.080 --> 00:04:44.620 align:start position:0%
dependency injection container that
provides<00:04:42.410><c> services</c><00:04:43.700><c> it</c><00:04:43.970><c> creates</c><00:04:44.360><c> lots</c><00:04:44.540><c> of</c>

00:04:44.620 --> 00:04:44.630 align:start position:0%
provides services it creates lots of
 

00:04:44.630 --> 00:04:46.350 align:start position:0%
provides services it creates lots of
proxies<00:04:45.110><c> and</c><00:04:45.230><c> these</c><00:04:45.350><c> proxies</c><00:04:45.800><c> are</c><00:04:45.830><c> based</c><00:04:46.100><c> on</c>

00:04:46.350 --> 00:04:46.360 align:start position:0%
proxies and these proxies are based on
 

00:04:46.360 --> 00:04:48.730 align:start position:0%
proxies and these proxies are based on
you<00:04:47.360><c> know</c><00:04:47.390><c> proxies</c><00:04:47.840><c> in</c><00:04:47.990><c> general</c><00:04:48.260><c> are</c><00:04:48.380><c> based</c><00:04:48.590><c> on</c>

00:04:48.730 --> 00:04:48.740 align:start position:0%
you know proxies in general are based on
 

00:04:48.740 --> 00:04:50.920 align:start position:0%
you know proxies in general are based on
the<00:04:48.830><c> idea</c><00:04:49.040><c> that</c><00:04:49.100><c> we</c><00:04:49.700><c> dynamically</c><00:04:50.210><c> subclass</c><00:04:50.750><c> or</c>

00:04:50.920 --> 00:04:50.930 align:start position:0%
the idea that we dynamically subclass or
 

00:04:50.930 --> 00:04:53.080 align:start position:0%
the idea that we dynamically subclass or
types<00:04:51.170><c> for</c><00:04:51.410><c> you</c><00:04:51.530><c> right</c><00:04:51.830><c> we</c><00:04:52.310><c> can't</c><00:04:52.580><c> do</c><00:04:52.760><c> that</c><00:04:52.910><c> if</c>

00:04:53.080 --> 00:04:53.090 align:start position:0%
types for you right we can't do that if
 

00:04:53.090 --> 00:04:54.670 align:start position:0%
types for you right we can't do that if
your<00:04:53.270><c> your</c><00:04:53.600><c> methods</c><00:04:53.930><c> are</c><00:04:53.990><c> final</c><00:04:54.440><c> so</c><00:04:54.560><c> you'll</c>

00:04:54.670 --> 00:04:54.680 align:start position:0%
your your methods are final so you'll
 

00:04:54.680 --> 00:04:56.410 align:start position:0%
your your methods are final so you'll
have<00:04:54.830><c> the</c><00:04:54.950><c> same</c><00:04:55.100><c> limitation</c><00:04:55.640><c> if</c><00:04:55.790><c> you</c><00:04:56.210><c> were</c><00:04:56.300><c> to</c>

00:04:56.410 --> 00:04:56.420 align:start position:0%
have the same limitation if you were to
 

00:04:56.420 --> 00:04:58.390 align:start position:0%
have the same limitation if you were to
make<00:04:56.720><c> all</c><00:04:56.900><c> of</c><00:04:56.930><c> your</c><00:04:57.080><c> code</c><00:04:57.290><c> in</c><00:04:57.440><c> Java</c><00:04:57.680><c> final</c>

00:04:58.390 --> 00:04:58.400 align:start position:0%
make all of your code in Java final
 

00:04:58.400 --> 00:05:01.210 align:start position:0%
make all of your code in Java final
you'd<00:04:58.520><c> find</c><00:04:58.870><c> you'd</c><00:04:59.870><c> find</c><00:05:00.080><c> trouble</c><00:05:00.440><c> working</c>

00:05:01.210 --> 00:05:01.220 align:start position:0%
you'd find you'd find trouble working
 

00:05:01.220 --> 00:05:02.950 align:start position:0%
you'd find you'd find trouble working
with<00:05:01.430><c> spring</c><00:05:02.000><c> as</c><00:05:02.120><c> well</c><00:05:02.300><c> there</c><00:05:02.540><c> right</c><00:05:02.720><c> and</c><00:05:02.840><c> it's</c>

00:05:02.950 --> 00:05:02.960 align:start position:0%
with spring as well there right and it's
 

00:05:02.960 --> 00:05:03.970 align:start position:0%
with spring as well there right and it's
not<00:05:03.080><c> too</c><00:05:03.200><c> spring</c><00:05:03.440><c> I</c><00:05:03.530><c> mean</c><00:05:03.680><c> any</c><00:05:03.830><c> other</c>

00:05:03.970 --> 00:05:03.980 align:start position:0%
not too spring I mean any other
 

00:05:03.980 --> 00:05:04.930 align:start position:0%
not too spring I mean any other
framework<00:05:04.250><c> that</c><00:05:04.460><c> does</c><00:05:04.610><c> any</c><00:05:04.760><c> kind</c><00:05:04.790><c> of</c>

00:05:04.930 --> 00:05:04.940 align:start position:0%
framework that does any kind of
 

00:05:04.940 --> 00:05:09.130 align:start position:0%
framework that does any kind of
reflection<00:05:05.450><c> like</c><00:05:06.200><c> hibernator</c><00:05:06.650><c> or</c><00:05:06.950><c> or</c><00:05:08.140><c> indeed</c>

00:05:09.130 --> 00:05:09.140 align:start position:0%
reflection like hibernator or or indeed
 

00:05:09.140 --> 00:05:10.870 align:start position:0%
reflection like hibernator or or indeed
any<00:05:09.260><c> almost</c><00:05:09.470><c> anything</c><00:05:09.740><c> will</c><00:05:10.490><c> have</c><00:05:10.640><c> trouble</c>

00:05:10.870 --> 00:05:10.880 align:start position:0%
any almost anything will have trouble
 

00:05:10.880 --> 00:05:13.000 align:start position:0%
any almost anything will have trouble
with<00:05:11.060><c> these</c><00:05:11.180><c> kinds</c><00:05:11.420><c> of</c><00:05:11.480><c> types</c><00:05:11.690><c> so</c><00:05:11.900><c> open</c><00:05:12.740><c> is</c><00:05:12.860><c> the</c>

00:05:13.000 --> 00:05:13.010 align:start position:0%
with these kinds of types so open is the
 

00:05:13.010 --> 00:05:15.010 align:start position:0%
with these kinds of types so open is the
is<00:05:13.190><c> the</c><00:05:13.370><c> default</c><00:05:13.640><c> and</c><00:05:13.820><c> that's</c><00:05:13.880><c> I</c><00:05:14.180><c> think</c><00:05:14.480><c> the</c>

00:05:15.010 --> 00:05:15.020 align:start position:0%
is the default and that's I think the
 

00:05:15.020 --> 00:05:16.960 align:start position:0%
is the default and that's I think the
one<00:05:15.170><c> bit</c><00:05:15.350><c> of</c><00:05:15.380><c> extra</c><00:05:16.040><c> verbosity</c><00:05:16.400><c> that</c><00:05:16.850><c> you</c>

00:05:16.960 --> 00:05:16.970 align:start position:0%
one bit of extra verbosity that you
 

00:05:16.970 --> 00:05:18.670 align:start position:0%
one bit of extra verbosity that you
would<00:05:17.120><c> get</c><00:05:17.240><c> by</c><00:05:17.300><c> when</c><00:05:17.600><c> you</c><00:05:17.690><c> by</c><00:05:18.170><c> moving</c><00:05:18.380><c> to</c><00:05:18.590><c> this</c>

00:05:18.670 --> 00:05:18.680 align:start position:0%
would get by when you by moving to this
 

00:05:18.680 --> 00:05:21.300 align:start position:0%
would get by when you by moving to this
to<00:05:19.190><c> the</c><00:05:19.280><c> common</c><00:05:19.580><c> language</c><00:05:19.880><c> but</c><00:05:20.420><c> it</c><00:05:20.720><c> is</c><00:05:20.810><c> a</c>

00:05:21.300 --> 00:05:21.310 align:start position:0%
to the common language but it is a
 

00:05:21.310 --> 00:05:23.290 align:start position:0%
to the common language but it is a
overall<00:05:22.310><c> I</c><00:05:22.340><c> think</c><00:05:22.520><c> a</c><00:05:22.670><c> very</c><00:05:22.820><c> concise</c><00:05:23.120><c> language</c>

00:05:23.290 --> 00:05:23.300 align:start position:0%
overall I think a very concise language
 

00:05:23.300 --> 00:05:25.720 align:start position:0%
overall I think a very concise language
so<00:05:23.890><c> let's</c><00:05:24.890><c> go</c><00:05:25.100><c> ahead</c><00:05:25.220><c> and</c><00:05:25.310><c> try</c><00:05:25.400><c> it</c><00:05:25.430><c> we're</c><00:05:25.640><c> gonna</c>

00:05:25.720 --> 00:05:25.730 align:start position:0%
so let's go ahead and try it we're gonna
 

00:05:25.730 --> 00:05:26.770 align:start position:0%
so let's go ahead and try it we're gonna
go<00:05:25.880><c> ahead</c><00:05:25.940><c> and</c><00:05:26.090><c> build</c><00:05:26.240><c> a</c><00:05:26.330><c> simple</c><00:05:26.660><c> application</c>

00:05:26.770 --> 00:05:26.780 align:start position:0%
go ahead and build a simple application
 

00:05:26.780 --> 00:05:29.260 align:start position:0%
go ahead and build a simple application
we'll<00:05:27.290><c> have</c><00:05:27.440><c> an</c><00:05:27.560><c> entity</c><00:05:27.980><c> an</c><00:05:28.640><c> open</c><00:05:28.940><c> entity</c><00:05:29.240><c> a</c>

00:05:29.260 --> 00:05:29.270 align:start position:0%
we'll have an entity an open entity a
 

00:05:29.270 --> 00:05:31.540 align:start position:0%
we'll have an entity an open entity a
data<00:05:30.170><c> entity</c><00:05:30.470><c> that</c><00:05:30.620><c> it's</c><00:05:30.800><c> gonna</c><00:05:30.950><c> be</c><00:05:31.070><c> actually</c>

00:05:31.540 --> 00:05:31.550 align:start position:0%
data entity that it's gonna be actually
 

00:05:31.550 --> 00:05:33.340 align:start position:0%
data entity that it's gonna be actually
we're<00:05:32.090><c> gonna</c><00:05:32.180><c> create</c><00:05:32.390><c> a</c><00:05:32.450><c> type</c><00:05:32.840><c> we're</c><00:05:33.260><c> gonna</c>

00:05:33.340 --> 00:05:33.350 align:start position:0%
we're gonna create a type we're gonna
 

00:05:33.350 --> 00:05:35.770 align:start position:0%
we're gonna create a type we're gonna
create<00:05:33.500><c> a</c><00:05:33.560><c> type</c><00:05:33.770><c> called</c><00:05:33.980><c> a</c><00:05:34.190><c> person</c><00:05:34.850><c> and</c><00:05:35.030><c> this</c>

00:05:35.770 --> 00:05:35.780 align:start position:0%
create a type called a person and this
 

00:05:35.780 --> 00:05:39.790 align:start position:0%
create a type called a person and this
person<00:05:35.840><c> is</c><00:05:36.380><c> a</c><00:05:37.190><c> class</c><00:05:37.760><c> right</c><00:05:38.630><c> that</c><00:05:38.900><c> we</c><00:05:39.440><c> want</c><00:05:39.620><c> to</c>

00:05:39.790 --> 00:05:39.800 align:start position:0%
person is a class right that we want to
 

00:05:39.800 --> 00:05:47.400 align:start position:0%
person is a class right that we want to
implement<00:05:41.800><c> but</c><00:05:42.800><c> this</c><00:05:43.460><c> this</c><00:05:43.970><c> class</c><00:05:44.270><c> is</c><00:05:44.630><c> a</c><00:05:45.460><c> is</c>

00:05:47.400 --> 00:05:47.410 align:start position:0%
implement but this this class is a is
 

00:05:47.410 --> 00:05:50.200 align:start position:0%
implement but this this class is a is
just<00:05:48.410><c> a</c><00:05:48.680><c> POJO</c><00:05:49.100><c> it's</c><00:05:49.370><c> gonna</c><00:05:49.490><c> have</c><00:05:49.669><c> D</c><00:05:49.880><c> it's</c><00:05:50.120><c> gonna</c>

00:05:50.200 --> 00:05:50.210 align:start position:0%
just a POJO it's gonna have D it's gonna
 

00:05:50.210 --> 00:05:51.460 align:start position:0%
just a POJO it's gonna have D it's gonna
have<00:05:50.360><c> field</c><00:05:50.600><c> that</c><00:05:50.780><c> were</c><00:05:50.870><c> in</c><00:05:50.900><c> a</c><00:05:50.960><c> store</c><00:05:51.260><c> in</c><00:05:51.440><c> the</c>

00:05:51.460 --> 00:05:51.470 align:start position:0%
have field that were in a store in the
 

00:05:51.470 --> 00:05:53.830 align:start position:0%
have field that were in a store in the
database<00:05:51.620><c> using</c><00:05:52.430><c> spring</c><00:05:52.760><c> data</c><00:05:52.940><c> MongoDB</c><00:05:53.630><c> and</c>

00:05:53.830 --> 00:05:53.840 align:start position:0%
database using spring data MongoDB and
 

00:05:53.840 --> 00:05:55.570 align:start position:0%
database using spring data MongoDB and
so<00:05:54.320><c> while</c><00:05:54.650><c> I</c><00:05:54.680><c> could</c><00:05:54.950><c> just</c><00:05:55.130><c> make</c><00:05:55.250><c> it</c><00:05:55.310><c> a</c><00:05:55.370><c> class</c>

00:05:55.570 --> 00:05:55.580 align:start position:0%
so while I could just make it a class
 

00:05:55.580 --> 00:05:59.440 align:start position:0%
so while I could just make it a class
like<00:05:55.880><c> this</c><00:05:57.340><c> what</c><00:05:58.340><c> I</c><00:05:58.370><c> really</c><00:05:58.610><c> want</c><00:05:58.880><c> is</c><00:05:59.030><c> I</c><00:05:59.150><c> want</c><00:05:59.180><c> a</c>

00:05:59.440 --> 00:05:59.450 align:start position:0%
like this what I really want is I want a
 

00:05:59.450 --> 00:06:01.900 align:start position:0%
like this what I really want is I want a
class<00:05:59.720><c> that</c><00:06:00.620><c> has</c><00:06:00.770><c> fields</c><00:06:01.280><c> and</c><00:06:01.370><c> I</c><00:06:01.400><c> want</c><00:06:01.580><c> getters</c>

00:06:01.900 --> 00:06:01.910 align:start position:0%
class that has fields and I want getters
 

00:06:01.910 --> 00:06:03.880 align:start position:0%
class that has fields and I want getters
and<00:06:01.940><c> setters</c><00:06:02.120><c> and</c><00:06:02.419><c> I</c><00:06:02.600><c> want</c><00:06:02.750><c> to</c><00:06:02.930><c> a</c><00:06:03.200><c> few</c>

00:06:03.880 --> 00:06:03.890 align:start position:0%
and setters and I want to a few
 

00:06:03.890 --> 00:06:05.200 align:start position:0%
and setters and I want to a few
constructors<00:06:04.430><c> and</c><00:06:04.580><c> I</c><00:06:04.610><c> want</c><00:06:04.730><c> a</c><00:06:04.760><c> two</c><00:06:04.940><c> string</c>

00:06:05.200 --> 00:06:05.210 align:start position:0%
constructors and I want a two string
 

00:06:05.210 --> 00:06:06.730 align:start position:0%
constructors and I want a two string
method<00:06:05.240><c> and</c><00:06:05.630><c> a</c><00:06:05.690><c> copy</c><00:06:05.870><c> method</c><00:06:06.290><c> and</c><00:06:06.410><c> I</c><00:06:06.440><c> want</c><00:06:06.590><c> all</c>

00:06:06.730 --> 00:06:06.740 align:start position:0%
method and a copy method and I want all
 

00:06:06.740 --> 00:06:09.340 align:start position:0%
method and a copy method and I want all
that<00:06:06.860><c> sort</c><00:06:07.070><c> of</c><00:06:07.130><c> stuff</c><00:06:07.880><c> right</c><00:06:08.180><c> so</c><00:06:08.390><c> Kaufman</c><00:06:09.260><c> has</c>

00:06:09.340 --> 00:06:09.350 align:start position:0%
that sort of stuff right so Kaufman has
 

00:06:09.350 --> 00:06:10.810 align:start position:0%
that sort of stuff right so Kaufman has
a<00:06:09.380><c> special</c><00:06:09.800><c> kind</c><00:06:09.980><c> of</c><00:06:10.070><c> entity</c><00:06:10.370><c> of</c><00:06:10.460><c> a</c><00:06:10.520><c> special</c>

00:06:10.810 --> 00:06:10.820 align:start position:0%
a special kind of entity of a special
 

00:06:10.820 --> 00:06:12.250 align:start position:0%
a special kind of entity of a special
kind<00:06:10.940><c> of</c><00:06:11.000><c> class</c><00:06:11.180><c> for</c><00:06:11.419><c> that</c><00:06:11.510><c> called</c><00:06:11.930><c> a</c><00:06:12.020><c> data</c>

00:06:12.250 --> 00:06:12.260 align:start position:0%
kind of class for that called a data
 

00:06:12.260 --> 00:06:16.450 align:start position:0%
kind of class for that called a data
class<00:06:12.650><c> right</c><00:06:13.780><c> and</c><00:06:14.780><c> so</c><00:06:14.900><c> data</c><00:06:15.110><c> classes</c><00:06:15.530><c> are</c><00:06:15.710><c> very</c>

00:06:16.450 --> 00:06:16.460 align:start position:0%
class right and so data classes are very
 

00:06:16.460 --> 00:06:18.490 align:start position:0%
class right and so data classes are very
convenient<00:06:16.820><c> they</c><00:06:17.000><c> expect</c><00:06:17.330><c> a</c><00:06:17.480><c> constructor</c><00:06:18.440><c> and</c>

00:06:18.490 --> 00:06:18.500 align:start position:0%
convenient they expect a constructor and
 

00:06:18.500 --> 00:06:20.440 align:start position:0%
convenient they expect a constructor and
so<00:06:18.680><c> here</c><00:06:18.890><c> too</c><00:06:19.160><c> is</c><00:06:19.310><c> another</c><00:06:19.550><c> difference</c>

00:06:20.440 --> 00:06:20.450 align:start position:0%
so here too is another difference
 

00:06:20.450 --> 00:06:22.510 align:start position:0%
so here too is another difference
between<00:06:20.750><c> what</c><00:06:20.930><c> you've</c><00:06:21.080><c> seen</c><00:06:21.320><c> in</c><00:06:21.560><c> the</c><00:06:22.190><c> J</c><00:06:22.340><c> and</c>

00:06:22.510 --> 00:06:22.520 align:start position:0%
between what you've seen in the J and
 

00:06:22.520 --> 00:06:25.810 align:start position:0%
between what you've seen in the J and
Java<00:06:22.880><c> versus</c><00:06:23.480><c> a</c><00:06:23.510><c> more</c><00:06:24.260><c> modern</c><00:06:24.710><c> jvm</c><00:06:25.400><c> languages</c>

00:06:25.810 --> 00:06:25.820 align:start position:0%
Java versus a more modern jvm languages
 

00:06:25.820 --> 00:06:27.580 align:start position:0%
Java versus a more modern jvm languages
is<00:06:26.000><c> that</c><00:06:26.390><c> we</c><00:06:26.450><c> can</c><00:06:26.600><c> define</c><00:06:26.870><c> the</c><00:06:26.990><c> constructor</c><00:06:27.290><c> in</c>

00:06:27.580 --> 00:06:27.590 align:start position:0%
is that we can define the constructor in
 

00:06:27.590 --> 00:06:29.290 align:start position:0%
is that we can define the constructor in
the<00:06:27.620><c> class</c><00:06:27.919><c> definition</c><00:06:28.100><c> right</c><00:06:28.490><c> the</c><00:06:28.669><c> primary</c>

00:06:29.290 --> 00:06:29.300 align:start position:0%
the class definition right the primary
 

00:06:29.300 --> 00:06:31.300 align:start position:0%
the class definition right the primary
constructor<00:06:29.870><c> secondary</c><00:06:30.710><c> constructors</c><00:06:31.160><c> take</c>

00:06:31.300 --> 00:06:31.310 align:start position:0%
constructor secondary constructors take
 

00:06:31.310 --> 00:06:33.460 align:start position:0%
constructor secondary constructors take
another<00:06:31.520><c> form</c><00:06:31.760><c> but</c><00:06:32.630><c> for</c><00:06:32.780><c> data</c><00:06:32.930><c> classes</c><00:06:33.320><c> we</c>

00:06:33.460 --> 00:06:33.470 align:start position:0%
another form but for data classes we
 

00:06:33.470 --> 00:06:35.409 align:start position:0%
another form but for data classes we
this<00:06:33.710><c> is</c><00:06:33.860><c> very</c><00:06:34.040><c> convenient</c><00:06:34.340><c> right</c><00:06:34.580><c> in</c><00:06:35.210><c> the</c>

00:06:35.409 --> 00:06:35.419 align:start position:0%
this is very convenient right in the
 

00:06:35.419 --> 00:06:37.150 align:start position:0%
this is very convenient right in the
constructor<00:06:35.870><c> we</c><00:06:35.990><c> can</c><00:06:36.110><c> define</c><00:06:36.440><c> the</c><00:06:36.680><c> fields</c>

00:06:37.150 --> 00:06:37.160 align:start position:0%
constructor we can define the fields
 

00:06:37.160 --> 00:06:38.290 align:start position:0%
constructor we can define the fields
that<00:06:37.220><c> are</c><00:06:37.310><c> expected</c><00:06:37.850><c> so</c><00:06:37.940><c> I'm</c><00:06:38.000><c> going</c><00:06:38.150><c> to</c><00:06:38.180><c> say</c>

00:06:38.290 --> 00:06:38.300 align:start position:0%
that are expected so I'm going to say
 

00:06:38.300 --> 00:06:41.680 align:start position:0%
that are expected so I'm going to say
that<00:06:38.450><c> I</c><00:06:38.480><c> expect</c><00:06:39.020><c> a</c><00:06:39.310><c> mutable</c><00:06:40.310><c> field</c><00:06:40.790><c> for</c><00:06:41.630><c> the</c>

00:06:41.680 --> 00:06:41.690 align:start position:0%
that I expect a mutable field for the
 

00:06:41.690 --> 00:06:43.750 align:start position:0%
that I expect a mutable field for the
first<00:06:41.960><c> name</c><00:06:42.200><c> and</c><00:06:42.380><c> a</c><00:06:42.830><c> mutable</c><00:06:43.190><c> field</c><00:06:43.490><c> for</c><00:06:43.700><c> the</c>

00:06:43.750 --> 00:06:43.760 align:start position:0%
first name and a mutable field for the
 

00:06:43.760 --> 00:06:46.290 align:start position:0%
first name and a mutable field for the
last<00:06:43.910><c> name</c><00:06:44.060><c> in</c><00:06:44.210><c> a</c><00:06:44.270><c> mutable</c><00:06:44.660><c> field</c><00:06:45.020><c> for</c><00:06:45.980><c> the</c><00:06:46.100><c> ID</c>

00:06:46.290 --> 00:06:46.300 align:start position:0%
last name in a mutable field for the ID
 

00:06:46.300 --> 00:06:52.390 align:start position:0%
last name in a mutable field for the ID
well<00:06:47.300><c> in</c><00:06:47.570><c> in</c><00:06:48.260><c> in</c><00:06:48.890><c> carlin</c><00:06:50.530><c> it's</c><00:06:51.530><c> you</c><00:06:52.100><c> have</c><00:06:52.220><c> to</c><00:06:52.310><c> go</c>

00:06:52.390 --> 00:06:52.400 align:start position:0%
well in in in carlin it's you have to go
 

00:06:52.400 --> 00:06:54.040 align:start position:0%
well in in in carlin it's you have to go
out<00:06:52.490><c> of</c><00:06:52.580><c> your</c><00:06:52.610><c> way</c><00:06:52.760><c> to</c><00:06:52.880><c> make</c><00:06:53.300><c> things</c><00:06:53.539><c> mutable</c>

00:06:54.040 --> 00:06:54.050 align:start position:0%
out of your way to make things mutable
 

00:06:54.050 --> 00:06:54.670 align:start position:0%
out of your way to make things mutable
right

00:06:54.670 --> 00:06:54.680 align:start position:0%
right
 

00:06:54.680 --> 00:06:57.189 align:start position:0%
right
by<00:06:54.889><c> default</c><00:06:55.130><c> everything</c><00:06:55.490><c> is</c><00:06:55.580><c> immutable</c><00:06:56.240><c> so</c><00:06:56.930><c> if</c>

00:06:57.189 --> 00:06:57.199 align:start position:0%
by default everything is immutable so if
 

00:06:57.199 --> 00:06:58.600 align:start position:0%
by default everything is immutable so if
you<00:06:57.380><c> want</c><00:06:57.530><c> to</c><00:06:57.650><c> express</c><00:06:57.860><c> that</c><00:06:57.949><c> a</c><00:06:58.100><c> value</c><00:06:58.400><c> can</c><00:06:58.580><c> be</c>

00:06:58.600 --> 00:06:58.610 align:start position:0%
you want to express that a value can be
 

00:06:58.610 --> 00:07:01.060 align:start position:0%
you want to express that a value can be
changed<00:06:58.910><c> you</c><00:06:59.900><c> must</c><00:07:00.110><c> use</c><00:07:00.259><c> a</c><00:07:00.290><c> specific</c><00:07:00.650><c> type</c><00:07:01.040><c> of</c>

00:07:01.060 --> 00:07:01.070 align:start position:0%
changed you must use a specific type of
 

00:07:01.070 --> 00:07:03.939 align:start position:0%
changed you must use a specific type of
prefix<00:07:01.669><c> var</c><00:07:02.300><c> whereas</c><00:07:03.139><c> a</c><00:07:03.229><c> value</c><00:07:03.440><c> that</c><00:07:03.530><c> can't</c><00:07:03.860><c> be</c>

00:07:03.939 --> 00:07:03.949 align:start position:0%
prefix var whereas a value that can't be
 

00:07:03.949 --> 00:07:06.189 align:start position:0%
prefix var whereas a value that can't be
changed<00:07:04.039><c> that's</c><00:07:04.550><c> constant</c><00:07:05.090><c> after</c><00:07:05.840><c> it's</c><00:07:06.110><c> been</c>

00:07:06.189 --> 00:07:06.199 align:start position:0%
changed that's constant after it's been
 

00:07:06.199 --> 00:07:08.590 align:start position:0%
changed that's constant after it's been
initialized<00:07:06.500><c> that</c><00:07:06.710><c> is</c><00:07:06.830><c> is</c><00:07:06.979><c> Val</c><00:07:07.789><c> right</c><00:07:08.300><c> so</c><00:07:08.479><c> this</c>

00:07:08.590 --> 00:07:08.600 align:start position:0%
initialized that is is Val right so this
 

00:07:08.600 --> 00:07:10.240 align:start position:0%
initialized that is is Val right so this
is<00:07:08.720><c> a</c><00:07:08.750><c> this</c><00:07:09.620><c> is</c><00:07:09.800><c> the</c><00:07:09.860><c> equivalent</c><00:07:10.160><c> of</c><00:07:10.190><c> saying</c>

00:07:10.240 --> 00:07:10.250 align:start position:0%
is a this is the equivalent of saying
 

00:07:10.250 --> 00:07:13.270 align:start position:0%
is a this is the equivalent of saying
final<00:07:10.729><c> int</c><00:07:10.940><c> I</c><00:07:11.210><c> equals</c><00:07:11.270><c> 10</c><00:07:12.080><c> right</c><00:07:12.350><c> you</c><00:07:12.500><c> can</c><00:07:12.650><c> it's</c>

00:07:13.270 --> 00:07:13.280 align:start position:0%
final int I equals 10 right you can it's
 

00:07:13.280 --> 00:07:14.590 align:start position:0%
final int I equals 10 right you can it's
it's<00:07:13.550><c> going</c><00:07:13.669><c> to</c><00:07:13.729><c> always</c><00:07:13.850><c> be</c><00:07:13.970><c> 10</c><00:07:14.240><c> you</c><00:07:14.419><c> can't</c>

00:07:14.590 --> 00:07:14.600 align:start position:0%
it's going to always be 10 you can't
 

00:07:14.600 --> 00:07:18.550 align:start position:0%
it's going to always be 10 you can't
change<00:07:14.870><c> it</c><00:07:15.050><c> once</c><00:07:15.199><c> it's</c><00:07:15.320><c> been</c><00:07:15.410><c> initialized</c><00:07:17.560><c> so</c>

00:07:18.550 --> 00:07:18.560 align:start position:0%
change it once it's been initialized so
 

00:07:18.560 --> 00:07:21.180 align:start position:0%
change it once it's been initialized so
we<00:07:18.680><c> want</c><00:07:18.860><c> this</c><00:07:18.949><c> to</c><00:07:19.100><c> be</c><00:07:19.130><c> a</c><00:07:19.220><c> we</c><00:07:19.940><c> want</c><00:07:20.090><c> this</c><00:07:20.150><c> to</c><00:07:20.300><c> be</c>

00:07:21.180 --> 00:07:21.190 align:start position:0%
we want this to be a we want this to be
 

00:07:21.190 --> 00:07:24.670 align:start position:0%
we want this to be a we want this to be
to<00:07:22.190><c> be</c><00:07:22.310><c> mutable</c><00:07:23.030><c> and</c><00:07:23.180><c> by</c><00:07:23.449><c> the</c><00:07:23.509><c> way</c><00:07:23.600><c> Kotlin</c><00:07:24.410><c> data</c>

00:07:24.670 --> 00:07:24.680 align:start position:0%
to be mutable and by the way Kotlin data
 

00:07:24.680 --> 00:07:26.350 align:start position:0%
to be mutable and by the way Kotlin data
classes<00:07:25.009><c> will</c><00:07:25.130><c> create</c><00:07:25.340><c> a</c><00:07:25.490><c> setter</c><00:07:25.820><c> for</c><00:07:26.120><c> us</c><00:07:26.210><c> as</c>

00:07:26.350 --> 00:07:26.360 align:start position:0%
classes will create a setter for us as
 

00:07:26.360 --> 00:07:28.570 align:start position:0%
classes will create a setter for us as
well<00:07:26.509><c> that</c><00:07:26.539><c> also</c><00:07:27.139><c> changes</c><00:07:27.530><c> what</c><00:07:28.100><c> is</c><00:07:28.190><c> generated</c>

00:07:28.570 --> 00:07:28.580 align:start position:0%
well that also changes what is generated
 

00:07:28.580 --> 00:07:30.730 align:start position:0%
well that also changes what is generated
for<00:07:28.850><c> us</c><00:07:28.880><c> automatically</c><00:07:29.479><c> by</c><00:07:29.990><c> the</c><00:07:30.050><c> compiler</c><00:07:30.410><c> so</c>

00:07:30.730 --> 00:07:30.740 align:start position:0%
for us automatically by the compiler so
 

00:07:30.740 --> 00:07:33.340 align:start position:0%
for us automatically by the compiler so
we're<00:07:31.250><c> gonna</c><00:07:31.340><c> create</c><00:07:31.460><c> a</c><00:07:31.669><c> var</c><00:07:31.970><c> first</c><00:07:32.840><c> named</c>

00:07:33.340 --> 00:07:33.350 align:start position:0%
we're gonna create a var first named
 

00:07:33.350 --> 00:07:36.159 align:start position:0%
we're gonna create a var first named
field<00:07:33.680><c> and</c><00:07:33.919><c> we</c><00:07:33.979><c> declare</c><00:07:34.490><c> the</c><00:07:34.580><c> type</c><00:07:34.760><c> after</c><00:07:35.570><c> the</c>

00:07:36.159 --> 00:07:36.169 align:start position:0%
field and we declare the type after the
 

00:07:36.169 --> 00:07:38.469 align:start position:0%
field and we declare the type after the
variable<00:07:36.500><c> name</c><00:07:36.650><c> right</c><00:07:36.979><c> this</c><00:07:37.190><c> is</c><00:07:37.340><c> a</c><00:07:38.090><c> pretty</c>

00:07:38.469 --> 00:07:38.479 align:start position:0%
variable name right this is a pretty
 

00:07:38.479 --> 00:07:41.140 align:start position:0%
variable name right this is a pretty
common<00:07:38.750><c> convention</c><00:07:39.350><c> pascal</c><00:07:39.800><c> convention</c><00:07:40.280><c> for</c>

00:07:41.140 --> 00:07:41.150 align:start position:0%
common convention pascal convention for
 

00:07:41.150 --> 00:07:43.180 align:start position:0%
common convention pascal convention for
for<00:07:41.720><c> naming</c><00:07:41.930><c> things</c><00:07:42.320><c> so</c><00:07:42.830><c> we're</c><00:07:42.919><c> gonna</c><00:07:43.039><c> say</c>

00:07:43.180 --> 00:07:43.190 align:start position:0%
for naming things so we're gonna say
 

00:07:43.190 --> 00:07:45.100 align:start position:0%
for naming things so we're gonna say
that<00:07:43.340><c> we</c><00:07:43.430><c> have</c><00:07:43.520><c> a</c><00:07:43.550><c> first</c><00:07:43.820><c> name</c><00:07:43.880><c> now</c><00:07:44.479><c> this</c><00:07:44.810><c> name</c>

00:07:45.100 --> 00:07:45.110 align:start position:0%
that we have a first name now this name
 

00:07:45.110 --> 00:07:48.010 align:start position:0%
that we have a first name now this name
may<00:07:45.620><c> be</c><00:07:45.650><c> no</c><00:07:45.979><c> right</c><00:07:46.340><c> var</c><00:07:46.849><c> is</c><00:07:47.180><c> not</c><00:07:47.330><c> the</c><00:07:47.479><c> same</c><00:07:47.660><c> you</c>

00:07:48.010 --> 00:07:48.020 align:start position:0%
may be no right var is not the same you
 

00:07:48.020 --> 00:07:49.540 align:start position:0%
may be no right var is not the same you
know<00:07:48.050><c> the</c><00:07:48.139><c> fact</c><00:07:48.410><c> that</c><00:07:48.470><c> it</c><00:07:48.620><c> may</c><00:07:48.740><c> be</c><00:07:48.800><c> changed</c><00:07:49.400><c> is</c>

00:07:49.540 --> 00:07:49.550 align:start position:0%
know the fact that it may be changed is
 

00:07:49.550 --> 00:07:52.270 align:start position:0%
know the fact that it may be changed is
not<00:07:50.030><c> the</c><00:07:50.150><c> same</c><00:07:50.330><c> as</c><00:07:50.960><c> the</c><00:07:51.320><c> idea</c><00:07:51.919><c> that</c><00:07:52.010><c> it</c><00:07:52.130><c> may</c><00:07:52.220><c> be</c>

00:07:52.270 --> 00:07:52.280 align:start position:0%
not the same as the idea that it may be
 

00:07:52.280 --> 00:07:55.089 align:start position:0%
not the same as the idea that it may be
no<00:07:52.550><c> so</c><00:07:53.539><c> we</c><00:07:53.660><c> need</c><00:07:53.810><c> to</c><00:07:53.930><c> to</c><00:07:54.380><c> say</c><00:07:54.530><c> that</c><00:07:54.740><c> it</c><00:07:54.860><c> may</c>

00:07:55.089 --> 00:07:55.099 align:start position:0%
no so we need to to say that it may
 

00:07:55.099 --> 00:07:58.930 align:start position:0%
no so we need to to say that it may
optionally<00:07:55.759><c> be</c><00:07:55.880><c> null</c><00:07:56.210><c> so</c><00:07:56.960><c> we</c><00:07:57.080><c> will</c><00:07:57.669><c> use</c><00:07:58.669><c> this</c>

00:07:58.930 --> 00:07:58.940 align:start position:0%
optionally be null so we will use this
 

00:07:58.940 --> 00:08:00.640 align:start position:0%
optionally be null so we will use this
this<00:07:59.240><c> question</c><00:07:59.660><c> mark</c><00:07:59.810><c> operator</c><00:08:00.139><c> to</c><00:08:00.349><c> signal</c>

00:08:00.640 --> 00:08:00.650 align:start position:0%
this question mark operator to signal
 

00:08:00.650 --> 00:08:03.310 align:start position:0%
this question mark operator to signal
that<00:08:00.680><c> ok</c><00:08:01.120><c> then</c><00:08:02.120><c> we're</c><00:08:02.240><c> gonna</c><00:08:02.330><c> save</c><00:08:02.539><c> our</c><00:08:02.750><c> last</c>

00:08:03.310 --> 00:08:03.320 align:start position:0%
that ok then we're gonna save our last
 

00:08:03.320 --> 00:08:05.230 align:start position:0%
that ok then we're gonna save our last
and<00:08:04.039><c> we'll</c><00:08:04.310><c> say</c><00:08:04.460><c> that's</c><00:08:04.580><c> a</c><00:08:04.760><c> string</c><00:08:05.000><c> as</c><00:08:05.120><c> well</c>

00:08:05.230 --> 00:08:05.240 align:start position:0%
and we'll say that's a string as well
 

00:08:05.240 --> 00:08:07.570 align:start position:0%
and we'll say that's a string as well
question<00:08:05.599><c> mark</c><00:08:05.930><c> equals</c><00:08:06.289><c> null</c><00:08:06.530><c> and</c><00:08:06.800><c> then</c><00:08:07.460><c> we're</c>

00:08:07.570 --> 00:08:07.580 align:start position:0%
question mark equals null and then we're
 

00:08:07.580 --> 00:08:10.240 align:start position:0%
question mark equals null and then we're
gonna<00:08:07.699><c> create</c><00:08:07.940><c> an</c><00:08:08.090><c> ID</c><00:08:08.240><c> so</c><00:08:08.750><c> ID</c><00:08:08.990><c> and</c><00:08:09.410><c> our</c><00:08:09.860><c> string</c>

00:08:10.240 --> 00:08:10.250 align:start position:0%
gonna create an ID so ID and our string
 

00:08:10.250 --> 00:08:12.450 align:start position:0%
gonna create an ID so ID and our string
you<00:08:10.550><c> know</c><00:08:10.669><c> it's</c><00:08:10.789><c> again</c><00:08:10.970><c> it's</c><00:08:11.000><c> another</c><00:08:11.210><c> string</c>

00:08:12.450 --> 00:08:12.460 align:start position:0%
you know it's again it's another string
 

00:08:12.460 --> 00:08:14.830 align:start position:0%
you know it's again it's another string
well<00:08:13.460><c> we</c><00:08:13.550><c> know</c><00:08:13.669><c> now</c><00:08:13.820><c> what</c><00:08:14.300><c> I'm</c><00:08:14.389><c> doing</c><00:08:14.419><c> is</c><00:08:14.690><c> I'm</c>

00:08:14.830 --> 00:08:14.840 align:start position:0%
well we know now what I'm doing is I'm
 

00:08:14.840 --> 00:08:17.890 align:start position:0%
well we know now what I'm doing is I'm
saying<00:08:15.070><c> I've</c><00:08:16.070><c> got</c><00:08:16.310><c> three</c><00:08:16.940><c> fields</c><00:08:17.419><c> here</c><00:08:17.599><c> of</c><00:08:17.720><c> our</c>

00:08:17.890 --> 00:08:17.900 align:start position:0%
saying I've got three fields here of our
 

00:08:17.900 --> 00:08:20.050 align:start position:0%
saying I've got three fields here of our
first<00:08:18.560><c> last</c><00:08:19.190><c> and</c><00:08:19.520><c> ID</c>

00:08:20.050 --> 00:08:20.060 align:start position:0%
first last and ID
 

00:08:20.060 --> 00:08:21.939 align:start position:0%
first last and ID
these<00:08:20.449><c> are</c><00:08:20.630><c> mutable</c><00:08:21.139><c> they</c><00:08:21.380><c> may</c><00:08:21.500><c> change</c><00:08:21.710><c> maybe</c>

00:08:21.939 --> 00:08:21.949 align:start position:0%
these are mutable they may change maybe
 

00:08:21.949 --> 00:08:25.210 align:start position:0%
these are mutable they may change maybe
maybe<00:08:22.789><c> changed</c><00:08:23.330><c> there</c><00:08:23.750><c> of</c><00:08:23.900><c> type</c><00:08:24.080><c> string</c><00:08:24.470><c> and</c>

00:08:25.210 --> 00:08:25.220 align:start position:0%
maybe changed there of type string and
 

00:08:25.220 --> 00:08:28.180 align:start position:0%
maybe changed there of type string and
they<00:08:25.820><c> have</c><00:08:25.970><c> default</c><00:08:26.419><c> values</c><00:08:26.919><c> right</c><00:08:27.919><c> so</c><00:08:28.099><c> I'm</c>

00:08:28.180 --> 00:08:28.190 align:start position:0%
they have default values right so I'm
 

00:08:28.190 --> 00:08:30.370 align:start position:0%
they have default values right so I'm
assigning<00:08:28.729><c> Knowle</c><00:08:29.120><c> to</c><00:08:29.300><c> them</c><00:08:29.419><c> but</c><00:08:30.110><c> you</c><00:08:30.139><c> could</c>

00:08:30.370 --> 00:08:30.380 align:start position:0%
assigning Knowle to them but you could
 

00:08:30.380 --> 00:08:32.140 align:start position:0%
assigning Knowle to them but you could
assign<00:08:30.590><c> them</c><00:08:30.800><c> you</c><00:08:31.039><c> know</c><00:08:31.130><c> some</c><00:08:31.400><c> arbitrary</c>

00:08:32.140 --> 00:08:32.150 align:start position:0%
assign them you know some arbitrary
 

00:08:32.150 --> 00:08:33.940 align:start position:0%
assign them you know some arbitrary
string<00:08:32.450><c> right</c><00:08:32.690><c> it</c><00:08:32.839><c> could</c><00:08:32.990><c> be</c><00:08:33.080><c> whatever</c><00:08:33.650><c> that</c>

00:08:33.940 --> 00:08:33.950 align:start position:0%
string right it could be whatever that
 

00:08:33.950 --> 00:08:35.829 align:start position:0%
string right it could be whatever that
would<00:08:34.219><c> be</c><00:08:34.310><c> the</c><00:08:34.400><c> default</c><00:08:34.789><c> value</c><00:08:35.209><c> in</c><00:08:35.450><c> this</c><00:08:35.659><c> case</c>

00:08:35.829 --> 00:08:35.839 align:start position:0%
would be the default value in this case
 

00:08:35.839 --> 00:08:37.839 align:start position:0%
would be the default value in this case
but<00:08:36.169><c> uh</c><00:08:36.200><c> it</c><00:08:36.860><c> suffice</c><00:08:37.190><c> is</c><00:08:37.370><c> for</c><00:08:37.490><c> us</c><00:08:37.550><c> to</c><00:08:37.669><c> just</c>

00:08:37.839 --> 00:08:37.849 align:start position:0%
but uh it suffice is for us to just
 

00:08:37.849 --> 00:08:40.269 align:start position:0%
but uh it suffice is for us to just
leave<00:08:37.940><c> it</c><00:08:38.060><c> as</c><00:08:38.209><c> is</c><00:08:38.450><c> right</c><00:08:38.630><c> there</c><00:08:38.810><c> right</c><00:08:39.110><c> so</c><00:08:39.289><c> we</c>

00:08:40.269 --> 00:08:40.279 align:start position:0%
leave it as is right there right so we
 

00:08:40.279 --> 00:08:41.920 align:start position:0%
leave it as is right there right so we
and<00:08:40.550><c> that's</c><00:08:40.729><c> it</c><00:08:40.880><c> that's</c><00:08:41.120><c> that's</c><00:08:41.390><c> all</c><00:08:41.659><c> we</c><00:08:41.779><c> need</c>

00:08:41.920 --> 00:08:41.930 align:start position:0%
and that's it that's that's all we need
 

00:08:41.930 --> 00:08:44.620 align:start position:0%
and that's it that's that's all we need
to<00:08:42.020><c> do</c><00:08:42.140><c> for</c><00:08:42.550><c> first</c><00:08:43.550><c> today</c><00:08:43.760><c> you</c><00:08:44.120><c> know</c><00:08:44.209><c> usefully</c>

00:08:44.620 --> 00:08:44.630 align:start position:0%
to do for first today you know usefully
 

00:08:44.630 --> 00:08:46.960 align:start position:0%
to do for first today you know usefully
define<00:08:44.930><c> this</c><00:08:45.080><c> class</c><00:08:45.320><c> we</c><00:08:45.529><c> can</c><00:08:45.650><c> annotate</c><00:08:46.610><c> it</c><00:08:46.850><c> as</c>

00:08:46.960 --> 00:08:46.970 align:start position:0%
define this class we can annotate it as
 

00:08:46.970 --> 00:08:48.280 align:start position:0%
define this class we can annotate it as
we<00:08:47.089><c> would</c><00:08:47.209><c> anything</c><00:08:47.720><c> else</c><00:08:47.930><c> so</c><00:08:48.110><c> we're</c><00:08:48.200><c> gonna</c>

00:08:48.280 --> 00:08:48.290 align:start position:0%
we would anything else so we're gonna
 

00:08:48.290 --> 00:08:50.410 align:start position:0%
we would anything else so we're gonna
make<00:08:48.500><c> this</c><00:08:48.620><c> a</c><00:08:48.680><c> the</c><00:08:49.279><c> ID</c><00:08:49.459><c> field</c><00:08:49.940><c> and</c><00:08:50.180><c> we'll</c><00:08:50.270><c> call</c>

00:08:50.410 --> 00:08:50.420 align:start position:0%
make this a the ID field and we'll call
 

00:08:50.420 --> 00:08:53.769 align:start position:0%
make this a the ID field and we'll call
this<00:08:50.570><c> a</c><00:08:50.720><c> spring</c><00:08:51.050><c> data</c><00:08:51.490><c> document</c><00:08:52.490><c> okay</c><00:08:53.000><c> and</c>

00:08:53.769 --> 00:08:53.779 align:start position:0%
this a spring data document okay and
 

00:08:53.779 --> 00:08:54.220 align:start position:0%
this a spring data document okay and
there<00:08:53.930><c> we</c><00:08:53.990><c> go</c>

00:08:54.220 --> 00:08:54.230 align:start position:0%
there we go
 

00:08:54.230 --> 00:08:55.329 align:start position:0%
there we go
we<00:08:54.320><c> don't</c><00:08:54.470><c> have</c><00:08:54.560><c> to</c><00:08:54.650><c> do</c><00:08:54.740><c> any</c><00:08:54.860><c> code</c><00:08:55.040><c> generation</c>

00:08:55.329 --> 00:08:55.339 align:start position:0%
we don't have to do any code generation
 

00:08:55.339 --> 00:08:57.519 align:start position:0%
we don't have to do any code generation
no<00:08:55.640><c> command</c><00:08:56.240><c> n</c><00:08:56.450><c> inside</c><00:08:56.930><c> of</c><00:08:57.020><c> intelligence</c>

00:08:57.519 --> 00:08:57.529 align:start position:0%
no command n inside of intelligence
 

00:08:57.529 --> 00:08:59.079 align:start position:0%
no command n inside of intelligence
generate<00:08:57.890><c> getters</c><00:08:58.370><c> and</c><00:08:58.550><c> setters</c><00:08:58.730><c> and</c>

00:08:59.079 --> 00:08:59.089 align:start position:0%
generate getters and setters and
 

00:08:59.089 --> 00:09:00.310 align:start position:0%
generate getters and setters and
constructors<00:08:59.570><c> and</c><00:08:59.720><c> to</c><00:08:59.839><c> string</c><00:09:00.020><c> methods</c><00:09:00.290><c> and</c>

00:09:00.310 --> 00:09:00.320 align:start position:0%
constructors and to string methods and
 

00:09:00.320 --> 00:09:02.290 align:start position:0%
constructors and to string methods and
equals<00:09:00.620><c> methods</c><00:09:00.920><c> all</c><00:09:01.220><c> that</c><00:09:01.550><c> is</c><00:09:01.640><c> just</c><00:09:01.790><c> done</c><00:09:02.029><c> for</c>

00:09:02.290 --> 00:09:02.300 align:start position:0%
equals methods all that is just done for
 

00:09:02.300 --> 00:09:04.030 align:start position:0%
equals methods all that is just done for
us<00:09:02.390><c> and</c><00:09:02.570><c> now</c><00:09:03.050><c> we</c><00:09:03.110><c> can</c><00:09:03.260><c> get</c><00:09:03.410><c> to</c><00:09:03.529><c> the</c><00:09:03.620><c> business</c><00:09:03.920><c> of</c>

00:09:04.030 --> 00:09:04.040 align:start position:0%
us and now we can get to the business of
 

00:09:04.040 --> 00:09:05.890 align:start position:0%
us and now we can get to the business of
of<00:09:04.579><c> actually</c><00:09:04.910><c> working</c><00:09:05.060><c> with</c><00:09:05.329><c> the</c><00:09:05.420><c> database</c><00:09:05.750><c> so</c>

00:09:05.890 --> 00:09:05.900 align:start position:0%
of actually working with the database so
 

00:09:05.900 --> 00:09:07.630 align:start position:0%
of actually working with the database so
I'll<00:09:06.470><c> create</c><00:09:06.709><c> a</c>

00:09:07.630 --> 00:09:07.640 align:start position:0%
I'll create a
 

00:09:07.640 --> 00:09:09.670 align:start position:0%
I'll create a
right<00:09:08.149><c> as</c><00:09:08.329><c> you</c><00:09:08.510><c> would</c><00:09:08.630><c> normally</c><00:09:08.779><c> so</c><00:09:09.110><c> okay</c><00:09:09.350><c> to</c><00:09:09.410><c> a</c>

00:09:09.670 --> 00:09:09.680 align:start position:0%
right as you would normally so okay to a
 

00:09:09.680 --> 00:09:12.490 align:start position:0%
right as you would normally so okay to a
person<00:09:10.430><c> repository</c><00:09:11.420><c> spring</c><00:09:11.810><c> data</c><00:09:11.990><c> person</c>

00:09:12.490 --> 00:09:12.500 align:start position:0%
person repository spring data person
 

00:09:12.500 --> 00:09:14.620 align:start position:0%
person repository spring data person
repository<00:09:13.070><c> and</c><00:09:13.250><c> I'm</c><00:09:13.550><c> gonna</c><00:09:13.640><c> subclass</c><00:09:14.360><c> the</c>

00:09:14.620 --> 00:09:14.630 align:start position:0%
repository and I'm gonna subclass the
 

00:09:14.630 --> 00:09:16.060 align:start position:0%
repository and I'm gonna subclass the
Jaypee<00:09:14.959><c> repository</c><00:09:15.500><c> in</c><00:09:15.560><c> order</c><00:09:15.709><c> to</c><00:09:15.829><c> do</c><00:09:15.920><c> that</c>

00:09:16.060 --> 00:09:16.070 align:start position:0%
Jaypee repository in order to do that
 

00:09:16.070 --> 00:09:18.759 align:start position:0%
Jaypee repository in order to do that
and<00:09:16.519><c> use</c><00:09:16.850><c> the</c><00:09:16.880><c> colon</c><00:09:17.870><c> operator</c><00:09:18.170><c> we</c><00:09:18.649><c> have</c><00:09:18.680><c> a</c>

00:09:18.759 --> 00:09:18.769 align:start position:0%
and use the colon operator we have a
 

00:09:18.769 --> 00:09:21.780 align:start position:0%
and use the colon operator we have a
unified<00:09:19.250><c> syntax</c><00:09:19.820><c> for</c><00:09:20.000><c> both</c><00:09:20.149><c> subtyping</c><00:09:21.019><c> and</c>

00:09:21.780 --> 00:09:21.790 align:start position:0%
unified syntax for both subtyping and
 

00:09:21.790 --> 00:09:25.180 align:start position:0%
unified syntax for both subtyping and
implementation<00:09:22.790><c> of</c><00:09:22.850><c> interfaces</c><00:09:23.420><c> so</c><00:09:23.980><c> I'll</c><00:09:24.980><c> say</c>

00:09:25.180 --> 00:09:25.190 align:start position:0%
implementation of interfaces so I'll say
 

00:09:25.190 --> 00:09:27.460 align:start position:0%
implementation of interfaces so I'll say
JP<00:09:25.519><c> repot</c><00:09:25.850><c> as</c><00:09:26.060><c> Mongo</c><00:09:26.810><c> repository</c><00:09:27.260><c> rather</c>

00:09:27.460 --> 00:09:27.470 align:start position:0%
JP repot as Mongo repository rather
 

00:09:27.470 --> 00:09:29.860 align:start position:0%
JP repot as Mongo repository rather
sorry<00:09:27.800><c> Mongo</c><00:09:28.730><c> repository</c><00:09:29.269><c> for</c><00:09:29.480><c> entities</c><00:09:29.750><c> a</c>

00:09:29.860 --> 00:09:29.870 align:start position:0%
sorry Mongo repository for entities a
 

00:09:29.870 --> 00:09:33.160 align:start position:0%
sorry Mongo repository for entities a
type<00:09:30.140><c> person</c><00:09:30.709><c> whose</c><00:09:31.640><c> primary</c><00:09:32.029><c> key</c><00:09:32.510><c> is</c><00:09:32.779><c> a</c><00:09:32.839><c> type</c>

00:09:33.160 --> 00:09:33.170 align:start position:0%
type person whose primary key is a type
 

00:09:33.170 --> 00:09:36.250 align:start position:0%
type person whose primary key is a type
of<00:09:33.320><c> string</c><00:09:33.649><c> and</c><00:09:34.250><c> there</c><00:09:35.240><c> we</c><00:09:35.300><c> go</c><00:09:35.420><c> that's</c><00:09:36.079><c> it</c>

00:09:36.250 --> 00:09:36.260 align:start position:0%
of string and there we go that's it
 

00:09:36.260 --> 00:09:37.870 align:start position:0%
of string and there we go that's it
right<00:09:36.589><c> I</c><00:09:36.740><c> don't</c><00:09:37.070><c> have</c><00:09:37.250><c> to</c><00:09:37.430><c> even</c><00:09:37.610><c> do</c><00:09:37.730><c> this</c>

00:09:37.870 --> 00:09:37.880 align:start position:0%
right I don't have to even do this
 

00:09:37.880 --> 00:09:40.000 align:start position:0%
right I don't have to even do this
although<00:09:38.779><c> I</c><00:09:38.810><c> could</c><00:09:39.110><c> in</c><00:09:39.320><c> fact</c><00:09:39.529><c> maybe</c><00:09:39.769><c> I</c><00:09:39.860><c> will</c>

00:09:40.000 --> 00:09:40.010 align:start position:0%
although I could in fact maybe I will
 

00:09:40.010 --> 00:09:42.040 align:start position:0%
although I could in fact maybe I will
let's<00:09:40.279><c> uh</c><00:09:40.430><c> let's</c><00:09:41.120><c> go</c><00:09:41.300><c> ahead</c><00:09:41.420><c> and</c><00:09:41.540><c> talk</c><00:09:41.930><c> about</c>

00:09:42.040 --> 00:09:42.050 align:start position:0%
let's uh let's go ahead and talk about
 

00:09:42.050 --> 00:09:43.840 align:start position:0%
let's uh let's go ahead and talk about
the<00:09:42.260><c> interface</c><00:09:42.440><c> definition</c><00:09:42.740><c> here</c><00:09:43.190><c> so</c><00:09:43.339><c> I'm</c>

00:09:43.840 --> 00:09:43.850 align:start position:0%
the interface definition here so I'm
 

00:09:43.850 --> 00:09:48.460 align:start position:0%
the interface definition here so I'm
gonna<00:09:44.029><c> say</c><00:09:44.269><c> fun</c><00:09:45.610><c> all</c><00:09:46.610><c> and</c><00:09:47.120><c> I</c><00:09:47.990><c> will</c><00:09:48.140><c> return</c>

00:09:48.460 --> 00:09:48.470 align:start position:0%
gonna say fun all and I will return
 

00:09:48.470 --> 00:09:54.100 align:start position:0%
gonna say fun all and I will return
return<00:09:48.980><c> a</c><00:09:49.190><c> stream</c><00:09:49.720><c> of</c><00:09:50.769><c> person</c><00:09:51.769><c> right</c><00:09:52.310><c> and</c><00:09:53.110><c> this</c>

00:09:54.100 --> 00:09:54.110 align:start position:0%
return a stream of person right and this
 

00:09:54.110 --> 00:09:56.650 align:start position:0%
return a stream of person right and this
is<00:09:54.260><c> just</c><00:09:54.410><c> a</c><00:09:54.500><c> Java</c><00:09:54.709><c> JDK</c><00:09:55.250><c> 8</c><00:09:55.610><c> stream</c><00:09:56.300><c> of</c><00:09:56.480><c> course</c>

00:09:56.650 --> 00:09:56.660 align:start position:0%
is just a Java JDK 8 stream of course
 

00:09:56.660 --> 00:09:58.509 align:start position:0%
is just a Java JDK 8 stream of course
everything<00:09:56.930><c> you</c><00:09:57.019><c> can</c><00:09:57.140><c> do</c><00:09:57.290><c> in</c><00:09:57.320><c> the</c><00:09:57.529><c> JDK</c><00:09:57.890><c> works</c>

00:09:58.509 --> 00:09:58.519 align:start position:0%
everything you can do in the JDK works
 

00:09:58.519 --> 00:10:00.759 align:start position:0%
everything you can do in the JDK works
here<00:09:58.730><c> as</c><00:09:58.820><c> well</c><00:09:58.970><c> I'll</c><00:09:59.180><c> use</c><00:09:59.420><c> a</c><00:09:59.450><c> custom</c><00:09:59.720><c> query</c><00:10:00.140><c> to</c>

00:10:00.759 --> 00:10:00.769 align:start position:0%
here as well I'll use a custom query to
 

00:10:00.769 --> 00:10:02.710 align:start position:0%
here as well I'll use a custom query to
return<00:10:01.070><c> everything</c><00:10:01.399><c> and</c><00:10:02.360><c> there</c><00:10:02.510><c> we</c><00:10:02.600><c> are</c>

00:10:02.710 --> 00:10:02.720 align:start position:0%
return everything and there we are
 

00:10:02.720 --> 00:10:04.240 align:start position:0%
return everything and there we are
there's<00:10:02.930><c> my</c><00:10:03.079><c> very</c><00:10:03.290><c> simple</c><00:10:03.470><c> interface</c><00:10:04.010><c> that</c>

00:10:04.240 --> 00:10:04.250 align:start position:0%
there's my very simple interface that
 

00:10:04.250 --> 00:10:06.009 align:start position:0%
there's my very simple interface that
spring<00:10:05.060><c> data</c><00:10:05.209><c> will</c><00:10:05.420><c> pick</c><00:10:05.570><c> up</c><00:10:05.690><c> for</c><00:10:05.870><c> me</c><00:10:05.930><c> and</c>

00:10:06.009 --> 00:10:06.019 align:start position:0%
spring data will pick up for me and
 

00:10:06.019 --> 00:10:07.870 align:start position:0%
spring data will pick up for me and
implement<00:10:06.380><c> now</c><00:10:06.500><c> what</c><00:10:07.130><c> I</c><00:10:07.160><c> want</c><00:10:07.310><c> to</c><00:10:07.339><c> do</c><00:10:07.459><c> next</c><00:10:07.670><c> is</c>

00:10:07.870 --> 00:10:07.880 align:start position:0%
implement now what I want to do next is
 

00:10:07.880 --> 00:10:10.509 align:start position:0%
implement now what I want to do next is
I<00:10:07.910><c> want</c><00:10:08.029><c> to</c><00:10:08.060><c> create</c><00:10:08.300><c> some</c><00:10:08.560><c> sample</c><00:10:09.560><c> data</c><00:10:09.589><c> right</c>

00:10:10.509 --> 00:10:10.519 align:start position:0%
I want to create some sample data right
 

00:10:10.519 --> 00:10:12.250 align:start position:0%
I want to create some sample data right
I<00:10:10.550><c> want</c><00:10:10.760><c> to</c><00:10:10.790><c> put</c><00:10:10.910><c> some</c><00:10:11.060><c> sample</c><00:10:11.390><c> data</c><00:10:11.420><c> and</c><00:10:11.779><c> then</c>

00:10:12.250 --> 00:10:12.260 align:start position:0%
I want to put some sample data and then
 

00:10:12.260 --> 00:10:15.220 align:start position:0%
I want to put some sample data and then
use<00:10:12.560><c> that</c><00:10:12.740><c> sample</c><00:10:12.920><c> data</c><00:10:13.300><c> to</c><00:10:14.300><c> you</c><00:10:14.839><c> know</c><00:10:14.930><c> to</c><00:10:14.990><c> have</c>

00:10:15.220 --> 00:10:15.230 align:start position:0%
use that sample data to you know to have
 

00:10:15.230 --> 00:10:18.550 align:start position:0%
use that sample data to you know to have
something<00:10:15.560><c> to</c><00:10:15.649><c> work</c><00:10:15.769><c> with</c><00:10:15.920><c> so</c><00:10:17.260><c> we'll</c><00:10:18.260><c> go</c><00:10:18.350><c> ahead</c>

00:10:18.550 --> 00:10:18.560 align:start position:0%
something to work with so we'll go ahead
 

00:10:18.560 --> 00:10:20.530 align:start position:0%
something to work with so we'll go ahead
and<00:10:18.649><c> implement</c><00:10:19.370><c> the</c><00:10:19.820><c> command</c><00:10:20.180><c> line</c><00:10:20.329><c> runner</c>

00:10:20.530 --> 00:10:20.540 align:start position:0%
and implement the command line runner
 

00:10:20.540 --> 00:10:23.220 align:start position:0%
and implement the command line runner
right<00:10:21.079><c> it's</c><00:10:22.070><c> my</c><00:10:22.160><c> command</c><00:10:22.490><c> line</c><00:10:22.519><c> runner</c>

00:10:23.220 --> 00:10:23.230 align:start position:0%
right it's my command line runner
 

00:10:23.230 --> 00:10:26.110 align:start position:0%
right it's my command line runner
contract<00:10:24.230><c> and</c><00:10:24.829><c> you</c><00:10:25.130><c> can</c><00:10:25.250><c> see</c><00:10:25.519><c> that</c><00:10:25.730><c> I</c><00:10:25.760><c> need</c><00:10:25.880><c> to</c>

00:10:26.110 --> 00:10:26.120 align:start position:0%
contract and you can see that I need to
 

00:10:26.120 --> 00:10:27.610 align:start position:0%
contract and you can see that I need to
override<00:10:26.449><c> this</c><00:10:26.690><c> method</c><00:10:26.750><c> I've</c><00:10:27.050><c> overridden</c><00:10:27.350><c> the</c>

00:10:27.610 --> 00:10:27.620 align:start position:0%
override this method I've overridden the
 

00:10:27.620 --> 00:10:29.350 align:start position:0%
override this method I've overridden the
the<00:10:27.890><c> run</c><00:10:28.550><c> method</c><00:10:28.730><c> from</c><00:10:28.970><c> the</c><00:10:29.089><c> command</c><00:10:29.329><c> line</c>

00:10:29.350 --> 00:10:29.360 align:start position:0%
the run method from the command line
 

00:10:29.360 --> 00:10:31.689 align:start position:0%
the run method from the command line
where<00:10:29.570><c> but</c><00:10:30.199><c> in</c><00:10:30.350><c> order</c><00:10:30.589><c> to</c><00:10:30.620><c> do</c><00:10:30.860><c> my</c><00:10:30.980><c> work</c><00:10:31.130><c> I</c><00:10:31.399><c> need</c>

00:10:31.689 --> 00:10:31.699 align:start position:0%
where but in order to do my work I need
 

00:10:31.699 --> 00:10:34.720 align:start position:0%
where but in order to do my work I need
a<00:10:32.680><c> person</c><00:10:33.680><c> repository</c><00:10:34.100><c> right</c><00:10:34.250><c> so</c><00:10:34.459><c> I'll</c><00:10:34.550><c> say</c>

00:10:34.720 --> 00:10:34.730 align:start position:0%
a person repository right so I'll say
 

00:10:34.730 --> 00:10:37.030 align:start position:0%
a person repository right so I'll say
person<00:10:35.089><c> repository</c><00:10:35.630><c> person</c><00:10:36.529><c> repository</c>

00:10:37.030 --> 00:10:37.040 align:start position:0%
person repository person repository
 

00:10:37.040 --> 00:10:40.090 align:start position:0%
person repository person repository
that's<00:10:37.940><c> now</c><00:10:38.180><c> a</c><00:10:38.209><c> constructor</c><00:10:39.079><c> argument</c><00:10:39.620><c> now</c>

00:10:40.090 --> 00:10:40.100 align:start position:0%
that's now a constructor argument now
 

00:10:40.100 --> 00:10:41.889 align:start position:0%
that's now a constructor argument now
you<00:10:40.339><c> know</c><00:10:40.430><c> I've</c><00:10:40.820><c> now</c><00:10:40.970><c> told</c><00:10:41.029><c> spring</c><00:10:41.540><c> that</c><00:10:41.690><c> I</c>

00:10:41.889 --> 00:10:41.899 align:start position:0%
you know I've now told spring that I
 

00:10:41.899 --> 00:10:45.000 align:start position:0%
you know I've now told spring that I
want<00:10:42.320><c> that</c><00:10:42.500><c> dependency</c><00:10:43.010><c> to</c><00:10:44.000><c> be</c><00:10:44.120><c> provided</c><00:10:44.570><c> as</c><00:10:44.690><c> a</c>

00:10:45.000 --> 00:10:45.010 align:start position:0%
want that dependency to be provided as a
 

00:10:45.010 --> 00:10:47.310 align:start position:0%
want that dependency to be provided as a
constructor<00:10:46.010><c> argument</c><00:10:46.339><c> and</c><00:10:46.459><c> of</c><00:10:46.550><c> course</c><00:10:46.730><c> in</c>

00:10:47.310 --> 00:10:47.320 align:start position:0%
constructor argument and of course in
 

00:10:47.320 --> 00:10:50.590 align:start position:0%
constructor argument and of course in
spring<00:10:48.320><c> 4.3</c><00:10:49.070><c> which</c><00:10:49.100><c> is</c><00:10:49.399><c> what</c><00:10:49.550><c> spring</c><00:10:49.910><c> boot</c><00:10:50.089><c> 1.4</c>

00:10:50.590 --> 00:10:50.600 align:start position:0%
spring 4.3 which is what spring boot 1.4
 

00:10:50.600 --> 00:10:52.930 align:start position:0%
spring 4.3 which is what spring boot 1.4
is<00:10:50.779><c> using</c><00:10:51.589><c> we</c><00:10:52.190><c> don't</c><00:10:52.339><c> even</c><00:10:52.459><c> need</c><00:10:52.579><c> to</c><00:10:52.640><c> provide</c>

00:10:52.930 --> 00:10:52.940 align:start position:0%
is using we don't even need to provide
 

00:10:52.940 --> 00:10:54.519 align:start position:0%
is using we don't even need to provide
the<00:10:53.089><c> auto</c><00:10:53.420><c> white</c><00:10:53.600><c> annotation</c><00:10:54.079><c> for</c><00:10:54.199><c> that</c><00:10:54.320><c> right</c>

00:10:54.519 --> 00:10:54.529 align:start position:0%
the auto white annotation for that right
 

00:10:54.529 --> 00:10:56.319 align:start position:0%
the auto white annotation for that right
so<00:10:54.560><c> this</c><00:10:55.279><c> will</c><00:10:55.399><c> work</c><00:10:55.430><c> right</c><00:10:55.880><c> this</c><00:10:56.120><c> is</c><00:10:56.209><c> the</c>

00:10:56.319 --> 00:10:56.329 align:start position:0%
so this will work right this is the
 

00:10:56.329 --> 00:10:57.519 align:start position:0%
so this will work right this is the
equivalent<00:10:56.630><c> of</c><00:10:56.690><c> if</c><00:10:56.779><c> I</c><00:10:57.110><c> had</c><00:10:57.230><c> created</c><00:10:57.350><c> a</c>

00:10:57.519 --> 00:10:57.529 align:start position:0%
equivalent of if I had created a
 

00:10:57.529 --> 00:11:00.069 align:start position:0%
equivalent of if I had created a
configuration<00:10:57.949><c> class</c><00:10:58.390><c> created</c><00:10:59.390><c> an</c><00:10:59.660><c> exclusive</c>

00:11:00.069 --> 00:11:00.079 align:start position:0%
configuration class created an exclusive
 

00:11:00.079 --> 00:11:02.350 align:start position:0%
configuration class created an exclusive
constructor<00:11:00.709><c> and</c><00:11:00.829><c> then</c><00:11:00.920><c> and</c><00:11:01.100><c> then</c><00:11:01.550><c> left</c><00:11:01.730><c> it</c><00:11:01.910><c> as</c>

00:11:02.350 --> 00:11:02.360 align:start position:0%
constructor and then and then left it as
 

00:11:02.360 --> 00:11:03.960 align:start position:0%
constructor and then and then left it as
is<00:11:02.660><c> without</c><00:11:02.810><c> you</c><00:11:03.170><c> know</c><00:11:03.260><c> with</c><00:11:03.380><c> with</c><00:11:03.589><c> the</c>

00:11:03.960 --> 00:11:03.970 align:start position:0%
is without you know with with the
 

00:11:03.970 --> 00:11:05.769 align:start position:0%
is without you know with with the
parameter<00:11:04.970><c> there</c><00:11:05.089><c> I</c><00:11:05.269><c> don't</c><00:11:05.480><c> even</c><00:11:05.540><c> have</c><00:11:05.660><c> to</c>

00:11:05.769 --> 00:11:05.779 align:start position:0%
parameter there I don't even have to
 

00:11:05.779 --> 00:11:06.730 align:start position:0%
parameter there I don't even have to
define<00:11:05.990><c> the</c><00:11:06.110><c> field</c><00:11:06.320><c> right</c>

00:11:06.730 --> 00:11:06.740 align:start position:0%
define the field right
 

00:11:06.740 --> 00:11:08.590 align:start position:0%
define the field right
spring<00:11:07.190><c> will</c><00:11:07.339><c> sorry</c><00:11:07.910><c> cotton</c><00:11:08.240><c> and</c><00:11:08.360><c> will</c><00:11:08.449><c> give</c>

00:11:08.590 --> 00:11:08.600 align:start position:0%
spring will sorry cotton and will give
 

00:11:08.600 --> 00:11:10.569 align:start position:0%
spring will sorry cotton and will give
me<00:11:08.690><c> that</c><00:11:08.810><c> variable</c><00:11:09.170><c> as</c><00:11:09.320><c> a</c><00:11:09.769><c> field</c><00:11:10.100><c> which</c><00:11:10.339><c> I</c><00:11:10.459><c> can</c>

00:11:10.569 --> 00:11:10.579 align:start position:0%
me that variable as a field which I can
 

00:11:10.579 --> 00:11:12.040 align:start position:0%
me that variable as a field which I can
then<00:11:10.610><c> reference</c><00:11:10.880><c> inside</c><00:11:11.510><c> of</c><00:11:11.570><c> my</c><00:11:11.660><c> method</c><00:11:11.930><c> so</c>

00:11:12.040 --> 00:11:12.050 align:start position:0%
then reference inside of my method so
 

00:11:12.050 --> 00:11:14.170 align:start position:0%
then reference inside of my method so
this<00:11:12.230><c> step</c><00:11:12.380><c> person</c><00:11:12.709><c> got</c><00:11:12.800><c> repository</c><00:11:13.310><c> etc</c><00:11:14.060><c> all</c>

00:11:14.170 --> 00:11:14.180 align:start position:0%
this step person got repository etc all
 

00:11:14.180 --> 00:11:16.110 align:start position:0%
this step person got repository etc all
that<00:11:14.209><c> stuff</c><00:11:14.570><c> works</c><00:11:15.230><c> so</c><00:11:15.470><c> let's</c><00:11:15.620><c> go</c><00:11:15.709><c> ahead</c><00:11:15.800><c> and</c>

00:11:16.110 --> 00:11:16.120 align:start position:0%
that stuff works so let's go ahead and
 

00:11:16.120 --> 00:11:19.210 align:start position:0%
that stuff works so let's go ahead and
iterate<00:11:17.120><c> over</c><00:11:17.300><c> some</c><00:11:18.260><c> names</c><00:11:18.620><c> and</c><00:11:18.980><c> we'll</c><00:11:19.069><c> create</c>

00:11:19.210 --> 00:11:19.220 align:start position:0%
iterate over some names and we'll create
 

00:11:19.220 --> 00:11:21.910 align:start position:0%
iterate over some names and we'll create
some<00:11:19.430><c> sample</c><00:11:20.270><c> record</c><00:11:20.630><c> I'm</c><00:11:20.810><c> going</c><00:11:20.959><c> to</c><00:11:21.020><c> say</c>

00:11:21.910 --> 00:11:21.920 align:start position:0%
some sample record I'm going to say
 

00:11:21.920 --> 00:11:30.360 align:start position:0%
some sample record I'm going to say
Phil<00:11:23.079><c> Webb</c><00:11:24.579><c> Dave</c><00:11:26.290><c> sire</c><00:11:27.970><c> Spencer</c><00:11:28.970><c> Gib</c>

00:11:30.360 --> 00:11:30.370 align:start position:0%
Phil Webb Dave sire Spencer Gib
 

00:11:30.370 --> 00:11:34.889 align:start position:0%
Phil Webb Dave sire Spencer Gib
all<00:11:31.370><c> right</c><00:11:31.459><c> we've</c><00:11:31.699><c> got</c><00:11:31.730><c> just</c><00:11:32.060><c> some</c><00:11:32.180><c> names</c><00:11:33.139><c> here</c>

00:11:34.889 --> 00:11:34.899 align:start position:0%
all right we've got just some names here
 

00:11:34.899 --> 00:11:49.379 align:start position:0%
all right we've got just some names here
Brian<00:11:36.519><c> Clough's</c><00:11:37.519><c> L</c><00:11:41.649><c> Sebastiao</c><00:11:42.939><c> de</c><00:11:43.939><c> Luz</c><00:11:47.740><c> Marc</c>

00:11:49.379 --> 00:11:49.389 align:start position:0%
Brian Clough's L Sebastiao de Luz Marc
 

00:11:49.389 --> 00:11:50.860 align:start position:0%
Brian Clough's L Sebastiao de Luz Marc
Fisher<00:11:50.389><c> there</c><00:11:50.629><c> we</c><00:11:50.720><c> are</c>

00:11:50.860 --> 00:11:50.870 align:start position:0%
Fisher there we are
 

00:11:50.870 --> 00:11:52.540 align:start position:0%
Fisher there we are
so<00:11:50.959><c> we've</c><00:11:51.110><c> got</c><00:11:51.259><c> a</c><00:11:51.290><c> few</c><00:11:51.529><c> records</c><00:11:51.889><c> and</c><00:11:52.040><c> what</c><00:11:52.490><c> I</c>

00:11:52.540 --> 00:11:52.550 align:start position:0%
so we've got a few records and what I
 

00:11:52.550 --> 00:11:53.559 align:start position:0%
so we've got a few records and what I
want<00:11:52.699><c> to</c><00:11:52.759><c> do</c><00:11:52.819><c> is</c><00:11:52.939><c> that</c><00:11:53.060><c> you</c><00:11:53.180><c> know</c><00:11:53.269><c> I</c><00:11:53.300><c> want</c><00:11:53.509><c> to</c>

00:11:53.559 --> 00:11:53.569 align:start position:0%
want to do is that you know I want to
 

00:11:53.569 --> 00:11:55.540 align:start position:0%
want to do is that you know I want to
visit<00:11:53.899><c> each</c><00:11:54.050><c> record</c><00:11:54.410><c> so</c><00:11:54.529><c> again</c><00:11:54.740><c> this</c><00:11:55.339><c> is</c><00:11:55.519><c> a</c>

00:11:55.540 --> 00:11:55.550 align:start position:0%
visit each record so again this is a
 

00:11:55.550 --> 00:11:57.610 align:start position:0%
visit each record so again this is a
good<00:11:55.730><c> chance</c><00:11:55.939><c> to</c><00:11:56.029><c> to</c><00:11:56.720><c> go</c><00:11:56.870><c> through</c><00:11:56.899><c> each</c><00:11:57.290><c> name</c>

00:11:57.610 --> 00:11:57.620 align:start position:0%
good chance to to go through each name
 

00:11:57.620 --> 00:12:00.129 align:start position:0%
good chance to to go through each name
I'm<00:11:57.980><c> gonna</c><00:11:58.129><c> map</c><00:11:58.459><c> it</c><00:11:58.699><c> and</c><00:11:58.850><c> here</c><00:11:59.660><c> you</c><00:11:59.899><c> can</c><00:12:00.019><c> see</c>

00:12:00.129 --> 00:12:00.139 align:start position:0%
I'm gonna map it and here you can see
 

00:12:00.139 --> 00:12:01.660 align:start position:0%
I'm gonna map it and here you can see
the<00:12:00.259><c> map</c><00:12:00.500><c> method</c><00:12:00.889><c> is</c><00:12:01.009><c> expecting</c><00:12:01.459><c> it's</c><00:12:01.610><c> the</c>

00:12:01.660 --> 00:12:01.670 align:start position:0%
the map method is expecting it's the
 

00:12:01.670 --> 00:12:02.980 align:start position:0%
the map method is expecting it's the
same<00:12:01.850><c> map</c><00:12:02.060><c> method</c><00:12:02.240><c> as</c><00:12:02.449><c> you'd</c><00:12:02.540><c> expect</c><00:12:02.870><c> from</c>

00:12:02.980 --> 00:12:02.990 align:start position:0%
same map method as you'd expect from
 

00:12:02.990 --> 00:12:04.960 align:start position:0%
same map method as you'd expect from
from<00:12:03.800><c> Java</c><00:12:03.980><c> 8</c><00:12:04.160><c> but</c><00:12:04.339><c> I'm</c><00:12:04.399><c> gonna</c><00:12:04.519><c> pass</c><00:12:04.730><c> enough</c>

00:12:04.960 --> 00:12:04.970 align:start position:0%
from Java 8 but I'm gonna pass enough
 

00:12:04.970 --> 00:12:06.999 align:start position:0%
from Java 8 but I'm gonna pass enough
function<00:12:05.360><c> and</c><00:12:05.540><c> I</c><00:12:05.720><c> don't</c><00:12:06.170><c> need</c><00:12:06.410><c> to</c><00:12:06.470><c> provide</c><00:12:06.740><c> the</c>

00:12:06.999 --> 00:12:07.009 align:start position:0%
function and I don't need to provide the
 

00:12:07.009 --> 00:12:11.139 align:start position:0%
function and I don't need to provide the
parentheses<00:12:07.430><c> so</c><00:12:07.459><c> the</c><00:12:07.730><c> the</c><00:12:08.389><c> map</c><00:12:09.040><c> syntax</c><00:12:10.040><c> if</c><00:12:10.970><c> I</c>

00:12:11.139 --> 00:12:11.149 align:start position:0%
parentheses so the the map syntax if I
 

00:12:11.149 --> 00:12:12.850 align:start position:0%
parentheses so the the map syntax if I
want<00:12:11.329><c> to</c><00:12:11.420><c> I</c><00:12:11.449><c> can</c><00:12:11.629><c> just</c><00:12:11.779><c> print</c><00:12:12.079><c> I</c><00:12:12.290><c> can</c><00:12:12.439><c> I</c><00:12:12.560><c> can</c><00:12:12.709><c> do</c>

00:12:12.850 --> 00:12:12.860 align:start position:0%
want to I can just print I can I can do
 

00:12:12.860 --> 00:12:14.889 align:start position:0%
want to I can just print I can I can do
something<00:12:13.160><c> with</c><00:12:13.310><c> the</c><00:12:14.060><c> implicit</c><00:12:14.569><c> parameter</c>

00:12:14.889 --> 00:12:14.899 align:start position:0%
something with the implicit parameter
 

00:12:14.899 --> 00:12:16.780 align:start position:0%
something with the implicit parameter
right<00:12:15.290><c> this</c><00:12:15.470><c> is</c><00:12:15.589><c> actually</c><00:12:15.829><c> a</c><00:12:15.889><c> lambda</c><00:12:16.129><c> that</c><00:12:16.730><c> I'm</c>

00:12:16.780 --> 00:12:16.790 align:start position:0%
right this is actually a lambda that I'm
 

00:12:16.790 --> 00:12:18.639 align:start position:0%
right this is actually a lambda that I'm
going<00:12:16.910><c> to</c><00:12:16.939><c> provide</c><00:12:17.180><c> it</c><00:12:17.629><c> hasn't</c><00:12:17.990><c> it's</c><00:12:18.350><c> got</c><00:12:18.500><c> one</c>

00:12:18.639 --> 00:12:18.649 align:start position:0%
going to provide it hasn't it's got one
 

00:12:18.649 --> 00:12:20.889 align:start position:0%
going to provide it hasn't it's got one
parameter<00:12:19.009><c> called</c><00:12:19.189><c> it</c><00:12:19.970><c> I</c><00:12:20.240><c> t</c><00:12:20.360><c> that's</c><00:12:20.750><c> the</c>

00:12:20.889 --> 00:12:20.899 align:start position:0%
parameter called it I t that's the
 

00:12:20.899 --> 00:12:22.929 align:start position:0%
parameter called it I t that's the
default<00:12:21.170><c> implicit</c><00:12:21.649><c> parameter</c><00:12:21.920><c> I</c><00:12:22.310><c> can</c><00:12:22.670><c> give</c><00:12:22.850><c> it</c>

00:12:22.929 --> 00:12:22.939 align:start position:0%
default implicit parameter I can give it
 

00:12:22.939 --> 00:12:26.439 align:start position:0%
default implicit parameter I can give it
a<00:12:23.000><c> name</c><00:12:23.180><c> I</c><00:12:23.389><c> can</c><00:12:23.540><c> say</c><00:12:24.670><c> FN</c><00:12:25.670><c> right</c><00:12:25.939><c> for</c><00:12:26.120><c> first</c><00:12:26.329><c> an</c>

00:12:26.439 --> 00:12:26.449 align:start position:0%
a name I can say FN right for first an
 

00:12:26.449 --> 00:12:28.600 align:start position:0%
a name I can say FN right for first an
asset<00:12:26.750><c> last</c><00:12:26.930><c> name</c><00:12:27.139><c> and</c><00:12:27.230><c> then</c><00:12:27.350><c> I</c><00:12:27.410><c> can</c><00:12:27.610><c> delimit</c>

00:12:28.600 --> 00:12:28.610 align:start position:0%
asset last name and then I can delimit
 

00:12:28.610 --> 00:12:30.220 align:start position:0%
asset last name and then I can delimit
the<00:12:28.639><c> the</c><00:12:29.060><c> parameter</c><00:12:29.449><c> block</c><00:12:29.660><c> from</c><00:12:29.870><c> the</c><00:12:29.990><c> rest</c><00:12:30.139><c> of</c>

00:12:30.220 --> 00:12:30.230 align:start position:0%
the the parameter block from the rest of
 

00:12:30.230 --> 00:12:32.889 align:start position:0%
the the parameter block from the rest of
the<00:12:30.319><c> the</c><00:12:30.529><c> method</c><00:12:31.160><c> lambda</c><00:12:31.430><c> block</c><00:12:31.670><c> by</c><00:12:32.449><c> using</c>

00:12:32.889 --> 00:12:32.899 align:start position:0%
the the method lambda block by using
 

00:12:32.899 --> 00:12:35.170 align:start position:0%
the the method lambda block by using
that<00:12:33.079><c> arrow</c><00:12:33.319><c> syntax</c><00:12:33.589><c> I'm</c><00:12:33.980><c> saying</c><00:12:34.220><c> FN</c><00:12:34.939><c> I'm</c>

00:12:35.170 --> 00:12:35.180 align:start position:0%
that arrow syntax I'm saying FN I'm
 

00:12:35.180 --> 00:12:38.980 align:start position:0%
that arrow syntax I'm saying FN I'm
gonna<00:12:35.689><c> down</c><00:12:35.899><c> map</c><00:12:36.500><c> FN</c><00:12:37.430><c> by</c><00:12:38.180><c> splitting</c><00:12:38.660><c> it</c><00:12:38.779><c> in</c>

00:12:38.980 --> 00:12:38.990 align:start position:0%
gonna down map FN by splitting it in
 

00:12:38.990 --> 00:12:42.400 align:start position:0%
gonna down map FN by splitting it in
half<00:12:39.050><c> right</c><00:12:40.029><c> the</c><00:12:41.029><c> last</c><00:12:41.240><c> statement</c><00:12:41.779><c> elastics</c>

00:12:42.400 --> 00:12:42.410 align:start position:0%
half right the last statement elastics
 

00:12:42.410 --> 00:12:44.199 align:start position:0%
half right the last statement elastics
you<00:12:42.949><c> know</c><00:12:43.040><c> sort</c><00:12:43.250><c> of</c><00:12:43.310><c> expression</c><00:12:43.730><c> in</c><00:12:43.880><c> the</c><00:12:43.970><c> in</c>

00:12:44.199 --> 00:12:44.209 align:start position:0%
you know sort of expression in the in
 

00:12:44.209 --> 00:12:46.449 align:start position:0%
you know sort of expression in the in
the<00:12:44.509><c> block</c><00:12:44.689><c> is</c><00:12:44.870><c> which</c><00:12:45.019><c> is</c><00:12:45.439><c> what's</c><00:12:45.709><c> returned</c><00:12:46.130><c> by</c>

00:12:46.449 --> 00:12:46.459 align:start position:0%
the block is which is what's returned by
 

00:12:46.459 --> 00:12:47.410 align:start position:0%
the block is which is what's returned by
the<00:12:46.519><c> way</c><00:12:46.610><c> so</c><00:12:46.670><c> I</c><00:12:46.790><c> don't</c><00:12:46.939><c> have</c><00:12:47.089><c> to</c><00:12:47.180><c> explicitly</c>

00:12:47.410 --> 00:12:47.420 align:start position:0%
the way so I don't have to explicitly
 

00:12:47.420 --> 00:12:50.470 align:start position:0%
the way so I don't have to explicitly
return<00:12:47.959><c> anything</c><00:12:48.579><c> so</c><00:12:49.579><c> there's</c><00:12:49.730><c> that</c><00:12:49.880><c> and</c><00:12:50.120><c> then</c>

00:12:50.470 --> 00:12:50.480 align:start position:0%
return anything so there's that and then
 

00:12:50.480 --> 00:12:52.660 align:start position:0%
return anything so there's that and then
I'm<00:12:50.600><c> gonna</c><00:12:50.720><c> I</c><00:12:50.779><c> want</c><00:12:51.050><c> to</c><00:12:51.110><c> visit</c><00:12:52.040><c> every</c><00:12:52.399><c> single</c>

00:12:52.660 --> 00:12:52.670 align:start position:0%
I'm gonna I want to visit every single
 

00:12:52.670 --> 00:12:54.819 align:start position:0%
I'm gonna I want to visit every single
one<00:12:52.759><c> of</c><00:12:52.819><c> those</c><00:12:52.970><c> records</c><00:12:53.779><c> the</c><00:12:54.199><c> two</c><00:12:54.410><c> poles</c><00:12:54.680><c> if</c>

00:12:54.819 --> 00:12:54.829 align:start position:0%
one of those records the two poles if
 

00:12:54.829 --> 00:12:57.879 align:start position:0%
one of those records the two poles if
you<00:12:54.920><c> will</c><00:12:55.040><c> like</c><00:12:55.430><c> this</c><00:12:55.639><c> and</c><00:12:56.259><c> I</c><00:12:57.259><c> want</c><00:12:57.470><c> to</c><00:12:57.589><c> save</c>

00:12:57.879 --> 00:12:57.889 align:start position:0%
you will like this and I want to save
 

00:12:57.889 --> 00:13:00.370 align:start position:0%
you will like this and I want to save
some<00:12:57.920><c> data</c><00:12:58.279><c> in</c><00:12:59.180><c> the</c><00:12:59.420><c> repository</c><00:12:59.689><c> so</c><00:13:00.139><c> I'll</c><00:13:00.199><c> say</c>

00:13:00.370 --> 00:13:00.380 align:start position:0%
some data in the repository so I'll say
 

00:13:00.380 --> 00:13:03.790 align:start position:0%
some data in the repository so I'll say
new<00:13:00.759><c> person</c><00:13:01.759><c> I</c><00:13:02.350><c> don't</c><00:13:03.350><c> need</c><00:13:03.500><c> to</c><00:13:03.589><c> create</c><00:13:03.709><c> new</c>

00:13:03.790 --> 00:13:03.800 align:start position:0%
new person I don't need to create new
 

00:13:03.800 --> 00:13:06.850 align:start position:0%
new person I don't need to create new
person<00:13:04.160><c> I</c><00:13:04.250><c> just</c><00:13:04.459><c> say</c><00:13:04.550><c> person</c><00:13:05.089><c> and</c><00:13:05.800><c> then</c><00:13:06.800><c> I</c>

00:13:06.850 --> 00:13:06.860 align:start position:0%
person I just say person and then I
 

00:13:06.860 --> 00:13:09.429 align:start position:0%
person I just say person and then I
write<00:13:06.980><c> some</c><00:13:07.130><c> records</c><00:13:07.399><c> so</c><00:13:07.639><c> the</c><00:13:07.880><c> the</c><00:13:08.870><c> first</c><00:13:08.899><c> name</c>

00:13:09.429 --> 00:13:09.439 align:start position:0%
write some records so the the first name
 

00:13:09.439 --> 00:13:14.889 align:start position:0%
write some records so the the first name
is<00:13:09.620><c> tuple</c><00:13:10.279><c> of</c><00:13:11.620><c> 0</c><00:13:13.120><c> second</c><00:13:14.120><c> name</c><00:13:14.269><c> is</c><00:13:14.509><c> you</c><00:13:14.839><c> know</c>

00:13:14.889 --> 00:13:14.899 align:start position:0%
is tuple of 0 second name is you know
 

00:13:14.899 --> 00:13:16.360 align:start position:0%
is tuple of 0 second name is you know
the<00:13:15.019><c> last</c><00:13:15.170><c> name</c><00:13:15.350><c> the</c><00:13:15.470><c> family</c><00:13:15.740><c> name</c><00:13:15.860><c> is</c><00:13:16.009><c> tuple</c>

00:13:16.360 --> 00:13:16.370 align:start position:0%
the last name the family name is tuple
 

00:13:16.370 --> 00:13:21.340 align:start position:0%
the last name the family name is tuple
of<00:13:16.430><c> one</c><00:13:16.610><c> and</c><00:13:18.279><c> the</c><00:13:19.279><c> ID</c><00:13:19.910><c> is</c><00:13:20.350><c> automatically</c>

00:13:21.340 --> 00:13:21.350 align:start position:0%
of one and the ID is automatically
 

00:13:21.350 --> 00:13:22.540 align:start position:0%
of one and the ID is automatically
provided<00:13:21.709><c> for</c><00:13:21.800><c> us</c><00:13:21.860><c> right</c><00:13:21.949><c> spring</c><00:13:22.250><c> data</c><00:13:22.370><c> will</c>

00:13:22.540 --> 00:13:22.550 align:start position:0%
provided for us right spring data will
 

00:13:22.550 --> 00:13:23.650 align:start position:0%
provided for us right spring data will
do<00:13:22.639><c> that</c><00:13:22.790><c> for</c><00:13:23.089><c> us</c><00:13:23.180><c> so</c><00:13:23.209><c> we</c><00:13:23.360><c> don't</c><00:13:23.420><c> need</c><00:13:23.600><c> to</c>

00:13:23.650 --> 00:13:23.660 align:start position:0%
do that for us so we don't need to
 

00:13:23.660 --> 00:13:25.269 align:start position:0%
do that for us so we don't need to
implement<00:13:24.559><c> that</c><00:13:24.620><c> that's</c><00:13:24.800><c> the</c><00:13:24.949><c> another</c><00:13:25.129><c> thing</c>

00:13:25.269 --> 00:13:25.279 align:start position:0%
implement that that's the another thing
 

00:13:25.279 --> 00:13:27.309 align:start position:0%
implement that that's the another thing
about<00:13:25.430><c> this</c><00:13:25.610><c> these</c><00:13:26.509><c> optional</c><00:13:26.959><c> default</c>

00:13:27.309 --> 00:13:27.319 align:start position:0%
about this these optional default
 

00:13:27.319 --> 00:13:29.740 align:start position:0%
about this these optional default
parameters<00:13:27.680><c> it's</c><00:13:28.279><c> like</c><00:13:28.490><c> having</c><00:13:28.790><c> a</c><00:13:28.879><c> multiple</c>

00:13:29.740 --> 00:13:29.750 align:start position:0%
parameters it's like having a multiple
 

00:13:29.750 --> 00:13:31.059 align:start position:0%
parameters it's like having a multiple
different<00:13:30.110><c> constructors</c><00:13:30.500><c> right</c><00:13:30.740><c> I</c><00:13:30.769><c> could</c>

00:13:31.059 --> 00:13:31.069 align:start position:0%
different constructors right I could
 

00:13:31.069 --> 00:13:32.230 align:start position:0%
different constructors right I could
have<00:13:31.100><c> a</c><00:13:31.189><c> constructor</c><00:13:31.579><c> that</c><00:13:31.610><c> takes</c><00:13:31.730><c> one</c><00:13:32.029><c> field</c>

00:13:32.230 --> 00:13:32.240 align:start position:0%
have a constructor that takes one field
 

00:13:32.240 --> 00:13:34.090 align:start position:0%
have a constructor that takes one field
or<00:13:32.389><c> constructor</c><00:13:32.779><c> that</c><00:13:32.809><c> takes</c><00:13:32.930><c> two</c><00:13:33.680><c> fields</c><00:13:34.009><c> or</c>

00:13:34.090 --> 00:13:34.100 align:start position:0%
or constructor that takes two fields or
 

00:13:34.100 --> 00:13:34.810 align:start position:0%
or constructor that takes two fields or
two<00:13:34.220><c> constructed</c>

00:13:34.810 --> 00:13:34.820 align:start position:0%
two constructed
 

00:13:34.820 --> 00:13:36.880 align:start position:0%
two constructed
takes<00:13:35.000><c> all</c><00:13:35.120><c> three</c><00:13:35.300><c> and</c><00:13:36.230><c> that's</c><00:13:36.380><c> just</c><00:13:36.560><c> implied</c>

00:13:36.880 --> 00:13:36.890 align:start position:0%
takes all three and that's just implied
 

00:13:36.890 --> 00:13:37.990 align:start position:0%
takes all three and that's just implied
for<00:13:37.070><c> us</c><00:13:37.160><c> right</c>

00:13:37.990 --> 00:13:38.000 align:start position:0%
for us right
 

00:13:38.000 --> 00:13:40.300 align:start position:0%
for us right
we<00:13:38.540><c> don't</c><00:13:38.690><c> we</c><00:13:38.750><c> only</c><00:13:38.960><c> have</c><00:13:39.170><c> one</c><00:13:39.410><c> sort</c><00:13:40.250><c> of</c>

00:13:40.300 --> 00:13:40.310 align:start position:0%
we don't we only have one sort of
 

00:13:40.310 --> 00:13:41.530 align:start position:0%
we don't we only have one sort of
constructor<00:13:40.820><c> here</c><00:13:40.910><c> we</c><00:13:40.970><c> don't</c><00:13:41.090><c> have</c><00:13:41.180><c> to</c><00:13:41.330><c> worry</c>

00:13:41.530 --> 00:13:41.540 align:start position:0%
constructor here we don't have to worry
 

00:13:41.540 --> 00:13:43.750 align:start position:0%
constructor here we don't have to worry
about<00:13:41.770><c> providing</c><00:13:42.770><c> all</c><00:13:42.890><c> these</c><00:13:43.010><c> overloads</c><00:13:43.610><c> and</c>

00:13:43.750 --> 00:13:43.760 align:start position:0%
about providing all these overloads and
 

00:13:43.760 --> 00:13:44.770 align:start position:0%
about providing all these overloads and
all<00:13:43.820><c> that</c><00:13:43.940><c> stuff</c><00:13:44.090><c> all</c><00:13:44.240><c> that's</c><00:13:44.390><c> done</c><00:13:44.510><c> for</c><00:13:44.660><c> us</c>

00:13:44.770 --> 00:13:44.780 align:start position:0%
all that stuff all that's done for us
 

00:13:44.780 --> 00:13:48.030 align:start position:0%
all that stuff all that's done for us
automatically<00:13:45.380><c> by</c><00:13:45.500><c> having</c><00:13:45.740><c> common</c><00:13:46.310><c> so</c><00:13:46.940><c> now</c><00:13:47.120><c> I</c>

00:13:48.030 --> 00:13:48.040 align:start position:0%
automatically by having common so now I
 

00:13:48.040 --> 00:13:50.770 align:start position:0%
automatically by having common so now I
can<00:13:49.040><c> visit</c><00:13:49.580><c> my</c><00:13:49.790><c> repository</c><00:13:50.090><c> and</c><00:13:50.480><c> I</c><00:13:50.510><c> can</c><00:13:50.630><c> say</c>

00:13:50.770 --> 00:13:50.780 align:start position:0%
can visit my repository and I can say
 

00:13:50.780 --> 00:13:53.320 align:start position:0%
can visit my repository and I can say
let's<00:13:51.260><c> find</c><00:13:51.590><c> all</c><00:13:51.890><c> the</c><00:13:52.010><c> records</c><00:13:52.340><c> or</c><00:13:52.520><c> or</c><00:13:52.790><c> even</c>

00:13:53.320 --> 00:13:53.330 align:start position:0%
let's find all the records or or even
 

00:13:53.330 --> 00:13:54.310 align:start position:0%
let's find all the records or or even
better<00:13:53.450><c> let's</c><00:13:53.570><c> just</c><00:13:53.810><c> find</c><00:13:54.020><c> them</c><00:13:54.170><c> all</c><00:13:54.290><c> in</c>

00:13:54.310 --> 00:13:54.320 align:start position:0%
better let's just find them all in
 

00:13:54.320 --> 00:13:59.110 align:start position:0%
better let's just find them all in
consumer<00:13:55.100><c> as</c><00:13:55.400><c> a</c><00:13:55.460><c> stream</c><00:13:55.850><c> and</c><00:13:56.750><c> I'll</c><00:13:57.590><c> visit</c><00:13:58.120><c> each</c>

00:13:59.110 --> 00:13:59.120 align:start position:0%
consumer as a stream and I'll visit each
 

00:13:59.120 --> 00:14:01.480 align:start position:0%
consumer as a stream and I'll visit each
one<00:13:59.390><c> now</c><00:13:59.570><c> printout</c><00:13:59.990><c> it</c><00:14:00.290><c> right</c><00:14:00.710><c> where</c><00:14:01.040><c> it</c><00:14:01.310><c> in</c>

00:14:01.480 --> 00:14:01.490 align:start position:0%
one now printout it right where it in
 

00:14:01.490 --> 00:14:04.920 align:start position:0%
one now printout it right where it in
this<00:14:01.580><c> case</c><00:14:01.790><c> is</c><00:14:02.000><c> the</c><00:14:02.120><c> as</c><00:14:02.510><c> I</c><00:14:02.600><c> say</c><00:14:02.780><c> the</c><00:14:03.220><c> implied</c>

00:14:04.920 --> 00:14:04.930 align:start position:0%
this case is the as I say the implied
 

00:14:04.930 --> 00:14:09.370 align:start position:0%
this case is the as I say the implied
parameter<00:14:05.930><c> for</c><00:14:06.080><c> the</c><00:14:06.140><c> lambda</c><00:14:06.730><c> so</c><00:14:08.110><c> just</c><00:14:09.110><c> in</c><00:14:09.230><c> case</c>

00:14:09.370 --> 00:14:09.380 align:start position:0%
parameter for the lambda so just in case
 

00:14:09.380 --> 00:14:11.050 align:start position:0%
parameter for the lambda so just in case
I<00:14:09.530><c> have</c><00:14:09.740><c> any</c><00:14:09.920><c> existing</c><00:14:10.370><c> data</c><00:14:10.730><c> in</c><00:14:10.820><c> the</c><00:14:10.940><c> database</c>

00:14:11.050 --> 00:14:11.060 align:start position:0%
I have any existing data in the database
 

00:14:11.060 --> 00:14:13.660 align:start position:0%
I have any existing data in the database
I'll<00:14:11.450><c> delete</c><00:14:11.660><c> all</c><00:14:11.900><c> of</c><00:14:12.080><c> them</c><00:14:12.200><c> ok</c><00:14:12.920><c> now</c><00:14:13.100><c> you</c><00:14:13.550><c> may</c>

00:14:13.660 --> 00:14:13.670 align:start position:0%
I'll delete all of them ok now you may
 

00:14:13.670 --> 00:14:15.190 align:start position:0%
I'll delete all of them ok now you may
have<00:14:13.820><c> noticed</c><00:14:14.090><c> a</c><00:14:14.150><c> few</c><00:14:14.180><c> default</c><00:14:14.750><c> types</c><00:14:15.020><c> that</c>

00:14:15.190 --> 00:14:15.200 align:start position:0%
have noticed a few default types that
 

00:14:15.200 --> 00:14:16.810 align:start position:0%
have noticed a few default types that
are<00:14:15.290><c> returned</c><00:14:15.530><c> here</c><00:14:15.710><c> so</c><00:14:15.830><c> for</c><00:14:15.950><c> example</c><00:14:16.280><c> void</c><00:14:16.490><c> in</c>

00:14:16.810 --> 00:14:16.820 align:start position:0%
are returned here so for example void in
 

00:14:16.820 --> 00:14:19.960 align:start position:0%
are returned here so for example void in
Java<00:14:17.150><c> this</c><00:14:17.960><c> Java</c><00:14:18.260><c> void</c><00:14:18.650><c> in</c><00:14:19.250><c> the</c>

00:14:19.960 --> 00:14:19.970 align:start position:0%
Java this Java void in the
 

00:14:19.970 --> 00:14:22.110 align:start position:0%
Java this Java void in the
auto-completion

00:14:22.110 --> 00:14:22.120 align:start position:0%
auto-completion
 

00:14:22.120 --> 00:14:24.400 align:start position:0%
auto-completion
we're<00:14:23.120><c> led</c><00:14:23.270><c> to</c><00:14:23.300><c> believe</c><00:14:23.390><c> that</c><00:14:23.540><c> it's</c><00:14:23.810><c> units</c>

00:14:24.400 --> 00:14:24.410 align:start position:0%
we're led to believe that it's units
 

00:14:24.410 --> 00:14:25.510 align:start position:0%
we're led to believe that it's units
right<00:14:24.650><c> so</c><00:14:24.800><c> that's</c><00:14:24.950><c> the</c><00:14:25.100><c> default</c>

00:14:25.510 --> 00:14:25.520 align:start position:0%
right so that's the default
 

00:14:25.520 --> 00:14:30.760 align:start position:0%
right so that's the default
that's<00:14:26.030><c> how</c><00:14:26.230><c> Kotlin</c><00:14:27.260><c> talks</c><00:14:27.470><c> about</c><00:14:28.270><c> void</c><00:14:29.770><c> in</c>

00:14:30.760 --> 00:14:30.770 align:start position:0%
that's how Kotlin talks about void in
 

00:14:30.770 --> 00:14:32.410 align:start position:0%
that's how Kotlin talks about void in
Kotlin<00:14:31.340><c> there</c><00:14:31.460><c> are</c><00:14:31.550><c> special</c><00:14:31.880><c> collections</c><00:14:32.300><c> as</c>

00:14:32.410 --> 00:14:32.420 align:start position:0%
Kotlin there are special collections as
 

00:14:32.420 --> 00:14:34.900 align:start position:0%
Kotlin there are special collections as
well<00:14:32.570><c> so</c><00:14:32.720><c> you</c><00:14:32.810><c> can</c><00:14:32.900><c> say</c><00:14:33.080><c> collections</c><00:14:33.980><c> let</c><00:14:34.850><c> me</c>

00:14:34.900 --> 00:14:34.910 align:start position:0%
well so you can say collections let me
 

00:14:34.910 --> 00:14:37.570 align:start position:0%
well so you can say collections let me
try<00:14:35.060><c> a</c><00:14:35.090><c> map</c><00:14:35.390><c> here</c><00:14:35.750><c> okay</c><00:14:36.020><c> so</c><00:14:36.710><c> Kotlin</c><00:14:37.430><c> dot</c>

00:14:37.570 --> 00:14:37.580 align:start position:0%
try a map here okay so Kotlin dot
 

00:14:37.580 --> 00:14:41.100 align:start position:0%
try a map here okay so Kotlin dot
collection<00:14:37.910><c> these</c><00:14:38.030><c> are</c><00:14:38.090><c> slightly</c><00:14:38.930><c> more</c>

00:14:41.100 --> 00:14:41.110 align:start position:0%
collection these are slightly more
 

00:14:41.110 --> 00:14:43.990 align:start position:0%
collection these are slightly more
convenient<00:14:42.220><c> types</c><00:14:43.220><c> that</c><00:14:43.550><c> are</c><00:14:43.640><c> optimized</c><00:14:43.970><c> for</c>

00:14:43.990 --> 00:14:44.000 align:start position:0%
convenient types that are optimized for
 

00:14:44.000 --> 00:14:46.450 align:start position:0%
convenient types that are optimized for
interaction<00:14:44.540><c> with</c><00:14:44.690><c> Kotlin</c><00:14:45.200><c> programs</c><00:14:45.590><c> that</c>

00:14:46.450 --> 00:14:46.460 align:start position:0%
interaction with Kotlin programs that
 

00:14:46.460 --> 00:14:48.400 align:start position:0%
interaction with Kotlin programs that
that<00:14:46.670><c> build</c><00:14:47.060><c> upon</c><00:14:47.150><c> the</c><00:14:47.480><c> base</c><00:14:47.900><c> types</c><00:14:48.170><c> and</c><00:14:48.350><c> the</c>

00:14:48.400 --> 00:14:48.410 align:start position:0%
that build upon the base types and the
 

00:14:48.410 --> 00:14:51.550 align:start position:0%
that build upon the base types and the
inside<00:14:48.680><c> of</c><00:14:48.770><c> the</c><00:14:48.830><c> JDK</c><00:14:49.010><c> so</c><00:14:50.050><c> you</c><00:14:51.050><c> know</c><00:14:51.140><c> if</c><00:14:51.320><c> you</c><00:14:51.440><c> can</c>

00:14:51.550 --> 00:14:51.560 align:start position:0%
inside of the JDK so you know if you can
 

00:14:51.560 --> 00:14:52.930 align:start position:0%
inside of the JDK so you know if you can
use<00:14:51.680><c> those</c><00:14:51.830><c> great</c><00:14:52.100><c> if</c><00:14:52.220><c> you</c><00:14:52.310><c> can't</c><00:14:52.490><c> that's</c><00:14:52.640><c> okay</c>

00:14:52.930 --> 00:14:52.940 align:start position:0%
use those great if you can't that's okay
 

00:14:52.940 --> 00:14:56.920 align:start position:0%
use those great if you can't that's okay
as<00:14:53.060><c> well</c><00:14:53.180><c> and</c><00:14:53.900><c> um</c><00:14:54.940><c> and</c><00:14:55.940><c> that's</c><00:14:56.390><c> it</c><00:14:56.600><c> so</c><00:14:56.720><c> let's</c><00:14:56.750><c> go</c>

00:14:56.920 --> 00:14:56.930 align:start position:0%
as well and um and that's it so let's go
 

00:14:56.930 --> 00:14:58.870 align:start position:0%
as well and um and that's it so let's go
ahead<00:14:57.020><c> and</c><00:14:57.200><c> start</c><00:14:57.650><c> it</c><00:14:57.770><c> up</c><00:14:57.860><c> now</c><00:14:57.920><c> we're</c><00:14:58.370><c> at</c><00:14:58.520><c> we're</c>

00:14:58.870 --> 00:14:58.880 align:start position:0%
ahead and start it up now we're at we're
 

00:14:58.880 --> 00:15:02.230 align:start position:0%
ahead and start it up now we're at we're
clocking<00:14:59.270><c> in</c><00:14:59.360><c> right</c><00:14:59.570><c> now</c><00:14:59.660><c> at</c><00:14:59.830><c> 43</c><00:15:01.000><c> lines</c><00:15:02.000><c> of</c>

00:15:02.230 --> 00:15:02.240 align:start position:0%
clocking in right now at 43 lines of
 

00:15:02.240 --> 00:15:04.360 align:start position:0%
clocking in right now at 43 lines of
code<00:15:02.510><c> and</c><00:15:02.780><c> you</c><00:15:03.320><c> know</c><00:15:03.440><c> obviously</c><00:15:03.740><c> lines</c><00:15:04.220><c> of</c>

00:15:04.360 --> 00:15:04.370 align:start position:0%
code and you know obviously lines of
 

00:15:04.370 --> 00:15:06.670 align:start position:0%
code and you know obviously lines of
code<00:15:04.520><c> doesn't</c><00:15:04.820><c> really</c><00:15:05.080><c> tell</c><00:15:06.080><c> you</c><00:15:06.260><c> much</c><00:15:06.290><c> in</c>

00:15:06.670 --> 00:15:06.680 align:start position:0%
code doesn't really tell you much in
 

00:15:06.680 --> 00:15:08.620 align:start position:0%
code doesn't really tell you much in
about<00:15:06.980><c> about</c><00:15:07.430><c> a</c><00:15:07.490><c> program</c><00:15:07.820><c> as</c><00:15:07.970><c> a</c><00:15:08.000><c> merit</c><00:15:08.480><c> or</c>

00:15:08.620 --> 00:15:08.630 align:start position:0%
about about a program as a merit or
 

00:15:08.630 --> 00:15:11.020 align:start position:0%
about about a program as a merit or
sophistication<00:15:09.320><c> or</c><00:15:09.380><c> anything</c><00:15:09.500><c> but</c><00:15:09.740><c> I</c><00:15:10.310><c> want</c>

00:15:11.020 --> 00:15:11.030 align:start position:0%
sophistication or anything but I want
 

00:15:11.030 --> 00:15:12.610 align:start position:0%
sophistication or anything but I want
you<00:15:11.150><c> to</c><00:15:11.270><c> sort</c><00:15:11.840><c> of</c><00:15:11.900><c> appreciate</c><00:15:12.350><c> what</c><00:15:12.530><c> this</c>

00:15:12.610 --> 00:15:12.620 align:start position:0%
you to sort of appreciate what this
 

00:15:12.620 --> 00:15:15.790 align:start position:0%
you to sort of appreciate what this
would<00:15:12.800><c> look</c><00:15:12.830><c> like</c><00:15:13.210><c> in</c><00:15:14.210><c> Java</c><00:15:14.510><c> and</c><00:15:14.690><c> then</c><00:15:14.810><c> if</c><00:15:15.560><c> you</c>

00:15:15.790 --> 00:15:15.800 align:start position:0%
would look like in Java and then if you
 

00:15:15.800 --> 00:15:18.250 align:start position:0%
would look like in Java and then if you
if<00:15:16.250><c> you</c><00:15:16.430><c> understood</c><00:15:16.790><c> Kotlin</c><00:15:17.240><c> sidon</c><00:15:17.540><c> syntax</c><00:15:18.050><c> so</c>

00:15:18.250 --> 00:15:18.260 align:start position:0%
if you understood Kotlin sidon syntax so
 

00:15:18.260 --> 00:15:20.650 align:start position:0%
if you understood Kotlin sidon syntax so
fast-forward<00:15:18.800><c> you</c><00:15:19.640><c> know</c><00:15:19.760><c> a</c><00:15:19.910><c> day</c><00:15:20.150><c> or</c><00:15:20.180><c> two</c><00:15:20.450><c> from</c>

00:15:20.650 --> 00:15:20.660 align:start position:0%
fast-forward you know a day or two from
 

00:15:20.660 --> 00:15:22.660 align:start position:0%
fast-forward you know a day or two from
now<00:15:20.690><c> and</c><00:15:20.960><c> and</c><00:15:21.230><c> you're</c><00:15:21.530><c> just</c><00:15:21.740><c> able</c><00:15:21.980><c> to</c><00:15:22.250><c> express</c>

00:15:22.660 --> 00:15:22.670 align:start position:0%
now and and you're just able to express
 

00:15:22.670 --> 00:15:26.050 align:start position:0%
now and and you're just able to express
yourself<00:15:23.060><c> in</c><00:15:23.180><c> comments</c><00:15:23.690><c> in</c><00:15:23.780><c> text</c><00:15:24.910><c> would</c><00:15:25.910><c> you</c>

00:15:26.050 --> 00:15:26.060 align:start position:0%
yourself in comments in text would you
 

00:15:26.060 --> 00:15:27.250 align:start position:0%
yourself in comments in text would you
be<00:15:26.180><c> able</c><00:15:26.270><c> to</c><00:15:26.330><c> edit</c><00:15:26.480><c> go</c><00:15:26.630><c> had</c><00:15:26.780><c> to</c><00:15:26.840><c> understand</c>

00:15:27.250 --> 00:15:27.260 align:start position:0%
be able to edit go had to understand
 

00:15:27.260 --> 00:15:28.510 align:start position:0%
be able to edit go had to understand
what's<00:15:27.410><c> happening</c><00:15:27.650><c> here</c><00:15:27.830><c> and</c><00:15:28.010><c> I</c><00:15:28.340><c> would</c><00:15:28.490><c> argue</c>

00:15:28.510 --> 00:15:28.520 align:start position:0%
what's happening here and I would argue
 

00:15:28.520 --> 00:15:29.830 align:start position:0%
what's happening here and I would argue
that<00:15:28.760><c> yes</c><00:15:28.970><c> I</c><00:15:29.120><c> would</c><00:15:29.150><c> argue</c><00:15:29.360><c> that</c><00:15:29.480><c> even</c><00:15:29.600><c> if</c>

00:15:29.830 --> 00:15:29.840 align:start position:0%
that yes I would argue that even if
 

00:15:29.840 --> 00:15:31.540 align:start position:0%
that yes I would argue that even if
you're<00:15:29.960><c> you're</c><00:15:30.620><c> using</c><00:15:30.650><c> just</c><00:15:30.980><c> regular</c><00:15:31.070><c> Java</c>

00:15:31.540 --> 00:15:31.550 align:start position:0%
you're you're using just regular Java
 

00:15:31.550 --> 00:15:33.310 align:start position:0%
you're you're using just regular Java
and<00:15:31.850><c> you</c><00:15:32.390><c> haven't</c><00:15:32.630><c> seen</c><00:15:32.780><c> comment</c><00:15:33.050><c> before</c><00:15:33.170><c> at</c>

00:15:33.310 --> 00:15:33.320 align:start position:0%
and you haven't seen comment before at
 

00:15:33.320 --> 00:15:35.260 align:start position:0%
and you haven't seen comment before at
all<00:15:33.440><c> you'll</c><00:15:34.310><c> be</c><00:15:34.370><c> able</c><00:15:34.460><c> to</c><00:15:34.670><c> add</c><00:15:34.790><c> a</c><00:15:34.820><c> pretty</c><00:15:35.090><c> quick</c>

00:15:35.260 --> 00:15:35.270 align:start position:0%
all you'll be able to add a pretty quick
 

00:15:35.270 --> 00:15:36.490 align:start position:0%
all you'll be able to add a pretty quick
glance<00:15:35.510><c> understand</c><00:15:35.930><c> what's</c><00:15:36.050><c> happening</c><00:15:36.290><c> here</c>

00:15:36.490 --> 00:15:36.500 align:start position:0%
glance understand what's happening here
 

00:15:36.500 --> 00:15:38.980 align:start position:0%
glance understand what's happening here
because<00:15:37.370><c> you've</c><00:15:37.490><c> got</c><00:15:37.880><c> considerably</c><00:15:38.390><c> less</c><00:15:38.660><c> to</c>

00:15:38.980 --> 00:15:38.990 align:start position:0%
because you've got considerably less to
 

00:15:38.990 --> 00:15:40.150 align:start position:0%
because you've got considerably less to
do<00:15:39.110><c> you</c><00:15:39.260><c> only</c><00:15:39.380><c> have</c><00:15:39.470><c> to</c><00:15:39.650><c> you</c><00:15:39.830><c> don't</c><00:15:39.890><c> even</c><00:15:39.980><c> have</c>

00:15:40.150 --> 00:15:40.160 align:start position:0%
do you only have to you don't even have
 

00:15:40.160 --> 00:15:41.980 align:start position:0%
do you only have to you don't even have
to<00:15:40.250><c> scroll</c><00:15:40.460><c> up</c><00:15:40.610><c> and</c><00:15:40.730><c> down</c><00:15:40.820><c> really</c><00:15:41.090><c> I</c><00:15:41.240><c> mean</c><00:15:41.390><c> if</c><00:15:41.900><c> I</c>

00:15:41.980 --> 00:15:41.990 align:start position:0%
to scroll up and down really I mean if I
 

00:15:41.990 --> 00:15:43.930 align:start position:0%
to scroll up and down really I mean if I
scroll<00:15:42.230><c> all</c><00:15:42.440><c> the</c><00:15:42.470><c> way</c><00:15:42.530><c> down</c><00:15:42.740><c> I</c><00:15:42.770><c> I</c><00:15:43.220><c> still</c><00:15:43.730><c> fit</c>

00:15:43.930 --> 00:15:43.940 align:start position:0%
scroll all the way down I I still fit
 

00:15:43.940 --> 00:15:46.090 align:start position:0%
scroll all the way down I I still fit
everything<00:15:44.210><c> in</c><00:15:44.360><c> the</c><00:15:44.510><c> and</c><00:15:44.720><c> the</c><00:15:45.440><c> code</c><00:15:45.620><c> page</c><00:15:45.800><c> so</c>

00:15:46.090 --> 00:15:46.100 align:start position:0%
everything in the and the code page so
 

00:15:46.100 --> 00:15:48.030 align:start position:0%
everything in the and the code page so
let's<00:15:46.280><c> go</c><00:15:46.370><c> ahead</c><00:15:46.430><c> and</c><00:15:46.520><c> run</c><00:15:46.670><c> this</c>

00:15:48.030 --> 00:15:48.040 align:start position:0%
let's go ahead and run this
 

00:15:48.040 --> 00:15:50.729 align:start position:0%
let's go ahead and run this
we're<00:15:48.309><c> gonna</c><00:15:48.429><c> use</c><00:15:48.639><c> the</c><00:15:48.879><c> the</c><00:15:49.480><c> Kotlin</c><00:15:49.869><c> we</c><00:15:50.649><c> have</c>

00:15:50.729 --> 00:15:50.739 align:start position:0%
we're gonna use the the Kotlin we have
 

00:15:50.739 --> 00:15:52.019 align:start position:0%
we're gonna use the the Kotlin we have
to<00:15:50.829><c> create</c><00:15:51.009><c> a</c><00:15:51.040><c> you</c><00:15:51.189><c> know</c><00:15:51.279><c> IntelliJ</c><00:15:51.759><c> doesn't</c>

00:15:52.019 --> 00:15:52.029 align:start position:0%
to create a you know IntelliJ doesn't
 

00:15:52.029 --> 00:15:54.749 align:start position:0%
to create a you know IntelliJ doesn't
have<00:15:52.230><c> it's</c><00:15:53.230><c> not</c><00:15:53.350><c> quite</c><00:15:53.800><c> doing</c><00:15:54.399><c> what</c><00:15:54.519><c> I</c><00:15:54.639><c> would</c>

00:15:54.749 --> 00:15:54.759 align:start position:0%
have it's not quite doing what I would
 

00:15:54.759 --> 00:15:56.220 align:start position:0%
have it's not quite doing what I would
like<00:15:54.879><c> it</c><00:15:54.999><c> to</c><00:15:55.029><c> do</c><00:15:55.179><c> it's</c><00:15:55.389><c> it's</c><00:15:55.629><c> trying</c><00:15:55.929><c> to</c><00:15:55.989><c> run</c><00:15:56.139><c> it</c>

00:15:56.220 --> 00:15:56.230 align:start position:0%
like it to do it's it's trying to run it
 

00:15:56.230 --> 00:15:58.650 align:start position:0%
like it to do it's it's trying to run it
as<00:15:56.319><c> a</c><00:15:56.350><c> java</c><00:15:56.679><c> application</c><00:15:57.089><c> so</c><00:15:58.089><c> I'll</c><00:15:58.179><c> say</c><00:15:58.300><c> okay</c>

00:15:58.650 --> 00:15:58.660 align:start position:0%
as a java application so I'll say okay
 

00:15:58.660 --> 00:16:00.840 align:start position:0%
as a java application so I'll say okay
and<00:15:58.929><c> then</c><00:15:59.079><c> I'll</c><00:15:59.199><c> say</c><00:15:59.410><c> that</c><00:16:00.160><c> I</c><00:16:00.189><c> would</c><00:16:00.369><c> run</c><00:16:00.550><c> this</c>

00:16:00.840 --> 00:16:00.850 align:start position:0%
and then I'll say that I would run this
 

00:16:00.850 --> 00:16:03.809 align:start position:0%
and then I'll say that I would run this
as<00:16:01.089><c> a</c><00:16:01.119><c> a</c><00:16:02.009><c> Cottman</c><00:16:03.009><c> application</c><00:16:03.519><c> right</c><00:16:03.639><c> so</c>

00:16:03.809 --> 00:16:03.819 align:start position:0%
as a a Cottman application right so
 

00:16:03.819 --> 00:16:06.329 align:start position:0%
as a a Cottman application right so
create<00:16:04.179><c> this</c><00:16:04.360><c> and</c><00:16:05.129><c> you</c><00:16:06.129><c> know</c><00:16:06.220><c> the</c>

00:16:06.329 --> 00:16:06.339 align:start position:0%
create this and you know the
 

00:16:06.339 --> 00:16:07.710 align:start position:0%
create this and you know the
intelligence<00:16:06.790><c> support</c><00:16:07.149><c> for</c><00:16:07.269><c> spring</c><00:16:07.449><c> Buddha's</c>

00:16:07.710 --> 00:16:07.720 align:start position:0%
intelligence support for spring Buddha's
 

00:16:07.720 --> 00:16:09.359 align:start position:0%
intelligence support for spring Buddha's
is<00:16:07.959><c> pretty</c><00:16:08.290><c> good</c><00:16:08.410><c> one</c><00:16:08.920><c> of</c><00:16:08.980><c> the</c><00:16:09.040><c> things</c><00:16:09.189><c> that</c><00:16:09.309><c> it</c>

00:16:09.359 --> 00:16:09.369 align:start position:0%
is pretty good one of the things that it
 

00:16:09.369 --> 00:16:12.210 align:start position:0%
is pretty good one of the things that it
enables<00:16:09.730><c> by</c><00:16:09.850><c> default</c><00:16:10.149><c> is</c><00:16:10.299><c> that</c><00:16:10.449><c> it'll</c><00:16:11.350><c> it'll</c>

00:16:12.210 --> 00:16:12.220 align:start position:0%
enables by default is that it'll it'll
 

00:16:12.220 --> 00:16:15.629 align:start position:0%
enables by default is that it'll it'll
make<00:16:12.399><c> sure</c><00:16:12.579><c> that</c><00:16:12.730><c> if</c><00:16:12.850><c> you</c><00:16:12.910><c> have</c><00:16:13.739><c> a</c><00:16:14.739><c> web</c>

00:16:15.629 --> 00:16:15.639 align:start position:0%
make sure that if you have a web
 

00:16:15.639 --> 00:16:16.859 align:start position:0%
make sure that if you have a web
application<00:16:15.790><c> that</c><00:16:16.209><c> blocks</c><00:16:16.449><c> a</c><00:16:16.569><c> port</c><00:16:16.809><c> for</c>

00:16:16.859 --> 00:16:16.869 align:start position:0%
application that blocks a port for
 

00:16:16.869 --> 00:16:18.090 align:start position:0%
application that blocks a port for
example<00:16:17.170><c> it'll</c><00:16:17.379><c> kill</c><00:16:17.589><c> the</c><00:16:17.709><c> existing</c><00:16:18.009><c> line</c>

00:16:18.090 --> 00:16:18.100 align:start position:0%
example it'll kill the existing line
 

00:16:18.100 --> 00:16:19.379 align:start position:0%
example it'll kill the existing line
then<00:16:18.249><c> start</c><00:16:18.519><c> again</c><00:16:18.670><c> that</c><00:16:18.910><c> we</c><00:16:18.999><c> don't</c><00:16:19.179><c> have</c><00:16:19.299><c> this</c>

00:16:19.379 --> 00:16:19.389 align:start position:0%
then start again that we don't have this
 

00:16:19.389 --> 00:16:21.299 align:start position:0%
then start again that we don't have this
poor<00:16:19.720><c> conflict</c><00:16:20.199><c> air</c><00:16:20.319><c> all</c><00:16:20.470><c> the</c><00:16:20.499><c> time</c><00:16:20.619><c> so</c><00:16:20.920><c> I'm</c>

00:16:21.299 --> 00:16:21.309 align:start position:0%
poor conflict air all the time so I'm
 

00:16:21.309 --> 00:16:23.579 align:start position:0%
poor conflict air all the time so I'm
gonna<00:16:21.459><c> say</c><00:16:21.670><c> single</c><00:16:22.149><c> instance</c><00:16:22.509><c> only</c><00:16:22.629><c> I'm</c><00:16:23.439><c> going</c>

00:16:23.579 --> 00:16:23.589 align:start position:0%
gonna say single instance only I'm going
 

00:16:23.589 --> 00:16:38.030 align:start position:0%
gonna say single instance only I'm going
to<00:16:23.649><c> hit</c><00:16:23.739><c> apply</c><00:16:23.860><c> and</c><00:16:24.689><c> we'll</c><00:16:25.689><c> then</c><00:16:25.839><c> run</c><00:16:26.079><c> this</c>

00:16:38.030 --> 00:16:38.040 align:start position:0%
 
 

00:16:38.040 --> 00:16:40.820 align:start position:0%
 
now<00:16:38.370><c> compilation</c><00:16:39.270><c> is</c><00:16:39.390><c> a</c><00:16:39.420><c> is</c><00:16:39.750><c> arguably</c><00:16:40.710><c> a</c>

00:16:40.820 --> 00:16:40.830 align:start position:0%
now compilation is a is arguably a
 

00:16:40.830 --> 00:16:45.160 align:start position:0%
now compilation is a is arguably a
little<00:16:41.160><c> slower</c><00:16:41.430><c> in</c><00:16:41.640><c> Kotlin</c><00:16:43.130><c> this</c><00:16:44.130><c> is</c><00:16:44.280><c> true</c><00:16:44.670><c> and</c>

00:16:45.160 --> 00:16:45.170 align:start position:0%
little slower in Kotlin this is true and
 

00:16:45.170 --> 00:16:47.120 align:start position:0%
little slower in Kotlin this is true and
right<00:16:46.170><c> now</c><00:16:46.290><c> it</c><00:16:46.410><c> seems</c><00:16:46.500><c> to</c><00:16:46.650><c> be</c><00:16:46.710><c> taking</c><00:16:47.040><c> an</c>

00:16:47.120 --> 00:16:47.130 align:start position:0%
right now it seems to be taking an
 

00:16:47.130 --> 00:16:49.130 align:start position:0%
right now it seems to be taking an
inordinate<00:16:47.430><c> amount</c><00:16:47.640><c> of</c><00:16:48.030><c> time</c><00:16:48.090><c> although</c><00:16:48.930><c> it's</c>

00:16:49.130 --> 00:16:49.140 align:start position:0%
inordinate amount of time although it's
 

00:16:49.140 --> 00:16:51.290 align:start position:0%
inordinate amount of time although it's
usually<00:16:49.470><c> very</c><00:16:49.620><c> very</c><00:16:49.950><c> quick</c><00:16:50.310><c> in</c><00:16:50.880><c> fact</c><00:16:51.150><c> it's</c>

00:16:51.290 --> 00:16:51.300 align:start position:0%
usually very very quick in fact it's
 

00:16:51.300 --> 00:16:53.000 align:start position:0%
usually very very quick in fact it's
really<00:16:51.510><c> quick</c><00:16:51.750><c> given</c><00:16:52.080><c> all</c><00:16:52.170><c> the</c><00:16:52.290><c> extra</c><00:16:52.650><c> syntax</c>

00:16:53.000 --> 00:16:53.010 align:start position:0%
really quick given all the extra syntax
 

00:16:53.010 --> 00:16:57.170 align:start position:0%
really quick given all the extra syntax
that<00:16:53.640><c> Kotlin</c><00:16:54.450><c> supports</c><00:16:55.760><c> but</c><00:16:56.760><c> I</c><00:16:56.790><c> saw</c><00:16:57.060><c> an</c>

00:16:57.170 --> 00:16:57.180 align:start position:0%
that Kotlin supports but I saw an
 

00:16:57.180 --> 00:17:00.020 align:start position:0%
that Kotlin supports but I saw an
amazing<00:16:57.270><c> blog</c><00:16:58.170><c> and</c><00:16:58.800><c> if</c><00:16:58.920><c> I</c><00:16:59.010><c> could</c><00:16:59.190><c> find</c><00:16:59.790><c> it</c><00:16:59.940><c> I'll</c>

00:17:00.020 --> 00:17:00.030 align:start position:0%
amazing blog and if I could find it I'll
 

00:17:00.030 --> 00:17:02.720 align:start position:0%
amazing blog and if I could find it I'll
link<00:17:00.240><c> it</c><00:17:00.360><c> in</c><00:17:00.390><c> the</c><00:17:00.800><c> YouTube</c><00:17:01.800><c> video</c><00:17:02.070><c> but</c><00:17:02.280><c> I</c><00:17:02.310><c> saw</c><00:17:02.670><c> a</c>

00:17:02.720 --> 00:17:02.730 align:start position:0%
link it in the YouTube video but I saw a
 

00:17:02.730 --> 00:17:04.310 align:start position:0%
link it in the YouTube video but I saw a
great<00:17:02.850><c> blog</c><00:17:03.120><c> too</c><00:17:03.300><c> there</c><00:17:03.420><c> the</c><00:17:04.050><c> other</c><00:17:04.170><c> week</c>

00:17:04.310 --> 00:17:04.320 align:start position:0%
great blog too there the other week
 

00:17:04.320 --> 00:17:09.590 align:start position:0%
great blog too there the other week
about<00:17:06.470><c> Cotton's</c><00:17:07.970><c> compilation</c><00:17:08.970><c> speed</c><00:17:09.240><c> and</c><00:17:09.510><c> so</c>

00:17:09.590 --> 00:17:09.600 align:start position:0%
about Cotton's compilation speed and so
 

00:17:09.600 --> 00:17:13.370 align:start position:0%
about Cotton's compilation speed and so
on<00:17:10.040><c> as</c><00:17:11.040><c> a</c><00:17:11.520><c> measurement</c><00:17:11.850><c> of</c><00:17:12.089><c> how</c><00:17:12.900><c> well</c><00:17:13.110><c> it</c><00:17:13.199><c> works</c>

00:17:13.370 --> 00:17:13.380 align:start position:0%
on as a measurement of how well it works
 

00:17:13.380 --> 00:17:17.000 align:start position:0%
on as a measurement of how well it works
with<00:17:14.720><c> long</c><00:17:15.720><c> going</c><00:17:15.930><c> projects</c><00:17:16.410><c> so</c><00:17:16.530><c> actually</c><00:17:16.920><c> you</c>

00:17:17.000 --> 00:17:17.010 align:start position:0%
with long going projects so actually you
 

00:17:17.010 --> 00:17:27.270 align:start position:0%
with long going projects so actually you
can<00:17:17.040><c> use</c><00:17:17.250><c> Cottman</c><00:17:17.670><c> and</c><00:17:19.010><c> run</c><00:17:20.010><c> the</c><00:17:20.130><c> application</c>

00:17:27.270 --> 00:17:27.280 align:start position:0%
 
 

00:17:27.280 --> 00:17:29.580 align:start position:0%
 
there<00:17:28.280><c> we</c><00:17:28.339><c> go</c><00:17:28.459><c> so</c><00:17:28.640><c> there's</c><00:17:28.730><c> our</c><00:17:28.880><c> records</c><00:17:29.240><c> right</c>

00:17:29.580 --> 00:17:29.590 align:start position:0%
there we go so there's our records right
 

00:17:29.590 --> 00:17:31.690 align:start position:0%
there we go so there's our records right
there's<00:17:30.590><c> our</c><00:17:30.710><c> there's</c><00:17:30.860><c> our</c><00:17:31.100><c> data</c><00:17:31.250><c> there's</c><00:17:31.550><c> all</c>

00:17:31.690 --> 00:17:31.700 align:start position:0%
there's our there's our data there's all
 

00:17:31.700 --> 00:17:33.190 align:start position:0%
there's our there's our data there's all
the<00:17:31.790><c> records</c><00:17:32.090><c> in</c><00:17:32.210><c> the</c><00:17:32.300><c> in</c><00:17:32.600><c> the</c><00:17:32.660><c> database</c><00:17:32.960><c> I</c>

00:17:33.190 --> 00:17:33.200 align:start position:0%
the records in the in the database I
 

00:17:33.200 --> 00:17:35.700 align:start position:0%
the records in the in the database I
have<00:17:34.160><c> in</c><00:17:34.430><c> my</c><00:17:34.550><c> application</c><00:17:34.700><c> right</c><00:17:35.210><c> now</c><00:17:35.330><c> an</c>

00:17:35.700 --> 00:17:35.710 align:start position:0%
have in my application right now an
 

00:17:35.710 --> 00:17:40.170 align:start position:0%
have in my application right now an
embedded<00:17:36.710><c> web</c><00:17:36.860><c> server</c><00:17:36.890><c> I</c><00:17:38.500><c> don't</c><00:17:39.500><c> really</c><00:17:39.680><c> need</c>

00:17:40.170 --> 00:17:40.180 align:start position:0%
embedded web server I don't really need
 

00:17:40.180 --> 00:17:47.320 align:start position:0%
embedded web server I don't really need
and<00:17:41.530><c> so</c><00:17:42.700><c> get</c><00:17:43.700><c> rid</c><00:17:43.790><c> of</c><00:17:43.880><c> that</c><00:17:44.290><c> and</c><00:17:46.090><c> always</c><00:17:47.090><c> start</c>

00:17:47.320 --> 00:17:47.330 align:start position:0%
and so get rid of that and always start
 

00:17:47.330 --> 00:17:48.490 align:start position:0%
and so get rid of that and always start
just<00:17:47.780><c> to</c><00:17:47.840><c> see</c><00:17:47.960><c> if</c><00:17:48.020><c> that</c><00:17:48.140><c> makes</c><00:17:48.320><c> it</c><00:17:48.380><c> a</c><00:17:48.440><c> little</c>

00:17:48.490 --> 00:17:48.500 align:start position:0%
just to see if that makes it a little
 

00:17:48.500 --> 00:17:50.530 align:start position:0%
just to see if that makes it a little
bit<00:17:48.680><c> faster</c><00:17:48.860><c> because</c><00:17:49.190><c> right</c><00:17:50.030><c> now</c><00:17:50.180><c> it</c><00:17:50.240><c> seems</c><00:17:50.390><c> to</c>

00:17:50.530 --> 00:17:50.540 align:start position:0%
bit faster because right now it seems to
 

00:17:50.540 --> 00:17:55.150 align:start position:0%
bit faster because right now it seems to
be<00:17:50.600><c> crawling</c><00:17:52.480><c> one</c><00:17:53.480><c> thing</c><00:17:53.660><c> that</c><00:17:53.810><c> is</c><00:17:54.020><c> of</c><00:17:54.160><c> you</c>

00:17:55.150 --> 00:17:55.160 align:start position:0%
be crawling one thing that is of you
 

00:17:55.160 --> 00:17:56.380 align:start position:0%
be crawling one thing that is of you
know<00:17:55.250><c> worth</c><00:17:55.460><c> paying</c><00:17:55.700><c> attention</c><00:17:55.760><c> to</c><00:17:56.060><c> here</c><00:17:56.330><c> is</c>

00:17:56.380 --> 00:17:56.390 align:start position:0%
know worth paying attention to here is
 

00:17:56.390 --> 00:17:58.060 align:start position:0%
know worth paying attention to here is
that<00:17:56.420><c> we've</c><00:17:56.600><c> got</c><00:17:56.630><c> the</c><00:17:56.900><c> Kotlin</c><00:17:57.530><c> standard</c><00:17:57.920><c> lab</c>

00:17:58.060 --> 00:17:58.070 align:start position:0%
that we've got the Kotlin standard lab
 

00:17:58.070 --> 00:18:01.690 align:start position:0%
that we've got the Kotlin standard lab
that's<00:17:58.610><c> basically</c><00:17:59.060><c> the</c><00:17:59.270><c> extent</c><00:17:59.870><c> of</c><00:18:00.050><c> what</c><00:18:00.700><c> the</c>

00:18:01.690 --> 00:18:01.700 align:start position:0%
that's basically the extent of what the
 

00:18:01.700 --> 00:18:03.760 align:start position:0%
that's basically the extent of what the
spring<00:18:02.120><c> boot</c><00:18:02.270><c> initializer</c><00:18:02.660><c> is</c><00:18:03.140><c> doing</c><00:18:03.560><c> for</c><00:18:03.710><c> you</c>

00:18:03.760 --> 00:18:03.770 align:start position:0%
spring boot initializer is doing for you
 

00:18:03.770 --> 00:18:05.530 align:start position:0%
spring boot initializer is doing for you
when<00:18:04.070><c> you</c><00:18:04.160><c> use</c><00:18:04.310><c> Kotlin</c><00:18:04.670><c> like</c><00:18:05.000><c> this</c><00:18:05.150><c> it's</c><00:18:05.360><c> a</c>

00:18:05.530 --> 00:18:05.540 align:start position:0%
when you use Kotlin like this it's a
 

00:18:05.540 --> 00:18:08.590 align:start position:0%
when you use Kotlin like this it's a
adding<00:18:06.050><c> the</c><00:18:06.680><c> maven</c><00:18:07.400><c> plug-in</c><00:18:07.640><c> here</c><00:18:07.910><c> and</c><00:18:08.120><c> adding</c>

00:18:08.590 --> 00:18:08.600 align:start position:0%
adding the maven plug-in here and adding
 

00:18:08.600 --> 00:18:09.820 align:start position:0%
adding the maven plug-in here and adding
the<00:18:08.720><c> standard</c><00:18:09.020><c> library</c><00:18:09.350><c> so</c><00:18:09.470><c> I've</c><00:18:09.620><c> done</c>

00:18:09.820 --> 00:18:09.830 align:start position:0%
the standard library so I've done
 

00:18:09.830 --> 00:18:11.920 align:start position:0%
the standard library so I've done
nothing<00:18:10.520><c> to</c><00:18:10.730><c> my</c><00:18:10.940><c> environment</c><00:18:11.360><c> I've</c><00:18:11.540><c> not</c><00:18:11.720><c> set</c>

00:18:11.920 --> 00:18:11.930 align:start position:0%
nothing to my environment I've not set
 

00:18:11.930 --> 00:18:14.110 align:start position:0%
nothing to my environment I've not set
up<00:18:11.960><c> any</c><00:18:12.110><c> custom</c><00:18:12.650><c> JDK</c><00:18:13.040><c> is</c><00:18:13.100><c> I'm</c><00:18:13.280><c> not</c><00:18:13.400><c> I've</c><00:18:13.940><c> not</c>

00:18:14.110 --> 00:18:14.120 align:start position:0%
up any custom JDK is I'm not I've not
 

00:18:14.120 --> 00:18:15.400 align:start position:0%
up any custom JDK is I'm not I've not
done<00:18:14.270><c> anything</c><00:18:14.330><c> it's</c><00:18:14.780><c> just</c><00:18:14.930><c> entirely</c><00:18:15.230><c> a</c>

00:18:15.400 --> 00:18:15.410 align:start position:0%
done anything it's just entirely a
 

00:18:15.410 --> 00:18:17.350 align:start position:0%
done anything it's just entirely a
function<00:18:15.740><c> of</c><00:18:15.860><c> my</c><00:18:16.250><c> maven</c><00:18:16.610><c> build</c><00:18:16.820><c> so</c><00:18:17.030><c> anybody</c>

00:18:17.350 --> 00:18:17.360 align:start position:0%
function of my maven build so anybody
 

00:18:17.360 --> 00:18:19.300 align:start position:0%
function of my maven build so anybody
can<00:18:18.020><c> compile</c><00:18:18.410><c> this</c><00:18:18.560><c> code</c><00:18:18.650><c> they</c><00:18:18.980><c> don't</c><00:18:19.100><c> have</c><00:18:19.220><c> to</c>

00:18:19.300 --> 00:18:19.310 align:start position:0%
can compile this code they don't have to
 

00:18:19.310 --> 00:18:23.320 align:start position:0%
can compile this code they don't have to
set<00:18:19.460><c> up</c><00:18:19.490><c> a</c><00:18:19.780><c> custom</c><00:18:20.780><c> SDK</c><00:18:21.560><c> or</c><00:18:21.680><c> custom</c><00:18:22.010><c> path</c><00:18:22.490><c> or</c><00:18:22.790><c> or</c>

00:18:23.320 --> 00:18:23.330 align:start position:0%
set up a custom SDK or custom path or or
 

00:18:23.330 --> 00:18:24.730 align:start position:0%
set up a custom SDK or custom path or or
anything<00:18:23.540><c> right</c><00:18:23.720><c> they</c><00:18:23.870><c> just</c><00:18:23.900><c> did</c><00:18:24.170><c> maven</c><00:18:24.590><c> clean</c>

00:18:24.730 --> 00:18:24.740 align:start position:0%
anything right they just did maven clean
 

00:18:24.740 --> 00:18:26.710 align:start position:0%
anything right they just did maven clean
install<00:18:25.040><c> so</c><00:18:25.250><c> it</c><00:18:25.400><c> it</c><00:18:25.670><c> interrupts</c><00:18:26.150><c> perfectly</c>

00:18:26.710 --> 00:18:26.720 align:start position:0%
install so it it interrupts perfectly
 

00:18:26.720 --> 00:18:27.850 align:start position:0%
install so it it interrupts perfectly
with<00:18:26.840><c> the</c><00:18:26.900><c> rest</c><00:18:26.960><c> of</c><00:18:27.140><c> the</c><00:18:27.230><c> ecosystem</c><00:18:27.380><c> with</c><00:18:27.800><c> the</c>

00:18:27.850 --> 00:18:27.860 align:start position:0%
with the rest of the ecosystem with the
 

00:18:27.860 --> 00:18:30.640 align:start position:0%
with the rest of the ecosystem with the
rest<00:18:27.980><c> of</c><00:18:28.070><c> the</c><00:18:28.130><c> team</c><00:18:28.480><c> etc</c><00:18:29.480><c> and</c><00:18:29.720><c> of</c><00:18:30.440><c> course</c>

00:18:30.640 --> 00:18:30.650 align:start position:0%
rest of the team etc and of course
 

00:18:30.650 --> 00:18:32.890 align:start position:0%
rest of the team etc and of course
Cortland<00:18:31.010><c> libraries</c><00:18:31.340><c> can</c><00:18:31.520><c> be</c><00:18:31.750><c> great</c><00:18:32.750><c> you</c><00:18:32.840><c> know</c>

00:18:32.890 --> 00:18:32.900 align:start position:0%
Cortland libraries can be great you know
 

00:18:32.900 --> 00:18:34.600 align:start position:0%
Cortland libraries can be great you know
packages<00:18:33.440><c> jars</c><00:18:33.740><c> which</c><00:18:33.980><c> you</c><00:18:34.160><c> can</c><00:18:34.310><c> then</c><00:18:34.430><c> reuse</c>

00:18:34.600 --> 00:18:34.610 align:start position:0%
packages jars which you can then reuse
 

00:18:34.610 --> 00:18:38.790 align:start position:0%
packages jars which you can then reuse
and<00:18:35.030><c> so</c><00:18:35.120><c> on</c><00:18:35.210><c> so</c><00:18:35.420><c> let's</c><00:18:36.320><c> see</c><00:18:36.470><c> what's</c><00:18:36.620><c> happening</c>

00:18:38.790 --> 00:18:38.800 align:start position:0%
 
 

00:18:38.800 --> 00:18:41.710 align:start position:0%
 
there's<00:18:39.800><c> our</c><00:18:39.920><c> records</c><00:18:40.310><c> there's</c><00:18:41.240><c> our</c><00:18:41.390><c> data</c>

00:18:41.710 --> 00:18:41.720 align:start position:0%
there's our records there's our data
 

00:18:41.720 --> 00:18:44.110 align:start position:0%
there's our records there's our data
everything<00:18:42.200><c> seems</c><00:18:42.460><c> much</c><00:18:43.460><c> happier</c><00:18:43.490><c> so</c><00:18:44.000><c> there</c>

00:18:44.110 --> 00:18:44.120 align:start position:0%
everything seems much happier so there
 

00:18:44.120 --> 00:18:47.260 align:start position:0%
everything seems much happier so there
we<00:18:44.180><c> go</c><00:18:44.210><c> we</c><00:18:44.420><c> have</c><00:18:44.450><c> now</c><00:18:45.580><c> an</c><00:18:46.580><c> application</c><00:18:46.730><c> it</c>

00:18:47.260 --> 00:18:47.270 align:start position:0%
we go we have now an application it
 

00:18:47.270 --> 00:18:49.600 align:start position:0%
we go we have now an application it
started<00:18:47.600><c> it</c><00:18:48.230><c> wrote</c><00:18:48.950><c> data</c><00:18:49.160><c> to</c><00:18:49.280><c> the</c><00:18:49.340><c> database</c>

00:18:49.600 --> 00:18:49.610 align:start position:0%
started it wrote data to the database
 

00:18:49.610 --> 00:18:54.130 align:start position:0%
started it wrote data to the database
within<00:18:51.310><c> enumerated</c><00:18:52.310><c> that</c><00:18:52.520><c> data</c><00:18:52.700><c> and</c><00:18:53.030><c> and</c><00:18:54.020><c> so</c>

00:18:54.130 --> 00:18:54.140 align:start position:0%
within enumerated that data and and so
 

00:18:54.140 --> 00:18:55.930 align:start position:0%
within enumerated that data and and so
on<00:18:54.170><c> so</c><00:18:54.380><c> we</c><00:18:54.410><c> now</c><00:18:54.740><c> have</c><00:18:55.040><c> a</c><00:18:55.340><c> pretty</c><00:18:55.700><c> clean</c>

00:18:55.930 --> 00:18:55.940 align:start position:0%
on so we now have a pretty clean
 

00:18:55.940 --> 00:18:58.390 align:start position:0%
on so we now have a pretty clean
language<00:18:56.300><c> we</c><00:18:56.570><c> know</c><00:18:56.690><c> it's</c><00:18:56.870><c> a</c><00:18:57.020><c> it</c><00:18:57.980><c> looks</c><00:18:58.190><c> very</c>

00:18:58.390 --> 00:18:58.400 align:start position:0%
language we know it's a it looks very
 

00:18:58.400 --> 00:19:01.450 align:start position:0%
language we know it's a it looks very
familiar<00:18:58.670><c> temporaries</c><00:18:59.210><c> using</c><00:18:59.450><c> java</c><00:18:59.690><c> or</c><00:19:00.460><c> movie</c>

00:19:01.450 --> 00:19:01.460 align:start position:0%
familiar temporaries using java or movie
 

00:19:01.460 --> 00:19:03.010 align:start position:0%
familiar temporaries using java or movie
or<00:19:01.520><c> anything</c><00:19:01.670><c> else</c><00:19:01.880><c> and</c><00:19:02.120><c> i</c><00:19:02.420><c> hope</c><00:19:02.810><c> you'll</c><00:19:02.930><c> give</c>

00:19:03.010 --> 00:19:03.020 align:start position:0%
or anything else and i hope you'll give
 

00:19:03.020 --> 00:19:04.150 align:start position:0%
or anything else and i hope you'll give
it<00:19:03.050><c> a</c><00:19:03.140><c> shot</c><00:19:03.200><c> there's</c><00:19:03.560><c> a</c><00:19:03.620><c> lot</c><00:19:03.770><c> of</c><00:19:03.860><c> really</c><00:19:03.980><c> nice</c>

00:19:04.150 --> 00:19:04.160 align:start position:0%
it a shot there's a lot of really nice
 

00:19:04.160 --> 00:19:06.610 align:start position:0%
it a shot there's a lot of really nice
things<00:19:04.640><c> to</c><00:19:04.790><c> recommend</c><00:19:05.030><c> Kotlin</c><00:19:05.870><c> what</c><00:19:06.530><c> I've</c>

00:19:06.610 --> 00:19:06.620 align:start position:0%
things to recommend Kotlin what I've
 

00:19:06.620 --> 00:19:07.870 align:start position:0%
things to recommend Kotlin what I've
talked<00:19:06.830><c> about</c><00:19:06.920><c> here</c><00:19:07.130><c> we're</c><00:19:07.310><c> specifically</c><00:19:07.730><c> the</c>

00:19:07.870 --> 00:19:07.880 align:start position:0%
talked about here we're specifically the
 

00:19:07.880 --> 00:19:10.180 align:start position:0%
talked about here we're specifically the
things<00:19:08.060><c> you</c><00:19:08.210><c> might</c><00:19:08.510><c> want</c><00:19:08.690><c> to</c><00:19:08.750><c> know</c><00:19:08.840><c> about</c><00:19:09.190><c> when</c>

00:19:10.180 --> 00:19:10.190 align:start position:0%
things you might want to know about when
 

00:19:10.190 --> 00:19:11.050 align:start position:0%
things you might want to know about when
using<00:19:10.400><c> it</c><00:19:10.520><c> with</c><00:19:10.610><c> the</c><00:19:10.700><c> spring</c><00:19:10.880><c> boot</c>

00:19:11.050 --> 00:19:11.060 align:start position:0%
using it with the spring boot
 

00:19:11.060 --> 00:19:13.510 align:start position:0%
using it with the spring boot
application<00:19:11.570><c> but</c><00:19:12.320><c> there</c><00:19:12.470><c> are</c><00:19:12.590><c> as</c><00:19:12.800><c> I</c><00:19:12.920><c> say</c><00:19:13.100><c> some</c>

00:19:13.510 --> 00:19:13.520 align:start position:0%
application but there are as I say some
 

00:19:13.520 --> 00:19:15.640 align:start position:0%
application but there are as I say some
very<00:19:13.670><c> nice</c><00:19:13.850><c> syntax</c><00:19:14.440><c> features</c><00:19:15.440><c> you</c><00:19:15.560><c> know</c>

00:19:15.640 --> 00:19:15.650 align:start position:0%
very nice syntax features you know
 

00:19:15.650 --> 00:19:17.320 align:start position:0%
very nice syntax features you know
besides<00:19:15.980><c> type</c><00:19:16.280><c> inference</c><00:19:16.670><c> which</c><00:19:16.970><c> is</c><00:19:17.090><c> being</c>

00:19:17.320 --> 00:19:17.330 align:start position:0%
besides type inference which is being
 

00:19:17.330 --> 00:19:19.420 align:start position:0%
besides type inference which is being
sort<00:19:17.930><c> of</c><00:19:17.990><c> discussed</c><00:19:18.410><c> for</c><00:19:18.890><c> the</c><00:19:18.950><c> road</c><00:19:19.070><c> map</c><00:19:19.250><c> from</c>

00:19:19.420 --> 00:19:19.430 align:start position:0%
sort of discussed for the road map from
 

00:19:19.430 --> 00:19:22.810 align:start position:0%
sort of discussed for the road map from
Java<00:19:19.640><c> and</c><00:19:20.300><c> besides</c><00:19:20.960><c> a</c><00:19:21.640><c> really</c><00:19:22.640><c> really</c>

00:19:22.810 --> 00:19:22.820 align:start position:0%
Java and besides a really really
 

00:19:22.820 --> 00:19:26.230 align:start position:0%
Java and besides a really really
sophisticated<00:19:23.150><c> type</c><00:19:23.570><c> system</c><00:19:23.950><c> and</c><00:19:25.060><c> the</c><00:19:26.060><c> sort</c>

00:19:26.230 --> 00:19:26.240 align:start position:0%
sophisticated type system and the sort
 

00:19:26.240 --> 00:19:28.330 align:start position:0%
sophisticated type system and the sort
of<00:19:26.300><c> default</c><00:19:27.020><c> support</c><00:19:27.410><c> for</c><00:19:27.560><c> mutability</c><00:19:28.070><c> and</c><00:19:28.220><c> so</c>

00:19:28.330 --> 00:19:28.340 align:start position:0%
of default support for mutability and so
 

00:19:28.340 --> 00:19:30.370 align:start position:0%
of default support for mutability and so
on<00:19:28.460><c> there's</c><00:19:28.940><c> also</c><00:19:29.090><c> some</c><00:19:29.390><c> some</c><00:19:30.050><c> other</c><00:19:30.110><c> niceties</c>

00:19:30.370 --> 00:19:30.380 align:start position:0%
on there's also some some other niceties
 

00:19:30.380 --> 00:19:32.290 align:start position:0%
on there's also some some other niceties
like<00:19:30.620><c> for</c><00:19:30.920><c> example</c><00:19:30.980><c> extension</c><00:19:31.700><c> functions</c><00:19:32.120><c> you</c>

00:19:32.290 --> 00:19:32.300 align:start position:0%
like for example extension functions you
 

00:19:32.300 --> 00:19:33.940 align:start position:0%
like for example extension functions you
can<00:19:32.390><c> actually</c><00:19:32.540><c> add</c><00:19:32.900><c> functions</c><00:19:33.680><c> to</c><00:19:33.800><c> any</c>

00:19:33.940 --> 00:19:33.950 align:start position:0%
can actually add functions to any
 

00:19:33.950 --> 00:19:36.400 align:start position:0%
can actually add functions to any
arbitrary<00:19:34.400><c> type</c><00:19:34.610><c> after</c><00:19:35.480><c> the</c><00:19:35.900><c> fact</c><00:19:36.110><c> so</c><00:19:36.350><c> to</c>

00:19:36.400 --> 00:19:36.410 align:start position:0%
arbitrary type after the fact so to
 

00:19:36.410 --> 00:19:37.810 align:start position:0%
arbitrary type after the fact so to
speak<00:19:36.620><c> gaia</c><00:19:36.800><c> so</c><00:19:37.130><c> for</c><00:19:37.250><c> example</c><00:19:37.520><c> if</c><00:19:37.580><c> you</c><00:19:37.640><c> want</c><00:19:37.790><c> to</c>

00:19:37.810 --> 00:19:37.820 align:start position:0%
speak gaia so for example if you want to
 

00:19:37.820 --> 00:19:39.120 align:start position:0%
speak gaia so for example if you want to
add<00:19:37.970><c> a</c>

00:19:39.120 --> 00:19:39.130 align:start position:0%
add a
 

00:19:39.130 --> 00:19:43.530 align:start position:0%
add a
a<00:19:39.630><c> Buddha</c><00:19:40.630><c> fie</c><00:19:41.490><c> method</c><00:19:42.490><c> right</c><00:19:42.670><c> maybe</c><00:19:43.300><c> one</c><00:19:43.450><c> that</c>

00:19:43.530 --> 00:19:43.540 align:start position:0%
a Buddha fie method right maybe one that
 

00:19:43.540 --> 00:19:45.720 align:start position:0%
a Buddha fie method right maybe one that
change<00:19:44.020><c> the</c><00:19:44.260><c> way</c><00:19:44.350><c> that</c><00:19:44.470><c> the</c><00:19:44.590><c> JDK</c><00:19:44.980><c> is</c><00:19:45.040><c> string</c>

00:19:45.720 --> 00:19:45.730 align:start position:0%
change the way that the JDK is string
 

00:19:45.730 --> 00:19:47.280 align:start position:0%
change the way that the JDK is string
class<00:19:45.940><c> works</c><00:19:46.300><c> you</c><00:19:46.480><c> could</c><00:19:46.600><c> say</c><00:19:46.750><c> function</c>

00:19:47.280 --> 00:19:47.290 align:start position:0%
class works you could say function
 

00:19:47.290 --> 00:19:52.020 align:start position:0%
class works you could say function
string<00:19:48.100><c> dot</c><00:19:48.790><c> beautify</c><00:19:49.980><c> and</c><00:19:50.980><c> then</c><00:19:51.100><c> say</c><00:19:51.580><c> return</c>

00:19:52.020 --> 00:19:52.030 align:start position:0%
string dot beautify and then say return
 

00:19:52.030 --> 00:19:54.980 align:start position:0%
string dot beautify and then say return
or<00:19:52.690><c> you</c><00:19:52.780><c> don't</c><00:19:52.870><c> need</c><00:19:53.080><c> to</c><00:19:53.170><c> return</c><00:19:53.350><c> beautiful</c>

00:19:54.980 --> 00:19:54.990 align:start position:0%
or you don't need to return beautiful
 

00:19:54.990 --> 00:19:57.810 align:start position:0%
or you don't need to return beautiful
this<00:19:55.990><c> right</c><00:19:56.410><c> and</c><00:19:56.650><c> now</c><00:19:57.190><c> anywhere</c><00:19:57.640><c> you</c><00:19:57.700><c> had</c><00:19:57.790><c> a</c>

00:19:57.810 --> 00:19:57.820 align:start position:0%
this right and now anywhere you had a
 

00:19:57.820 --> 00:20:02.430 align:start position:0%
this right and now anywhere you had a
string<00:19:59.010><c> you</c><00:20:00.010><c> could</c><00:20:00.160><c> say</c><00:20:00.870><c> booed</c><00:20:01.870><c> if</c><00:20:01.990><c> I</c><00:20:02.080><c> right</c>

00:20:02.430 --> 00:20:02.440 align:start position:0%
string you could say booed if I right
 

00:20:02.440 --> 00:20:06.750 align:start position:0%
string you could say booed if I right
that's<00:20:02.680><c> that's</c><00:20:03.040><c> just</c><00:20:03.160><c> built</c><00:20:03.610><c> in</c><00:20:03.760><c> on</c><00:20:04.330><c> to</c><00:20:04.840><c> the</c><00:20:05.760><c> on</c>

00:20:06.750 --> 00:20:06.760 align:start position:0%
that's that's just built in on to the on
 

00:20:06.760 --> 00:20:11.400 align:start position:0%
that's that's just built in on to the on
to<00:20:06.940><c> the</c><00:20:07.060><c> default</c><00:20:09.660><c> sort</c><00:20:10.660><c> of</c><00:20:10.720><c> string</c><00:20:11.170><c> class</c>

00:20:11.400 --> 00:20:11.410 align:start position:0%
to the default sort of string class
 

00:20:11.410 --> 00:20:12.720 align:start position:0%
to the default sort of string class
right<00:20:11.770><c> now</c><00:20:11.890><c> to</c><00:20:11.950><c> work</c><00:20:12.100><c> on</c><00:20:12.220><c> all</c><00:20:12.340><c> your</c><00:20:12.370><c> code</c><00:20:12.700><c> so</c>

00:20:12.720 --> 00:20:12.730 align:start position:0%
right now to work on all your code so
 

00:20:12.730 --> 00:20:14.520 align:start position:0%
right now to work on all your code so
now<00:20:12.970><c> you</c><00:20:13.510><c> can</c><00:20:13.630><c> have</c><00:20:13.780><c> convenience</c><00:20:14.260><c> methods</c>

00:20:14.520 --> 00:20:14.530 align:start position:0%
now you can have convenience methods
 

00:20:14.530 --> 00:20:16.200 align:start position:0%
now you can have convenience methods
instead<00:20:14.800><c> of</c><00:20:14.890><c> having</c><00:20:15.010><c> these</c><00:20:15.210><c> separate</c>

00:20:16.200 --> 00:20:16.210 align:start position:0%
instead of having these separate
 

00:20:16.210 --> 00:20:18.180 align:start position:0%
instead of having these separate
companion<00:20:17.110><c> objects</c><00:20:17.440><c> and</c><00:20:17.680><c> you</c><00:20:17.860><c> can</c><00:20:18.010><c> do</c><00:20:18.100><c> that</c>

00:20:18.180 --> 00:20:18.190 align:start position:0%
companion objects and you can do that
 

00:20:18.190 --> 00:20:20.070 align:start position:0%
companion objects and you can do that
too<00:20:18.460><c> by</c><00:20:18.670><c> the</c><00:20:18.700><c> way</c><00:20:18.790><c> right</c><00:20:19.000><c> like</c><00:20:19.240><c> you</c><00:20:19.330><c> can</c><00:20:19.450><c> you</c>

00:20:20.070 --> 00:20:20.080 align:start position:0%
too by the way right like you can you
 

00:20:20.080 --> 00:20:22.740 align:start position:0%
too by the way right like you can you
can<00:20:20.380><c> see</c><00:20:20.470><c> that</c><00:20:20.620><c> you</c><00:20:21.460><c> can</c><00:20:21.610><c> have</c><00:20:21.720><c> functions</c><00:20:22.720><c> that</c>

00:20:22.740 --> 00:20:22.750 align:start position:0%
can see that you can have functions that
 

00:20:22.750 --> 00:20:24.120 align:start position:0%
can see that you can have functions that
are<00:20:22.930><c> standalone</c><00:20:23.230><c> as</c><00:20:23.440><c> well</c><00:20:23.560><c> so</c><00:20:23.770><c> that's</c><00:20:23.860><c> another</c>

00:20:24.120 --> 00:20:24.130 align:start position:0%
are standalone as well so that's another
 

00:20:24.130 --> 00:20:26.340 align:start position:0%
are standalone as well so that's another
nice<00:20:24.370><c> it</c><00:20:24.520><c> is</c><00:20:24.610><c> that</c><00:20:24.790><c> you</c><00:20:25.300><c> can</c><00:20:25.480><c> you</c><00:20:26.020><c> know</c><00:20:26.140><c> you</c><00:20:26.320><c> can</c>

00:20:26.340 --> 00:20:26.350 align:start position:0%
nice it is that you can you know you can
 

00:20:26.350 --> 00:20:28.770 align:start position:0%
nice it is that you can you know you can
model<00:20:27.280><c> things</c><00:20:27.400><c> that</c><00:20:27.580><c> are</c><00:20:27.670><c> purely</c><00:20:27.940><c> sort</c><00:20:28.660><c> of</c>

00:20:28.770 --> 00:20:28.780 align:start position:0%
model things that are purely sort of
 

00:20:28.780 --> 00:20:31.620 align:start position:0%
model things that are purely sort of
functional<00:20:29.610><c> bits</c><00:20:30.610><c> and</c><00:20:30.820><c> then</c><00:20:30.910><c> share</c><00:20:31.300><c> them</c><00:20:31.480><c> much</c>

00:20:31.620 --> 00:20:31.630 align:start position:0%
functional bits and then share them much
 

00:20:31.630 --> 00:20:33.000 align:start position:0%
functional bits and then share them much
more<00:20:31.780><c> naturally</c><00:20:32.140><c> instead</c><00:20:32.380><c> of</c><00:20:32.530><c> shoehorning</c>

00:20:33.000 --> 00:20:33.010 align:start position:0%
more naturally instead of shoehorning
 

00:20:33.010 --> 00:20:35.790 align:start position:0%
more naturally instead of shoehorning
them<00:20:33.130><c> into</c><00:20:33.400><c> this</c><00:20:33.810><c> to</c><00:20:34.810><c> an</c><00:20:35.290><c> approach</c><00:20:35.560><c> that</c><00:20:35.710><c> may</c>

00:20:35.790 --> 00:20:35.800 align:start position:0%
them into this to an approach that may
 

00:20:35.800 --> 00:20:37.740 align:start position:0%
them into this to an approach that may
not<00:20:35.950><c> work</c><00:20:36.070><c> for</c><00:20:36.100><c> you</c><00:20:36.280><c> all</c><00:20:36.700><c> right</c><00:20:37.240><c> with</c><00:20:37.420><c> that</c><00:20:37.450><c> i</c>

00:20:37.740 --> 00:20:37.750 align:start position:0%
not work for you all right with that i
 

00:20:37.750 --> 00:20:39.540 align:start position:0%
not work for you all right with that i
will<00:20:38.230><c> wrap</c><00:20:38.470><c> this</c><00:20:38.590><c> up</c><00:20:38.740><c> and</c><00:20:38.920><c> I'll</c><00:20:39.250><c> see</c><00:20:39.430><c> you</c><00:20:39.490><c> next</c>

00:20:39.540 --> 00:20:39.550 align:start position:0%
will wrap this up and I'll see you next
 

00:20:39.550 --> 00:20:50.200 align:start position:0%
will wrap this up and I'll see you next
time<00:20:39.790><c> thanks</c><00:20:40.090><c> so</c><00:20:40.150><c> much</c>

00:20:50.200 --> 00:20:50.210 align:start position:0%
 
 

00:20:50.210 --> 00:20:52.270 align:start position:0%
 
you

